begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.plugins
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|info
operator|.
name|NodesInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|nodesinfo
operator|.
name|SimpleNodesInfoTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchIntegrationTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchIntegrationTest
operator|.
name|ClusterScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
operator|.
name|settingsBuilder
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
annotation|@
name|ClusterScope
argument_list|(
name|scope
operator|=
name|ElasticsearchIntegrationTest
operator|.
name|Scope
operator|.
name|TEST
argument_list|,
name|numDataNodes
operator|=
literal|0
argument_list|,
name|transportClientRatio
operator|=
literal|0
argument_list|)
DECL|class|PluginLuceneCheckerTests
specifier|public
class|class
name|PluginLuceneCheckerTests
extends|extends
name|PluginTestCase
block|{
comment|/**      * We check that no Lucene version checking is done      * when we set `"plugins.check_lucene":false`      */
annotation|@
name|Test
DECL|method|testDisableLuceneVersionCheckingPlugin
specifier|public
name|void
name|testDisableLuceneVersionCheckingPlugin
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|String
name|serverNodeId
init|=
name|startNodeWithPlugins
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|PluginsService
operator|.
name|PLUGINS_CHECK_LUCENE_KEY
argument_list|,
literal|false
argument_list|)
operator|.
name|put
argument_list|(
name|PluginsService
operator|.
name|ES_PLUGIN_PROPERTIES_FILE_KEY
argument_list|,
literal|"es-plugin-test.properties"
argument_list|)
operator|.
name|put
argument_list|(
name|PluginsService
operator|.
name|LOAD_PLUGIN_FROM_CLASSPATH
argument_list|,
literal|true
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|"/org/elasticsearch/plugins/lucene/"
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> server {} started"
operator|+
name|serverNodeId
argument_list|)
expr_stmt|;
name|NodesInfoResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareNodesInfo
argument_list|()
operator|.
name|clear
argument_list|()
operator|.
name|setPlugins
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> full json answer, status "
operator|+
name|response
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ElasticsearchAssertions
operator|.
name|assertNodeContainsPlugins
argument_list|(
name|response
argument_list|,
name|serverNodeId
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"old-lucene"
argument_list|)
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"old"
argument_list|)
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1.0.0"
argument_list|)
argument_list|,
comment|// JVM Plugin
name|Collections
operator|.
name|EMPTY_LIST
argument_list|,
name|Collections
operator|.
name|EMPTY_LIST
argument_list|,
name|Collections
operator|.
name|EMPTY_LIST
argument_list|)
expr_stmt|;
comment|// No Site Plugin
block|}
comment|/**      * We check that with an old plugin (built on an old Lucene version)      * plugin is not loaded      * We check that with a recent plugin (built on current Lucene version)      * plugin is loaded      * We check that with a too recent plugin (built on an unknown Lucene version)      * plugin is not loaded      */
annotation|@
name|Test
DECL|method|testEnableLuceneVersionCheckingPlugin
specifier|public
name|void
name|testEnableLuceneVersionCheckingPlugin
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|String
name|serverNodeId
init|=
name|startNodeWithPlugins
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|PluginsService
operator|.
name|PLUGINS_CHECK_LUCENE_KEY
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|PluginsService
operator|.
name|ES_PLUGIN_PROPERTIES_FILE_KEY
argument_list|,
literal|"es-plugin-test.properties"
argument_list|)
operator|.
name|put
argument_list|(
name|PluginsService
operator|.
name|LOAD_PLUGIN_FROM_CLASSPATH
argument_list|,
literal|true
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|"/org/elasticsearch/plugins/lucene/"
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> server {} started"
operator|+
name|serverNodeId
argument_list|)
expr_stmt|;
name|NodesInfoResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareNodesInfo
argument_list|()
operator|.
name|clear
argument_list|()
operator|.
name|setPlugins
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> full json answer, status "
operator|+
name|response
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ElasticsearchAssertions
operator|.
name|assertNodeContainsPlugins
argument_list|(
name|response
argument_list|,
name|serverNodeId
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"current-lucene"
argument_list|)
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"current"
argument_list|)
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2.0.0"
argument_list|)
argument_list|,
comment|// JVM Plugin
name|Collections
operator|.
name|EMPTY_LIST
argument_list|,
name|Collections
operator|.
name|EMPTY_LIST
argument_list|,
name|Collections
operator|.
name|EMPTY_LIST
argument_list|)
expr_stmt|;
comment|// No Site Plugin
block|}
block|}
end_class

end_unit

