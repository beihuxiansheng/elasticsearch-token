begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.client.node
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|node
package|;
end_package

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|ant
operator|.
name|tasks
operator|.
name|junit4
operator|.
name|dependencies
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|GenericAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|ActionFilters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|TransportAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|AbstractClientHeadersTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|support
operator|.
name|Headers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|NodeClientHeadersTests
specifier|public
class|class
name|NodeClientHeadersTests
extends|extends
name|AbstractClientHeadersTests
block|{
DECL|field|EMPTY_FILTERS
specifier|private
specifier|static
specifier|final
name|ActionFilters
name|EMPTY_FILTERS
init|=
operator|new
name|ActionFilters
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|threadPool
specifier|private
name|ThreadPool
name|threadPool
decl_stmt|;
annotation|@
name|Before
DECL|method|init
specifier|public
name|void
name|init
parameter_list|()
block|{
name|threadPool
operator|=
operator|new
name|ThreadPool
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|cleanup
specifier|public
name|void
name|cleanup
parameter_list|()
block|{
name|threadPool
operator|.
name|shutdownNow
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|buildClient
specifier|protected
name|Client
name|buildClient
parameter_list|(
name|Settings
name|headersSettings
parameter_list|,
name|GenericAction
index|[]
name|testedActions
parameter_list|)
block|{
name|Settings
name|settings
init|=
name|HEADER_SETTINGS
decl_stmt|;
name|Headers
name|headers
init|=
operator|new
name|Headers
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|Actions
name|actions
init|=
operator|new
name|Actions
argument_list|(
name|settings
argument_list|,
name|threadPool
argument_list|,
name|testedActions
argument_list|)
decl_stmt|;
name|NodeClusterAdminClient
name|clusterClient
init|=
operator|new
name|NodeClusterAdminClient
argument_list|(
name|threadPool
argument_list|,
name|actions
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|NodeIndicesAdminClient
name|indicesClient
init|=
operator|new
name|NodeIndicesAdminClient
argument_list|(
name|threadPool
argument_list|,
name|actions
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|NodeAdminClient
name|adminClient
init|=
operator|new
name|NodeAdminClient
argument_list|(
name|settings
argument_list|,
name|clusterClient
argument_list|,
name|indicesClient
argument_list|)
decl_stmt|;
return|return
operator|new
name|NodeClient
argument_list|(
name|settings
argument_list|,
name|threadPool
argument_list|,
name|adminClient
argument_list|,
name|actions
argument_list|,
name|headers
argument_list|)
return|;
block|}
DECL|class|Actions
specifier|private
specifier|static
class|class
name|Actions
extends|extends
name|HashMap
argument_list|<
name|GenericAction
argument_list|,
name|TransportAction
argument_list|>
block|{
DECL|method|Actions
specifier|private
name|Actions
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|ThreadPool
name|threadPool
parameter_list|,
name|GenericAction
index|[]
name|actions
parameter_list|)
block|{
for|for
control|(
name|GenericAction
name|action
range|:
name|actions
control|)
block|{
name|put
argument_list|(
name|action
argument_list|,
operator|new
name|InternalTransportAction
argument_list|(
name|settings
argument_list|,
name|action
operator|.
name|name
argument_list|()
argument_list|,
name|threadPool
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|class|InternalTransportAction
specifier|private
specifier|static
class|class
name|InternalTransportAction
extends|extends
name|TransportAction
block|{
DECL|method|InternalTransportAction
specifier|private
name|InternalTransportAction
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|String
name|actionName
parameter_list|,
name|ThreadPool
name|threadPool
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|,
name|actionName
argument_list|,
name|threadPool
argument_list|,
name|EMPTY_FILTERS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doExecute
specifier|protected
name|void
name|doExecute
parameter_list|(
name|ActionRequest
name|request
parameter_list|,
name|ActionListener
name|listener
parameter_list|)
block|{
name|listener
operator|.
name|onFailure
argument_list|(
operator|new
name|InternalException
argument_list|(
name|actionName
argument_list|,
name|request
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

