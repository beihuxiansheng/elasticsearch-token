begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.indices.recovery
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|recovery
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchTestCase
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|closeTo
import|;
end_import

begin_class
DECL|class|RecoveryStateTest
specifier|public
class|class
name|RecoveryStateTest
extends|extends
name|ElasticsearchTestCase
block|{
DECL|method|testPercentage
specifier|public
name|void
name|testPercentage
parameter_list|()
block|{
name|RecoveryState
name|state
init|=
operator|new
name|RecoveryState
argument_list|()
decl_stmt|;
name|RecoveryState
operator|.
name|Index
name|index
init|=
name|state
operator|.
name|getIndex
argument_list|()
decl_stmt|;
name|index
operator|.
name|totalByteCount
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|index
operator|.
name|reusedByteCount
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|index
operator|.
name|recoveredByteCount
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|index
operator|.
name|percentBytesRecovered
argument_list|()
argument_list|,
name|closeTo
argument_list|(
literal|80.0d
argument_list|,
literal|0.1d
argument_list|)
argument_list|)
expr_stmt|;
name|index
operator|.
name|totalFileCount
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|index
operator|.
name|reusedFileCount
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|index
operator|.
name|recoveredFileCount
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|index
operator|.
name|percentFilesRecovered
argument_list|()
argument_list|,
name|closeTo
argument_list|(
literal|20.0d
argument_list|,
literal|0.1d
argument_list|)
argument_list|)
expr_stmt|;
name|index
operator|.
name|totalByteCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|index
operator|.
name|reusedByteCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|index
operator|.
name|recoveredByteCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|index
operator|.
name|percentBytesRecovered
argument_list|()
argument_list|,
name|closeTo
argument_list|(
literal|0d
argument_list|,
literal|0.1d
argument_list|)
argument_list|)
expr_stmt|;
name|index
operator|.
name|totalFileCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|index
operator|.
name|reusedFileCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|index
operator|.
name|recoveredFileCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|index
operator|.
name|percentFilesRecovered
argument_list|()
argument_list|,
name|closeTo
argument_list|(
literal|00.0d
argument_list|,
literal|0.1d
argument_list|)
argument_list|)
expr_stmt|;
name|index
operator|.
name|totalByteCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|index
operator|.
name|reusedByteCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|index
operator|.
name|recoveredByteCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|index
operator|.
name|percentBytesRecovered
argument_list|()
argument_list|,
name|closeTo
argument_list|(
literal|100d
argument_list|,
literal|0.1d
argument_list|)
argument_list|)
expr_stmt|;
name|index
operator|.
name|totalFileCount
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|index
operator|.
name|reusedFileCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|index
operator|.
name|recoveredFileCount
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|index
operator|.
name|percentFilesRecovered
argument_list|()
argument_list|,
name|closeTo
argument_list|(
literal|100.0d
argument_list|,
literal|0.1d
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

