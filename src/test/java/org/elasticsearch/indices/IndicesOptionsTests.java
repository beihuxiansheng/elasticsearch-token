begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.indices
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|indices
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchIllegalArgumentException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|repositories
operator|.
name|put
operator|.
name|PutRepositoryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|snapshots
operator|.
name|create
operator|.
name|CreateSnapshotRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|snapshots
operator|.
name|restore
operator|.
name|RestoreSnapshotRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|exists
operator|.
name|AliasesExistRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|get
operator|.
name|GetAliasesRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|cache
operator|.
name|clear
operator|.
name|ClearIndicesCacheRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|exists
operator|.
name|types
operator|.
name|TypesExistsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|flush
operator|.
name|FlushRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|get
operator|.
name|GetFieldMappingsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|get
operator|.
name|GetMappingsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|optimize
operator|.
name|OptimizeRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|refresh
operator|.
name|RefreshRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|segments
operator|.
name|IndicesSegmentsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|settings
operator|.
name|get
operator|.
name|GetSettingsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|settings
operator|.
name|get
operator|.
name|GetSettingsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
operator|.
name|IndicesStatsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|status
operator|.
name|IndicesStatusRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|validate
operator|.
name|query
operator|.
name|ValidateQueryRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|warmer
operator|.
name|get
operator|.
name|GetWarmersRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|count
operator|.
name|CountRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|deletebyquery
operator|.
name|DeleteByQueryRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|percolate
operator|.
name|MultiPercolateRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|percolate
operator|.
name|PercolateRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|percolate
operator|.
name|PercolateSourceBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|MultiSearchRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|MultiSearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|suggest
operator|.
name|SuggestRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|IndicesOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|block
operator|.
name|ClusterBlockException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|SuggestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|warmer
operator|.
name|IndexWarmersMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchIntegrationTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|percolate
operator|.
name|PercolateSourceBuilder
operator|.
name|docBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|boolQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|matchAllQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertAcked
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertHitCount
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_class
DECL|class|IndicesOptionsTests
specifier|public
class|class
name|IndicesOptionsTests
extends|extends
name|ElasticsearchIntegrationTest
block|{
annotation|@
name|Test
DECL|method|testSpecifiedIndexUnavailable
specifier|public
name|void
name|testSpecifiedIndexUnavailable
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
comment|// Verify defaults
name|verify
argument_list|(
name|search
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|msearch
argument_list|(
literal|null
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clearCache
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|_flush
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|segments
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|stats
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|status
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|optimize
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|refresh
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|validateQuery
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|aliasExists
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|typesExists
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|deleteByQuery
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|percolate
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mpercolate
argument_list|(
literal|null
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|suggest
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getAliases
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getFieldMapping
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getMapping
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getWarmer
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getSettings
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|IndicesOptions
name|options
init|=
name|IndicesOptions
operator|.
name|strict
argument_list|()
decl_stmt|;
name|verify
argument_list|(
name|search
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|msearch
argument_list|(
name|options
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clearCache
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|_flush
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|segments
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|stats
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|status
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|optimize
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|refresh
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|validateQuery
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|aliasExists
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|typesExists
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|deleteByQuery
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|percolate
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mpercolate
argument_list|(
name|options
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|suggest
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getAliases
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getFieldMapping
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getMapping
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getWarmer
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getSettings
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|options
operator|=
name|IndicesOptions
operator|.
name|lenient
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|search
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|msearch
argument_list|(
name|options
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clearCache
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|_flush
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|segments
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|stats
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|status
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|optimize
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|refresh
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|validateQuery
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|aliasExists
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|typesExists
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|deleteByQuery
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|percolate
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mpercolate
argument_list|(
name|options
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|suggest
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getAliases
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getFieldMapping
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getMapping
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getWarmer
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getSettings
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|options
operator|=
name|IndicesOptions
operator|.
name|strict
argument_list|()
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test2"
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|search
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|msearch
argument_list|(
name|options
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clearCache
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|_flush
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|segments
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|stats
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|status
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|optimize
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|refresh
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|validateQuery
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|aliasExists
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|typesExists
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|deleteByQuery
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|percolate
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mpercolate
argument_list|(
name|options
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|suggest
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getAliases
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getFieldMapping
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getMapping
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getWarmer
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getSettings
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSpecifiedIndexUnavailable_snapshotRestore
specifier|public
name|void
name|testSpecifiedIndexUnavailable_snapshotRestore
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"dummy-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"fs"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|newTempDir
argument_list|()
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"dummy-repo"
argument_list|,
literal|"snap1"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|snapshot
argument_list|(
literal|"snap2"
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|restore
argument_list|(
literal|"snap1"
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|IndicesOptions
name|options
init|=
name|IndicesOptions
operator|.
name|strict
argument_list|()
decl_stmt|;
name|verify
argument_list|(
name|snapshot
argument_list|(
literal|"snap2"
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|restore
argument_list|(
literal|"snap1"
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|options
operator|=
name|IndicesOptions
operator|.
name|lenient
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|snapshot
argument_list|(
literal|"snap2"
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|restore
argument_list|(
literal|"snap2"
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|options
operator|=
name|IndicesOptions
operator|.
name|strict
argument_list|()
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test2"
argument_list|)
argument_list|)
expr_stmt|;
comment|//TODO: temporary work-around for #5531
name|ensureGreen
argument_list|()
expr_stmt|;
name|waitForRelocation
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|snapshot
argument_list|(
literal|"snap3"
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|restore
argument_list|(
literal|"snap3"
argument_list|,
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWildcardBehaviour
specifier|public
name|void
name|testWildcardBehaviour
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Verify defaults for wildcards, when specifying no indices (*, _all, /)
name|String
index|[]
name|indices
init|=
name|Strings
operator|.
name|EMPTY_ARRAY
decl_stmt|;
name|verify
argument_list|(
name|search
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|msearch
argument_list|(
literal|null
argument_list|,
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clearCache
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|_flush
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|segments
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|stats
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|status
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|optimize
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|refresh
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|validateQuery
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|aliasExists
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|typesExists
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|deleteByQuery
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|percolate
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mpercolate
argument_list|(
literal|null
argument_list|,
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|suggest
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getAliases
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getFieldMapping
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getMapping
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getWarmer
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getSettings
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Now force allow_no_indices=true
name|IndicesOptions
name|options
init|=
name|IndicesOptions
operator|.
name|fromOptions
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|search
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|msearch
argument_list|(
name|options
argument_list|,
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clearCache
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|_flush
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|segments
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|stats
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|status
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|optimize
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|refresh
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|validateQuery
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|aliasExists
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|typesExists
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|deleteByQuery
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|percolate
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mpercolate
argument_list|(
name|options
argument_list|,
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|suggest
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getAliases
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getFieldMapping
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getMapping
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getWarmer
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getSettings
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"foobar"
argument_list|)
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"foobar"
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"k"
argument_list|,
literal|"v"
argument_list|)
operator|.
name|setRefresh
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
comment|// Verify defaults for wildcards, with one wildcard expression and one existing index
name|indices
operator|=
operator|new
name|String
index|[]
block|{
literal|"foo*"
block|}
expr_stmt|;
name|verify
argument_list|(
name|search
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|msearch
argument_list|(
literal|null
argument_list|,
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clearCache
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|_flush
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|segments
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|stats
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|status
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|optimize
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|refresh
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|validateQuery
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|aliasExists
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|typesExists
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|deleteByQuery
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|percolate
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mpercolate
argument_list|(
literal|null
argument_list|,
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|suggest
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getAliases
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getFieldMapping
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getMapping
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getWarmer
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getSettings
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Verify defaults for wildcards, with two wildcard expression and one existing index
name|indices
operator|=
operator|new
name|String
index|[]
block|{
literal|"foo*"
block|,
literal|"bar*"
block|}
expr_stmt|;
name|verify
argument_list|(
name|search
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|msearch
argument_list|(
literal|null
argument_list|,
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clearCache
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|_flush
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|segments
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|stats
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|status
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|optimize
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|refresh
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|validateQuery
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|aliasExists
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|typesExists
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|deleteByQuery
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|percolate
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mpercolate
argument_list|(
literal|null
argument_list|,
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|suggest
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getAliases
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getFieldMapping
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getMapping
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getWarmer
argument_list|(
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getSettings
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Now force allow_no_indices=true
name|options
operator|=
name|IndicesOptions
operator|.
name|fromOptions
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|search
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|msearch
argument_list|(
name|options
argument_list|,
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clearCache
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|_flush
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|segments
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|stats
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|status
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|optimize
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|refresh
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|validateQuery
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|aliasExists
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|typesExists
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|deleteByQuery
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|percolate
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mpercolate
argument_list|(
name|options
argument_list|,
name|indices
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|suggest
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getAliases
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getFieldMapping
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getMapping
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getWarmer
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|getSettings
argument_list|(
name|indices
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWildcardBehaviour_snapshotRestore
specifier|public
name|void
name|testWildcardBehaviour_snapshotRestore
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"foobar"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"dummy-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"fs"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|newTempDir
argument_list|()
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"dummy-repo"
argument_list|,
literal|"snap1"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|IndicesOptions
name|options
init|=
name|IndicesOptions
operator|.
name|fromOptions
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|snapshot
argument_list|(
literal|"snap2"
argument_list|,
literal|"foo*"
argument_list|,
literal|"bar*"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|restore
argument_list|(
literal|"snap1"
argument_list|,
literal|"foo*"
argument_list|,
literal|"bar*"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|options
operator|=
name|IndicesOptions
operator|.
name|strict
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|snapshot
argument_list|(
literal|"snap2"
argument_list|,
literal|"foo*"
argument_list|,
literal|"bar*"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|restore
argument_list|(
literal|"snap2"
argument_list|,
literal|"foo*"
argument_list|,
literal|"bar*"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"barbaz"
argument_list|)
argument_list|)
expr_stmt|;
comment|//TODO: temporary work-around for #5531
name|ensureGreen
argument_list|()
expr_stmt|;
name|waitForRelocation
argument_list|()
expr_stmt|;
name|options
operator|=
name|IndicesOptions
operator|.
name|fromOptions
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|snapshot
argument_list|(
literal|"snap3"
argument_list|,
literal|"foo*"
argument_list|,
literal|"bar*"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|restore
argument_list|(
literal|"snap3"
argument_list|,
literal|"foo*"
argument_list|,
literal|"bar*"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|options
operator|=
name|IndicesOptions
operator|.
name|fromOptions
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|snapshot
argument_list|(
literal|"snap4"
argument_list|,
literal|"foo*"
argument_list|,
literal|"baz*"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|restore
argument_list|(
literal|"snap3"
argument_list|,
literal|"foo*"
argument_list|,
literal|"baz*"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllMissing_lenient
specifier|public
name|void
name|testAllMissing_lenient
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test1"
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"k"
argument_list|,
literal|"v"
argument_list|)
operator|.
name|setRefresh
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|IndicesOptions
operator|.
name|lenient
argument_list|()
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|response
argument_list|,
literal|0l
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test2"
argument_list|,
literal|"test3"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|IndicesOptions
operator|.
name|lenient
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertHitCount
argument_list|(
name|response
argument_list|,
literal|0l
argument_list|)
expr_stmt|;
comment|//you should still be able to run empty searches without things blowing up
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setIndicesOptions
argument_list|(
name|IndicesOptions
operator|.
name|lenient
argument_list|()
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertHitCount
argument_list|(
name|response
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllMissing_strict
specifier|public
name|void
name|testAllMissing_strict
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
try|try
block|{
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Exception should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IndexMissingException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test2"
argument_list|,
literal|"test3"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Exception should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IndexMissingException
name|e
parameter_list|)
block|{         }
comment|//you should still be able to run empty searches without things blowing up
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
comment|// For now don't handle closed indices
DECL|method|testCloseApi_specifiedIndices
specifier|public
name|void
name|testCloseApi_specifiedIndices
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|search
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|search
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Exception should have been thrown"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClusterBlockException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|count
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Exception should have been thrown"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClusterBlockException
name|e
parameter_list|)
block|{         }
name|verify
argument_list|(
name|search
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|search
argument_list|(
literal|"t*"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|count
argument_list|(
literal|"t*"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCloseApi_wildcards
specifier|public
name|void
name|testCloseApi_wildcards
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"foo"
argument_list|,
literal|"foobar"
argument_list|,
literal|"bar"
argument_list|,
literal|"barbaz"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"bar*"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"bar*"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"foo*"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"foo*"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"_all"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareOpen
argument_list|(
literal|"bar*"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareOpen
argument_list|(
literal|"_all"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareOpen
argument_list|(
literal|"_all"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteIndex
specifier|public
name|void
name|testDeleteIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"foobar"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"foobar"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteIndex_wildcard
specifier|public
name|void
name|testDeleteIndex_wildcard
parameter_list|()
throws|throws
name|Exception
block|{
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"_all"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createIndex
argument_list|(
literal|"foo"
argument_list|,
literal|"foobar"
argument_list|,
literal|"bar"
argument_list|,
literal|"barbaz"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"foo*"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"foo*"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"_all"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteMapping
specifier|public
name|void
name|testDeleteMapping
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type1"
argument_list|,
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteMapping
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteMapping
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteMapping_wildcard
specifier|public
name|void
name|testDeleteMapping_wildcard
parameter_list|()
throws|throws
name|Exception
block|{
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteMapping
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type1"
argument_list|,
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type1"
argument_list|,
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type1"
argument_list|,
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type1"
argument_list|,
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteMapping
argument_list|(
literal|"foo*"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"foo*"
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteMapping
argument_list|(
literal|"foo*"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteMapping
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPutWarmer
specifier|public
name|void
name|testPutWarmer
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"foobar"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutWarmer
argument_list|(
literal|"warmer1"
argument_list|)
operator|.
name|setSearchRequest
argument_list|(
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setIndices
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|QueryBuilders
operator|.
name|matchAllQuery
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"warmer1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPutWarmer_wildcard
specifier|public
name|void
name|testPutWarmer_wildcard
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"foo"
argument_list|,
literal|"foobar"
argument_list|,
literal|"bar"
argument_list|,
literal|"barbaz"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutWarmer
argument_list|(
literal|"warmer1"
argument_list|)
operator|.
name|setSearchRequest
argument_list|(
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setIndices
argument_list|(
literal|"foo*"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|QueryBuilders
operator|.
name|matchAllQuery
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"warmer1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"warmer1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"warmer1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"warmer1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutWarmer
argument_list|(
literal|"warmer2"
argument_list|)
operator|.
name|setSearchRequest
argument_list|(
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setIndices
argument_list|()
operator|.
name|setQuery
argument_list|(
name|QueryBuilders
operator|.
name|matchAllQuery
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"warmer2"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"warmer2"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"warmer2"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"warmer2"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPutAlias
specifier|public
name|void
name|testPutAlias
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"foobar"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliases
argument_list|()
operator|.
name|addAlias
argument_list|(
literal|"foobar"
argument_list|,
literal|"foobar_alias"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliasesExist
argument_list|(
literal|"foobar_alias"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPutAlias_wildcard
specifier|public
name|void
name|testPutAlias_wildcard
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"foo"
argument_list|,
literal|"foobar"
argument_list|,
literal|"bar"
argument_list|,
literal|"barbaz"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliases
argument_list|()
operator|.
name|addAlias
argument_list|(
literal|"foo*"
argument_list|,
literal|"foobar_alias"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliasesExist
argument_list|(
literal|"foobar_alias"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliasesExist
argument_list|(
literal|"foobar_alias"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliasesExist
argument_list|(
literal|"foobar_alias"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliasesExist
argument_list|(
literal|"foobar_alias"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliases
argument_list|()
operator|.
name|addAlias
argument_list|(
literal|"*"
argument_list|,
literal|"foobar_alias"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliasesExist
argument_list|(
literal|"foobar_alias"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliasesExist
argument_list|(
literal|"foobar_alias"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliasesExist
argument_list|(
literal|"foobar_alias"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliasesExist
argument_list|(
literal|"foobar_alias"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteMapping_typeWildcard
specifier|public
name|void
name|testDeleteMapping_typeWildcard
parameter_list|()
throws|throws
name|Exception
block|{
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteMapping
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type1"
argument_list|,
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type2"
argument_list|,
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type3"
argument_list|,
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type4"
argument_list|,
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type2"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type3"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type4"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteMapping
argument_list|(
literal|"foo*"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type*"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type2"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type3"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type4"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"foo*"
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteMapping
argument_list|(
literal|"foo*"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteMapping
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type3"
argument_list|,
literal|"type4"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type3"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type4"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteWarmer
specifier|public
name|void
name|testDeleteWarmer
parameter_list|()
throws|throws
name|Exception
block|{
name|IndexWarmersMetaData
operator|.
name|Entry
name|entry
init|=
operator|new
name|IndexWarmersMetaData
operator|.
name|Entry
argument_list|(
literal|"test1"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"typ1"
block|}
argument_list|,
operator|new
name|BytesArray
argument_list|(
literal|"{\"query\" : { \"match_all\" : {}}}"
argument_list|)
argument_list|)
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|addCustom
argument_list|(
operator|new
name|IndexWarmersMetaData
argument_list|(
name|entry
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteWarmer
argument_list|()
operator|.
name|setIndices
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setNames
argument_list|(
literal|"test1"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteWarmer
argument_list|()
operator|.
name|setIndices
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setNames
argument_list|(
literal|"test1"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteWarmer_wildcard
specifier|public
name|void
name|testDeleteWarmer_wildcard
parameter_list|()
throws|throws
name|Exception
block|{
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteWarmer
argument_list|()
operator|.
name|setIndices
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|setNames
argument_list|(
literal|"test1"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|IndexWarmersMetaData
operator|.
name|Entry
name|entry
init|=
operator|new
name|IndexWarmersMetaData
operator|.
name|Entry
argument_list|(
literal|"test1"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"type1"
block|}
argument_list|,
operator|new
name|BytesArray
argument_list|(
literal|"{\"query\" : { \"match_all\" : {}}}"
argument_list|)
argument_list|)
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|addCustom
argument_list|(
operator|new
name|IndexWarmersMetaData
argument_list|(
name|entry
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|addCustom
argument_list|(
operator|new
name|IndexWarmersMetaData
argument_list|(
name|entry
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|addCustom
argument_list|(
operator|new
name|IndexWarmersMetaData
argument_list|(
name|entry
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|addCustom
argument_list|(
operator|new
name|IndexWarmersMetaData
argument_list|(
name|entry
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteWarmer
argument_list|()
operator|.
name|setIndices
argument_list|(
literal|"foo*"
argument_list|)
operator|.
name|setNames
argument_list|(
literal|"test1"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"foo*"
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteWarmer
argument_list|()
operator|.
name|setIndices
argument_list|(
literal|"foo*"
argument_list|)
operator|.
name|setNames
argument_list|(
literal|"test1"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDeleteWarmer
argument_list|()
operator|.
name|setIndices
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|setNames
argument_list|(
literal|"test1"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|setWarmers
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getWarmers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
comment|// Indices exists never throws IndexMissingException, the indices options control its behaviour (return true or false)
DECL|method|testIndicesExists
specifier|public
name|void
name|testIndicesExists
parameter_list|()
throws|throws
name|Exception
block|{
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|IndicesOptions
operator|.
name|lenient
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foo*"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foo*"
argument_list|)
operator|.
name|setIndicesOptions
argument_list|(
name|IndicesOptions
operator|.
name|fromOptions
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|createIndex
argument_list|(
literal|"foo"
argument_list|,
literal|"foobar"
argument_list|,
literal|"bar"
argument_list|,
literal|"barbaz"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foo*"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"bar*"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPutMapping
specifier|public
name|void
name|testPutMapping
parameter_list|()
throws|throws
name|Exception
block|{
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|createIndex
argument_list|(
literal|"foo"
argument_list|,
literal|"foobar"
argument_list|,
literal|"bar"
argument_list|,
literal|"barbaz"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
literal|"b*"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type2"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type2"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type2"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type2"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type2"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|()
operator|.
name|setType
argument_list|(
literal|"type3"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type3"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"foobar"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type3"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type3"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type3"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
literal|"c*"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"type4"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"type=string"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|mappings
argument_list|()
operator|.
name|get
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|get
argument_list|(
literal|"type4"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateSettings
specifier|public
name|void
name|testUpdateSettings
parameter_list|()
throws|throws
name|Exception
block|{
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareUpdateSettings
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareUpdateSettings
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|createIndex
argument_list|(
literal|"foo"
argument_list|,
literal|"foobar"
argument_list|,
literal|"bar"
argument_list|,
literal|"barbaz"
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareUpdateSettings
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareUpdateSettings
argument_list|(
literal|"bar*"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareUpdateSettings
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|GetSettingsResponse
name|settingsResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetSettings
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|settingsResponse
operator|.
name|getSetting
argument_list|(
literal|"foo"
argument_list|,
literal|"index.a"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|settingsResponse
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetSettings
argument_list|(
literal|"bar*"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|settingsResponse
operator|.
name|getSetting
argument_list|(
literal|"bar"
argument_list|,
literal|"index.a"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|settingsResponse
operator|.
name|getSetting
argument_list|(
literal|"barbaz"
argument_list|,
literal|"index.a"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|settingsResponse
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetSettings
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|settingsResponse
operator|.
name|getSetting
argument_list|(
literal|"foo"
argument_list|,
literal|"index.c"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|settingsResponse
operator|.
name|getSetting
argument_list|(
literal|"foobar"
argument_list|,
literal|"index.c"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|settingsResponse
operator|.
name|getSetting
argument_list|(
literal|"bar"
argument_list|,
literal|"index.c"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|settingsResponse
operator|.
name|getSetting
argument_list|(
literal|"barbaz"
argument_list|,
literal|"index.c"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareOpen
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareUpdateSettings
argument_list|(
literal|"barbaz"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"e"
argument_list|,
literal|"f"
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ElasticsearchIllegalArgumentException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"Can't update non dynamic settings[[index.e]] for open indices[[barbaz]]"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|verify
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareUpdateSettings
argument_list|(
literal|"baz*"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|search
specifier|private
specifier|static
name|SearchRequestBuilder
name|search
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|indices
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
return|;
block|}
DECL|method|msearch
specifier|private
specifier|static
name|MultiSearchRequestBuilder
name|msearch
parameter_list|(
name|IndicesOptions
name|options
parameter_list|,
name|String
modifier|...
name|indices
parameter_list|)
block|{
name|MultiSearchRequestBuilder
name|multiSearchRequestBuilder
init|=
name|client
argument_list|()
operator|.
name|prepareMultiSearch
argument_list|()
decl_stmt|;
if|if
condition|(
name|options
operator|!=
literal|null
condition|)
block|{
name|multiSearchRequestBuilder
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
expr_stmt|;
block|}
return|return
name|multiSearchRequestBuilder
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|indices
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|method|count
specifier|private
specifier|static
name|CountRequestBuilder
name|count
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|prepareCount
argument_list|(
name|indices
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
return|;
block|}
DECL|method|clearCache
specifier|private
specifier|static
name|ClearIndicesCacheRequestBuilder
name|clearCache
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClearCache
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|_flush
specifier|private
specifier|static
name|FlushRequestBuilder
name|_flush
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareFlush
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|segments
specifier|private
specifier|static
name|IndicesSegmentsRequestBuilder
name|segments
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareSegments
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|stats
specifier|private
specifier|static
name|IndicesStatsRequestBuilder
name|stats
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|status
specifier|private
specifier|static
name|IndicesStatusRequestBuilder
name|status
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStatus
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|optimize
specifier|private
specifier|static
name|OptimizeRequestBuilder
name|optimize
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareOptimize
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|refresh
specifier|private
specifier|static
name|RefreshRequestBuilder
name|refresh
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|validateQuery
specifier|private
specifier|static
name|ValidateQueryRequestBuilder
name|validateQuery
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareValidateQuery
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|aliasExists
specifier|private
specifier|static
name|AliasesExistRequestBuilder
name|aliasExists
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAliasesExist
argument_list|(
literal|"dummy"
argument_list|)
operator|.
name|addIndices
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|typesExists
specifier|private
specifier|static
name|TypesExistsRequestBuilder
name|typesExists
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareTypesExists
argument_list|(
name|indices
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"dummy"
argument_list|)
return|;
block|}
DECL|method|deleteByQuery
specifier|private
specifier|static
name|DeleteByQueryRequestBuilder
name|deleteByQuery
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|prepareDeleteByQuery
argument_list|(
name|indices
argument_list|)
operator|.
name|setQuery
argument_list|(
name|boolQuery
argument_list|()
operator|.
name|mustNot
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|method|percolate
specifier|private
specifier|static
name|PercolateRequestBuilder
name|percolate
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|preparePercolate
argument_list|()
operator|.
name|setIndices
argument_list|(
name|indices
argument_list|)
operator|.
name|setSource
argument_list|(
operator|new
name|PercolateSourceBuilder
argument_list|()
operator|.
name|setDoc
argument_list|(
name|docBuilder
argument_list|()
operator|.
name|setDoc
argument_list|(
literal|"k"
argument_list|,
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|setDocumentType
argument_list|(
literal|"type"
argument_list|)
return|;
block|}
DECL|method|mpercolate
specifier|private
specifier|static
name|MultiPercolateRequestBuilder
name|mpercolate
parameter_list|(
name|IndicesOptions
name|options
parameter_list|,
name|String
modifier|...
name|indices
parameter_list|)
block|{
name|MultiPercolateRequestBuilder
name|builder
init|=
name|client
argument_list|()
operator|.
name|prepareMultiPercolate
argument_list|()
decl_stmt|;
if|if
condition|(
name|options
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setIndicesOptions
argument_list|(
name|options
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|add
argument_list|(
name|percolate
argument_list|(
name|indices
argument_list|)
argument_list|)
return|;
block|}
DECL|method|suggest
specifier|private
specifier|static
name|SuggestRequestBuilder
name|suggest
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|indices
argument_list|)
operator|.
name|addSuggestion
argument_list|(
name|SuggestBuilder
operator|.
name|termSuggestion
argument_list|(
literal|"name"
argument_list|)
operator|.
name|field
argument_list|(
literal|"a"
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getAliases
specifier|private
specifier|static
name|GetAliasesRequestBuilder
name|getAliases
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetAliases
argument_list|(
literal|"dummy"
argument_list|)
operator|.
name|addIndices
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|getFieldMapping
specifier|private
specifier|static
name|GetFieldMappingsRequestBuilder
name|getFieldMapping
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetFieldMappings
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|getMapping
specifier|private
specifier|static
name|GetMappingsRequestBuilder
name|getMapping
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetMappings
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|getWarmer
specifier|private
specifier|static
name|GetWarmersRequestBuilder
name|getWarmer
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetWarmers
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|getSettings
specifier|private
specifier|static
name|GetSettingsRequestBuilder
name|getSettings
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetSettings
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|snapshot
specifier|private
specifier|static
name|CreateSnapshotRequestBuilder
name|snapshot
parameter_list|(
name|String
name|name
parameter_list|,
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"dummy-repo"
argument_list|,
name|name
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|restore
specifier|private
specifier|static
name|RestoreSnapshotRequestBuilder
name|restore
parameter_list|(
name|String
name|name
parameter_list|,
name|String
modifier|...
name|indices
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"dummy-repo"
argument_list|,
name|name
argument_list|)
operator|.
name|setRenamePattern
argument_list|(
literal|"(.+)"
argument_list|)
operator|.
name|setRenameReplacement
argument_list|(
literal|"$1-copy-"
operator|+
name|name
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
name|indices
argument_list|)
return|;
block|}
DECL|method|verify
specifier|private
specifier|static
name|void
name|verify
parameter_list|(
name|ActionRequestBuilder
name|requestBuilder
parameter_list|,
name|boolean
name|fail
parameter_list|)
block|{
name|verify
argument_list|(
name|requestBuilder
argument_list|,
name|fail
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|verify
specifier|private
specifier|static
name|void
name|verify
parameter_list|(
name|ActionRequestBuilder
name|requestBuilder
parameter_list|,
name|boolean
name|fail
parameter_list|,
name|long
name|expectedCount
parameter_list|)
block|{
if|if
condition|(
name|fail
condition|)
block|{
if|if
condition|(
name|requestBuilder
operator|instanceof
name|MultiSearchRequestBuilder
condition|)
block|{
name|MultiSearchResponse
name|multiSearchResponse
init|=
operator|(
operator|(
name|MultiSearchRequestBuilder
operator|)
name|requestBuilder
operator|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|multiSearchResponse
operator|.
name|getResponses
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|multiSearchResponse
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
try|try
block|{
name|requestBuilder
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"IndexMissingException was expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IndexMissingException
name|e
parameter_list|)
block|{}
block|}
block|}
else|else
block|{
if|if
condition|(
name|requestBuilder
operator|instanceof
name|SearchRequestBuilder
condition|)
block|{
name|SearchRequestBuilder
name|searchRequestBuilder
init|=
operator|(
name|SearchRequestBuilder
operator|)
name|requestBuilder
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchRequestBuilder
operator|.
name|get
argument_list|()
argument_list|,
name|expectedCount
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|requestBuilder
operator|instanceof
name|CountRequestBuilder
condition|)
block|{
name|CountRequestBuilder
name|countRequestBuilder
init|=
operator|(
name|CountRequestBuilder
operator|)
name|requestBuilder
decl_stmt|;
name|assertHitCount
argument_list|(
name|countRequestBuilder
operator|.
name|get
argument_list|()
argument_list|,
name|expectedCount
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|requestBuilder
operator|instanceof
name|MultiSearchRequestBuilder
condition|)
block|{
name|MultiSearchResponse
name|multiSearchResponse
init|=
operator|(
operator|(
name|MultiSearchRequestBuilder
operator|)
name|requestBuilder
operator|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|multiSearchResponse
operator|.
name|getResponses
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|multiSearchResponse
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

