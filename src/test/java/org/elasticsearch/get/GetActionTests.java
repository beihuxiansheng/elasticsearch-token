begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.get
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|get
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchIllegalArgumentException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ShardOperationFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|Alias
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|flush
operator|.
name|FlushResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|delete
operator|.
name|DeleteResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|get
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|VersionConflictEngineException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchIntegrationTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|junit
operator|.
name|annotations
operator|.
name|TestLogging
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertAcked
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_class
DECL|class|GetActionTests
specifier|public
class|class
name|GetActionTests
extends|extends
name|ElasticsearchIntegrationTest
block|{
annotation|@
name|Test
DECL|method|simpleGetTests
specifier|public
name|void
name|simpleGetTests
parameter_list|()
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> index doc 1"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|,
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime get 1"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime get 1 (no source, implicit)"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
name|Strings
operator|.
name|EMPTY_ARRAY
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsBytes
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime get 1 (no source, explicit)"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFetchSource
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsBytes
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime get 1 (no type)"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> non realtime get 1"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setRealtime
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime fetch of field (requires fetching parsing source)"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsBytes
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getField
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getField
argument_list|(
literal|"field2"
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime fetch of field& source (requires fetching parsing source)"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|setFetchSource
argument_list|(
literal|"field1"
argument_list|,
literal|null
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|hasKey
argument_list|(
literal|"field1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|not
argument_list|(
name|hasKey
argument_list|(
literal|"field2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getField
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getField
argument_list|(
literal|"field2"
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> flush the index, so we load it from it"
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime get 1 (loaded from index)"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> non realtime get 1 (loaded from index)"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setRealtime
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime fetch of field (loaded from index)"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsBytes
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getField
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getField
argument_list|(
literal|"field2"
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime fetch of field& source (loaded from index)"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|setFetchSource
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsBytes
argument_list|()
argument_list|,
name|not
argument_list|(
name|nullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getField
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getField
argument_list|(
literal|"field2"
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> update doc 1"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field1"
argument_list|,
literal|"value1_1"
argument_list|,
literal|"field2"
argument_list|,
literal|"value2_1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime get 1"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1_1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2_1"
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> update doc 1 again"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field1"
argument_list|,
literal|"value1_2"
argument_list|,
literal|"field2"
argument_list|,
literal|"value2_2"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1_2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2_2"
argument_list|)
argument_list|)
expr_stmt|;
name|DeleteResponse
name|deleteResponse
init|=
name|client
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|deleteResponse
operator|.
name|isFound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|indexOrAlias
specifier|private
specifier|static
name|String
name|indexOrAlias
parameter_list|()
block|{
return|return
name|randomBoolean
argument_list|()
condition|?
literal|"test"
else|:
literal|"alias"
return|;
block|}
annotation|@
name|Test
DECL|method|simpleMultiGetTests
specifier|public
name|void
name|simpleMultiGetTests
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|MultiGetResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareMultiGet
argument_list|()
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"value"
operator|+
name|i
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareMultiGet
argument_list|()
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"15"
argument_list|)
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"3"
argument_list|)
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"9"
argument_list|)
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"11"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"15"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|3
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"9"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|3
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|3
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|3
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|4
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|4
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|4
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|4
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
comment|// multi get with specific field
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareMultiGet
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|fields
argument_list|(
literal|"field"
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"3"
argument_list|)
operator|.
name|fields
argument_list|(
literal|"field"
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getSourceAsBytes
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getField
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|realtimeGetWithCompress
specifier|public
name|void
name|realtimeGetWithCompress
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_source"
argument_list|)
operator|.
name|field
argument_list|(
literal|"compress"
argument_list|,
literal|true
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10000
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
operator|(
name|char
operator|)
name|i
argument_list|)
expr_stmt|;
block|}
name|String
name|fieldValue
init|=
name|sb
operator|.
name|toString
argument_list|()
decl_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
name|fieldValue
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
comment|// realtime get
name|GetResponse
name|getResponse
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|fieldValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getFieldsWithDifferentTypes
specifier|public
name|void
name|getFieldsWithDifferentTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type1"
argument_list|,
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_source"
argument_list|)
operator|.
name|field
argument_list|(
literal|"enabled"
argument_list|,
literal|true
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type2"
argument_list|,
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_source"
argument_list|)
operator|.
name|field
argument_list|(
literal|"enabled"
argument_list|,
literal|false
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"str"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"store"
argument_list|,
literal|"yes"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"strs"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"store"
argument_list|,
literal|"yes"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"int"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"integer"
argument_list|)
operator|.
name|field
argument_list|(
literal|"store"
argument_list|,
literal|"yes"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"ints"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"integer"
argument_list|)
operator|.
name|field
argument_list|(
literal|"store"
argument_list|,
literal|"yes"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"date"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"date"
argument_list|)
operator|.
name|field
argument_list|(
literal|"store"
argument_list|,
literal|"yes"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"binary"
argument_list|)
operator|.
name|field
argument_list|(
literal|"store"
argument_list|,
literal|"yes"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"str"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|field
argument_list|(
literal|"strs"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"A"
block|,
literal|"B"
block|,
literal|"C"
block|}
argument_list|)
operator|.
name|field
argument_list|(
literal|"int"
argument_list|,
literal|42
argument_list|)
operator|.
name|field
argument_list|(
literal|"ints"
argument_list|,
operator|new
name|int
index|[]
block|{
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|}
argument_list|)
operator|.
name|field
argument_list|(
literal|"date"
argument_list|,
literal|"2012-11-13T15:26:14.000Z"
argument_list|)
operator|.
name|field
argument_list|(
literal|"binary"
argument_list|,
name|Base64
operator|.
name|encodeBytes
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|1
block|,
literal|2
block|,
literal|3
block|}
argument_list|)
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type2"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"str"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|field
argument_list|(
literal|"strs"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"A"
block|,
literal|"B"
block|,
literal|"C"
block|}
argument_list|)
operator|.
name|field
argument_list|(
literal|"int"
argument_list|,
literal|42
argument_list|)
operator|.
name|field
argument_list|(
literal|"ints"
argument_list|,
operator|new
name|int
index|[]
block|{
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|}
argument_list|)
operator|.
name|field
argument_list|(
literal|"date"
argument_list|,
literal|"2012-11-13T15:26:14.000Z"
argument_list|)
operator|.
name|field
argument_list|(
literal|"binary"
argument_list|,
name|Base64
operator|.
name|encodeBytes
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|1
block|,
literal|2
block|,
literal|3
block|}
argument_list|)
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
comment|// realtime get with stored source
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime get (from source)"
argument_list|)
expr_stmt|;
name|GetResponse
name|getResponse
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"str"
argument_list|,
literal|"strs"
argument_list|,
literal|"int"
argument_list|,
literal|"ints"
argument_list|,
literal|"date"
argument_list|,
literal|"binary"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"str"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"strs"
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|,
name|contains
argument_list|(
operator|(
name|Object
operator|)
literal|"A"
argument_list|,
literal|"B"
argument_list|,
literal|"C"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Long
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"int"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|42l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"ints"
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|,
name|contains
argument_list|(
operator|(
name|Object
operator|)
literal|1L
argument_list|,
literal|2L
argument_list|,
literal|3L
argument_list|,
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"date"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2012-11-13T15:26:14.000Z"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// its a String..., not binary mapped
name|logger
operator|.
name|info
argument_list|(
literal|"--> realtime get (from stored fields)"
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type2"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"str"
argument_list|,
literal|"strs"
argument_list|,
literal|"int"
argument_list|,
literal|"ints"
argument_list|,
literal|"date"
argument_list|,
literal|"binary"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"str"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"strs"
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|,
name|contains
argument_list|(
operator|(
name|Object
operator|)
literal|"A"
argument_list|,
literal|"B"
argument_list|,
literal|"C"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Integer
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"int"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|42
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"ints"
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|,
name|contains
argument_list|(
operator|(
name|Object
operator|)
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"date"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2012-11-13T15:26:14.000Z"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|BytesReference
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|BytesReference
operator|)
operator|new
name|BytesArray
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|1
block|,
literal|2
block|,
literal|3
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> flush the index, so we load it from it"
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> non realtime get (from source)"
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"str"
argument_list|,
literal|"strs"
argument_list|,
literal|"int"
argument_list|,
literal|"ints"
argument_list|,
literal|"date"
argument_list|,
literal|"binary"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"str"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"strs"
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|,
name|contains
argument_list|(
operator|(
name|Object
operator|)
literal|"A"
argument_list|,
literal|"B"
argument_list|,
literal|"C"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Long
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"int"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|42l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"ints"
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|,
name|contains
argument_list|(
operator|(
name|Object
operator|)
literal|1L
argument_list|,
literal|2L
argument_list|,
literal|3L
argument_list|,
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"date"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2012-11-13T15:26:14.000Z"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// its a String..., not binary mapped
name|logger
operator|.
name|info
argument_list|(
literal|"--> non realtime get (from stored fields)"
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type2"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"str"
argument_list|,
literal|"strs"
argument_list|,
literal|"int"
argument_list|,
literal|"ints"
argument_list|,
literal|"date"
argument_list|,
literal|"binary"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"str"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"strs"
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|,
name|contains
argument_list|(
operator|(
name|Object
operator|)
literal|"A"
argument_list|,
literal|"B"
argument_list|,
literal|"C"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Integer
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"int"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|42
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"ints"
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|,
name|contains
argument_list|(
operator|(
name|Object
operator|)
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"date"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2012-11-13T15:26:14.000Z"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|BytesReference
operator|)
name|getResponse
operator|.
name|getField
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|BytesReference
operator|)
operator|new
name|BytesArray
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|1
block|,
literal|2
block|,
literal|3
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetDocWithMultivaluedFields
specifier|public
name|void
name|testGetDocWithMultivaluedFields
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping1
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"store"
argument_list|,
literal|"yes"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|String
name|mapping2
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"store"
argument_list|,
literal|"yes"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"_source"
argument_list|)
operator|.
name|field
argument_list|(
literal|"enabled"
argument_list|,
literal|false
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type1"
argument_list|,
name|mapping1
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type2"
argument_list|,
name|mapping2
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type2"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"1"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type2"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"1"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"type1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type2"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"type2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now test values being fetched from stored fields.
name|refresh
argument_list|()
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type2"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatGetFromTranslogShouldWorkWithExclude
specifier|public
name|void
name|testThatGetFromTranslogShouldWorkWithExclude
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|index
init|=
literal|"test"
decl_stmt|;
name|String
name|type
init|=
literal|"type1"
decl_stmt|;
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|type
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_source"
argument_list|)
operator|.
name|array
argument_list|(
literal|"excludes"
argument_list|,
literal|"excluded"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
name|index
argument_list|)
operator|.
name|addMapping
argument_list|(
name|type
argument_list|,
name|mapping
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"1"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"excluded"
argument_list|,
literal|"should not be seen"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|GetResponse
name|responseBeforeFlush
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareFlush
argument_list|(
name|index
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|GetResponse
name|responseAfterFlush
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|isExists
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseAfterFlush
operator|.
name|isExists
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|hasKey
argument_list|(
literal|"field"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|not
argument_list|(
name|hasKey
argument_list|(
literal|"excluded"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|getSourceAsString
argument_list|()
argument_list|,
name|is
argument_list|(
name|responseAfterFlush
operator|.
name|getSourceAsString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatGetFromTranslogShouldWorkWithInclude
specifier|public
name|void
name|testThatGetFromTranslogShouldWorkWithInclude
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|index
init|=
literal|"test"
decl_stmt|;
name|String
name|type
init|=
literal|"type1"
decl_stmt|;
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|type
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_source"
argument_list|)
operator|.
name|array
argument_list|(
literal|"includes"
argument_list|,
literal|"included"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
name|index
argument_list|)
operator|.
name|addMapping
argument_list|(
name|type
argument_list|,
name|mapping
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"1"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"included"
argument_list|,
literal|"should be seen"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|GetResponse
name|responseBeforeFlush
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|flush
argument_list|()
expr_stmt|;
name|GetResponse
name|responseAfterFlush
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|isExists
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseAfterFlush
operator|.
name|isExists
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|not
argument_list|(
name|hasKey
argument_list|(
literal|"field"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|hasKey
argument_list|(
literal|"included"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|getSourceAsString
argument_list|()
argument_list|,
name|is
argument_list|(
name|responseAfterFlush
operator|.
name|getSourceAsString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
DECL|method|testThatGetFromTranslogShouldWorkWithIncludeExcludeAndFields
specifier|public
name|void
name|testThatGetFromTranslogShouldWorkWithIncludeExcludeAndFields
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|index
init|=
literal|"test"
decl_stmt|;
name|String
name|type
init|=
literal|"type1"
decl_stmt|;
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|type
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_source"
argument_list|)
operator|.
name|array
argument_list|(
literal|"includes"
argument_list|,
literal|"included"
argument_list|)
operator|.
name|array
argument_list|(
literal|"excludes"
argument_list|,
literal|"excluded"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
name|index
argument_list|)
operator|.
name|addMapping
argument_list|(
name|type
argument_list|,
name|mapping
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"1"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"included"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"should be seen"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"extra field to remove"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"excluded"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"should not be seen"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"should not be seen"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|GetResponse
name|responseBeforeFlush
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"_source"
argument_list|,
literal|"included.field"
argument_list|,
literal|"excluded.field"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|isExists
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|not
argument_list|(
name|hasKey
argument_list|(
literal|"excluded"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|not
argument_list|(
name|hasKey
argument_list|(
literal|"field"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|hasKey
argument_list|(
literal|"included"
argument_list|)
argument_list|)
expr_stmt|;
comment|// now tests that extra source filtering works as expected
name|GetResponse
name|responseBeforeFlushWithExtraFilters
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"included.field"
argument_list|,
literal|"excluded.field"
argument_list|)
operator|.
name|setFetchSource
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"field"
block|,
literal|"*.field"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"*.field2"
block|}
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlushWithExtraFilters
operator|.
name|isExists
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlushWithExtraFilters
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|not
argument_list|(
name|hasKey
argument_list|(
literal|"excluded"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlushWithExtraFilters
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|not
argument_list|(
name|hasKey
argument_list|(
literal|"field"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlushWithExtraFilters
operator|.
name|getSourceAsMap
argument_list|()
argument_list|,
name|hasKey
argument_list|(
literal|"included"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|responseBeforeFlushWithExtraFilters
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"included"
argument_list|)
argument_list|,
name|hasKey
argument_list|(
literal|"field"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|responseBeforeFlushWithExtraFilters
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"included"
argument_list|)
argument_list|,
name|not
argument_list|(
name|hasKey
argument_list|(
literal|"field2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
name|GetResponse
name|responseAfterFlush
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"_source"
argument_list|,
literal|"included.field"
argument_list|,
literal|"excluded.field"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|GetResponse
name|responseAfterFlushWithExtraFilters
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"included.field"
argument_list|,
literal|"excluded.field"
argument_list|)
operator|.
name|setFetchSource
argument_list|(
literal|"*.field"
argument_list|,
literal|"*.field2"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|responseAfterFlush
operator|.
name|isExists
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlush
operator|.
name|getSourceAsString
argument_list|()
argument_list|,
name|is
argument_list|(
name|responseAfterFlush
operator|.
name|getSourceAsString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseAfterFlushWithExtraFilters
operator|.
name|isExists
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responseBeforeFlushWithExtraFilters
operator|.
name|getSourceAsString
argument_list|()
argument_list|,
name|is
argument_list|(
name|responseAfterFlushWithExtraFilters
operator|.
name|getSourceAsString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetWithVersion
specifier|public
name|void
name|testGetWithVersion
parameter_list|()
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> index doc 1"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|,
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
comment|// From translog:
comment|// version 0 means ignore version, which is the default
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|1
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|2
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|VersionConflictEngineException
name|e
parameter_list|)
block|{
comment|//all good
block|}
comment|// From Lucene index:
name|refresh
argument_list|()
expr_stmt|;
comment|// version 0 means ignore version, which is the default
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|0
argument_list|)
operator|.
name|setRealtime
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|1
argument_list|)
operator|.
name|setRealtime
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|2
argument_list|)
operator|.
name|setRealtime
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|VersionConflictEngineException
name|e
parameter_list|)
block|{
comment|//all good
block|}
name|logger
operator|.
name|info
argument_list|(
literal|"--> index doc 1 again, so increasing the version"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|,
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
comment|// From translog:
comment|// version 0 means ignore version, which is the default
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|1
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|VersionConflictEngineException
name|e
parameter_list|)
block|{
comment|//all good
block|}
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|2
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
comment|// From Lucene index:
name|refresh
argument_list|()
expr_stmt|;
comment|// version 0 means ignore version, which is the default
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|0
argument_list|)
operator|.
name|setRealtime
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|1
argument_list|)
operator|.
name|setRealtime
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|VersionConflictEngineException
name|e
parameter_list|)
block|{
comment|//all good
block|}
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setVersion
argument_list|(
literal|2
argument_list|)
operator|.
name|setRealtime
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultiGetWithVersion
specifier|public
name|void
name|testMultiGetWithVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|MultiGetResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareMultiGet
argument_list|()
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"value"
operator|+
name|i
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
comment|// Version from translog
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareMultiGet
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|version
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|version
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|version
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// [0] version doesn't matter, which is the default
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getFailure
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getFailure
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|,
name|startsWith
argument_list|(
literal|"VersionConflictEngineException"
argument_list|)
argument_list|)
expr_stmt|;
comment|//Version from Lucene index
name|refresh
argument_list|()
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareMultiGet
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|version
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|version
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|version
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|setRealtime
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// [0] version doesn't matter, which is the default
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getFailure
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getFailure
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|,
name|startsWith
argument_list|(
literal|"VersionConflictEngineException"
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"value"
operator|+
name|i
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
comment|// Version from translog
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareMultiGet
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|version
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|version
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|version
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// [0] version doesn't matter, which is the default
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getFailure
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getFailure
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|,
name|startsWith
argument_list|(
literal|"VersionConflictEngineException"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
comment|//Version from Lucene index
name|refresh
argument_list|()
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareMultiGet
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|version
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|version
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"type1"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|version
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|setRealtime
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// [0] version doesn't matter, which is the default
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getFailure
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|1
index|]
operator|.
name|getFailure
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|,
name|startsWith
argument_list|(
literal|"VersionConflictEngineException"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getFailure
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getResponses
argument_list|()
index|[
literal|2
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetFields_metaData
specifier|public
name|void
name|testGetFields_metaData
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"my-type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setRouting
argument_list|(
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|GetResponse
name|getResponse
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"my-type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setRouting
argument_list|(
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field1"
argument_list|,
literal|"_routing"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|isMetadataField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"_routing"
argument_list|)
operator|.
name|isMetadataField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"_routing"
argument_list|)
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"my-type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field1"
argument_list|,
literal|"_routing"
argument_list|)
operator|.
name|setRouting
argument_list|(
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|isMetadataField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"_routing"
argument_list|)
operator|.
name|isMetadataField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"_routing"
argument_list|)
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetFields_nonLeafField
specifier|public
name|void
name|testGetFields_nonLeafField
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"my-type1"
argument_list|,
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"my-type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"my-type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
try|try
block|{
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"my-type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ElasticsearchIllegalArgumentException
name|e
parameter_list|)
block|{
comment|//all well
block|}
name|flush
argument_list|()
expr_stmt|;
try|try
block|{
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"my-type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ElasticsearchIllegalArgumentException
name|e
parameter_list|)
block|{
comment|//all well
block|}
block|}
annotation|@
name|Test
annotation|@
name|TestLogging
argument_list|(
literal|"index.shard.service:TRACE,cluster.service:TRACE,action.admin.indices.flush:TRACE"
argument_list|)
DECL|method|testGetFields_complexField
specifier|public
name|void
name|testGetFields_complexField
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"my-index"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"my-type2"
argument_list|,
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"my-type2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"object"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"object"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field3"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"object"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field4"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"store"
argument_list|,
literal|"yes"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|BytesReference
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startArray
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"field3"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field4"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"field3"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field4"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"indexing documents"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"my-index"
argument_list|,
literal|"my-type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"my-index"
argument_list|,
literal|"my-type2"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"checking real time retrieval"
argument_list|)
expr_stmt|;
name|String
name|field
init|=
literal|"field1.field2.field3.field4"
decl_stmt|;
name|GetResponse
name|getResponse
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"my-index"
argument_list|,
literal|"my-type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
name|field
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|isMetadataField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"my-index"
argument_list|,
literal|"my-type2"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
name|field
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|isMetadataField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"waiting for recoveries to complete"
argument_list|)
expr_stmt|;
comment|// Flush fails if shard has ongoing recoveries, make sure the cluster is settled down
name|ensureGreen
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"flushing"
argument_list|)
expr_stmt|;
name|FlushResponse
name|flushResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareFlush
argument_list|(
literal|"my-index"
argument_list|)
operator|.
name|setForce
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
name|flushResponse
operator|.
name|getSuccessfulShards
argument_list|()
operator|==
literal|0
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"failed to flush at least one shard. total shards ["
argument_list|)
operator|.
name|append
argument_list|(
name|flushResponse
operator|.
name|getTotalShards
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"], failed shards: ["
argument_list|)
operator|.
name|append
argument_list|(
name|flushResponse
operator|.
name|getFailedShards
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
decl_stmt|;
for|for
control|(
name|ShardOperationFailedException
name|failure
range|:
name|flushResponse
operator|.
name|getShardFailures
argument_list|()
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"\nShard failure: "
argument_list|)
operator|.
name|append
argument_list|(
name|failure
argument_list|)
expr_stmt|;
block|}
name|fail
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|logger
operator|.
name|info
argument_list|(
literal|"checking post-flush retrieval"
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"my-index"
argument_list|,
literal|"my-type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
name|field
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|isMetadataField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
literal|"my-index"
argument_list|,
literal|"my-type2"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
name|field
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|isMetadataField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGet_allField
specifier|public
name|void
name|testGet_allField
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"my-type1"
argument_list|,
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"my-type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|field
argument_list|(
literal|"store"
argument_list|,
literal|true
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"some_field"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|index
argument_list|(
literal|"test"
argument_list|,
literal|"my-type1"
argument_list|,
literal|"1"
argument_list|,
literal|"some_field"
argument_list|,
literal|"some text"
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|GetResponse
name|getResponse
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"my-type1"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResponse
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"some text"
operator|+
literal|" "
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUngeneratedFieldsThatAreNeverStored
specifier|public
name|void
name|testUngeneratedFieldsThatAreNeverStored
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|createIndexSource
init|=
literal|"{\n"
operator|+
literal|"  \"settings\": {\n"
operator|+
literal|"    \"index.translog.disable_flush\": true,\n"
operator|+
literal|"    \"refresh_interval\": \"-1\"\n"
operator|+
literal|"  },\n"
operator|+
literal|"  \"mappings\": {\n"
operator|+
literal|"    \"doc\": {\n"
operator|+
literal|"      \"_source\": {\n"
operator|+
literal|"        \"enabled\": \""
operator|+
name|randomBoolean
argument_list|()
operator|+
literal|"\"\n"
operator|+
literal|"      },\n"
operator|+
literal|"      \"properties\": {\n"
operator|+
literal|"        \"suggest\": {\n"
operator|+
literal|"          \"type\": \"completion\"\n"
operator|+
literal|"        }\n"
operator|+
literal|"      }\n"
operator|+
literal|"    }\n"
operator|+
literal|"  }\n"
operator|+
literal|"}"
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
name|createIndexSource
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|String
name|doc
init|=
literal|"{\n"
operator|+
literal|"  \"suggest\": {\n"
operator|+
literal|"    \"input\": [\n"
operator|+
literal|"      \"Nevermind\",\n"
operator|+
literal|"      \"Nirvana\"\n"
operator|+
literal|"    ],\n"
operator|+
literal|"    \"output\": \"Nirvana - Nevermind\"\n"
operator|+
literal|"  }\n"
operator|+
literal|"}"
decl_stmt|;
name|index
argument_list|(
literal|"test"
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|doc
argument_list|)
expr_stmt|;
name|String
index|[]
name|fieldsList
init|=
block|{
literal|"suggest"
block|}
decl_stmt|;
comment|// before refresh - document is only in translog
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|//after refresh - document is in translog and also indexed
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
comment|//after flush - document is in not anymore translog - only indexed
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUngeneratedFieldsThatAreAlwaysStored
specifier|public
name|void
name|testUngeneratedFieldsThatAreAlwaysStored
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|storedString
init|=
name|randomBoolean
argument_list|()
condition|?
literal|"yes"
else|:
literal|"no"
decl_stmt|;
name|String
name|createIndexSource
init|=
literal|"{\n"
operator|+
literal|"  \"settings\": {\n"
operator|+
literal|"    \"index.translog.disable_flush\": true,\n"
operator|+
literal|"    \"refresh_interval\": \"-1\"\n"
operator|+
literal|"  },\n"
operator|+
literal|"  \"mappings\": {\n"
operator|+
literal|"    \"parentdoc\": {},\n"
operator|+
literal|"    \"doc\": {\n"
operator|+
literal|"      \"_source\": {\n"
operator|+
literal|"        \"enabled\": "
operator|+
name|randomBoolean
argument_list|()
operator|+
literal|"\n"
operator|+
literal|"      },\n"
operator|+
literal|"      \"_parent\": {\n"
operator|+
literal|"        \"type\": \"parentdoc\"\n"
operator|+
literal|"      },\n"
operator|+
literal|"      \"_ttl\": {\n"
operator|+
literal|"        \"enabled\": true,\n"
operator|+
literal|"        \"store\": \""
operator|+
name|storedString
operator|+
literal|"\"\n"
operator|+
literal|"      }\n"
operator|+
literal|"    }\n"
operator|+
literal|"  }\n"
operator|+
literal|"}"
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
name|createIndexSource
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|String
name|doc
init|=
literal|"{\n"
operator|+
literal|"  \"_ttl\": \"1h\"\n"
operator|+
literal|"}"
decl_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"doc"
argument_list|)
operator|.
name|setId
argument_list|(
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|doc
argument_list|)
operator|.
name|setParent
argument_list|(
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|String
index|[]
name|fieldsList
init|=
block|{
literal|"_ttl"
block|,
literal|"_parent"
block|}
decl_stmt|;
comment|// before refresh - document is only in translog
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|//after refresh - document is in translog and also indexed
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
comment|//after flush - document is in not anymore translog - only indexed
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUngeneratedFieldsPartOfSourceUnstoredSourceDisabled
specifier|public
name|void
name|testUngeneratedFieldsPartOfSourceUnstoredSourceDisabled
parameter_list|()
throws|throws
name|IOException
block|{
name|indexSingleDocumentWithUngeneratedFieldsThatArePartOf_source
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|String
index|[]
name|fieldsList
init|=
block|{
literal|"my_boost"
block|}
decl_stmt|;
comment|// before refresh - document is only in translog
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|//after refresh - document is in translog and also indexed
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
comment|//after flush - document is in not anymore translog - only indexed
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUngeneratedFieldsPartOfSourceEitherStoredOrSourceEnabled
specifier|public
name|void
name|testUngeneratedFieldsPartOfSourceEitherStoredOrSourceEnabled
parameter_list|()
throws|throws
name|IOException
block|{
name|boolean
name|stored
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
name|boolean
name|sourceEnabled
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|stored
condition|)
block|{
name|sourceEnabled
operator|=
name|randomBoolean
argument_list|()
expr_stmt|;
block|}
name|indexSingleDocumentWithUngeneratedFieldsThatArePartOf_source
argument_list|(
name|stored
argument_list|,
name|sourceEnabled
argument_list|)
expr_stmt|;
name|String
index|[]
name|fieldsList
init|=
block|{
literal|"my_boost"
block|}
decl_stmt|;
comment|// before refresh - document is only in translog
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|//after refresh - document is in translog and also indexed
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
comment|//after flush - document is in not anymore translog - only indexed
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
block|}
DECL|method|indexSingleDocumentWithUngeneratedFieldsThatArePartOf_source
name|void
name|indexSingleDocumentWithUngeneratedFieldsThatArePartOf_source
parameter_list|(
name|boolean
name|stored
parameter_list|,
name|boolean
name|sourceEnabled
parameter_list|)
block|{
name|String
name|storedString
init|=
name|stored
condition|?
literal|"yes"
else|:
literal|"no"
decl_stmt|;
name|String
name|createIndexSource
init|=
literal|"{\n"
operator|+
literal|"  \"settings\": {\n"
operator|+
literal|"    \"index.translog.disable_flush\": true,\n"
operator|+
literal|"    \"refresh_interval\": \"-1\"\n"
operator|+
literal|"  },\n"
operator|+
literal|"  \"mappings\": {\n"
operator|+
literal|"    \"doc\": {\n"
operator|+
literal|"      \"_source\": {\n"
operator|+
literal|"        \"enabled\": "
operator|+
name|sourceEnabled
operator|+
literal|"\n"
operator|+
literal|"      },\n"
operator|+
literal|"      \"_boost\": {\n"
operator|+
literal|"        \"name\": \"my_boost\",\n"
operator|+
literal|"        \"null_value\": 1,\n"
operator|+
literal|"        \"store\": \""
operator|+
name|storedString
operator|+
literal|"\"\n"
operator|+
literal|"      }\n"
operator|+
literal|"    }\n"
operator|+
literal|"  }\n"
operator|+
literal|"}"
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
name|createIndexSource
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|String
name|doc
init|=
literal|"{\n"
operator|+
literal|"  \"my_boost\": 5.0,\n"
operator|+
literal|"  \"_ttl\": \"1h\"\n"
operator|+
literal|"}\n"
decl_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"doc"
argument_list|)
operator|.
name|setId
argument_list|(
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|doc
argument_list|)
operator|.
name|setRouting
argument_list|(
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUngeneratedFieldsNotPartOfSourceUnstored
specifier|public
name|void
name|testUngeneratedFieldsNotPartOfSourceUnstored
parameter_list|()
throws|throws
name|IOException
block|{
name|indexSingleDocumentWithUngeneratedFieldsThatAreNeverPartOf_source
argument_list|(
literal|false
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|fieldsList
init|=
block|{
literal|"_timestamp"
block|,
literal|"_size"
block|,
literal|"_routing"
block|}
decl_stmt|;
comment|// before refresh - document is only in translog
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|//after refresh - document is in translog and also indexed
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
comment|//after flush - document is in not anymore translog - only indexed
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUngeneratedFieldsNotPartOfSourceStored
specifier|public
name|void
name|testUngeneratedFieldsNotPartOfSourceStored
parameter_list|()
throws|throws
name|IOException
block|{
name|indexSingleDocumentWithUngeneratedFieldsThatAreNeverPartOf_source
argument_list|(
literal|true
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|fieldsList
init|=
block|{
literal|"_timestamp"
block|,
literal|"_size"
block|,
literal|"_routing"
block|}
decl_stmt|;
comment|// before refresh - document is only in translog
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|//after refresh - document is in translog and also indexed
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
comment|//after flush - document is in not anymore translog - only indexed
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
block|}
DECL|method|indexSingleDocumentWithUngeneratedFieldsThatAreNeverPartOf_source
name|void
name|indexSingleDocumentWithUngeneratedFieldsThatAreNeverPartOf_source
parameter_list|(
name|boolean
name|stored
parameter_list|,
name|boolean
name|sourceEnabled
parameter_list|)
block|{
name|String
name|storedString
init|=
name|stored
condition|?
literal|"yes"
else|:
literal|"no"
decl_stmt|;
name|String
name|createIndexSource
init|=
literal|"{\n"
operator|+
literal|"  \"settings\": {\n"
operator|+
literal|"    \"index.translog.disable_flush\": true,\n"
operator|+
literal|"    \"refresh_interval\": \"-1\"\n"
operator|+
literal|"  },\n"
operator|+
literal|"  \"mappings\": {\n"
operator|+
literal|"    \"parentdoc\": {},\n"
operator|+
literal|"    \"doc\": {\n"
operator|+
literal|"      \"_timestamp\": {\n"
operator|+
literal|"        \"store\": \""
operator|+
name|storedString
operator|+
literal|"\",\n"
operator|+
literal|"        \"enabled\": true\n"
operator|+
literal|"      },\n"
operator|+
literal|"      \"_routing\": {\n"
operator|+
literal|"        \"store\": \""
operator|+
name|storedString
operator|+
literal|"\"\n"
operator|+
literal|"      },\n"
operator|+
literal|"      \"_size\": {\n"
operator|+
literal|"        \"store\": \""
operator|+
name|storedString
operator|+
literal|"\",\n"
operator|+
literal|"        \"enabled\": true\n"
operator|+
literal|"      }\n"
operator|+
literal|"    }\n"
operator|+
literal|"  }\n"
operator|+
literal|"}"
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
name|createIndexSource
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|String
name|doc
init|=
literal|"{\n"
operator|+
literal|"  \"text\": \"some text.\"\n"
operator|+
literal|"}\n"
decl_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"doc"
argument_list|)
operator|.
name|setId
argument_list|(
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|doc
argument_list|)
operator|.
name|setRouting
argument_list|(
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGeneratedStringFieldsUnstored
specifier|public
name|void
name|testGeneratedStringFieldsUnstored
parameter_list|()
throws|throws
name|IOException
block|{
name|indexSingleDocumentWithStringFieldsGeneratedFromText
argument_list|(
literal|false
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|fieldsList
init|=
block|{
literal|"_all"
block|,
literal|"_field_names"
block|}
decl_stmt|;
comment|// before refresh - document is only in translog
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|//after refresh - document is in translog and also indexed
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
comment|//after flush - document is in not anymore translog - only indexed
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGeneratedStringFieldsStored
specifier|public
name|void
name|testGeneratedStringFieldsStored
parameter_list|()
throws|throws
name|IOException
block|{
name|indexSingleDocumentWithStringFieldsGeneratedFromText
argument_list|(
literal|true
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|fieldsList
init|=
block|{
literal|"_all"
block|,
literal|"_field_names"
block|}
decl_stmt|;
comment|// before refresh - document is only in translog
name|assertGetFieldsNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|assertGetFieldsException
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|//after refresh - document is in translog and also indexed
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
comment|//after flush - document is in not anymore translog - only indexed
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
block|}
DECL|method|indexSingleDocumentWithStringFieldsGeneratedFromText
name|void
name|indexSingleDocumentWithStringFieldsGeneratedFromText
parameter_list|(
name|boolean
name|stored
parameter_list|,
name|boolean
name|sourceEnabled
parameter_list|)
block|{
name|String
name|storedString
init|=
name|stored
condition|?
literal|"yes"
else|:
literal|"no"
decl_stmt|;
name|String
name|createIndexSource
init|=
literal|"{\n"
operator|+
literal|"  \"settings\": {\n"
operator|+
literal|"    \"index.translog.disable_flush\": true,\n"
operator|+
literal|"    \"refresh_interval\": \"-1\"\n"
operator|+
literal|"  },\n"
operator|+
literal|"  \"mappings\": {\n"
operator|+
literal|"    \"doc\": {\n"
operator|+
literal|"      \"_source\" : {\"enabled\" : "
operator|+
name|sourceEnabled
operator|+
literal|"},"
operator|+
literal|"      \"_all\" : {\"enabled\" : true, \"store\":\""
operator|+
name|storedString
operator|+
literal|"\" },"
operator|+
literal|"      \"_field_names\" : {\"store\":\""
operator|+
name|storedString
operator|+
literal|"\" }"
operator|+
literal|"    }\n"
operator|+
literal|"  }\n"
operator|+
literal|"}"
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
name|createIndexSource
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|String
name|doc
init|=
literal|"{\n"
operator|+
literal|"  \"text1\": \"some text.\"\n,"
operator|+
literal|"  \"text2\": \"more text.\"\n"
operator|+
literal|"}\n"
decl_stmt|;
name|index
argument_list|(
literal|"test"
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|doc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGeneratedNumberFieldsUnstored
specifier|public
name|void
name|testGeneratedNumberFieldsUnstored
parameter_list|()
throws|throws
name|IOException
block|{
name|indexSingleDocumentWithNumericFieldsGeneratedFromText
argument_list|(
literal|false
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|fieldsList
init|=
block|{
literal|"token_count"
block|,
literal|"text.token_count"
block|,
literal|"murmur"
block|,
literal|"text.murmur"
block|}
decl_stmt|;
comment|// before refresh - document is only in translog
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|//after refresh - document is in translog and also indexed
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
comment|//after flush - document is in not anymore translog - only indexed
name|assertGetFieldsAlwaysNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGeneratedNumberFieldsStored
specifier|public
name|void
name|testGeneratedNumberFieldsStored
parameter_list|()
throws|throws
name|IOException
block|{
name|indexSingleDocumentWithNumericFieldsGeneratedFromText
argument_list|(
literal|true
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|fieldsList
init|=
block|{
literal|"token_count"
block|,
literal|"text.token_count"
block|,
literal|"murmur"
block|,
literal|"text.murmur"
block|}
decl_stmt|;
comment|// before refresh - document is only in translog
name|assertGetFieldsNull
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|assertGetFieldsException
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|//after refresh - document is in translog and also indexed
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
comment|//after flush - document is in not anymore translog - only indexed
name|assertGetFieldsAlwaysWorks
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|fieldsList
argument_list|)
expr_stmt|;
block|}
DECL|method|indexSingleDocumentWithNumericFieldsGeneratedFromText
name|void
name|indexSingleDocumentWithNumericFieldsGeneratedFromText
parameter_list|(
name|boolean
name|stored
parameter_list|,
name|boolean
name|sourceEnabled
parameter_list|)
block|{
name|String
name|storedString
init|=
name|stored
condition|?
literal|"yes"
else|:
literal|"no"
decl_stmt|;
name|String
name|createIndexSource
init|=
literal|"{\n"
operator|+
literal|"  \"settings\": {\n"
operator|+
literal|"    \"index.translog.disable_flush\": true,\n"
operator|+
literal|"    \"refresh_interval\": \"-1\"\n"
operator|+
literal|"  },\n"
operator|+
literal|"  \"mappings\": {\n"
operator|+
literal|"    \"doc\": {\n"
operator|+
literal|"      \"_source\" : {\"enabled\" : "
operator|+
name|sourceEnabled
operator|+
literal|"},"
operator|+
literal|"      \"properties\": {\n"
operator|+
literal|"        \"token_count\": {\n"
operator|+
literal|"          \"type\": \"token_count\",\n"
operator|+
literal|"          \"analyzer\": \"standard\",\n"
operator|+
literal|"          \"store\": \""
operator|+
name|storedString
operator|+
literal|"\""
operator|+
literal|"        },\n"
operator|+
literal|"        \"murmur\": {\n"
operator|+
literal|"          \"type\": \"murmur3\",\n"
operator|+
literal|"          \"store\": \""
operator|+
name|storedString
operator|+
literal|"\""
operator|+
literal|"        },\n"
operator|+
literal|"        \"text\": {\n"
operator|+
literal|"          \"type\": \"string\",\n"
operator|+
literal|"          \"fields\": {\n"
operator|+
literal|"            \"token_count\": {\n"
operator|+
literal|"              \"type\": \"token_count\",\n"
operator|+
literal|"              \"analyzer\": \"standard\",\n"
operator|+
literal|"              \"store\": \""
operator|+
name|storedString
operator|+
literal|"\""
operator|+
literal|"            },\n"
operator|+
literal|"            \"murmur\": {\n"
operator|+
literal|"              \"type\": \"murmur3\",\n"
operator|+
literal|"              \"store\": \""
operator|+
name|storedString
operator|+
literal|"\""
operator|+
literal|"            }\n"
operator|+
literal|"          }\n"
operator|+
literal|"        }"
operator|+
literal|"      }\n"
operator|+
literal|"    }\n"
operator|+
literal|"  }\n"
operator|+
literal|"}"
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
name|createIndexSource
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|String
name|doc
init|=
literal|"{\n"
operator|+
literal|"  \"murmur\": \"Some value that can be hashed\",\n"
operator|+
literal|"  \"token_count\": \"A text with five words.\",\n"
operator|+
literal|"  \"text\": \"A text with five words.\"\n"
operator|+
literal|"}\n"
decl_stmt|;
name|index
argument_list|(
literal|"test"
argument_list|,
literal|"doc"
argument_list|,
literal|"1"
argument_list|,
name|doc
argument_list|)
expr_stmt|;
block|}
DECL|method|assertGetFieldsAlwaysWorks
specifier|private
name|void
name|assertGetFieldsAlwaysWorks
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
index|[]
name|fields
parameter_list|)
block|{
name|assertGetFieldsAlwaysWorks
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|fields
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|assertGetFieldsAlwaysWorks
specifier|private
name|void
name|assertGetFieldsAlwaysWorks
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
index|[]
name|fields
parameter_list|,
annotation|@
name|Nullable
name|String
name|routing
parameter_list|)
block|{
for|for
control|(
name|String
name|field
range|:
name|fields
control|)
block|{
name|assertGetFieldWorks
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|field
argument_list|,
literal|false
argument_list|,
name|routing
argument_list|)
expr_stmt|;
name|assertGetFieldWorks
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|field
argument_list|,
literal|true
argument_list|,
name|routing
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|assertGetFieldWorks
specifier|private
name|void
name|assertGetFieldWorks
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
name|field
parameter_list|,
name|boolean
name|ignoreErrors
parameter_list|,
annotation|@
name|Nullable
name|String
name|routing
parameter_list|)
block|{
name|GetResponse
name|response
init|=
name|getDocument
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|field
argument_list|,
name|ignoreErrors
argument_list|,
name|routing
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|docId
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|response
operator|.
name|getField
argument_list|(
name|field
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|multiGetDocument
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|field
argument_list|,
name|ignoreErrors
argument_list|,
name|routing
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|docId
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|response
operator|.
name|getField
argument_list|(
name|field
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|assertGetFieldsException
specifier|protected
name|void
name|assertGetFieldsException
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
index|[]
name|fields
parameter_list|)
block|{
for|for
control|(
name|String
name|field
range|:
name|fields
control|)
block|{
name|assertGetFieldException
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|field
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|assertGetFieldException
specifier|private
name|void
name|assertGetFieldException
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
name|field
parameter_list|)
block|{
try|try
block|{
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|()
operator|.
name|setIndex
argument_list|(
name|index
argument_list|)
operator|.
name|setType
argument_list|(
name|type
argument_list|)
operator|.
name|setId
argument_list|(
name|docId
argument_list|)
operator|.
name|setFields
argument_list|(
name|field
argument_list|)
operator|.
name|setIgnoreErrorsOnGeneratedFields
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ElasticsearchException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"You can only get this field after refresh() has been called."
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|MultiGetResponse
name|multiGetResponse
init|=
name|client
argument_list|()
operator|.
name|prepareMultiGet
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|)
operator|.
name|fields
argument_list|(
name|field
argument_list|)
argument_list|)
operator|.
name|setIgnoreErrorsOnGeneratedFields
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|multiGetResponse
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|multiGetResponse
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getFailure
argument_list|()
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"You can only get this field after refresh() has been called."
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|assertGetFieldsNull
specifier|protected
name|void
name|assertGetFieldsNull
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
index|[]
name|fields
parameter_list|)
block|{
name|assertGetFieldsNull
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|fields
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|assertGetFieldsNull
specifier|protected
name|void
name|assertGetFieldsNull
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
index|[]
name|fields
parameter_list|,
annotation|@
name|Nullable
name|String
name|routing
parameter_list|)
block|{
for|for
control|(
name|String
name|field
range|:
name|fields
control|)
block|{
name|assertGetFieldNull
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|field
argument_list|,
literal|true
argument_list|,
name|routing
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|assertGetFieldsAlwaysNull
specifier|protected
name|void
name|assertGetFieldsAlwaysNull
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
index|[]
name|fields
parameter_list|)
block|{
name|assertGetFieldsAlwaysNull
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|fields
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|assertGetFieldsAlwaysNull
specifier|protected
name|void
name|assertGetFieldsAlwaysNull
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
index|[]
name|fields
parameter_list|,
annotation|@
name|Nullable
name|String
name|routing
parameter_list|)
block|{
for|for
control|(
name|String
name|field
range|:
name|fields
control|)
block|{
name|assertGetFieldNull
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|field
argument_list|,
literal|true
argument_list|,
name|routing
argument_list|)
expr_stmt|;
name|assertGetFieldNull
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|field
argument_list|,
literal|false
argument_list|,
name|routing
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|assertGetFieldNull
specifier|protected
name|void
name|assertGetFieldNull
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
name|field
parameter_list|,
name|boolean
name|ignoreErrors
parameter_list|,
annotation|@
name|Nullable
name|String
name|routing
parameter_list|)
block|{
comment|//for get
name|GetResponse
name|response
init|=
name|getDocument
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|field
argument_list|,
name|ignoreErrors
argument_list|,
name|routing
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|response
operator|.
name|getField
argument_list|(
name|field
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|docId
argument_list|)
argument_list|)
expr_stmt|;
comment|//same for multi get
name|response
operator|=
name|multiGetDocument
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|,
name|field
argument_list|,
name|ignoreErrors
argument_list|,
name|routing
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|response
operator|.
name|getField
argument_list|(
name|field
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|docId
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|response
operator|.
name|isExists
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|multiGetDocument
specifier|private
name|GetResponse
name|multiGetDocument
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
name|field
parameter_list|,
name|boolean
name|ignoreErrors
parameter_list|,
annotation|@
name|Nullable
name|String
name|routing
parameter_list|)
block|{
name|MultiGetRequest
operator|.
name|Item
name|getItem
init|=
operator|new
name|MultiGetRequest
operator|.
name|Item
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|docId
argument_list|)
operator|.
name|fields
argument_list|(
name|field
argument_list|)
decl_stmt|;
if|if
condition|(
name|routing
operator|!=
literal|null
condition|)
block|{
name|getItem
operator|.
name|routing
argument_list|(
name|routing
argument_list|)
expr_stmt|;
block|}
name|MultiGetRequestBuilder
name|multiGetRequestBuilder
init|=
name|client
argument_list|()
operator|.
name|prepareMultiGet
argument_list|()
operator|.
name|add
argument_list|(
name|getItem
argument_list|)
operator|.
name|setIgnoreErrorsOnGeneratedFields
argument_list|(
name|ignoreErrors
argument_list|)
decl_stmt|;
name|MultiGetResponse
name|multiGetResponse
init|=
name|multiGetRequestBuilder
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|multiGetResponse
operator|.
name|getResponses
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|multiGetResponse
operator|.
name|getResponses
argument_list|()
index|[
literal|0
index|]
operator|.
name|getResponse
argument_list|()
return|;
block|}
DECL|method|getDocument
specifier|private
name|GetResponse
name|getDocument
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docId
parameter_list|,
name|String
name|field
parameter_list|,
name|boolean
name|ignoreErrors
parameter_list|,
annotation|@
name|Nullable
name|String
name|routing
parameter_list|)
block|{
name|GetRequestBuilder
name|getRequestBuilder
init|=
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|()
operator|.
name|setIndex
argument_list|(
name|index
argument_list|)
operator|.
name|setType
argument_list|(
name|type
argument_list|)
operator|.
name|setId
argument_list|(
name|docId
argument_list|)
operator|.
name|setFields
argument_list|(
name|field
argument_list|)
operator|.
name|setIgnoreErrorsOnGeneratedFields
argument_list|(
name|ignoreErrors
argument_list|)
decl_stmt|;
if|if
condition|(
name|routing
operator|!=
literal|null
condition|)
block|{
name|getRequestBuilder
operator|.
name|setRouting
argument_list|(
name|routing
argument_list|)
expr_stmt|;
block|}
return|return
name|getRequestBuilder
operator|.
name|get
argument_list|()
return|;
block|}
block|}
end_class

end_unit

