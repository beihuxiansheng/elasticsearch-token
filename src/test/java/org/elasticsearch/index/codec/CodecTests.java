begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.codec
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|codec
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|PostingsFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|bloom
operator|.
name|BloomFilteringPostingsFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene40
operator|.
name|Lucene40Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene41
operator|.
name|Lucene41Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene41
operator|.
name|Lucene41PostingsFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene410
operator|.
name|Lucene410Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene410
operator|.
name|Lucene410DocValuesFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene42
operator|.
name|Lucene42Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene45
operator|.
name|Lucene45Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene46
operator|.
name|Lucene46Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene49
operator|.
name|Lucene49Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene50
operator|.
name|Lucene50Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene50
operator|.
name|Lucene50DocValuesFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene50
operator|.
name|Lucene50StoredFieldsFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene50
operator|.
name|Lucene50StoredFieldsFormat
operator|.
name|Mode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|perfield
operator|.
name|PerFieldPostingsFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriterConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|Lucene
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|codec
operator|.
name|docvaluesformat
operator|.
name|DefaultDocValuesFormatProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|codec
operator|.
name|docvaluesformat
operator|.
name|DocValuesFormatService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|codec
operator|.
name|docvaluesformat
operator|.
name|PreBuiltDocValuesFormatProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|codec
operator|.
name|postingsformat
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|DocumentMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|UidFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|VersionFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchSingleNodeLuceneTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|instanceOf
import|;
end_import

begin_class
DECL|class|CodecTests
specifier|public
class|class
name|CodecTests
extends|extends
name|ElasticsearchSingleNodeLuceneTestCase
block|{
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|forceDefaultCodec
argument_list|()
expr_stmt|;
comment|// we test against default codec so never get a random one here!
block|}
annotation|@
name|Test
DECL|method|testResolveDefaultCodecs
specifier|public
name|void
name|testResolveDefaultCodecs
parameter_list|()
throws|throws
name|Exception
block|{
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"default"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PerFieldMappingPostingFormatCodec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"default"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene50Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene410"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene410Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene49"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene49Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene46"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene46Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene45"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene45Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene40"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene40Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene41"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene41Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene42"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene42Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolveDefaultPostingFormats
specifier|public
name|void
name|testResolveDefaultPostingFormats
parameter_list|()
throws|throws
name|Exception
block|{
name|PostingsFormatService
name|postingsFormatService
init|=
name|createCodecService
argument_list|()
operator|.
name|postingsFormatService
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"default"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|PostingsFormat
name|luceneDefault
init|=
name|PostingsFormat
operator|.
name|forName
argument_list|(
name|Lucene
operator|.
name|LATEST_POSTINGS_FORMAT
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"default"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|luceneDefault
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Should fail when upgrading Lucene with codec changes
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"Lucene41"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Should fail when upgrading Lucene with codec changes
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"Lucene50"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
operator|(
operator|(
name|PerFieldPostingsFormat
operator|)
name|Codec
operator|.
name|getDefault
argument_list|()
operator|.
name|postingsFormat
argument_list|()
operator|)
operator|.
name|getPostingsFormatForField
argument_list|(
literal|null
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"BloomFilter"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"BloomFilter"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilteringPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolveDefaultDocValuesFormats
specifier|public
name|void
name|testResolveDefaultDocValuesFormats
parameter_list|()
throws|throws
name|Exception
block|{
name|DocValuesFormatService
name|docValuesFormatService
init|=
name|createCodecService
argument_list|()
operator|.
name|docValuesFormatService
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|dvf
range|:
name|Arrays
operator|.
name|asList
argument_list|(
literal|"default"
argument_list|)
control|)
block|{
name|assertThat
argument_list|(
name|docValuesFormatService
operator|.
name|get
argument_list|(
name|dvf
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|docValuesFormatService
operator|.
name|get
argument_list|(
literal|"default"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Lucene50DocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolvePostingFormatsFromMapping_default
specifier|public
name|void
name|testResolvePostingFormatsFromMapping_default
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"default"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"my_format1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Settings
name|indexSettings
init|=
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.type"
argument_list|,
literal|"default"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.min_block_size"
argument_list|,
literal|16
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.max_block_size"
argument_list|,
literal|64
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|(
name|indexSettings
argument_list|)
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|PostingsFormat
name|luceneDefault
init|=
name|PostingsFormat
operator|.
name|forName
argument_list|(
name|Lucene
operator|.
name|LATEST_POSTINGS_FORMAT
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|luceneDefault
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DefaultPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|DefaultPostingsFormatProvider
name|provider
init|=
operator|(
name|DefaultPostingsFormatProvider
operator|)
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|minBlockSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|maxBlockSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|64
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testChangeUidPostingsFormat
specifier|public
name|void
name|testChangeUidPostingsFormat
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_uid"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"Lucene41"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|()
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|UidFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|UidFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|postingsFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Lucene41PostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolveDocValuesFormatsFromMapping_default
specifier|public
name|void
name|testResolveDocValuesFormatsFromMapping_default
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"integer"
argument_list|)
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"default"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"double"
argument_list|)
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"my_format1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Settings
name|indexSettings
init|=
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.codec.doc_values_format.my_format1.type"
argument_list|,
literal|"default"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|(
name|indexSettings
argument_list|)
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Lucene50DocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DefaultDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testChangeVersionFormat
specifier|public
name|void
name|testChangeVersionFormat
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_version"
argument_list|)
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"Lucene410"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|()
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|VersionFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|VersionFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|docValuesFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Lucene410DocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDefault
specifier|public
name|void
name|testDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|Codec
name|codec
init|=
name|createCodecService
argument_list|()
operator|.
name|codec
argument_list|(
literal|"default"
argument_list|)
decl_stmt|;
name|assertCompressionEquals
argument_list|(
name|Mode
operator|.
name|BEST_SPEED
argument_list|,
name|codec
argument_list|)
expr_stmt|;
block|}
DECL|method|testBestCompression
specifier|public
name|void
name|testBestCompression
parameter_list|()
throws|throws
name|Exception
block|{
name|Codec
name|codec
init|=
name|createCodecService
argument_list|()
operator|.
name|codec
argument_list|(
literal|"best_compression"
argument_list|)
decl_stmt|;
name|assertCompressionEquals
argument_list|(
name|Mode
operator|.
name|BEST_COMPRESSION
argument_list|,
name|codec
argument_list|)
expr_stmt|;
block|}
comment|// write some docs with it, inspect .si to see this was the used compression
DECL|method|assertCompressionEquals
specifier|private
name|void
name|assertCompressionEquals
parameter_list|(
name|Mode
name|expected
parameter_list|,
name|Codec
name|actual
parameter_list|)
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|iwc
init|=
name|newIndexWriterConfig
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|iwc
operator|.
name|setCodec
argument_list|(
name|actual
argument_list|)
expr_stmt|;
name|IndexWriter
name|iw
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|iwc
argument_list|)
decl_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
operator|new
name|Document
argument_list|()
argument_list|)
expr_stmt|;
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|ir
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|SegmentReader
name|sr
init|=
operator|(
name|SegmentReader
operator|)
name|ir
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
decl_stmt|;
name|String
name|v
init|=
name|sr
operator|.
name|getSegmentInfo
argument_list|()
operator|.
name|info
operator|.
name|getAttribute
argument_list|(
name|Lucene50StoredFieldsFormat
operator|.
name|MODE_KEY
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|v
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|Mode
operator|.
name|valueOf
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
name|ir
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|createCodecService
specifier|private
specifier|static
name|CodecService
name|createCodecService
parameter_list|()
block|{
return|return
name|createCodecService
argument_list|(
name|ImmutableSettings
operator|.
name|Builder
operator|.
name|EMPTY_SETTINGS
argument_list|)
return|;
block|}
DECL|method|createCodecService
specifier|private
specifier|static
name|CodecService
name|createCodecService
parameter_list|(
name|Settings
name|settings
parameter_list|)
block|{
name|IndexService
name|indexService
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|,
name|settings
argument_list|)
decl_stmt|;
return|return
name|indexService
operator|.
name|injector
argument_list|()
operator|.
name|getInstance
argument_list|(
name|CodecService
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

