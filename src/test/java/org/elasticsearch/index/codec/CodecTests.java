begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.codec
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|codec
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|bloom
operator|.
name|BloomFilteringPostingsFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|diskdv
operator|.
name|DiskDocValuesFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene40
operator|.
name|Lucene40Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene41
operator|.
name|Lucene41Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene42
operator|.
name|Lucene42Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene45
operator|.
name|Lucene45Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene45
operator|.
name|Lucene45DocValuesFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene46
operator|.
name|Lucene46Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|memory
operator|.
name|DirectPostingsFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|memory
operator|.
name|MemoryDocValuesFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|memory
operator|.
name|MemoryPostingsFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|perfield
operator|.
name|PerFieldPostingsFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|pulsing
operator|.
name|Pulsing41PostingsFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|simpletext
operator|.
name|SimpleTextCodec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Injector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|ModulesBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|SettingsModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexNameModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
operator|.
name|AnalysisModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|codec
operator|.
name|docvaluesformat
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|codec
operator|.
name|postingsformat
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|DocumentMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MapperServiceModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|IdFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|UidFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|VersionFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|settings
operator|.
name|IndexSettingsModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|similarity
operator|.
name|SimilarityModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|fielddata
operator|.
name|breaker
operator|.
name|CircuitBreakerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|fielddata
operator|.
name|breaker
operator|.
name|DummyCircuitBreakerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchLuceneTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|instanceOf
import|;
end_import

begin_class
DECL|class|CodecTests
specifier|public
class|class
name|CodecTests
extends|extends
name|ElasticsearchLuceneTestCase
block|{
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|forceDefaultCodec
argument_list|()
expr_stmt|;
comment|// we test against default codec so never get a random one here!
block|}
annotation|@
name|Test
DECL|method|testResolveDefaultCodecs
specifier|public
name|void
name|testResolveDefaultCodecs
parameter_list|()
throws|throws
name|Exception
block|{
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"default"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PerFieldMappingPostingFormatCodec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"default"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene46Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene46"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene46Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene45"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene45Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene40"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene40Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene41"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene41Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"Lucene42"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Lucene42Codec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|codecService
operator|.
name|codec
argument_list|(
literal|"SimpleText"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|SimpleTextCodec
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolveDefaultPostingFormats
specifier|public
name|void
name|testResolveDefaultPostingFormats
parameter_list|()
throws|throws
name|Exception
block|{
name|PostingsFormatService
name|postingsFormatService
init|=
name|createCodecService
argument_list|()
operator|.
name|postingsFormatService
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"default"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"default"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Elasticsearch090PostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Should fail when upgrading Lucene with codec changes
name|assertThat
argument_list|(
operator|(
operator|(
name|Elasticsearch090PostingsFormat
operator|)
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"default"
argument_list|)
operator|.
name|get
argument_list|()
operator|)
operator|.
name|getDefaultWrapped
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
operator|(
operator|(
name|PerFieldPostingsFormat
operator|)
name|Codec
operator|.
name|getDefault
argument_list|()
operator|.
name|postingsFormat
argument_list|()
operator|)
operator|.
name|getPostingsFormatForField
argument_list|(
literal|""
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"Lucene41"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Should fail when upgrading Lucene with codec changes
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"Lucene41"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
operator|(
operator|(
name|PerFieldPostingsFormat
operator|)
name|Codec
operator|.
name|getDefault
argument_list|()
operator|.
name|postingsFormat
argument_list|()
operator|)
operator|.
name|getPostingsFormatForField
argument_list|(
literal|null
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"bloom_default"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|PostingFormats
operator|.
name|luceneBloomFilter
condition|)
block|{
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"bloom_default"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilteringPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"bloom_default"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilterPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"BloomFilter"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"BloomFilter"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilteringPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"XBloomFilter"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"XBloomFilter"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilterPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|PostingFormats
operator|.
name|luceneBloomFilter
condition|)
block|{
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"bloom_pulsing"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilteringPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"bloom_pulsing"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilterPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"pulsing"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"pulsing"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Pulsing41PostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"Pulsing41"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"Pulsing41"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Pulsing41PostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"memory"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"memory"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|MemoryPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"Memory"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"Memory"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|MemoryPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"direct"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"direct"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DirectPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"Direct"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|postingsFormatService
operator|.
name|get
argument_list|(
literal|"Direct"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DirectPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolveDefaultDocValuesFormats
specifier|public
name|void
name|testResolveDefaultDocValuesFormats
parameter_list|()
throws|throws
name|Exception
block|{
name|DocValuesFormatService
name|docValuesFormatService
init|=
name|createCodecService
argument_list|()
operator|.
name|docValuesFormatService
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|dvf
range|:
name|Arrays
operator|.
name|asList
argument_list|(
literal|"memory"
argument_list|,
literal|"disk"
argument_list|,
literal|"Disk"
argument_list|,
literal|"default"
argument_list|)
control|)
block|{
name|assertThat
argument_list|(
name|docValuesFormatService
operator|.
name|get
argument_list|(
name|dvf
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|docValuesFormatService
operator|.
name|get
argument_list|(
literal|"memory"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|MemoryDocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|docValuesFormatService
operator|.
name|get
argument_list|(
literal|"disk"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DiskDocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|docValuesFormatService
operator|.
name|get
argument_list|(
literal|"Disk"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DiskDocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|docValuesFormatService
operator|.
name|get
argument_list|(
literal|"default"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Lucene45DocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolvePostingFormatsFromMapping_default
specifier|public
name|void
name|testResolvePostingFormatsFromMapping_default
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"default"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"my_format1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Settings
name|indexSettings
init|=
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.type"
argument_list|,
literal|"default"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.min_block_size"
argument_list|,
literal|16
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.max_block_size"
argument_list|,
literal|64
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|(
name|indexSettings
argument_list|)
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Elasticsearch090PostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DefaultPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|DefaultPostingsFormatProvider
name|provider
init|=
operator|(
name|DefaultPostingsFormatProvider
operator|)
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|minBlockSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|maxBlockSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|64
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolvePostingFormatsFromMapping_memory
specifier|public
name|void
name|testResolvePostingFormatsFromMapping_memory
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"memory"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"my_format1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Settings
name|indexSettings
init|=
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.type"
argument_list|,
literal|"memory"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.pack_fst"
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.acceptable_overhead_ratio"
argument_list|,
literal|0.3f
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|(
name|indexSettings
argument_list|)
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|MemoryPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|MemoryPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|MemoryPostingsFormatProvider
name|provider
init|=
operator|(
name|MemoryPostingsFormatProvider
operator|)
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|packFst
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|acceptableOverheadRatio
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.3f
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolvePostingFormatsFromMapping_direct
specifier|public
name|void
name|testResolvePostingFormatsFromMapping_direct
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"direct"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"my_format1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Settings
name|indexSettings
init|=
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.type"
argument_list|,
literal|"direct"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.min_skip_count"
argument_list|,
literal|16
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.low_freq_cutoff"
argument_list|,
literal|64
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|(
name|indexSettings
argument_list|)
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DirectPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DirectPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|DirectPostingsFormatProvider
name|provider
init|=
operator|(
name|DirectPostingsFormatProvider
operator|)
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|minSkipCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|lowFreqCutoff
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|64
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolvePostingFormatsFromMapping_pulsing
specifier|public
name|void
name|testResolvePostingFormatsFromMapping_pulsing
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"pulsing"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"my_format1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Settings
name|indexSettings
init|=
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.type"
argument_list|,
literal|"pulsing"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.freq_cut_off"
argument_list|,
literal|2
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.min_block_size"
argument_list|,
literal|32
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.max_block_size"
argument_list|,
literal|64
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|(
name|indexSettings
argument_list|)
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Pulsing41PostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PulsingPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|PulsingPostingsFormatProvider
name|provider
init|=
operator|(
name|PulsingPostingsFormatProvider
operator|)
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|freqCutOff
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|minBlockSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|maxBlockSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|64
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolvePostingFormatsFromMappingLuceneBloom
specifier|public
name|void
name|testResolvePostingFormatsFromMappingLuceneBloom
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"bloom_default"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"bloom_pulsing"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field3"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"my_format1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Settings
name|indexSettings
init|=
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.type"
argument_list|,
literal|"bloom_filter_lucene"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.desired_max_saturation"
argument_list|,
literal|0.2f
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.saturation_limit"
argument_list|,
literal|0.8f
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.my_format1.delegate"
argument_list|,
literal|"delegate1"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.delegate1.type"
argument_list|,
literal|"direct"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.delegate1.min_skip_count"
argument_list|,
literal|16
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.codec.postings_format.delegate1.low_freq_cutoff"
argument_list|,
literal|64
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|(
name|indexSettings
argument_list|)
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|PostingFormats
operator|.
name|luceneBloomFilter
condition|)
block|{
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilteringPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilterPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|PostingFormats
operator|.
name|luceneBloomFilter
condition|)
block|{
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilteringPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilterPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field3"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|BloomFilterLucenePostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|BloomFilterLucenePostingsFormatProvider
name|provider
init|=
operator|(
name|BloomFilterLucenePostingsFormatProvider
operator|)
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field3"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|postingsFormatProvider
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|desiredMaxSaturation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|saturationLimit
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.8f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|provider
operator|.
name|delegate
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DirectPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|DirectPostingsFormatProvider
name|delegate
init|=
operator|(
name|DirectPostingsFormatProvider
operator|)
name|provider
operator|.
name|delegate
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|delegate
operator|.
name|minSkipCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|delegate
operator|.
name|lowFreqCutoff
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|64
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testChangeUidPostingsFormat
specifier|public
name|void
name|testChangeUidPostingsFormat
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_uid"
argument_list|)
operator|.
name|field
argument_list|(
literal|"postings_format"
argument_list|,
literal|"memory"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|()
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|UidFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|postingsFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltPostingsFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|UidFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|postingsFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|MemoryPostingsFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testChangeUidDocValuesFormat
specifier|public
name|void
name|testChangeUidDocValuesFormat
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_uid"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"fielddata"
argument_list|)
operator|.
name|field
argument_list|(
literal|"format"
argument_list|,
literal|"doc_values"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"disk"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|()
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|UidFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|hasDocValues
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|UidFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|UidFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|docValuesFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DiskDocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testChangeIdDocValuesFormat
specifier|public
name|void
name|testChangeIdDocValuesFormat
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_id"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"fielddata"
argument_list|)
operator|.
name|field
argument_list|(
literal|"format"
argument_list|,
literal|"doc_values"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"disk"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|()
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|IdFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|hasDocValues
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|IdFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|IdFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|docValuesFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DiskDocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolveDocValuesFormatsFromMapping_default
specifier|public
name|void
name|testResolveDocValuesFormatsFromMapping_default
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"integer"
argument_list|)
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"default"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"double"
argument_list|)
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"my_format1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Settings
name|indexSettings
init|=
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.codec.doc_values_format.my_format1.type"
argument_list|,
literal|"default"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|(
name|indexSettings
argument_list|)
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Lucene45DocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DefaultDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolveDocValuesFormatsFromMapping_memory
specifier|public
name|void
name|testResolveDocValuesFormatsFromMapping_memory
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"integer"
argument_list|)
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"memory"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"double"
argument_list|)
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"my_format1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Settings
name|indexSettings
init|=
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.codec.doc_values_format.my_format1.type"
argument_list|,
literal|"memory"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|(
name|indexSettings
argument_list|)
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|MemoryDocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|MemoryDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testResolveDocValuesFormatsFromMapping_disk
specifier|public
name|void
name|testResolveDocValuesFormatsFromMapping_disk
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"integer"
argument_list|)
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"disk"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"double"
argument_list|)
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"my_format1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Settings
name|indexSettings
init|=
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.codec.doc_values_format.my_format1.type"
argument_list|,
literal|"disk"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|(
name|indexSettings
argument_list|)
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DiskDocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|mappers
argument_list|()
operator|.
name|name
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DiskDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testChangeVersionFormat
specifier|public
name|void
name|testChangeVersionFormat
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_version"
argument_list|)
operator|.
name|field
argument_list|(
literal|"doc_values_format"
argument_list|,
literal|"disk"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|CodecService
name|codecService
init|=
name|createCodecService
argument_list|()
decl_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|codecService
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|VersionFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|docValuesFormatProvider
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PreBuiltDocValuesFormatProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|documentMapper
operator|.
name|rootMapper
argument_list|(
name|VersionFieldMapper
operator|.
name|class
argument_list|)
operator|.
name|docValuesFormatProvider
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|DiskDocValuesFormat
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|createCodecService
specifier|private
specifier|static
name|CodecService
name|createCodecService
parameter_list|()
block|{
return|return
name|createCodecService
argument_list|(
name|ImmutableSettings
operator|.
name|Builder
operator|.
name|EMPTY_SETTINGS
argument_list|)
return|;
block|}
DECL|method|createCodecService
specifier|private
specifier|static
name|CodecService
name|createCodecService
parameter_list|(
name|Settings
name|settings
parameter_list|)
block|{
name|Index
name|index
init|=
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|Injector
name|injector
init|=
operator|new
name|ModulesBuilder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|SettingsModule
argument_list|(
name|settings
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|IndexNameModule
argument_list|(
name|index
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|IndexSettingsModule
argument_list|(
name|index
argument_list|,
name|settings
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|SimilarityModule
argument_list|(
name|settings
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|CodecModule
argument_list|(
name|settings
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MapperServiceModule
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|AnalysisModule
argument_list|(
name|settings
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|AbstractModule
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|bind
argument_list|(
name|CircuitBreakerService
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DummyCircuitBreakerService
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
operator|.
name|createInjector
argument_list|()
decl_stmt|;
return|return
name|injector
operator|.
name|getInstance
argument_list|(
name|CodecService
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

