begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.mapper.all
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|all
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|collect
operator|.
name|Tuple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|all
operator|.
name|AllEntries
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|all
operator|.
name|AllField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|all
operator|.
name|AllTermQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|all
operator|.
name|AllTokenStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|ParseContext
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|IndexFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|SizeFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|SourceFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|TypeFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchSingleNodeTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|Streams
operator|.
name|copyToBytesFromClasspath
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|Streams
operator|.
name|copyToStringFromClasspath
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|SimpleAllMapperTests
specifier|public
class|class
name|SimpleAllMapperTests
extends|extends
name|ElasticsearchSingleNodeTest
block|{
annotation|@
name|Test
DECL|method|testSimpleAllMappers
specifier|public
name|void
name|testSimpleAllMappers
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/mapping.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|byte
index|[]
name|json
init|=
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/test1.json"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|docMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
comment|// One field is boosted so we should see AllTokenStream used:
name|assertThat
argument_list|(
name|field
operator|.
name|tokenStream
argument_list|(
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|indexAnalyzer
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Matchers
operator|.
name|instanceOf
argument_list|(
name|AllTokenStream
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|AllEntries
name|allEntries
init|=
name|field
operator|.
name|getAllEntries
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"address.last.location"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"name.last"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"simple1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|FieldMapper
name|mapper
init|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|smartNameFieldMapper
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|omitNorms
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mapper
operator|.
name|queryStringTermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"_all"
argument_list|,
literal|"foobar"
argument_list|)
argument_list|)
argument_list|,
name|Matchers
operator|.
name|instanceOf
argument_list|(
name|AllTermQuery
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllMappersNoBoost
specifier|public
name|void
name|testAllMappersNoBoost
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/noboost-mapping.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|byte
index|[]
name|json
init|=
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/test1.json"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|docMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
name|AllEntries
name|allEntries
init|=
name|field
operator|.
name|getAllEntries
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"address.last.location"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"name.last"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"simple1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|FieldMapper
name|mapper
init|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|smartNameFieldMapper
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|omitNorms
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mapper
operator|.
name|queryStringTermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"_all"
argument_list|,
literal|"foobar"
argument_list|)
argument_list|)
argument_list|,
name|Matchers
operator|.
name|instanceOf
argument_list|(
name|TermQuery
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllMappersTermQuery
specifier|public
name|void
name|testAllMappersTermQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/mapping_omit_positions_on_all.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|byte
index|[]
name|json
init|=
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/test1.json"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|docMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
name|AllEntries
name|allEntries
init|=
name|field
operator|.
name|getAllEntries
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"address.last.location"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"name.last"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"simple1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|FieldMapper
name|mapper
init|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|smartNameFieldMapper
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|omitNorms
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mapper
operator|.
name|queryStringTermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"_all"
argument_list|,
literal|"foobar"
argument_list|)
argument_list|)
argument_list|,
name|Matchers
operator|.
name|instanceOf
argument_list|(
name|TermQuery
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// #6187: make sure we see AllTermQuery even when offsets are indexed in the _all field:
annotation|@
name|Test
DECL|method|testAllMappersWithOffsetsTermQuery
specifier|public
name|void
name|testAllMappersWithOffsetsTermQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/mapping_offsets_on_all.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|byte
index|[]
name|json
init|=
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/test1.json"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|docMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
comment|// _all field indexes positions, and mapping has boosts, so we should see AllTokenStream:
name|assertThat
argument_list|(
name|field
operator|.
name|tokenStream
argument_list|(
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|indexAnalyzer
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Matchers
operator|.
name|instanceOf
argument_list|(
name|AllTokenStream
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|AllEntries
name|allEntries
init|=
name|field
operator|.
name|getAllEntries
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"address.last.location"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"name.last"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"simple1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|FieldMapper
name|mapper
init|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|smartNameFieldMapper
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|omitNorms
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mapper
operator|.
name|queryStringTermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"_all"
argument_list|,
literal|"foobar"
argument_list|)
argument_list|)
argument_list|,
name|Matchers
operator|.
name|instanceOf
argument_list|(
name|AllTermQuery
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// #6187: if _all doesn't index positions then we never use AllTokenStream, even if some fields have boost
annotation|@
name|Test
DECL|method|testBoostWithOmitPositions
specifier|public
name|void
name|testBoostWithOmitPositions
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/mapping_boost_omit_positions_on_all.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|byte
index|[]
name|json
init|=
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/test1.json"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|docMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
comment|// _all field omits positions, so we should not get AllTokenStream even though fields are boosted
name|assertThat
argument_list|(
name|field
operator|.
name|tokenStream
argument_list|(
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|indexAnalyzer
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Matchers
operator|.
name|not
argument_list|(
name|Matchers
operator|.
name|instanceOf
argument_list|(
name|AllTokenStream
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// #6187: if no fields were boosted, we shouldn't use AllTokenStream
annotation|@
name|Test
DECL|method|testNoBoost
specifier|public
name|void
name|testNoBoost
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/noboost-mapping.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|byte
index|[]
name|json
init|=
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/test1.json"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|docMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
comment|// no fields have boost, so we should not see AllTokenStream:
name|assertThat
argument_list|(
name|field
operator|.
name|tokenStream
argument_list|(
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|indexAnalyzer
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Matchers
operator|.
name|not
argument_list|(
name|Matchers
operator|.
name|instanceOf
argument_list|(
name|AllTokenStream
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSimpleAllMappersWithReparse
specifier|public
name|void
name|testSimpleAllMappersWithReparse
parameter_list|()
throws|throws
name|Exception
block|{
name|DocumentMapperParser
name|parser
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
decl_stmt|;
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/mapping.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|parser
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|String
name|builtMapping
init|=
name|docMapper
operator|.
name|mappingSource
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
comment|// reparse it
name|DocumentMapper
name|builtDocMapper
init|=
name|parser
operator|.
name|parse
argument_list|(
name|builtMapping
argument_list|)
decl_stmt|;
name|byte
index|[]
name|json
init|=
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/test1.json"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|builtDocMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
name|AllEntries
name|allEntries
init|=
name|field
operator|.
name|getAllEntries
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"address.last.location"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"name.last"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"simple1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|omitNorms
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSimpleAllMappersWithStore
specifier|public
name|void
name|testSimpleAllMappersWithStore
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/store-mapping.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|byte
index|[]
name|json
init|=
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/test1.json"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|docMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
name|AllEntries
name|allEntries
init|=
name|field
operator|.
name|getAllEntries
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"name.last"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"simple1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|text
init|=
name|field
operator|.
name|stringValue
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|text
argument_list|,
name|equalTo
argument_list|(
name|allEntries
operator|.
name|buildText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|omitNorms
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSimpleAllMappersWithReparseWithStore
specifier|public
name|void
name|testSimpleAllMappersWithReparseWithStore
parameter_list|()
throws|throws
name|Exception
block|{
name|DocumentMapperParser
name|parser
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
decl_stmt|;
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/store-mapping.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|parser
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|String
name|builtMapping
init|=
name|docMapper
operator|.
name|mappingSource
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
comment|// reparse it
name|DocumentMapper
name|builtDocMapper
init|=
name|parser
operator|.
name|parse
argument_list|(
name|builtMapping
argument_list|)
decl_stmt|;
name|byte
index|[]
name|json
init|=
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/test1.json"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|builtDocMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
name|AllEntries
name|allEntries
init|=
name|field
operator|.
name|getAllEntries
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"name.last"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"simple1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|text
init|=
name|field
operator|.
name|stringValue
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|text
argument_list|,
name|equalTo
argument_list|(
name|allEntries
operator|.
name|buildText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|omitNorms
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRandom
specifier|public
name|void
name|testRandom
parameter_list|()
throws|throws
name|Exception
block|{
name|boolean
name|omitNorms
init|=
literal|false
decl_stmt|;
name|boolean
name|stored
init|=
literal|false
decl_stmt|;
name|boolean
name|enabled
init|=
literal|true
decl_stmt|;
name|boolean
name|autoBoost
init|=
literal|false
decl_stmt|;
name|boolean
name|tv_stored
init|=
literal|false
decl_stmt|;
name|boolean
name|tv_payloads
init|=
literal|false
decl_stmt|;
name|boolean
name|tv_offsets
init|=
literal|false
decl_stmt|;
name|boolean
name|tv_positions
init|=
literal|false
decl_stmt|;
name|String
name|similarity
init|=
literal|null
decl_stmt|;
name|boolean
name|fieldData
init|=
literal|false
decl_stmt|;
name|XContentBuilder
name|mappingBuilder
init|=
name|jsonBuilder
argument_list|()
decl_stmt|;
name|mappingBuilder
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Tuple
argument_list|<
name|String
argument_list|,
name|Boolean
argument_list|>
argument_list|>
name|booleanOptionList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|boolean
name|allDefault
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|frequently
argument_list|()
condition|)
block|{
name|allDefault
operator|=
literal|false
expr_stmt|;
name|mappingBuilder
operator|.
name|startObject
argument_list|(
literal|"_all"
argument_list|)
expr_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|booleanOptionList
operator|.
name|add
argument_list|(
operator|new
name|Tuple
argument_list|<>
argument_list|(
literal|"omit_norms"
argument_list|,
name|omitNorms
operator|=
name|randomBoolean
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|booleanOptionList
operator|.
name|add
argument_list|(
operator|new
name|Tuple
argument_list|<>
argument_list|(
literal|"store"
argument_list|,
name|stored
operator|=
name|randomBoolean
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|booleanOptionList
operator|.
name|add
argument_list|(
operator|new
name|Tuple
argument_list|<>
argument_list|(
literal|"store_term_vectors"
argument_list|,
name|tv_stored
operator|=
name|randomBoolean
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|booleanOptionList
operator|.
name|add
argument_list|(
operator|new
name|Tuple
argument_list|<>
argument_list|(
literal|"enabled"
argument_list|,
name|enabled
operator|=
name|randomBoolean
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|booleanOptionList
operator|.
name|add
argument_list|(
operator|new
name|Tuple
argument_list|<>
argument_list|(
literal|"auto_boost"
argument_list|,
name|autoBoost
operator|=
name|randomBoolean
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|booleanOptionList
operator|.
name|add
argument_list|(
operator|new
name|Tuple
argument_list|<>
argument_list|(
literal|"store_term_vector_offsets"
argument_list|,
name|tv_offsets
operator|=
name|randomBoolean
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|booleanOptionList
operator|.
name|add
argument_list|(
operator|new
name|Tuple
argument_list|<>
argument_list|(
literal|"store_term_vector_positions"
argument_list|,
name|tv_positions
operator|=
name|randomBoolean
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|booleanOptionList
operator|.
name|add
argument_list|(
operator|new
name|Tuple
argument_list|<>
argument_list|(
literal|"store_term_vector_payloads"
argument_list|,
name|tv_payloads
operator|=
name|randomBoolean
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Collections
operator|.
name|shuffle
argument_list|(
name|booleanOptionList
argument_list|,
name|getRandom
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Tuple
argument_list|<
name|String
argument_list|,
name|Boolean
argument_list|>
name|option
range|:
name|booleanOptionList
control|)
block|{
name|mappingBuilder
operator|.
name|field
argument_list|(
name|option
operator|.
name|v1
argument_list|()
argument_list|,
name|option
operator|.
name|v2
argument_list|()
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|tv_stored
operator||=
name|tv_positions
operator|||
name|tv_payloads
operator|||
name|tv_offsets
expr_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mappingBuilder
operator|.
name|field
argument_list|(
literal|"similarity"
argument_list|,
name|similarity
operator|=
name|randomBoolean
argument_list|()
condition|?
literal|"BM25"
else|:
literal|"TF/IDF"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|fieldData
operator|=
literal|true
expr_stmt|;
name|mappingBuilder
operator|.
name|startObject
argument_list|(
literal|"fielddata"
argument_list|)
expr_stmt|;
name|mappingBuilder
operator|.
name|field
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|mappingBuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
name|mappingBuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
name|DocumentMapperParser
name|parser
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
decl_stmt|;
name|String
name|mapping
init|=
name|mappingBuilder
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toUtf8
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|parser
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|String
name|builtMapping
init|=
name|docMapper
operator|.
name|mappingSource
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
comment|// reparse it
name|DocumentMapper
name|builtDocMapper
init|=
name|parser
operator|.
name|parse
argument_list|(
name|builtMapping
argument_list|)
decl_stmt|;
name|byte
index|[]
name|json
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|field
argument_list|(
literal|"_id"
argument_list|,
literal|1
argument_list|)
operator|.
name|field
argument_list|(
literal|"foobar"
argument_list|,
literal|"foobar"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
name|builtDocMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
if|if
condition|(
name|enabled
condition|)
block|{
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|omitNorms
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|omitNorms
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|stored
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stored
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|storeTermVectorOffsets
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|tv_offsets
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|storeTermVectorPayloads
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|tv_payloads
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|storeTermVectorPositions
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|tv_positions
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|field
operator|.
name|fieldType
argument_list|()
operator|.
name|storeTermVectors
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|tv_stored
argument_list|)
argument_list|)
expr_stmt|;
name|AllEntries
name|allEntries
init|=
name|field
operator|.
name|getAllEntries
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"foobar"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
operator|.
name|contains
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|stored
condition|)
block|{
name|assertThat
argument_list|(
name|field
operator|.
name|stringValue
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|text
init|=
name|stored
condition|?
name|field
operator|.
name|stringValue
argument_list|()
else|:
literal|"bar foobar"
decl_stmt|;
name|assertThat
argument_list|(
name|text
operator|.
name|trim
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|allEntries
operator|.
name|buildText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|field
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Term
name|term
init|=
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
decl_stmt|;
name|Query
name|query
init|=
name|builtDocMapper
operator|.
name|allFieldMapper
argument_list|()
operator|.
name|queryStringTermQuery
argument_list|(
name|term
argument_list|)
decl_stmt|;
if|if
condition|(
name|autoBoost
condition|)
block|{
name|assertThat
argument_list|(
name|query
argument_list|,
name|equalTo
argument_list|(
operator|(
name|Query
operator|)
operator|new
name|AllTermQuery
argument_list|(
name|term
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|query
argument_list|,
name|equalTo
argument_list|(
operator|(
name|Query
operator|)
operator|new
name|TermQuery
argument_list|(
name|term
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|similarity
operator|==
literal|null
operator|||
name|similarity
operator|.
name|equals
argument_list|(
literal|"TF/IDF"
argument_list|)
condition|)
block|{
name|assertThat
argument_list|(
name|builtDocMapper
operator|.
name|allFieldMapper
argument_list|()
operator|.
name|similarity
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|similarity
argument_list|,
name|equalTo
argument_list|(
name|builtDocMapper
operator|.
name|allFieldMapper
argument_list|()
operator|.
name|similarity
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|builtMapping
operator|.
name|contains
argument_list|(
literal|"fielddata"
argument_list|)
argument_list|,
name|is
argument_list|(
name|fieldData
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|allDefault
condition|)
block|{
name|BytesStreamOutput
name|bytesStreamOutput
init|=
operator|new
name|BytesStreamOutput
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|XContentBuilder
name|b
init|=
operator|new
name|XContentBuilder
argument_list|(
name|XContentType
operator|.
name|JSON
operator|.
name|xContent
argument_list|()
argument_list|,
name|bytesStreamOutput
argument_list|)
decl_stmt|;
name|XContentBuilder
name|xContentBuilder
init|=
name|builtDocMapper
operator|.
name|allFieldMapper
argument_list|()
operator|.
name|toXContent
argument_list|(
name|b
argument_list|,
name|ToXContent
operator|.
name|EMPTY_PARAMS
argument_list|)
decl_stmt|;
name|xContentBuilder
operator|.
name|flush
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|bytesStreamOutput
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testMultiField_includeInAllSetToFalse
specifier|public
name|void
name|testMultiField_includeInAllSetToFalse
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/multifield-mapping_include_in_all_set_to_false.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|XContentBuilder
name|builder
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"_id"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"bar"
argument_list|,
literal|"Elasticsearch rules!"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|Document
name|doc
init|=
name|docMapper
operator|.
name|parse
argument_list|(
name|builder
operator|.
name|bytes
argument_list|()
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
name|AllEntries
name|allEntries
init|=
name|field
operator|.
name|getAllEntries
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
argument_list|,
name|empty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultiField_defaults
specifier|public
name|void
name|testMultiField_defaults
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/multifield-mapping_default.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|XContentBuilder
name|builder
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"_id"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"bar"
argument_list|,
literal|"Elasticsearch rules!"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|Document
name|doc
init|=
name|docMapper
operator|.
name|parse
argument_list|(
name|builder
operator|.
name|bytes
argument_list|()
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|AllField
name|field
init|=
operator|(
name|AllField
operator|)
name|doc
operator|.
name|getField
argument_list|(
literal|"_all"
argument_list|)
decl_stmt|;
name|AllEntries
name|allEntries
init|=
name|field
operator|.
name|getAllEntries
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
argument_list|,
name|hasSize
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|allEntries
operator|.
name|fields
argument_list|()
argument_list|,
name|hasItem
argument_list|(
literal|"foo.bar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MapperParsingException
operator|.
name|class
argument_list|)
DECL|method|testMisplacedTypeInRoot
specifier|public
name|void
name|testMisplacedTypeInRoot
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/misplaced_type_in_root.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
name|mapping
argument_list|)
decl_stmt|;
block|}
comment|// related to https://github.com/elasticsearch/elasticsearch/issues/5864
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MapperParsingException
operator|.
name|class
argument_list|)
DECL|method|testMistypedTypeInRoot
specifier|public
name|void
name|testMistypedTypeInRoot
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/mistyped_type_in_root.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
name|mapping
argument_list|)
decl_stmt|;
block|}
comment|// issue https://github.com/elasticsearch/elasticsearch/issues/5864
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MapperParsingException
operator|.
name|class
argument_list|)
DECL|method|testMisplacedMappingAsRoot
specifier|public
name|void
name|testMisplacedMappingAsRoot
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/misplaced_mapping_key_in_root.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
name|mapping
argument_list|)
decl_stmt|;
block|}
comment|// issue https://github.com/elasticsearch/elasticsearch/issues/5864
comment|// test that RootObjectMapping still works
annotation|@
name|Test
DECL|method|testRootObjectMapperPropertiesDoNotCauseException
specifier|public
name|void
name|testRootObjectMapperPropertiesDoNotCauseException
parameter_list|()
throws|throws
name|IOException
block|{
name|DocumentMapperParser
name|parser
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
decl_stmt|;
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/type_dynamic_template_mapping.json"
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
name|mapping
argument_list|)
expr_stmt|;
name|mapping
operator|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/type_dynamic_date_formats_mapping.json"
argument_list|)
expr_stmt|;
name|parser
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
name|mapping
argument_list|)
expr_stmt|;
name|mapping
operator|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/type_date_detection_mapping.json"
argument_list|)
expr_stmt|;
name|parser
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
name|mapping
argument_list|)
expr_stmt|;
name|mapping
operator|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/all/type_numeric_detection_mapping.json"
argument_list|)
expr_stmt|;
name|parser
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
name|mapping
argument_list|)
expr_stmt|;
block|}
comment|// issue https://github.com/elasticsearch/elasticsearch/issues/5864
annotation|@
name|Test
DECL|method|testRootMappersStillWorking
specifier|public
name|void
name|testRootMappersStillWorking
parameter_list|()
block|{
name|String
name|mapping
init|=
literal|"{"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|rootTypes
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|//just pick some example from DocumentMapperParser.rootTypeParsers
name|rootTypes
operator|.
name|put
argument_list|(
name|SizeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"{\"enabled\" : true}"
argument_list|)
expr_stmt|;
name|rootTypes
operator|.
name|put
argument_list|(
name|IndexFieldMapper
operator|.
name|NAME
argument_list|,
literal|"{\"enabled\" : true}"
argument_list|)
expr_stmt|;
name|rootTypes
operator|.
name|put
argument_list|(
name|SourceFieldMapper
operator|.
name|NAME
argument_list|,
literal|"{\"enabled\" : true}"
argument_list|)
expr_stmt|;
name|rootTypes
operator|.
name|put
argument_list|(
literal|"include_in_all"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|rootTypes
operator|.
name|put
argument_list|(
literal|"dynamic_date_formats"
argument_list|,
literal|"[\"yyyy-MM-dd\", \"dd-MM-yyyy\"]"
argument_list|)
expr_stmt|;
name|rootTypes
operator|.
name|put
argument_list|(
literal|"numeric_detection"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|rootTypes
operator|.
name|put
argument_list|(
literal|"dynamic_templates"
argument_list|,
literal|"[]"
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|key
range|:
name|rootTypes
operator|.
name|keySet
argument_list|()
control|)
block|{
name|mapping
operator|+=
literal|"\""
operator|+
name|key
operator|+
literal|"\""
operator|+
literal|":"
operator|+
name|rootTypes
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|+
literal|",\n"
expr_stmt|;
block|}
name|mapping
operator|+=
literal|"\"properties\":{}}"
expr_stmt|;
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
name|mapping
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

