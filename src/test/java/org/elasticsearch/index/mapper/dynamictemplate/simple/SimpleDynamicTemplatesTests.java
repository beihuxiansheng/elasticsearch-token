begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.mapper.dynamictemplate.simple
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|dynamictemplate
operator|.
name|simple
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexableField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|json
operator|.
name|JsonXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|ParseContext
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|Streams
operator|.
name|copyToBytesFromClasspath
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|Streams
operator|.
name|copyToStringFromClasspath
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|SimpleDynamicTemplatesTests
specifier|public
class|class
name|SimpleDynamicTemplatesTests
extends|extends
name|ElasticsearchTestCase
block|{
annotation|@
name|Test
DECL|method|testMatchTypeOnly
specifier|public
name|void
name|testMatchTypeOnly
parameter_list|()
throws|throws
name|Exception
block|{
name|XContentBuilder
name|builder
init|=
name|JsonXContent
operator|.
name|contentBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"person"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"dynamic_templates"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"test"
argument_list|)
operator|.
name|field
argument_list|(
literal|"match_mapping_type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"mapping"
argument_list|)
operator|.
name|field
argument_list|(
literal|"index"
argument_list|,
literal|"no"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|MapperTestUtils
operator|.
name|newParser
argument_list|()
operator|.
name|parse
argument_list|(
name|builder
operator|.
name|string
argument_list|()
argument_list|)
decl_stmt|;
name|builder
operator|=
name|JsonXContent
operator|.
name|contentBuilder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"_id"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"s"
argument_list|,
literal|"hello"
argument_list|)
operator|.
name|field
argument_list|(
literal|"l"
argument_list|,
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|docMapper
operator|.
name|parse
argument_list|(
name|builder
operator|.
name|bytes
argument_list|()
argument_list|)
expr_stmt|;
name|DocumentFieldMappers
name|mappers
init|=
name|docMapper
operator|.
name|mappers
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|mappers
operator|.
name|smartName
argument_list|(
literal|"s"
argument_list|)
argument_list|,
name|Matchers
operator|.
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mappers
operator|.
name|smartName
argument_list|(
literal|"s"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mappers
operator|.
name|smartName
argument_list|(
literal|"l"
argument_list|)
argument_list|,
name|Matchers
operator|.
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mappers
operator|.
name|smartName
argument_list|(
literal|"l"
argument_list|)
operator|.
name|mapper
argument_list|()
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSimple
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/dynamictemplate/simple/test-mapping.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|MapperTestUtils
operator|.
name|newParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|byte
index|[]
name|json
init|=
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/dynamictemplate/simple/test-data.json"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|docMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|IndexableField
name|f
init|=
name|doc
operator|.
name|getField
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|stringValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"some name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|tokenized
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|FieldMappers
name|fieldMappers
init|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|fullName
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|fieldMappers
operator|.
name|mappers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|doc
operator|.
name|getField
argument_list|(
literal|"multi1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|stringValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi 1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|tokenized
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|fieldMappers
operator|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|fullName
argument_list|(
literal|"multi1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldMappers
operator|.
name|mappers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|doc
operator|.
name|getField
argument_list|(
literal|"multi1.org"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi1.org"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|stringValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi 1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|tokenized
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|fieldMappers
operator|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|fullName
argument_list|(
literal|"multi1.org"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldMappers
operator|.
name|mappers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|doc
operator|.
name|getField
argument_list|(
literal|"multi2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|stringValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi 2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|tokenized
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|fieldMappers
operator|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|fullName
argument_list|(
literal|"multi2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldMappers
operator|.
name|mappers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|doc
operator|.
name|getField
argument_list|(
literal|"multi2.org"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi2.org"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|stringValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi 2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|tokenized
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|fieldMappers
operator|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|fullName
argument_list|(
literal|"multi2.org"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldMappers
operator|.
name|mappers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSimpleWithXContentTraverse
specifier|public
name|void
name|testSimpleWithXContentTraverse
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|copyToStringFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/dynamictemplate/simple/test-mapping.json"
argument_list|)
decl_stmt|;
name|DocumentMapper
name|docMapper
init|=
name|MapperTestUtils
operator|.
name|newParser
argument_list|()
operator|.
name|parse
argument_list|(
name|mapping
argument_list|)
decl_stmt|;
name|docMapper
operator|.
name|refreshSource
argument_list|()
expr_stmt|;
name|docMapper
operator|=
name|MapperTestUtils
operator|.
name|newParser
argument_list|()
operator|.
name|parse
argument_list|(
name|docMapper
operator|.
name|mappingSource
argument_list|()
operator|.
name|string
argument_list|()
argument_list|)
expr_stmt|;
name|byte
index|[]
name|json
init|=
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/index/mapper/dynamictemplate/simple/test-data.json"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|docMapper
operator|.
name|parse
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|json
argument_list|)
argument_list|)
operator|.
name|rootDoc
argument_list|()
decl_stmt|;
name|IndexableField
name|f
init|=
name|doc
operator|.
name|getField
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|stringValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"some name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|tokenized
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|FieldMappers
name|fieldMappers
init|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|fullName
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|fieldMappers
operator|.
name|mappers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|doc
operator|.
name|getField
argument_list|(
literal|"multi1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|stringValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi 1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|tokenized
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|fieldMappers
operator|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|fullName
argument_list|(
literal|"multi1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldMappers
operator|.
name|mappers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|doc
operator|.
name|getField
argument_list|(
literal|"multi1.org"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi1.org"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|stringValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi 1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|tokenized
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|fieldMappers
operator|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|fullName
argument_list|(
literal|"multi1.org"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldMappers
operator|.
name|mappers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|doc
operator|.
name|getField
argument_list|(
literal|"multi2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|stringValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi 2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|tokenized
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|fieldMappers
operator|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|fullName
argument_list|(
literal|"multi2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldMappers
operator|.
name|mappers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|doc
operator|.
name|getField
argument_list|(
literal|"multi2.org"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi2.org"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|stringValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"multi 2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|indexed
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|f
operator|.
name|fieldType
argument_list|()
operator|.
name|tokenized
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|fieldMappers
operator|=
name|docMapper
operator|.
name|mappers
argument_list|()
operator|.
name|fullName
argument_list|(
literal|"multi2.org"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldMappers
operator|.
name|mappers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

