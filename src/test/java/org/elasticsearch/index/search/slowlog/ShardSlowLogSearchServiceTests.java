begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.search.slowlog
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|search
operator|.
name|slowlog
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|settings
operator|.
name|IndexSettingsService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|ShardSlowLogSearchServiceTests
specifier|public
class|class
name|ShardSlowLogSearchServiceTests
extends|extends
name|ElasticsearchTestCase
block|{
DECL|field|index
specifier|private
name|Index
name|index
init|=
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
DECL|field|shardId
specifier|private
name|ShardId
name|shardId
init|=
operator|new
name|ShardId
argument_list|(
name|index
argument_list|,
literal|0
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|creatingShardSlowLogSearchServiceWithBrokenSettingsShouldWork
specifier|public
name|void
name|creatingShardSlowLogSearchServiceWithBrokenSettingsShouldWork
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
name|brokenIndexSettings
init|=
name|ImmutableSettings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.search.slowlog.threshold.query.warn"
argument_list|,
literal|"s"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexSettingsService
name|indexSettingsService
init|=
operator|new
name|IndexSettingsService
argument_list|(
name|shardId
operator|.
name|index
argument_list|()
argument_list|,
name|brokenIndexSettings
argument_list|)
decl_stmt|;
operator|new
name|ShardSlowLogSearchService
argument_list|(
name|shardId
argument_list|,
name|brokenIndexSettings
argument_list|,
name|indexSettingsService
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|updatingViaListenerWithBrokenSettingsLeavesSettingsAsIs
specifier|public
name|void
name|updatingViaListenerWithBrokenSettingsLeavesSettingsAsIs
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
name|indexSettings
init|=
name|ImmutableSettings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.search.slowlog.threshold.query.warn"
argument_list|,
literal|"1s"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexSettingsService
name|indexSettingsService
init|=
operator|new
name|IndexSettingsService
argument_list|(
name|shardId
operator|.
name|index
argument_list|()
argument_list|,
name|indexSettings
argument_list|)
decl_stmt|;
name|ShardSlowLogSearchService
name|shardSlowLogSearchService
init|=
operator|new
name|ShardSlowLogSearchService
argument_list|(
name|shardId
argument_list|,
name|indexSettings
argument_list|,
name|indexSettingsService
argument_list|)
decl_stmt|;
name|Settings
name|updatedSettings
init|=
name|ImmutableSettings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.search.slowlog.threshold.query.warn"
argument_list|,
literal|"s"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|indexSettingsService
operator|.
name|refreshSettings
argument_list|(
name|updatedSettings
argument_list|)
expr_stmt|;
comment|// this is still the time from the indexSettings above, but was not overriden from the settings update
comment|// this basically ensures that the parsing exception was caught in the refreshSettings() methods
name|String
name|configuredTime
init|=
name|shardSlowLogSearchService
operator|.
name|indexSettings
argument_list|()
operator|.
name|get
argument_list|(
literal|"index.search.slowlog.threshold.query.warn"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|configuredTime
argument_list|,
name|is
argument_list|(
literal|"1s"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

