begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.bucket
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchPhaseExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|nested
operator|.
name|Nested
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|nested
operator|.
name|ReverseNested
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|Terms
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchIntegrationTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertAcked
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertSearchResponse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|IsNull
operator|.
name|notNullValue
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
annotation|@
name|ElasticsearchIntegrationTest
operator|.
name|ClusterScope
argument_list|(
name|scope
operator|=
name|ElasticsearchIntegrationTest
operator|.
name|Scope
operator|.
name|SUITE
argument_list|,
name|numDataNodes
operator|=
literal|1
argument_list|)
DECL|class|ReverseNestedTests
specifier|public
class|class
name|ReverseNestedTests
extends|extends
name|ElasticsearchIntegrationTest
block|{
annotation|@
name|Before
DECL|method|init
specifier|public
name|void
name|init
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type1"
argument_list|,
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"nested1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"nested"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type2"
argument_list|,
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"nested1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"nested"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"nested2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"nested"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|insertDocs
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|,
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|insertDocs
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"b"
argument_list|,
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"4"
argument_list|,
literal|"5"
argument_list|,
literal|"6"
argument_list|,
literal|"7"
argument_list|)
argument_list|)
expr_stmt|;
name|insertDocs
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|,
literal|"e"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"7"
argument_list|,
literal|"8"
argument_list|,
literal|"9"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|insertDocs
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"a"
argument_list|,
literal|"e"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"7"
argument_list|,
literal|"4"
argument_list|,
literal|"1"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|insertDocs
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"a"
argument_list|,
literal|"c"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"2"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|insertDocs
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"a"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"3"
argument_list|,
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|insertDocs
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"x"
argument_list|,
literal|"c"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1"
argument_list|,
literal|"8"
argument_list|)
argument_list|)
expr_stmt|;
name|insertDocs
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"y"
argument_list|,
literal|"c"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"6"
argument_list|)
argument_list|)
expr_stmt|;
name|insertDocs
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"z"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"5"
argument_list|,
literal|"9"
argument_list|)
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|ensureSearchable
argument_list|()
expr_stmt|;
block|}
DECL|method|insertDocs
specifier|private
name|void
name|insertDocs
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|values1
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|values2
parameter_list|)
throws|throws
name|Exception
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|array
argument_list|(
literal|"field1"
argument_list|,
name|values1
operator|.
name|toArray
argument_list|()
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"nested1"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|value1
range|:
name|values2
control|)
block|{
name|source
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
name|value1
argument_list|)
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
name|source
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|indexRandom
argument_list|(
literal|false
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"idx"
argument_list|,
literal|"type1"
argument_list|)
operator|.
name|setRouting
argument_list|(
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
name|source
operator|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"x"
argument_list|,
literal|"y"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"nested1"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|array
argument_list|(
literal|"field1"
argument_list|,
name|values1
operator|.
name|toArray
argument_list|()
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"nested2"
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|value1
range|:
name|values2
control|)
block|{
name|source
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
name|value1
argument_list|)
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
name|source
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|indexRandom
argument_list|(
literal|false
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"idx"
argument_list|,
literal|"type2"
argument_list|)
operator|.
name|setRouting
argument_list|(
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|simple_reverseNestedToRoot
specifier|public
name|void
name|simple_reverseNestedToRoot
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setTypes
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|nested
argument_list|(
literal|"nested1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nested1"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|terms
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"nested1.field2"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|reverseNested
argument_list|(
literal|"nested1_to_field1"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|terms
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|verifyResults
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|simple_reverseNestedToNested1
specifier|public
name|void
name|simple_reverseNestedToNested1
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|nested
argument_list|(
literal|"nested1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nested1.nested2"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|terms
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"nested1.nested2.field2"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|reverseNested
argument_list|(
literal|"nested1_to_field1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nested1"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|terms
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"nested1.field1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|verifyResults
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|SearchPhaseExecutionException
operator|.
name|class
argument_list|)
DECL|method|testReverseNestedAggWithoutNestedAgg
specifier|public
name|void
name|testReverseNestedAggWithoutNestedAgg
parameter_list|()
throws|throws
name|Exception
block|{
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|terms
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"nested1.nested2.field2"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|reverseNested
argument_list|(
literal|"nested1_to_field1"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|terms
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"nested1.field1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
DECL|method|verifyResults
specifier|private
name|void
name|verifyResults
parameter_list|(
name|SearchResponse
name|response
parameter_list|)
block|{
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Nested
name|nested
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"nested1"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|nested
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|nested
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|nested
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|25l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|nested
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Terms
name|usernames
init|=
name|nested
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|usernames
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|usernames
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Terms
operator|.
name|Bucket
argument_list|>
name|usernameBuckets
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|usernames
operator|.
name|getBuckets
argument_list|()
argument_list|)
decl_stmt|;
comment|// nested.field2: 1
name|Terms
operator|.
name|Bucket
name|bucket
init|=
name|usernameBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|6l
argument_list|)
argument_list|)
expr_stmt|;
name|ReverseNested
name|reverseNested
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"nested1_to_field1"
argument_list|)
decl_stmt|;
name|Terms
name|tags
init|=
name|reverseNested
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Terms
operator|.
name|Bucket
argument_list|>
name|tagsBuckets
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|tags
operator|.
name|getBuckets
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"e"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
comment|// nested.field2: 4
name|bucket
operator|=
name|usernameBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4l
argument_list|)
argument_list|)
expr_stmt|;
name|reverseNested
operator|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"nested1_to_field1"
argument_list|)
expr_stmt|;
name|tags
operator|=
name|reverseNested
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
expr_stmt|;
name|tagsBuckets
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|tags
operator|.
name|getBuckets
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"e"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
comment|// nested.field2: 7
name|bucket
operator|=
name|usernameBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"7"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|reverseNested
operator|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"nested1_to_field1"
argument_list|)
expr_stmt|;
name|tags
operator|=
name|reverseNested
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
expr_stmt|;
name|tagsBuckets
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|tags
operator|.
name|getBuckets
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"e"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
comment|// nested.field2: 2
name|bucket
operator|=
name|usernameBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|reverseNested
operator|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"nested1_to_field1"
argument_list|)
expr_stmt|;
name|tags
operator|=
name|reverseNested
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
expr_stmt|;
name|tagsBuckets
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|tags
operator|.
name|getBuckets
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
comment|// nested.field2: 3
name|bucket
operator|=
name|usernameBuckets
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|reverseNested
operator|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"nested1_to_field1"
argument_list|)
expr_stmt|;
name|tags
operator|=
name|reverseNested
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
expr_stmt|;
name|tagsBuckets
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|tags
operator|.
name|getBuckets
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
comment|// nested.field2: 5
name|bucket
operator|=
name|usernameBuckets
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|reverseNested
operator|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"nested1_to_field1"
argument_list|)
expr_stmt|;
name|tags
operator|=
name|reverseNested
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
expr_stmt|;
name|tagsBuckets
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|tags
operator|.
name|getBuckets
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"z"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
comment|// nested.field2: 6
name|bucket
operator|=
name|usernameBuckets
operator|.
name|get
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"6"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|reverseNested
operator|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"nested1_to_field1"
argument_list|)
expr_stmt|;
name|tags
operator|=
name|reverseNested
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
expr_stmt|;
name|tagsBuckets
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|tags
operator|.
name|getBuckets
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
comment|// nested.field2: 8
name|bucket
operator|=
name|usernameBuckets
operator|.
name|get
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"8"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|reverseNested
operator|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"nested1_to_field1"
argument_list|)
expr_stmt|;
name|tags
operator|=
name|reverseNested
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
expr_stmt|;
name|tagsBuckets
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|tags
operator|.
name|getBuckets
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"e"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
comment|// nested.field2: 9
name|bucket
operator|=
name|usernameBuckets
operator|.
name|get
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"9"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|reverseNested
operator|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"nested1_to_field1"
argument_list|)
expr_stmt|;
name|tags
operator|=
name|reverseNested
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
expr_stmt|;
name|tagsBuckets
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|tags
operator|.
name|getBuckets
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"e"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"z"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|tagsBuckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

