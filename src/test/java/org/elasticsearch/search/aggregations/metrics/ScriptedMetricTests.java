begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.metrics
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|indexedscripts
operator|.
name|put
operator|.
name|PutIndexedScriptResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|Aggregation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|histogram
operator|.
name|Histogram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|scripted
operator|.
name|ScriptedMetric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchIntegrationTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchIntegrationTest
operator|.
name|ClusterScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchIntegrationTest
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|matchAllQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|histogram
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|scriptedMetric
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertSearchResponse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_class
annotation|@
name|ClusterScope
argument_list|(
name|scope
operator|=
name|Scope
operator|.
name|SUITE
argument_list|)
annotation|@
name|ElasticsearchIntegrationTest
operator|.
name|SuiteScopeTest
DECL|class|ScriptedMetricTests
specifier|public
class|class
name|ScriptedMetricTests
extends|extends
name|ElasticsearchIntegrationTest
block|{
DECL|field|numDocs
specifier|private
specifier|static
name|long
name|numDocs
decl_stmt|;
annotation|@
name|Override
DECL|method|setupSuiteScopeCluster
specifier|public
name|void
name|setupSuiteScopeCluster
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"idx"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|builders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|numDocs
operator|=
name|randomIntBetween
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|builders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"idx"
argument_list|,
literal|"type"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"value"
argument_list|,
name|randomAsciiOfLengthBetween
argument_list|(
literal|5
argument_list|,
literal|15
argument_list|)
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|builders
argument_list|)
expr_stmt|;
comment|// creating an index to test the empty buckets functionality. The way it
comment|// works is by indexing
comment|// two docs {value: 0} and {value : 2}, then building a histogram agg
comment|// with interval 1 and with empty
comment|// buckets computed.. the empty bucket is the one associated with key
comment|// "1". then each test will have
comment|// to check that this bucket exists with the appropriate sub
comment|// aggregations.
name|prepareCreate
argument_list|(
literal|"empty_bucket_idx"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=integer"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|builders
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|builders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"empty_bucket_idx"
argument_list|,
literal|"type"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"value"
argument_list|,
name|i
operator|*
literal|2
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|PutIndexedScriptResponse
name|indexScriptResponse
init|=
name|client
argument_list|()
operator|.
name|preparePutIndexedScript
argument_list|(
literal|"groovy"
argument_list|,
literal|"initScript_indexed"
argument_list|,
literal|"{\"script\":\"vars.multiplier = 3\"}"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|indexScriptResponse
operator|.
name|isCreated
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|indexScriptResponse
operator|=
name|client
argument_list|()
operator|.
name|preparePutIndexedScript
argument_list|(
literal|"groovy"
argument_list|,
literal|"mapScript_indexed"
argument_list|,
literal|"{\"script\":\"_agg.add(vars.multiplier)\"}"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|indexScriptResponse
operator|.
name|isCreated
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|indexScriptResponse
operator|=
name|client
argument_list|()
operator|.
name|preparePutIndexedScript
argument_list|(
literal|"groovy"
argument_list|,
literal|"combineScript_indexed"
argument_list|,
literal|"{\"script\":\"newaggregation = []; sum = 0;for (a in _agg) { sum += a}; newaggregation.add(sum); return newaggregation\"}"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|indexScriptResponse
operator|.
name|isCreated
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|indexScriptResponse
operator|=
name|client
argument_list|()
operator|.
name|preparePutIndexedScript
argument_list|(
literal|"groovy"
argument_list|,
literal|"reduceScript_indexed"
argument_list|,
literal|"{\"script\":\"newaggregation = []; sum = 0;for (agg in _aggs) { for (a in agg) { sum += a} }; newaggregation.add(sum); return newaggregation\"}"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|indexScriptResponse
operator|.
name|isCreated
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|builders
argument_list|)
expr_stmt|;
name|ensureSearchable
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|nodeSettings
specifier|protected
name|Settings
name|nodeSettings
parameter_list|(
name|int
name|nodeOrdinal
parameter_list|)
block|{
name|Settings
name|settings
init|=
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|super
operator|.
name|nodeSettings
argument_list|(
name|nodeOrdinal
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"path.conf"
argument_list|,
name|getResource
argument_list|(
literal|"/org/elasticsearch/search/aggregations/metrics/scripted/conf"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|settings
return|;
block|}
annotation|@
name|Test
DECL|method|testMap
specifier|public
name|void
name|testMap
parameter_list|()
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|mapScript
argument_list|(
literal|"_agg['count'] = 1"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|getNumShards
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|numPrimaries
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Object
name|object
range|:
name|aggregationList
control|)
block|{
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|Map
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|map
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|object
decl_stmt|;
name|assertThat
argument_list|(
name|map
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|map
operator|.
name|get
argument_list|(
literal|"count"
argument_list|)
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|map
operator|.
name|get
argument_list|(
literal|"count"
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Number
operator|)
name|map
operator|.
name|get
argument_list|(
literal|"count"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|Number
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testMap_withParams
specifier|public
name|void
name|testMap_withParams
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|mapScript
argument_list|(
literal|"_agg.add(1)"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|getNumShards
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|numPrimaries
argument_list|)
argument_list|)
expr_stmt|;
name|long
name|totalCount
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Object
name|object
range|:
name|aggregationList
control|)
block|{
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|list
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|object
decl_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|list
control|)
block|{
name|assertThat
argument_list|(
name|o
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|o
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Number
name|numberValue
init|=
operator|(
name|Number
operator|)
name|o
decl_stmt|;
name|assertThat
argument_list|(
name|numberValue
argument_list|,
name|equalTo
argument_list|(
operator|(
name|Number
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|totalCount
operator|+=
name|numberValue
operator|.
name|longValue
argument_list|()
expr_stmt|;
block|}
block|}
name|assertThat
argument_list|(
name|totalCount
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInitMap_withParams
specifier|public
name|void
name|testInitMap_withParams
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|varsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|varsMap
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"vars"
argument_list|,
name|varsMap
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|initScript
argument_list|(
literal|"vars.multiplier = 3"
argument_list|)
operator|.
name|mapScript
argument_list|(
literal|"_agg.add(vars.multiplier)"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|getNumShards
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|numPrimaries
argument_list|)
argument_list|)
expr_stmt|;
name|long
name|totalCount
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Object
name|object
range|:
name|aggregationList
control|)
block|{
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|list
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|object
decl_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|list
control|)
block|{
name|assertThat
argument_list|(
name|o
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|o
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Number
name|numberValue
init|=
operator|(
name|Number
operator|)
name|o
decl_stmt|;
name|assertThat
argument_list|(
name|numberValue
argument_list|,
name|equalTo
argument_list|(
operator|(
name|Number
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|totalCount
operator|+=
name|numberValue
operator|.
name|longValue
argument_list|()
expr_stmt|;
block|}
block|}
name|assertThat
argument_list|(
name|totalCount
argument_list|,
name|equalTo
argument_list|(
name|numDocs
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMapCombine_withParams
specifier|public
name|void
name|testMapCombine_withParams
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|varsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|varsMap
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"vars"
argument_list|,
name|varsMap
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|mapScript
argument_list|(
literal|"_agg.add(1)"
argument_list|)
operator|.
name|combineScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (a in _agg) { sum += a}; newaggregation.add(sum); return newaggregation"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|getNumShards
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|numPrimaries
argument_list|)
argument_list|)
expr_stmt|;
name|long
name|totalCount
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Object
name|object
range|:
name|aggregationList
control|)
block|{
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|list
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|object
decl_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|list
control|)
block|{
name|assertThat
argument_list|(
name|o
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|o
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Number
name|numberValue
init|=
operator|(
name|Number
operator|)
name|o
decl_stmt|;
name|assertThat
argument_list|(
name|numberValue
operator|.
name|longValue
argument_list|()
argument_list|,
name|allOf
argument_list|(
name|greaterThanOrEqualTo
argument_list|(
literal|1l
argument_list|)
argument_list|,
name|lessThanOrEqualTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|totalCount
operator|+=
name|numberValue
operator|.
name|longValue
argument_list|()
expr_stmt|;
block|}
block|}
name|assertThat
argument_list|(
name|totalCount
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInitMapCombine_withParams
specifier|public
name|void
name|testInitMapCombine_withParams
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|varsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|varsMap
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"vars"
argument_list|,
name|varsMap
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|initScript
argument_list|(
literal|"vars.multiplier = 3"
argument_list|)
operator|.
name|mapScript
argument_list|(
literal|"_agg.add(vars.multiplier)"
argument_list|)
operator|.
name|combineScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (a in _agg) { sum += a}; newaggregation.add(sum); return newaggregation"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|getNumShards
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|numPrimaries
argument_list|)
argument_list|)
expr_stmt|;
name|long
name|totalCount
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Object
name|object
range|:
name|aggregationList
control|)
block|{
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|list
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|object
decl_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|list
control|)
block|{
name|assertThat
argument_list|(
name|o
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|o
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Number
name|numberValue
init|=
operator|(
name|Number
operator|)
name|o
decl_stmt|;
name|assertThat
argument_list|(
name|numberValue
operator|.
name|longValue
argument_list|()
argument_list|,
name|allOf
argument_list|(
name|greaterThanOrEqualTo
argument_list|(
literal|3l
argument_list|)
argument_list|,
name|lessThanOrEqualTo
argument_list|(
name|numDocs
operator|*
literal|3
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|totalCount
operator|+=
name|numberValue
operator|.
name|longValue
argument_list|()
expr_stmt|;
block|}
block|}
name|assertThat
argument_list|(
name|totalCount
argument_list|,
name|equalTo
argument_list|(
name|numDocs
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInitMapCombineReduce_withParams
specifier|public
name|void
name|testInitMapCombineReduce_withParams
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|varsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|varsMap
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"vars"
argument_list|,
name|varsMap
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|initScript
argument_list|(
literal|"vars.multiplier = 3"
argument_list|)
operator|.
name|mapScript
argument_list|(
literal|"_agg.add(vars.multiplier)"
argument_list|)
operator|.
name|combineScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (a in _agg) { sum += a}; newaggregation.add(sum); return newaggregation"
argument_list|)
operator|.
name|reduceScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (aggregation in _aggs) { for (a in aggregation) { sum += a} }; newaggregation.add(sum); return newaggregation"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|object
init|=
name|aggregationList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|object
operator|)
operator|.
name|longValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMapCombineReduce_withParams
specifier|public
name|void
name|testMapCombineReduce_withParams
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|varsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|varsMap
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"vars"
argument_list|,
name|varsMap
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|mapScript
argument_list|(
literal|"_agg.add(vars.multiplier)"
argument_list|)
operator|.
name|combineScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (a in _agg) { sum += a}; newaggregation.add(sum); return newaggregation"
argument_list|)
operator|.
name|reduceScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (aggregation in _aggs) { for (a in aggregation) { sum += a} }; newaggregation.add(sum); return newaggregation"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|object
init|=
name|aggregationList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|object
operator|)
operator|.
name|longValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInitMapReduce_withParams
specifier|public
name|void
name|testInitMapReduce_withParams
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|varsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|varsMap
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"vars"
argument_list|,
name|varsMap
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|initScript
argument_list|(
literal|"vars.multiplier = 3"
argument_list|)
operator|.
name|mapScript
argument_list|(
literal|"_agg.add(vars.multiplier)"
argument_list|)
operator|.
name|reduceScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (aggregation in _aggs) { for (a in aggregation) { sum += a} }; newaggregation.add(sum); return newaggregation"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|object
init|=
name|aggregationList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|object
operator|)
operator|.
name|longValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMapReduce_withParams
specifier|public
name|void
name|testMapReduce_withParams
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|varsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|varsMap
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"vars"
argument_list|,
name|varsMap
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|mapScript
argument_list|(
literal|"_agg.add(vars.multiplier)"
argument_list|)
operator|.
name|reduceScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (aggregation in _aggs) { for (a in aggregation) { sum += a} }; newaggregation.add(sum); return newaggregation"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|object
init|=
name|aggregationList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|object
operator|)
operator|.
name|longValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInitMapCombineReduce_withParamsAndReduceParams
specifier|public
name|void
name|testInitMapCombineReduce_withParamsAndReduceParams
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|varsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|varsMap
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"vars"
argument_list|,
name|varsMap
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|reduceParams
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|reduceParams
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|reduceParams
argument_list|(
name|reduceParams
argument_list|)
operator|.
name|initScript
argument_list|(
literal|"vars.multiplier = 3"
argument_list|)
operator|.
name|mapScript
argument_list|(
literal|"_agg.add(vars.multiplier)"
argument_list|)
operator|.
name|combineScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (a in _agg) { sum += a}; newaggregation.add(sum); return newaggregation"
argument_list|)
operator|.
name|reduceScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (aggregation in _aggs) { for (a in aggregation) { sum += a} }; newaggregation.add(sum * multiplier); return newaggregation"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|object
init|=
name|aggregationList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|object
operator|)
operator|.
name|longValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
operator|*
literal|12
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInitMapCombineReduce_withParams_Indexed
specifier|public
name|void
name|testInitMapCombineReduce_withParams_Indexed
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|varsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|varsMap
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"vars"
argument_list|,
name|varsMap
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|initScriptId
argument_list|(
literal|"initScript_indexed"
argument_list|)
operator|.
name|mapScriptId
argument_list|(
literal|"mapScript_indexed"
argument_list|)
operator|.
name|combineScriptId
argument_list|(
literal|"combineScript_indexed"
argument_list|)
operator|.
name|reduceScriptId
argument_list|(
literal|"reduceScript_indexed"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|object
init|=
name|aggregationList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|object
operator|)
operator|.
name|longValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInitMapCombineReduce_withParams_File
specifier|public
name|void
name|testInitMapCombineReduce_withParams_File
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|varsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|varsMap
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"vars"
argument_list|,
name|varsMap
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|initScriptFile
argument_list|(
literal|"init_script"
argument_list|)
operator|.
name|mapScriptFile
argument_list|(
literal|"map_script"
argument_list|)
operator|.
name|combineScriptFile
argument_list|(
literal|"combine_script"
argument_list|)
operator|.
name|reduceScriptFile
argument_list|(
literal|"reduce_script"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|Aggregation
name|aggregation
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregation
argument_list|,
name|instanceOf
argument_list|(
name|ScriptedMetric
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetricAggregation
init|=
operator|(
name|ScriptedMetric
operator|)
name|aggregation
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|aggregationList
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scriptedMetricAggregation
operator|.
name|aggregation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregationList
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|object
init|=
name|aggregationList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|object
argument_list|,
name|instanceOf
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|object
operator|)
operator|.
name|longValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEmptyAggregation
specifier|public
name|void
name|testEmptyAggregation
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|varsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|varsMap
operator|.
name|put
argument_list|(
literal|"multiplier"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"_agg"
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"vars"
argument_list|,
name|varsMap
argument_list|)
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"empty_bucket_idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|interval
argument_list|(
literal|1l
argument_list|)
operator|.
name|minDocCount
argument_list|(
literal|0
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|scriptedMetric
argument_list|(
literal|"scripted"
argument_list|)
operator|.
name|params
argument_list|(
name|params
argument_list|)
operator|.
name|initScript
argument_list|(
literal|"vars.multiplier = 3"
argument_list|)
operator|.
name|mapScript
argument_list|(
literal|"_agg.add(vars.multiplier)"
argument_list|)
operator|.
name|combineScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (a in _agg) { sum += a}; newaggregation.add(sum); return newaggregation"
argument_list|)
operator|.
name|reduceScript
argument_list|(
literal|"newaggregation = []; sum = 0;for (aggregation in _aggs) { for (a in aggregation) { sum += a} }; newaggregation.add(sum); return newaggregation"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|Histogram
name|histo
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|histo
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|Histogram
operator|.
name|Bucket
name|bucket
init|=
name|histo
operator|.
name|getBucketByKey
argument_list|(
literal|1l
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|ScriptedMetric
name|scriptedMetric
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"scripted"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|scriptedMetric
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetric
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scripted"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scriptedMetric
operator|.
name|aggregation
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

