begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.facet.terms
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|terms
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|AbstractSharedClusterTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticSearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|matchAllQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|FacetBuilders
operator|.
name|termsFacet
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|UnmappedFieldsTermsFacetsTests
specifier|public
class|class
name|UnmappedFieldsTermsFacetsTests
extends|extends
name|AbstractSharedClusterTest
block|{
annotation|@
name|Override
DECL|method|getSettings
specifier|public
name|Settings
name|getSettings
parameter_list|()
block|{
return|return
name|randomSettingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.number_of_shards"
argument_list|,
name|numberOfShards
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.number_of_replicas"
argument_list|,
literal|0
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|numberOfShards
specifier|protected
name|int
name|numberOfShards
parameter_list|()
block|{
return|return
literal|5
return|;
block|}
annotation|@
name|Override
DECL|method|numberOfNodes
specifier|protected
name|int
name|numberOfNodes
parameter_list|()
block|{
return|return
literal|1
return|;
block|}
comment|/**      * Tests the terms facet when faceting on unmapped field      */
annotation|@
name|Test
DECL|method|testUnmappedField
specifier|public
name|void
name|testUnmappedField
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"idx"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setWaitForEvents
argument_list|(
name|Priority
operator|.
name|LANGUID
argument_list|)
operator|.
name|setWaitForGreenStatus
argument_list|()
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"idx"
argument_list|,
literal|"type"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"mapped"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
block|}
name|flushAndRefresh
argument_list|()
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"mapped"
argument_list|)
operator|.
name|field
argument_list|(
literal|"mapped"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"unmapped_bool"
argument_list|)
operator|.
name|field
argument_list|(
literal|"unmapped_bool"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"unmapped_str"
argument_list|)
operator|.
name|field
argument_list|(
literal|"unmapped_str"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"unmapped_byte"
argument_list|)
operator|.
name|field
argument_list|(
literal|"unmapped_byte"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"unmapped_short"
argument_list|)
operator|.
name|field
argument_list|(
literal|"unmapped_short"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"unmapped_int"
argument_list|)
operator|.
name|field
argument_list|(
literal|"unmapped_int"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"unmapped_long"
argument_list|)
operator|.
name|field
argument_list|(
literal|"unmapped_long"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"unmapped_float"
argument_list|)
operator|.
name|field
argument_list|(
literal|"unmapped_float"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"unmapped_double"
argument_list|)
operator|.
name|field
argument_list|(
literal|"unmapped_double"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
comment|// all values should be returned for the mapped field
name|TermsFacet
name|facet
init|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"mapped"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"mapped"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
comment|// no values should be returned for the unmapped field (all docs are missing)
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"unmapped_str"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"unmapped_str"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"unmapped_bool"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"unmapped_bool"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"unmapped_byte"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"unmapped_byte"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"unmapped_short"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"unmapped_short"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"unmapped_int"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"unmapped_int"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"unmapped_long"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"unmapped_long"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"unmapped_float"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"unmapped_float"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"unmapped_double"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"unmapped_double"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Tests the terms facet when faceting on partially unmapped field. An example for this scenario is when searching      * across indices, where the field is mapped in some indices and unmapped in others.      */
annotation|@
name|Test
DECL|method|testPartiallyUnmappedField
specifier|public
name|void
name|testPartiallyUnmappedField
parameter_list|()
throws|throws
name|ElasticSearchException
throws|,
name|IOException
block|{
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
literal|"mapped_idx"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|getSettings
argument_list|()
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"partially_mapped_byte"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"byte"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"partially_mapped_short"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"short"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"partially_mapped_int"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"integer"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"partially_mapped_long"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"long"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"partially_mapped_float"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"float"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"partially_mapped_double"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"double"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setWaitForEvents
argument_list|(
name|Priority
operator|.
name|LANGUID
argument_list|)
operator|.
name|setWaitForGreenStatus
argument_list|()
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|createIndex
argument_list|(
literal|"unmapped_idx"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setWaitForEvents
argument_list|(
name|Priority
operator|.
name|LANGUID
argument_list|)
operator|.
name|setWaitForGreenStatus
argument_list|()
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"mapped_idx"
argument_list|,
literal|"type"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"mapped"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_str"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_bool"
argument_list|,
name|i
operator|%
literal|2
operator|==
literal|0
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_byte"
argument_list|,
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_short"
argument_list|,
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_int"
argument_list|,
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_long"
argument_list|,
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_float"
argument_list|,
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_double"
argument_list|,
name|i
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|10
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"unmapped_idx"
argument_list|,
literal|"type"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"mapped"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
block|}
name|flushAndRefresh
argument_list|()
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"mapped_idx"
argument_list|,
literal|"unmapped_idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"mapped"
argument_list|)
operator|.
name|field
argument_list|(
literal|"mapped"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"partially_mapped_str"
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_str"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"partially_mapped_bool"
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_bool"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"partially_mapped_byte"
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_byte"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"partially_mapped_short"
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_short"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"partially_mapped_int"
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_int"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"partially_mapped_long"
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_long"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"partially_mapped_float"
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_float"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"partially_mapped_double"
argument_list|)
operator|.
name|field
argument_list|(
literal|"partially_mapped_double"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|20l
argument_list|)
argument_list|)
expr_stmt|;
comment|// all values should be returned for the mapped field
name|TermsFacet
name|facet
init|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"mapped"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"mapped"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|20l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
comment|// only the values of the mapped index should be returned for the partially mapped field (all docs of
comment|// the unmapped index should be missing)
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"partially_mapped_str"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"partially_mapped_str"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"partially_mapped_bool"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"partially_mapped_bool"
argument_list|)
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|terms
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|TermsFacet
operator|.
name|Entry
name|entry
range|:
name|facet
operator|.
name|getEntries
argument_list|()
control|)
block|{
name|terms
operator|.
name|add
argument_list|(
name|entry
operator|.
name|getTerm
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
literal|"unexpected number of bool terms:"
operator|+
name|terms
argument_list|,
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"partially_mapped_byte"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"partially_mapped_byte"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"partially_mapped_short"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"partially_mapped_short"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"partially_mapped_int"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"partially_mapped_int"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"partially_mapped_long"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"partially_mapped_long"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"partially_mapped_float"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"partially_mapped_float"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"partially_mapped_float"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"partially_mapped_float"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getOtherCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMappedYetMissingField
specifier|public
name|void
name|testMappedYetMissingField
parameter_list|()
throws|throws
name|IOException
block|{
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|getSettings
argument_list|()
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"string"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"long"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"long"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"double"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"double"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setWaitForEvents
argument_list|(
name|Priority
operator|.
name|LANGUID
argument_list|)
operator|.
name|setWaitForGreenStatus
argument_list|()
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"idx"
argument_list|,
literal|"type"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
block|}
name|flushAndRefresh
argument_list|()
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"string"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"long"
argument_list|)
operator|.
name|field
argument_list|(
literal|"long"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"double"
argument_list|)
operator|.
name|field
argument_list|(
literal|"double"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|TermsFacet
name|facet
init|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"string"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"long"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"long"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"double"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"double"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Tests the terms facet when faceting on multiple fields      * case 1: some but not all the fields are mapped      * case 2: all the fields are unmapped      */
annotation|@
name|Test
DECL|method|testMultiFields
specifier|public
name|void
name|testMultiFields
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"idx"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setWaitForEvents
argument_list|(
name|Priority
operator|.
name|LANGUID
argument_list|)
operator|.
name|setWaitForGreenStatus
argument_list|()
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"idx"
argument_list|,
literal|"type"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"mapped_str"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"mapped_long"
argument_list|,
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"mapped_double"
argument_list|,
name|i
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
block|}
name|flushAndRefresh
argument_list|()
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"string"
argument_list|)
operator|.
name|fields
argument_list|(
literal|"mapped_str"
argument_list|,
literal|"unmapped"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"long"
argument_list|)
operator|.
name|fields
argument_list|(
literal|"mapped_long"
argument_list|,
literal|"unmapped"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"double"
argument_list|)
operator|.
name|fields
argument_list|(
literal|"mapped_double"
argument_list|,
literal|"unmapped"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
literal|"all_unmapped"
argument_list|)
operator|.
name|fields
argument_list|(
literal|"unmapped"
argument_list|,
literal|"unmapped_1"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|TermsFacet
name|facet
init|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"string"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"long"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"long"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"double"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"double"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|facet
operator|=
name|searchResponse
operator|.
name|getFacets
argument_list|()
operator|.
name|facet
argument_list|(
literal|"all_unmapped"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"all_unmapped"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getTotalCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|facet
operator|.
name|getMissingCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10l
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

