begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.scroll
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|scroll
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|type
operator|.
name|ParsedScrollId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchIntegrationTest
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
annotation|@
name|LuceneTestCase
operator|.
name|Slow
annotation|@
name|ElasticsearchIntegrationTest
operator|.
name|ClusterScope
argument_list|(
name|scope
operator|=
name|ElasticsearchIntegrationTest
operator|.
name|Scope
operator|.
name|SUITE
argument_list|)
DECL|class|SlowDuelScrollTests
specifier|public
class|class
name|SlowDuelScrollTests
extends|extends
name|DuelScrollTests
block|{
DECL|field|versions
specifier|private
specifier|final
name|Version
index|[]
name|versions
init|=
operator|new
name|Version
index|[]
block|{
name|Version
operator|.
name|CURRENT
block|,
name|ParsedScrollId
operator|.
name|SCROLL_SEARCH_AFTER_MINIMUM_VERSION
block|,
name|Version
operator|.
name|V_1_1_0
block|,
name|Version
operator|.
name|V_1_0_0
block|}
decl_stmt|;
annotation|@
name|Override
DECL|method|nodeSettings
specifier|protected
name|Settings
name|nodeSettings
parameter_list|(
name|int
name|nodeOrdinal
parameter_list|)
block|{
comment|// If we add a constructor to InternalNode that allows us to define a version, then in the TestCluster
comment|// we can start nodes with different versions and then we don't need this setting and would also be helpful
comment|// for other tests
name|Settings
name|settings
init|=
name|super
operator|.
name|nodeSettings
argument_list|(
name|nodeOrdinal
argument_list|)
decl_stmt|;
name|Version
name|randomVersion
init|=
name|versions
index|[
name|randomInt
argument_list|(
name|versions
operator|.
name|length
operator|-
literal|1
argument_list|)
index|]
decl_stmt|;
return|return
name|ImmutableSettings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|settings
argument_list|)
operator|.
name|put
argument_list|(
literal|"tests.mock.version"
argument_list|,
name|randomVersion
operator|.
name|id
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

