begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.mlt
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|mlt
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|Scroll
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|builder
operator|.
name|SearchSourceBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|VersionUtils
operator|.
name|randomVersion
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|*
import|;
end_import

begin_class
DECL|class|MoreLikeThisRequestTests
specifier|public
class|class
name|MoreLikeThisRequestTests
extends|extends
name|ElasticsearchTestCase
block|{
annotation|@
name|Test
DECL|method|testSerialization
specifier|public
name|void
name|testSerialization
parameter_list|()
throws|throws
name|IOException
block|{
name|MoreLikeThisRequest
name|mltRequest
init|=
operator|new
name|MoreLikeThisRequest
argument_list|(
name|randomAsciiOfLength
argument_list|(
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
operator|.
name|id
argument_list|(
name|randomAsciiOfLength
argument_list|(
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
operator|.
name|type
argument_list|(
name|randomAsciiOfLength
argument_list|(
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|boostTerms
argument_list|(
name|randomFloat
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|maxDocFreq
argument_list|(
name|randomInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|minDocFreq
argument_list|(
name|randomInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|maxQueryTerms
argument_list|(
name|randomInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|minWordLength
argument_list|(
name|randomInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|maxWordLength
argument_list|(
name|randomInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|percentTermsToMatch
argument_list|(
name|randomFloat
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|searchTypes
argument_list|(
name|randomStrings
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|searchType
argument_list|(
name|randomFrom
argument_list|(
name|SearchType
operator|.
name|values
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|searchIndices
argument_list|(
name|randomStrings
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|routing
argument_list|(
name|randomAsciiOfLength
argument_list|(
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|searchFrom
argument_list|(
name|randomInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|searchSize
argument_list|(
name|randomInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|searchScroll
argument_list|(
operator|new
name|Scroll
argument_list|(
name|TimeValue
operator|.
name|timeValueNanos
argument_list|(
name|randomLong
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|searchSource
argument_list|(
name|SearchSourceBuilder
operator|.
name|searchSource
argument_list|()
operator|.
name|query
argument_list|(
name|QueryBuilders
operator|.
name|termQuery
argument_list|(
literal|"term"
argument_list|,
literal|"value"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|include
argument_list|(
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|stopWords
argument_list|(
name|randomStrings
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|mltRequest
operator|.
name|fields
argument_list|(
name|randomStrings
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|BytesStreamOutput
name|out
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|out
operator|.
name|setVersion
argument_list|(
name|randomVersion
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|mltRequest
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|BytesStreamInput
name|in
init|=
operator|new
name|BytesStreamInput
argument_list|(
name|out
operator|.
name|bytes
argument_list|()
argument_list|)
decl_stmt|;
name|in
operator|.
name|setVersion
argument_list|(
name|out
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|MoreLikeThisRequest
name|mltRequest2
init|=
operator|new
name|MoreLikeThisRequest
argument_list|()
decl_stmt|;
name|mltRequest2
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|index
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|index
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|type
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|type
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|id
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|boostTerms
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|boostTerms
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|maxDocFreq
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|maxDocFreq
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|minDocFreq
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|minDocFreq
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|maxQueryTerms
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|maxQueryTerms
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|minWordLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|minWordLength
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|maxWordLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|maxWordLength
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|percentTermsToMatch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|percentTermsToMatch
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|searchTypes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|searchTypes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|searchType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|searchType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|searchIndices
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|searchIndices
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|routing
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|searchFrom
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|searchFrom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|searchSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|searchSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|mltRequest
operator|.
name|searchScroll
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|searchScroll
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|searchFrom
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|searchScroll
argument_list|()
operator|.
name|keepAlive
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|searchScroll
argument_list|()
operator|.
name|keepAlive
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mltRequest
operator|.
name|searchSource
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|searchSource
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|searchSource
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|searchSource
argument_list|()
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mltRequest
operator|.
name|stopWords
argument_list|()
operator|!=
literal|null
operator|&&
name|mltRequest
operator|.
name|stopWords
argument_list|()
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|stopWords
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|stopWords
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|stopWords
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mltRequest
operator|.
name|fields
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|fields
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Strings
operator|.
name|EMPTY_ARRAY
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|fields
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|fields
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|mltRequest2
operator|.
name|include
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|mltRequest
operator|.
name|include
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|randomStrings
specifier|private
specifier|static
name|String
index|[]
name|randomStrings
parameter_list|(
name|int
name|max
parameter_list|)
block|{
name|int
name|count
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
name|max
argument_list|)
decl_stmt|;
name|String
index|[]
name|strings
init|=
operator|new
name|String
index|[
name|count
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|strings
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|strings
index|[
name|i
index|]
operator|=
name|randomAsciiOfLength
argument_list|(
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|strings
return|;
block|}
block|}
end_class

end_unit

