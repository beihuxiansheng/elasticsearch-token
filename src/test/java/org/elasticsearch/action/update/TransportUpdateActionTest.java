begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.update
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|update
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchTimeoutException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ListenableActionFuture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|delete
operator|.
name|DeleteResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|DocumentMissingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|Engine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|IndexEngineModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|VersionConflictEngineException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchIntegrationTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_comment
comment|/**  * Tests to demonstrate the bug discussed in issue #6355 and pull request #6724. The tests validate the fix for that bug  * and similar situations.  */
end_comment

begin_class
DECL|class|TransportUpdateActionTest
specifier|public
class|class
name|TransportUpdateActionTest
extends|extends
name|ElasticsearchIntegrationTest
block|{
DECL|field|TYPE_NAME
specifier|private
specifier|static
specifier|final
name|String
name|TYPE_NAME
init|=
literal|"some-type"
decl_stmt|;
DECL|field|WAIT_FOR_RESPONSE_TIMEOUT
specifier|private
specifier|static
specifier|final
name|TimeValue
name|WAIT_FOR_RESPONSE_TIMEOUT
init|=
name|TimeValue
operator|.
name|timeValueSeconds
argument_list|(
literal|5
argument_list|)
decl_stmt|;
DECL|field|internalEngine
specifier|private
specifier|static
name|InternalEngineWithControllableTimingForTesting
name|internalEngine
decl_stmt|;
DECL|field|indexName
specifier|private
specifier|final
name|String
name|indexName
init|=
literal|"issue-6355-test-index-"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
decl_stmt|;
DECL|field|documentId
specifier|private
specifier|final
name|String
name|documentId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
comment|/**      * Creates an index which uses an implementation of {@link Engine} that allows the test to enforce specific timing      * (and, if needed, exceptional behavior) for request handling.      */
annotation|@
name|Before
DECL|method|createTestIndexAndInitTestEngine
specifier|public
name|void
name|createTestIndexAndInitTestEngine
parameter_list|()
block|{
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
name|indexName
argument_list|)
operator|.
name|setSettings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexEngineModule
operator|.
name|EngineSettings
operator|.
name|ENGINE_TYPE
argument_list|,
name|InternalEngineWithControllableTimingForTestingModule
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
literal|1
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|0
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|internalEngine
operator|=
name|InternalEngineWithControllableTimingForTesting
operator|.
name|currentTestInstance
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|resetTestEngine
specifier|public
name|void
name|resetTestEngine
parameter_list|()
block|{
name|internalEngine
operator|.
name|resetSemaphores
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|clearStaticFields
specifier|public
specifier|static
name|void
name|clearStaticFields
parameter_list|()
block|{
name|internalEngine
operator|=
literal|null
expr_stmt|;
block|}
comment|/**      * Checks correct behavior in case of an update request that does not include a retry_on_conflict parameter.      */
annotation|@
name|Test
annotation|@
name|LuceneTestCase
operator|.
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"ignore for now, is being worked on"
argument_list|)
DECL|method|shouldReceiveUpdateResponseWhenNotRetryingOnConflict
specifier|public
name|void
name|shouldReceiveUpdateResponseWhenNotRetryingOnConflict
parameter_list|()
block|{
name|sendAddRequestAndWaitUntilCompletelyDone
argument_list|(
name|documentId
argument_list|)
expr_stmt|;
name|ListenableActionFuture
argument_list|<
name|UpdateResponse
argument_list|>
name|updateFuture
init|=
name|executeUpdateAndDeleteRequestsWithIntendedTiming
argument_list|(
name|documentId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|verifyUpdateResponseCompletesExceptionally
argument_list|(
name|updateFuture
argument_list|,
name|VersionConflictEngineException
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
comment|/**      * Checks correct behavior in case of an update request that includes a retry_on_conflict parameter set to 1. This      * test demonstrates the bug described in issue #6355 and validates the fix. The scenario is based on real client      * requests that happen with a particular timing.      */
annotation|@
name|Test
annotation|@
name|LuceneTestCase
operator|.
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"ignore for now, is being worked on"
argument_list|)
DECL|method|shouldReceiveUpdateResponseWhenRetryingOnConflict
specifier|public
name|void
name|shouldReceiveUpdateResponseWhenRetryingOnConflict
parameter_list|()
block|{
name|sendAddRequestAndWaitUntilCompletelyDone
argument_list|(
name|documentId
argument_list|)
expr_stmt|;
name|ListenableActionFuture
argument_list|<
name|UpdateResponse
argument_list|>
name|updateFuture
init|=
name|executeUpdateAndDeleteRequestsWithIntendedTiming
argument_list|(
name|documentId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|verifyUpdateResponseCompletesExceptionally
argument_list|(
name|updateFuture
argument_list|,
name|DocumentMissingException
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
comment|/**      * Checks correct behavior in case of an upsert request that does not include a retry_on_conflict parameter.      */
annotation|@
name|Test
DECL|method|shouldReceiveUpsertResponseWhenNotRetryingOnConflict
specifier|public
name|void
name|shouldReceiveUpsertResponseWhenNotRetryingOnConflict
parameter_list|()
block|{
name|ListenableActionFuture
argument_list|<
name|UpdateResponse
argument_list|>
name|upsertFuture
init|=
name|updateDocument
argument_list|(
name|documentId
argument_list|,
literal|true
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|internalEngine
operator|.
name|letNextGetThrowException
argument_list|()
expr_stmt|;
name|verifyUpdateResponseCompletesExceptionally
argument_list|(
name|upsertFuture
argument_list|,
name|VersionConflictEngineException
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
comment|/**      * Checks correct behavior in case of an upsert request that includes a retry_on_conflict parameter set to 1. This      * was not originally covered by issue #6355, but the discussion for pull request #6724 revealed that the same bug      * may appear here as well. The scenario is based on a fake exception thrown when getting a document from the      * {@link Engine}, because unlike for the "update" case it turns out to be quite difficult to set up real client      * requests to trigger an exception in {@link UpdateHelper#prepare(UpdateRequest)} for the "upsert" case.      */
annotation|@
name|Test
annotation|@
name|LuceneTestCase
operator|.
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"ignore for now, is being worked on"
argument_list|)
DECL|method|shouldReceiveUpsertResponseWhenRetryingOnConflict
specifier|public
name|void
name|shouldReceiveUpsertResponseWhenRetryingOnConflict
parameter_list|()
block|{
comment|// send an upsert request and make sure the corresponding create operation has arrived in the internal engine
name|ListenableActionFuture
argument_list|<
name|UpdateResponse
argument_list|>
name|upsertFuture
init|=
name|updateDocument
argument_list|(
name|documentId
argument_list|,
literal|true
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|internalEngine
operator|.
name|waitUntilCreateOperationReceived
argument_list|()
expr_stmt|;
comment|// let another request cause a version conflict, triggering a retry of the upsert request
name|sendAddRequestAndWaitUntilCompletelyDone
argument_list|(
name|documentId
argument_list|)
expr_stmt|;
comment|// now complete the update request, but make sure the retry is going to fail when getting the document
name|internalEngine
operator|.
name|letCreateOperationBegin
argument_list|()
expr_stmt|;
name|internalEngine
operator|.
name|waitUntilCreateOperationFinished
argument_list|()
expr_stmt|;
name|internalEngine
operator|.
name|letNextGetThrowException
argument_list|()
expr_stmt|;
name|internalEngine
operator|.
name|letCreateOperationReturn
argument_list|()
expr_stmt|;
name|verifyUpdateResponseCompletesExceptionally
argument_list|(
name|upsertFuture
argument_list|,
name|VersionConflictEngineException
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyUpdateResponseCompletesExceptionally
specifier|private
name|void
name|verifyUpdateResponseCompletesExceptionally
parameter_list|(
name|ListenableActionFuture
argument_list|<
name|UpdateResponse
argument_list|>
name|updateFuture
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|Exception
argument_list|>
name|expectedExceptionClass
parameter_list|)
block|{
try|try
block|{
name|updateFuture
operator|.
name|actionGet
argument_list|(
name|WAIT_FOR_RESPONSE_TIMEOUT
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Future for update request did not complete exceptionally, but should."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ElasticsearchTimeoutException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Future for update request did not complete within "
operator|+
name|WAIT_FOR_RESPONSE_TIMEOUT
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"Future for update request completed with an unexpected exception."
argument_list|,
name|expectedExceptionClass
operator|.
name|isInstance
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|executeUpdateAndDeleteRequestsWithIntendedTiming
specifier|private
name|ListenableActionFuture
argument_list|<
name|UpdateResponse
argument_list|>
name|executeUpdateAndDeleteRequestsWithIntendedTiming
parameter_list|(
name|String
name|documentId
parameter_list|,
name|int
name|retryOnConflict
parameter_list|)
block|{
comment|// send an update request and make sure the corresponding index operation has arrived in the internal engine
name|ListenableActionFuture
argument_list|<
name|UpdateResponse
argument_list|>
name|updateFuture
init|=
name|updateDocument
argument_list|(
name|documentId
argument_list|,
literal|false
argument_list|,
name|retryOnConflict
argument_list|)
decl_stmt|;
name|internalEngine
operator|.
name|waitUntilIndexOperationReceived
argument_list|()
expr_stmt|;
name|sendDeleteRequestAndWaitUntilCompletelyDone
argument_list|(
name|documentId
argument_list|)
expr_stmt|;
comment|// now complete the index operation of the update request
name|internalEngine
operator|.
name|letIndexOperationBegin
argument_list|()
expr_stmt|;
name|internalEngine
operator|.
name|waitUntilIndexOperationFinished
argument_list|()
expr_stmt|;
name|internalEngine
operator|.
name|letIndexOperationReturn
argument_list|()
expr_stmt|;
return|return
name|updateFuture
return|;
block|}
DECL|method|sendAddRequestAndWaitUntilCompletelyDone
specifier|private
name|void
name|sendAddRequestAndWaitUntilCompletelyDone
parameter_list|(
name|String
name|documentId
parameter_list|)
block|{
name|ListenableActionFuture
argument_list|<
name|IndexResponse
argument_list|>
name|addFuture
init|=
name|addDocument
argument_list|(
name|documentId
argument_list|)
decl_stmt|;
name|internalEngine
operator|.
name|waitUntilIndexOperationReceived
argument_list|()
expr_stmt|;
name|internalEngine
operator|.
name|letIndexOperationBegin
argument_list|()
expr_stmt|;
name|internalEngine
operator|.
name|waitUntilIndexOperationFinished
argument_list|()
expr_stmt|;
name|internalEngine
operator|.
name|letIndexOperationReturn
argument_list|()
expr_stmt|;
name|waitUntilResponseReceived
argument_list|(
name|addFuture
argument_list|)
expr_stmt|;
block|}
DECL|method|sendDeleteRequestAndWaitUntilCompletelyDone
specifier|private
name|void
name|sendDeleteRequestAndWaitUntilCompletelyDone
parameter_list|(
name|String
name|documentId
parameter_list|)
block|{
name|ListenableActionFuture
argument_list|<
name|DeleteResponse
argument_list|>
name|deleteFuture
init|=
name|deleteDocument
argument_list|(
name|documentId
argument_list|)
decl_stmt|;
name|internalEngine
operator|.
name|waitUntilDeleteOperationReceived
argument_list|()
expr_stmt|;
name|internalEngine
operator|.
name|letDeleteOperationBegin
argument_list|()
expr_stmt|;
name|internalEngine
operator|.
name|waitUntilDeleteOperationFinished
argument_list|()
expr_stmt|;
name|internalEngine
operator|.
name|letDeleteOperationReturn
argument_list|()
expr_stmt|;
name|waitUntilResponseReceived
argument_list|(
name|deleteFuture
argument_list|)
expr_stmt|;
block|}
DECL|method|waitUntilResponseReceived
specifier|private
name|void
name|waitUntilResponseReceived
parameter_list|(
name|ListenableActionFuture
argument_list|<
name|?
argument_list|>
name|responseFuture
parameter_list|)
block|{
name|responseFuture
operator|.
name|actionGet
argument_list|(
name|WAIT_FOR_RESPONSE_TIMEOUT
argument_list|)
expr_stmt|;
block|}
DECL|method|addDocument
specifier|private
name|ListenableActionFuture
argument_list|<
name|IndexResponse
argument_list|>
name|addDocument
parameter_list|(
name|String
name|id
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|indexName
argument_list|,
name|TYPE_NAME
argument_list|,
name|id
argument_list|)
operator|.
name|setSource
argument_list|(
name|buildJson
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
return|;
block|}
DECL|method|updateDocument
specifier|private
name|ListenableActionFuture
argument_list|<
name|UpdateResponse
argument_list|>
name|updateDocument
parameter_list|(
name|String
name|id
parameter_list|,
name|boolean
name|upsert
parameter_list|,
name|int
name|retryOnConflict
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|prepareUpdate
argument_list|(
name|indexName
argument_list|,
name|TYPE_NAME
argument_list|,
name|id
argument_list|)
operator|.
name|setDoc
argument_list|(
name|buildJson
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|setDocAsUpsert
argument_list|(
name|upsert
argument_list|)
operator|.
name|setRetryOnConflict
argument_list|(
name|retryOnConflict
argument_list|)
operator|.
name|execute
argument_list|()
return|;
block|}
DECL|method|deleteDocument
specifier|private
name|ListenableActionFuture
argument_list|<
name|DeleteResponse
argument_list|>
name|deleteDocument
parameter_list|(
name|String
name|id
parameter_list|)
block|{
return|return
name|client
argument_list|()
operator|.
name|prepareDelete
argument_list|(
name|indexName
argument_list|,
name|TYPE_NAME
argument_list|,
name|id
argument_list|)
operator|.
name|execute
argument_list|()
return|;
block|}
DECL|method|buildJson
specifier|private
name|XContentBuilder
name|buildJson
parameter_list|(
name|String
name|id
parameter_list|)
block|{
try|try
block|{
return|return
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
name|id
argument_list|)
operator|.
name|endObject
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Not going to happen!"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

