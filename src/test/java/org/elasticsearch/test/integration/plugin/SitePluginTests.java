begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.integration.plugin
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|integration
operator|.
name|plugin
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|node
operator|.
name|internal
operator|.
name|InternalNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|integration
operator|.
name|AbstractNodesTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|integration
operator|.
name|rest
operator|.
name|helper
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|integration
operator|.
name|rest
operator|.
name|helper
operator|.
name|HttpClientResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
operator|.
name|settingsBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|containsString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_comment
comment|/**  * We want to test site plugins  */
end_comment

begin_class
DECL|class|SitePluginTests
specifier|public
class|class
name|SitePluginTests
extends|extends
name|AbstractNodesTests
block|{
annotation|@
name|Test
DECL|method|testRedirectSitePlugin
specifier|public
name|void
name|testRedirectSitePlugin
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
name|settings
init|=
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"path.plugins"
argument_list|,
literal|"target/test-classes/org/elasticsearch/test/integration/plugin/"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|InternalNode
name|node
init|=
operator|(
name|InternalNode
operator|)
name|buildNode
argument_list|(
literal|"test"
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|node
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// We use an HTTP Client to test redirection
name|HttpClientResponse
name|response
init|=
operator|new
name|HttpClient
argument_list|(
literal|"http://localhost:9200"
argument_list|)
operator|.
name|request
argument_list|(
literal|"/_plugin/dummy"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|errorCode
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|RestStatus
operator|.
name|MOVED_PERMANENTLY
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|response
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"/_plugin/dummy/"
argument_list|)
argument_list|)
expr_stmt|;
comment|// We test the real URL
name|response
operator|=
operator|new
name|HttpClient
argument_list|(
literal|"http://localhost:9200"
argument_list|)
operator|.
name|request
argument_list|(
literal|"/_plugin/dummy/"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|errorCode
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|RestStatus
operator|.
name|OK
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|response
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"<title>Dummy Site Plugin</title>"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

