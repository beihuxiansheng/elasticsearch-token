begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.integration.search.suggest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|integration
operator|.
name|search
operator|.
name|suggest
package|;
end_package

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|generators
operator|.
name|RandomStrings
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|health
operator|.
name|ClusterHealthStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|put
operator|.
name|PutMappingResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
operator|.
name|IndicesStatsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|suggest
operator|.
name|SuggestResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MapperException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|Suggest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|CompletionStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|CompletionSuggestion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|CompletionSuggestionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|CompletionSuggestionFuzzyBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|integration
operator|.
name|AbstractSharedClusterTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_REPLICAS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_SHARDS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
operator|.
name|settingsBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertNoFailures
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_class
DECL|class|CompletionSuggestSearchTests
specifier|public
class|class
name|CompletionSuggestSearchTests
extends|extends
name|AbstractSharedClusterTest
block|{
DECL|field|INDEX
specifier|private
specifier|static
specifier|final
name|String
name|INDEX
init|=
literal|"test"
decl_stmt|;
DECL|field|TYPE
specifier|private
specifier|static
specifier|final
name|String
name|TYPE
init|=
literal|"testType"
decl_stmt|;
DECL|field|FIELD
specifier|private
specifier|static
specifier|final
name|String
name|FIELD
init|=
literal|"testField"
decl_stmt|;
annotation|@
name|Test
DECL|method|testSimple
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|()
expr_stmt|;
name|String
index|[]
index|[]
name|input
init|=
block|{
block|{
literal|"Foo Fighters"
block|}
block|,
block|{
literal|"Foo Fighters"
block|}
block|,
block|{
literal|"Foo Fighters"
block|}
block|,
block|{
literal|"Foo Fighters"
block|}
block|,
block|{
literal|"Generator"
block|,
literal|"Foo Fighters Generator"
block|}
block|,
block|{
literal|"Learn to Fly"
block|,
literal|"Foo Fighters Learn to Fly"
block|}
block|,
block|{
literal|"The Prodigy"
block|}
block|,
block|{
literal|"The Prodigy"
block|}
block|,
block|{
literal|"The Prodigy"
block|}
block|,
block|{
literal|"Firestarter"
block|,
literal|"The Prodigy Firestarter"
block|}
block|,
block|{
literal|"Turbonegro"
block|}
block|,
block|{
literal|"Turbonegro"
block|}
block|,
block|{
literal|"Get it on"
block|,
literal|"Turbonegro Get it on"
block|}
block|}
decl_stmt|;
comment|// work with frequencies
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|input
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
name|input
index|[
name|i
index|]
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertSuggestionsNotInOrder
argument_list|(
literal|"f"
argument_list|,
literal|"Foo Fighters"
argument_list|,
literal|"Firestarter"
argument_list|,
literal|"Foo Fighters Generator"
argument_list|,
literal|"Foo Fighters Learn to Fly"
argument_list|)
expr_stmt|;
name|assertSuggestionsNotInOrder
argument_list|(
literal|"t"
argument_list|,
literal|"The Prodigy"
argument_list|,
literal|"Turbonegro"
argument_list|,
literal|"Turbonegro Get it on"
argument_list|,
literal|"The Prodigy Firestarter"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBasicPrefixSuggestion
specifier|public
name|void
name|testBasicPrefixSuggestion
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|createData
argument_list|(
name|i
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"f"
argument_list|,
literal|"Firestarter - The Prodigy"
argument_list|,
literal|"Foo Fighters"
argument_list|,
literal|"Generator - Foo Fighters"
argument_list|,
literal|"Learn to Fly - Foo Fighters"
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"ge"
argument_list|,
literal|"Generator - Foo Fighters"
argument_list|,
literal|"Get it on - Turbonegro"
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"ge"
argument_list|,
literal|"Generator - Foo Fighters"
argument_list|,
literal|"Get it on - Turbonegro"
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"t"
argument_list|,
literal|"The Prodigy"
argument_list|,
literal|"Firestarter - The Prodigy"
argument_list|,
literal|"Get it on - Turbonegro"
argument_list|,
literal|"Turbonegro"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testThatWeightsAreWorking
specifier|public
name|void
name|testThatWeightsAreWorking
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|similarNames
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"the"
argument_list|,
literal|"The Prodigy"
argument_list|,
literal|"The Verve"
argument_list|,
literal|"The the"
argument_list|)
decl_stmt|;
comment|// the weight is 1000 divided by string length, so the results are easy to to check
for|for
control|(
name|String
name|similarName
range|:
name|similarNames
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
name|similarName
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
name|similarName
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|1000
operator|/
name|similarName
operator|.
name|length
argument_list|()
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"the"
argument_list|,
literal|"the"
argument_list|,
literal|"The the"
argument_list|,
literal|"The Verve"
argument_list|,
literal|"The Prodigy"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatInputCanBeAStringInsteadOfAnArray
specifier|public
name|void
name|testThatInputCanBeAStringInsteadOfAnArray
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"Foo Fighters"
argument_list|)
operator|.
name|field
argument_list|(
literal|"output"
argument_list|,
literal|"Boo Fighters"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"f"
argument_list|,
literal|"Boo Fighters"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatPayloadsAreArbitraryJsonObjects
specifier|public
name|void
name|testThatPayloadsAreArbitraryJsonObjects
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Foo Fighters"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"output"
argument_list|,
literal|"Boo Fighters"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"payload"
argument_list|)
operator|.
name|field
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"test"
argument_list|)
operator|.
name|value
argument_list|(
literal|"spam"
argument_list|)
operator|.
name|value
argument_list|(
literal|"eggs"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|SuggestResponse
name|suggestResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionBuilder
argument_list|(
literal|"testSuggestions"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|"testSuggestions"
argument_list|,
literal|"Boo Fighters"
argument_list|)
expr_stmt|;
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
operator|.
name|Option
name|option
init|=
name|suggestResponse
operator|.
name|getSuggest
argument_list|()
operator|.
name|getSuggestion
argument_list|(
literal|"testSuggestions"
argument_list|)
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getOptions
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|option
argument_list|,
name|is
argument_list|(
name|instanceOf
argument_list|(
name|CompletionSuggestion
operator|.
name|Entry
operator|.
name|Option
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|CompletionSuggestion
operator|.
name|Entry
operator|.
name|Option
name|prefixOption
init|=
operator|(
name|CompletionSuggestion
operator|.
name|Entry
operator|.
name|Option
operator|)
name|option
decl_stmt|;
name|assertThat
argument_list|(
name|prefixOption
operator|.
name|getPayload
argument_list|()
argument_list|,
name|is
argument_list|(
name|notNullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// parse JSON
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|jsonMap
init|=
name|prefixOption
operator|.
name|getPayloadAsMap
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|jsonMap
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|jsonMap
operator|.
name|get
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|jsonMap
operator|.
name|get
argument_list|(
literal|"test"
argument_list|)
argument_list|,
name|is
argument_list|(
name|instanceOf
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|listValues
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|jsonMap
operator|.
name|get
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|listValues
argument_list|,
name|hasItems
argument_list|(
literal|"spam"
argument_list|,
literal|"eggs"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPayloadAsNumeric
specifier|public
name|void
name|testPayloadAsNumeric
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Foo Fighters"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"output"
argument_list|,
literal|"Boo Fighters"
argument_list|)
operator|.
name|field
argument_list|(
literal|"payload"
argument_list|,
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|SuggestResponse
name|suggestResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionBuilder
argument_list|(
literal|"testSuggestions"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|"testSuggestions"
argument_list|,
literal|"Boo Fighters"
argument_list|)
expr_stmt|;
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
operator|.
name|Option
name|option
init|=
name|suggestResponse
operator|.
name|getSuggest
argument_list|()
operator|.
name|getSuggestion
argument_list|(
literal|"testSuggestions"
argument_list|)
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getOptions
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|option
argument_list|,
name|is
argument_list|(
name|instanceOf
argument_list|(
name|CompletionSuggestion
operator|.
name|Entry
operator|.
name|Option
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|CompletionSuggestion
operator|.
name|Entry
operator|.
name|Option
name|prefixOption
init|=
operator|(
name|CompletionSuggestion
operator|.
name|Entry
operator|.
name|Option
operator|)
name|option
decl_stmt|;
name|assertThat
argument_list|(
name|prefixOption
operator|.
name|getPayload
argument_list|()
argument_list|,
name|is
argument_list|(
name|notNullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|prefixOption
operator|.
name|getPayloadAsLong
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPayloadAsString
specifier|public
name|void
name|testPayloadAsString
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Foo Fighters"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"output"
argument_list|,
literal|"Boo Fighters"
argument_list|)
operator|.
name|field
argument_list|(
literal|"payload"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|SuggestResponse
name|suggestResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionBuilder
argument_list|(
literal|"testSuggestions"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|"testSuggestions"
argument_list|,
literal|"Boo Fighters"
argument_list|)
expr_stmt|;
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
operator|.
name|Option
name|option
init|=
name|suggestResponse
operator|.
name|getSuggest
argument_list|()
operator|.
name|getSuggestion
argument_list|(
literal|"testSuggestions"
argument_list|)
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getOptions
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|option
argument_list|,
name|is
argument_list|(
name|instanceOf
argument_list|(
name|CompletionSuggestion
operator|.
name|Entry
operator|.
name|Option
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|CompletionSuggestion
operator|.
name|Entry
operator|.
name|Option
name|prefixOption
init|=
operator|(
name|CompletionSuggestion
operator|.
name|Entry
operator|.
name|Option
operator|)
name|option
decl_stmt|;
name|assertThat
argument_list|(
name|prefixOption
operator|.
name|getPayload
argument_list|()
argument_list|,
name|is
argument_list|(
name|notNullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|prefixOption
operator|.
name|getPayloadAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MapperException
operator|.
name|class
argument_list|)
DECL|method|testThatExceptionIsThrownWhenPayloadsAreDisabledButInIndexRequest
specifier|public
name|void
name|testThatExceptionIsThrownWhenPayloadsAreDisabledButInIndexRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|(
literal|"simple"
argument_list|,
literal|"simple"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Foo Fighters"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"output"
argument_list|,
literal|"Boo Fighters"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"payload"
argument_list|)
operator|.
name|value
argument_list|(
literal|"spam"
argument_list|)
operator|.
name|value
argument_list|(
literal|"eggs"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDisabledPreserveSeperators
specifier|public
name|void
name|testDisabledPreserveSeperators
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|(
literal|"simple"
argument_list|,
literal|"simple"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Foo Fighters"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|10
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"2"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Foof"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|20
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"foof"
argument_list|,
literal|"Foof"
argument_list|,
literal|"Foo Fighters"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEnabledPreserveSeperators
specifier|public
name|void
name|testEnabledPreserveSeperators
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|(
literal|"simple"
argument_list|,
literal|"simple"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Foo Fighters"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"2"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Foof"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"foof"
argument_list|,
literal|"Foof"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatMultipleInputsAreSupported
specifier|public
name|void
name|testThatMultipleInputsAreSupported
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|(
literal|"simple"
argument_list|,
literal|"simple"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Foo Fighters"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Fu Fighters"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"output"
argument_list|,
literal|"The incredible Foo Fighters"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
literal|"The incredible Foo Fighters"
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"fu"
argument_list|,
literal|"The incredible Foo Fighters"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatShortSyntaxIsWorking
specifier|public
name|void
name|testThatShortSyntaxIsWorking
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startArray
argument_list|(
name|FIELD
argument_list|)
operator|.
name|value
argument_list|(
literal|"The Prodigy Firestarter"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Firestarter"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"t"
argument_list|,
literal|"The Prodigy Firestarter"
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"f"
argument_list|,
literal|"Firestarter"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatDisablingPositionIncrementsWorkForStopwords
specifier|public
name|void
name|testThatDisablingPositionIncrementsWorkForStopwords
parameter_list|()
throws|throws
name|Exception
block|{
comment|// analyzer which removes stopwords... so may not be the simple one
name|createIndexAndMapping
argument_list|(
literal|"standard"
argument_list|,
literal|"standard"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"The Beatles"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"b"
argument_list|,
literal|"The Beatles"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatSynonymsWork
specifier|public
name|void
name|testThatSynonymsWork
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
operator|.
name|Builder
name|settingsBuilder
init|=
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"analysis.analyzer.suggest_analyzer_synonyms.type"
argument_list|,
literal|"custom"
argument_list|)
operator|.
name|put
argument_list|(
literal|"analysis.analyzer.suggest_analyzer_synonyms.tokenizer"
argument_list|,
literal|"standard"
argument_list|)
operator|.
name|putArray
argument_list|(
literal|"analysis.analyzer.suggest_analyzer_synonyms.filter"
argument_list|,
literal|"standard"
argument_list|,
literal|"lowercase"
argument_list|,
literal|"my_synonyms"
argument_list|)
operator|.
name|put
argument_list|(
literal|"analysis.filter.my_synonyms.type"
argument_list|,
literal|"synonym"
argument_list|)
operator|.
name|putArray
argument_list|(
literal|"analysis.filter.my_synonyms.synonyms"
argument_list|,
literal|"foo,renamed"
argument_list|)
decl_stmt|;
name|createIndexAndMappingAndSettings
argument_list|(
name|settingsBuilder
argument_list|,
literal|"suggest_analyzer_synonyms"
argument_list|,
literal|"suggest_analyzer_synonyms"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Foo Fighters"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|// get suggestions for renamed
name|assertSuggestions
argument_list|(
literal|"r"
argument_list|,
literal|"Foo Fighters"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatUpgradeToMultiFieldWorks
specifier|public
name|void
name|testThatUpgradeToMultiFieldWorks
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
operator|.
name|Builder
name|settingsBuilder
init|=
name|createDefaultSettings
argument_list|()
decl_stmt|;
specifier|final
name|XContentBuilder
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|TYPE
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addMapping
argument_list|(
name|TYPE
argument_list|,
name|mapping
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settingsBuilder
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setRefresh
argument_list|(
literal|true
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
name|FIELD
argument_list|,
literal|"Foo Fighters"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|PutMappingResponse
name|putMappingResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setType
argument_list|(
name|TYPE
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|TYPE
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"multi_field"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"fields"
argument_list|)
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"suggest"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"index_analyzer"
argument_list|,
literal|"simple"
argument_list|)
operator|.
name|field
argument_list|(
literal|"search_analyzer"
argument_list|,
literal|"simple"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putMappingResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|SuggestResponse
name|suggestResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionBuilder
argument_list|(
literal|"suggs"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
operator|+
literal|".suggest"
argument_list|)
operator|.
name|text
argument_list|(
literal|"f"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|"suggs"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setRefresh
argument_list|(
literal|true
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
name|FIELD
argument_list|,
literal|"Foo Fighters"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|waitForRelocation
argument_list|(
name|ClusterHealthStatus
operator|.
name|GREEN
argument_list|)
expr_stmt|;
name|SuggestResponse
name|afterReindexingResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionBuilder
argument_list|(
literal|"suggs"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
operator|+
literal|".suggest"
argument_list|)
operator|.
name|text
argument_list|(
literal|"f"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|afterReindexingResponse
argument_list|,
literal|"suggs"
argument_list|,
literal|"Foo Fighters"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatFuzzySuggesterWorks
specifier|public
name|void
name|testThatFuzzySuggesterWorks
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|(
literal|"simple"
argument_list|,
literal|"simple"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Nirvana"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|SuggestResponse
name|suggestResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionFuzzyBuilder
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"Nirv"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|false
argument_list|,
literal|"foo"
argument_list|,
literal|"Nirvana"
argument_list|)
expr_stmt|;
name|suggestResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionFuzzyBuilder
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"Nirw"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|false
argument_list|,
literal|"foo"
argument_list|,
literal|"Nirvana"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatFuzzySuggesterSupportsEditDistances
specifier|public
name|void
name|testThatFuzzySuggesterSupportsEditDistances
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|(
literal|"simple"
argument_list|,
literal|"simple"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Nirvana"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
comment|// edit distance 1
name|SuggestResponse
name|suggestResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionFuzzyBuilder
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"Norw"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|false
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
comment|// edit distance 2
name|suggestResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionFuzzyBuilder
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"Norw"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
operator|.
name|setFuzzyEditDistance
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|false
argument_list|,
literal|"foo"
argument_list|,
literal|"Nirvana"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatFuzzySuggesterSupportsTranspositions
specifier|public
name|void
name|testThatFuzzySuggesterSupportsTranspositions
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|(
literal|"simple"
argument_list|,
literal|"simple"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Nirvana"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|SuggestResponse
name|suggestResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionFuzzyBuilder
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"Nriv"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
operator|.
name|setFuzzyTranspositions
argument_list|(
literal|false
argument_list|)
operator|.
name|setFuzzyEditDistance
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|false
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|suggestResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionFuzzyBuilder
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"Nriv"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
operator|.
name|setFuzzyTranspositions
argument_list|(
literal|true
argument_list|)
operator|.
name|setFuzzyEditDistance
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|false
argument_list|,
literal|"foo"
argument_list|,
literal|"Nirvana"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatFuzzySuggesterSupportsMinPrefixLength
specifier|public
name|void
name|testThatFuzzySuggesterSupportsMinPrefixLength
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|(
literal|"simple"
argument_list|,
literal|"simple"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Nirvana"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|SuggestResponse
name|suggestResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionFuzzyBuilder
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"Nriva"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
operator|.
name|setFuzzyMinLength
argument_list|(
literal|6
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|false
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|suggestResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionFuzzyBuilder
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"Nrivan"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
operator|.
name|setFuzzyMinLength
argument_list|(
literal|6
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|false
argument_list|,
literal|"foo"
argument_list|,
literal|"Nirvana"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatFuzzySuggesterSupportsNonPrefixLength
specifier|public
name|void
name|testThatFuzzySuggesterSupportsNonPrefixLength
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexAndMapping
argument_list|(
literal|"simple"
argument_list|,
literal|"simple"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
literal|"Nirvana"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|SuggestResponse
name|suggestResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionFuzzyBuilder
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"Nirw"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
operator|.
name|setFuzzyPrefixLength
argument_list|(
literal|4
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|false
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|suggestResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionFuzzyBuilder
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"Nirvo"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
operator|.
name|setFuzzyPrefixLength
argument_list|(
literal|4
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|false
argument_list|,
literal|"foo"
argument_list|,
literal|"Nirvana"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatStatsAreWorking
specifier|public
name|void
name|testThatStatsAreWorking
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|otherField
init|=
literal|"testOtherField"
decl_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setSettings
argument_list|(
name|createDefaultSettings
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|PutMappingResponse
name|putMappingResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setType
argument_list|(
name|TYPE
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|TYPE
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"analyzer"
argument_list|,
literal|"simple"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|otherField
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"analyzer"
argument_list|,
literal|"simple"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putMappingResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
comment|// Index two entities
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setRefresh
argument_list|(
literal|true
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
name|FIELD
argument_list|,
literal|"Foo Fighters"
argument_list|)
operator|.
name|field
argument_list|(
name|otherField
argument_list|,
literal|"WHATEVER"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"2"
argument_list|)
operator|.
name|setRefresh
argument_list|(
literal|true
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
name|FIELD
argument_list|,
literal|"Bar Fighters"
argument_list|)
operator|.
name|field
argument_list|(
name|otherField
argument_list|,
literal|"WHATEVER2"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
comment|// Get all stats
name|IndicesStatsResponse
name|indicesStatsResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setIndices
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|CompletionStats
name|completionStats
init|=
name|indicesStatsResponse
operator|.
name|getIndex
argument_list|(
name|INDEX
argument_list|)
operator|.
name|getPrimaries
argument_list|()
operator|.
name|completion
decl_stmt|;
name|assertThat
argument_list|(
name|completionStats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|totalSizeInBytes
init|=
name|completionStats
operator|.
name|getSizeInBytes
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|totalSizeInBytes
argument_list|,
name|is
argument_list|(
name|greaterThan
argument_list|(
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|IndicesStatsResponse
name|singleFieldStats
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setIndices
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setCompletionFields
argument_list|(
name|FIELD
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|long
name|singleFieldSizeInBytes
init|=
name|singleFieldStats
operator|.
name|getIndex
argument_list|(
name|INDEX
argument_list|)
operator|.
name|getPrimaries
argument_list|()
operator|.
name|completion
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
name|FIELD
argument_list|)
decl_stmt|;
name|IndicesStatsResponse
name|otherFieldStats
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setIndices
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setCompletionFields
argument_list|(
name|otherField
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|long
name|otherFieldSizeInBytes
init|=
name|otherFieldStats
operator|.
name|getIndex
argument_list|(
name|INDEX
argument_list|)
operator|.
name|getPrimaries
argument_list|()
operator|.
name|completion
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
name|otherField
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|singleFieldSizeInBytes
operator|+
name|otherFieldSizeInBytes
argument_list|,
name|is
argument_list|(
name|totalSizeInBytes
argument_list|)
argument_list|)
expr_stmt|;
comment|// regexes
name|IndicesStatsResponse
name|regexFieldStats
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setIndices
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setCompletionFields
argument_list|(
literal|"test*"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|long
name|regexSizeInBytes
init|=
name|regexFieldStats
operator|.
name|getIndex
argument_list|(
name|INDEX
argument_list|)
operator|.
name|getPrimaries
argument_list|()
operator|.
name|completion
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|"test*"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|regexSizeInBytes
argument_list|,
name|is
argument_list|(
name|totalSizeInBytes
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|assertSuggestions
specifier|public
name|void
name|assertSuggestions
parameter_list|(
name|String
name|suggestion
parameter_list|,
name|String
modifier|...
name|suggestions
parameter_list|)
block|{
name|String
name|suggestionName
init|=
name|RandomStrings
operator|.
name|randomAsciiOfLength
argument_list|(
operator|new
name|Random
argument_list|()
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SuggestResponse
name|suggestResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionBuilder
argument_list|(
name|suggestionName
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
name|suggestion
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
name|suggestionName
argument_list|,
name|suggestions
argument_list|)
expr_stmt|;
block|}
DECL|method|assertSuggestionsNotInOrder
specifier|public
name|void
name|assertSuggestionsNotInOrder
parameter_list|(
name|String
name|suggestString
parameter_list|,
name|String
modifier|...
name|suggestions
parameter_list|)
block|{
name|String
name|suggestionName
init|=
name|RandomStrings
operator|.
name|randomAsciiOfLength
argument_list|(
operator|new
name|Random
argument_list|()
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SuggestResponse
name|suggestResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSuggest
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addSuggestion
argument_list|(
operator|new
name|CompletionSuggestionBuilder
argument_list|(
name|suggestionName
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
name|suggestString
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|false
argument_list|,
name|suggestionName
argument_list|,
name|suggestions
argument_list|)
expr_stmt|;
block|}
DECL|method|assertSuggestions
specifier|private
name|void
name|assertSuggestions
parameter_list|(
name|SuggestResponse
name|suggestResponse
parameter_list|,
name|String
name|name
parameter_list|,
name|String
modifier|...
name|suggestions
parameter_list|)
block|{
name|assertSuggestions
argument_list|(
name|suggestResponse
argument_list|,
literal|true
argument_list|,
name|name
argument_list|,
name|suggestions
argument_list|)
expr_stmt|;
block|}
DECL|method|assertSuggestions
specifier|private
name|void
name|assertSuggestions
parameter_list|(
name|SuggestResponse
name|suggestResponse
parameter_list|,
name|boolean
name|suggestionOrderStrict
parameter_list|,
name|String
name|name
parameter_list|,
name|String
modifier|...
name|suggestions
parameter_list|)
block|{
name|assertNoFailures
argument_list|(
name|suggestResponse
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|suggestResponse
operator|.
name|getSuggest
argument_list|()
operator|.
name|getSuggestion
argument_list|(
name|name
argument_list|)
argument_list|,
name|is
argument_list|(
name|notNullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Suggest
operator|.
name|Suggestion
argument_list|<
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
argument_list|<
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
operator|.
name|Option
argument_list|>
argument_list|>
name|suggestion
init|=
name|suggestResponse
operator|.
name|getSuggest
argument_list|()
operator|.
name|getSuggestion
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|suggestionList
init|=
name|getNames
argument_list|(
name|suggestion
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
operator|.
name|Option
argument_list|>
name|options
init|=
name|suggestion
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getOptions
argument_list|()
decl_stmt|;
name|String
name|assertMsg
init|=
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"Expected options %s length to be %s, but was %s"
argument_list|,
name|suggestionList
argument_list|,
name|suggestions
operator|.
name|length
argument_list|,
name|options
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|assertMsg
argument_list|,
name|options
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
name|suggestions
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|suggestionOrderStrict
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|suggestions
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|String
name|errMsg
init|=
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"Expected elem %s in list %s to be [%s] score: %s"
argument_list|,
name|i
argument_list|,
name|suggestionList
argument_list|,
name|suggestions
index|[
name|i
index|]
argument_list|,
name|options
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getScore
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|errMsg
argument_list|,
name|options
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getText
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
name|suggestions
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
for|for
control|(
name|String
name|expectedSuggestion
range|:
name|suggestions
control|)
block|{
name|String
name|errMsg
init|=
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"Expected elem %s to be in list %s"
argument_list|,
name|expectedSuggestion
argument_list|,
name|suggestionList
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|errMsg
argument_list|,
name|suggestionList
argument_list|,
name|hasItem
argument_list|(
name|expectedSuggestion
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|getNames
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|getNames
parameter_list|(
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
argument_list|<
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
operator|.
name|Option
argument_list|>
name|suggestEntry
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
operator|.
name|Option
name|entry
range|:
name|suggestEntry
operator|.
name|getOptions
argument_list|()
control|)
block|{
name|names
operator|.
name|add
argument_list|(
name|entry
operator|.
name|getText
argument_list|()
operator|.
name|string
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|names
return|;
block|}
DECL|method|createIndexAndMapping
specifier|private
name|void
name|createIndexAndMapping
parameter_list|()
throws|throws
name|IOException
block|{
name|createIndexAndMapping
argument_list|(
literal|"simple"
argument_list|,
literal|"simple"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|createIndexAndMappingAndSettings
specifier|private
name|void
name|createIndexAndMappingAndSettings
parameter_list|(
name|Settings
operator|.
name|Builder
name|settingsBuilder
parameter_list|,
name|String
name|indexAnalyzer
parameter_list|,
name|String
name|searchAnalyzer
parameter_list|,
name|boolean
name|payloads
parameter_list|,
name|boolean
name|preserveSeparators
parameter_list|,
name|boolean
name|preservePositionIncrements
parameter_list|)
throws|throws
name|IOException
block|{
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settingsBuilder
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|PutMappingResponse
name|putMappingResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setType
argument_list|(
name|TYPE
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|TYPE
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"index_analyzer"
argument_list|,
name|indexAnalyzer
argument_list|)
operator|.
name|field
argument_list|(
literal|"search_analyzer"
argument_list|,
name|searchAnalyzer
argument_list|)
operator|.
name|field
argument_list|(
literal|"payloads"
argument_list|,
name|payloads
argument_list|)
operator|.
name|field
argument_list|(
literal|"preserve_separators"
argument_list|,
name|preserveSeparators
argument_list|)
operator|.
name|field
argument_list|(
literal|"preserve_position_increments"
argument_list|,
name|preservePositionIncrements
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putMappingResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
block|}
DECL|method|createIndexAndMapping
specifier|private
name|void
name|createIndexAndMapping
parameter_list|(
name|String
name|indexAnalyzer
parameter_list|,
name|String
name|searchAnalyzer
parameter_list|,
name|boolean
name|payloads
parameter_list|,
name|boolean
name|preserveSeparators
parameter_list|,
name|boolean
name|preservePositionIncrements
parameter_list|)
throws|throws
name|IOException
block|{
name|createIndexAndMappingAndSettings
argument_list|(
name|createDefaultSettings
argument_list|()
argument_list|,
name|indexAnalyzer
argument_list|,
name|searchAnalyzer
argument_list|,
name|payloads
argument_list|,
name|preserveSeparators
argument_list|,
name|preservePositionIncrements
argument_list|)
expr_stmt|;
block|}
DECL|method|createDefaultSettings
specifier|private
name|ImmutableSettings
operator|.
name|Builder
name|createDefaultSettings
parameter_list|()
block|{
name|int
name|randomShardNumber
init|=
name|between
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|int
name|randomReplicaNumber
init|=
name|between
argument_list|(
literal|0
argument_list|,
name|numberOfNodes
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
return|return
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
name|randomShardNumber
argument_list|)
operator|.
name|put
argument_list|(
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
name|randomReplicaNumber
argument_list|)
return|;
block|}
DECL|method|createData
specifier|private
name|void
name|createData
parameter_list|(
name|boolean
name|optimize
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
throws|,
name|ExecutionException
block|{
name|String
index|[]
index|[]
name|input
init|=
block|{
block|{
literal|"Foo Fighters"
block|}
block|,
block|{
literal|"Generator"
block|,
literal|"Foo Fighters Generator"
block|}
block|,
block|{
literal|"Learn to Fly"
block|,
literal|"Foo Fighters Learn to Fly"
block|}
block|,
block|{
literal|"The Prodigy"
block|}
block|,
block|{
literal|"Firestarter"
block|,
literal|"The Prodigy Firestarter"
block|}
block|,
block|{
literal|"Turbonegro"
block|}
block|,
block|{
literal|"Get it on"
block|,
literal|"Turbonegro Get it on"
block|}
block|}
decl_stmt|;
name|String
index|[]
name|surface
init|=
block|{
literal|"Foo Fighters"
block|,
literal|"Generator - Foo Fighters"
block|,
literal|"Learn to Fly - Foo Fighters"
block|,
literal|"The Prodigy"
block|,
literal|"Firestarter - The Prodigy"
block|,
literal|"Turbonegro"
block|,
literal|"Get it on - Turbonegro"
block|}
decl_stmt|;
name|int
index|[]
name|weight
init|=
block|{
literal|10
block|,
literal|9
block|,
literal|8
block|,
literal|12
block|,
literal|11
block|,
literal|6
block|,
literal|7
block|}
decl_stmt|;
name|IndexRequestBuilder
index|[]
name|builders
init|=
operator|new
name|IndexRequestBuilder
index|[
name|input
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|builders
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|builders
index|[
name|i
index|]
operator|=
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
name|input
index|[
name|i
index|]
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"output"
argument_list|,
name|surface
index|[
name|i
index|]
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"payload"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
name|i
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|1
argument_list|)
comment|// WE FORCEFULLY INDEX A BOGUS WEIGHT
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
name|INDEX
argument_list|,
literal|false
argument_list|,
name|builders
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|builders
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
comment|// add them again to make sure we deduplicate on the surface form
name|builders
index|[
name|i
index|]
operator|=
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"n"
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"input"
argument_list|)
operator|.
name|value
argument_list|(
name|input
index|[
name|i
index|]
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"output"
argument_list|,
name|surface
index|[
name|i
index|]
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"payload"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
name|i
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|weight
index|[
name|i
index|]
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
name|INDEX
argument_list|,
literal|false
argument_list|,
name|builders
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|(
name|INDEX
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
if|if
condition|(
name|optimize
condition|)
block|{
comment|// make sure merging works just fine
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareFlush
argument_list|(
name|INDEX
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareOptimize
argument_list|(
name|INDEX
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

