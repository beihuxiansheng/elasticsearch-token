begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elasticsearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.rest.test
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|test
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|support
operator|.
name|VersionUtils
operator|.
name|parseVersionNumber
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|support
operator|.
name|VersionUtils
operator|.
name|skipCurrentVersion
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_class
DECL|class|VersionUtilsTests
specifier|public
class|class
name|VersionUtilsTests
extends|extends
name|ElasticsearchTestCase
block|{
annotation|@
name|Test
DECL|method|testParseVersionNumber
specifier|public
name|void
name|testParseVersionNumber
parameter_list|()
block|{
name|int
index|[]
name|versionNumber
init|=
name|parseVersionNumber
argument_list|(
literal|"0.90.6"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|versionNumber
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|90
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|2
index|]
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|versionNumber
operator|=
name|parseVersionNumber
argument_list|(
literal|"0.90.999"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|90
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|2
index|]
argument_list|,
name|equalTo
argument_list|(
literal|999
argument_list|)
argument_list|)
expr_stmt|;
name|versionNumber
operator|=
name|parseVersionNumber
argument_list|(
literal|"0.20.11"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|2
index|]
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|versionNumber
operator|=
name|parseVersionNumber
argument_list|(
literal|"1.0.0.Beta1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|2
index|]
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|versionNumber
operator|=
name|parseVersionNumber
argument_list|(
literal|"1.0.0.RC1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|2
index|]
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|versionNumber
operator|=
name|parseVersionNumber
argument_list|(
literal|"1.0.0"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|2
index|]
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|versionNumber
operator|=
name|parseVersionNumber
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|versionNumber
operator|=
name|parseVersionNumber
argument_list|(
literal|"999"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|999
argument_list|)
argument_list|)
expr_stmt|;
name|versionNumber
operator|=
name|parseVersionNumber
argument_list|(
literal|"0"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|versionNumber
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|parseVersionNumber
argument_list|(
literal|"1.0.Beta1"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"parseVersionNumber should have thrown an error"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"version is not a number"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|NumberFormatException
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testSkipCurrentVersion
specifier|public
name|void
name|testSkipCurrentVersion
parameter_list|()
block|{
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0.90.2 - 0.90.6"
argument_list|,
literal|"0.90.2"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0.90.2 - 0.90.6"
argument_list|,
literal|"0.90.3"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0.90.2 - 0.90.6"
argument_list|,
literal|"0.90.6"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0.90.2 - 0.90.6"
argument_list|,
literal|"0.20.10"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0.90.2 - 0.90.6"
argument_list|,
literal|"0.90.1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0.90.2 - 0.90.6"
argument_list|,
literal|"0.90.7"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0.90.2 - 0.90.6"
argument_list|,
literal|"1.0.0"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|" 0.90.2  -  0.90.999 "
argument_list|,
literal|"0.90.15"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0.90.2 - 0.90.999"
argument_list|,
literal|"1.0.0"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0  -  999"
argument_list|,
literal|"0.90.15"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0  -  999"
argument_list|,
literal|"0.20.1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0  -  999"
argument_list|,
literal|"1.0.0"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0.90.9  -  999"
argument_list|,
literal|"1.0.0"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0.90.9  -  999"
argument_list|,
literal|"0.90.8"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|assertThat
argument_list|(
name|skipCurrentVersion
argument_list|(
literal|"0.90.2 - 0.90.999 - 1.0.0"
argument_list|,
literal|"1.0.0"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"skipCurrentVersion should have thrown an error"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"too many skip versions found"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

