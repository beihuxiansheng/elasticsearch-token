begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.rest.test
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|test
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|yaml
operator|.
name|YamlXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|parser
operator|.
name|RestTestSuiteParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|parser
operator|.
name|RestTestSuiteParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|section
operator|.
name|DoSection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|section
operator|.
name|IsTrueAssertion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|section
operator|.
name|MatchAssertion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|section
operator|.
name|RestTestSuite
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_class
DECL|class|RestTestParserTests
specifier|public
class|class
name|RestTestParserTests
extends|extends
name|ElasticsearchTestCase
block|{
DECL|field|parser
specifier|private
name|XContentParser
name|parser
decl_stmt|;
annotation|@
name|After
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
comment|//makes sure that we consumed the whole stream, XContentParser doesn't expose isClosed method
comment|//next token can be null even in the middle of the document (e.g. with "---"), but not too many consecutive times
name|assertThat
argument_list|(
name|parser
operator|.
name|currentToken
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parser
operator|.
name|nextToken
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parser
operator|.
name|nextToken
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|parser
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseTestSetupAndSections
specifier|public
name|void
name|testParseTestSetupAndSections
parameter_list|()
throws|throws
name|Exception
block|{
name|parser
operator|=
name|YamlXContent
operator|.
name|yamlXContent
operator|.
name|createParser
argument_list|(
literal|"setup:\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"        indices.create:\n"
operator|+
literal|"          index: test_index\n"
operator|+
literal|"\n"
operator|+
literal|"---\n"
operator|+
literal|"\"Get index mapping\":\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      indices.get_mapping:\n"
operator|+
literal|"        index: test_index\n"
operator|+
literal|"\n"
operator|+
literal|"  - match: {test_index.test_type.properties.text.type:     string}\n"
operator|+
literal|"  - match: {test_index.test_type.properties.text.analyzer: whitespace}\n"
operator|+
literal|"\n"
operator|+
literal|"---\n"
operator|+
literal|"\"Get type mapping - pre 1.0\":\n"
operator|+
literal|"\n"
operator|+
literal|"  - skip:\n"
operator|+
literal|"      version:     \"0.90.9 - 999\"\n"
operator|+
literal|"      reason:      \"for newer versions the index name is always returned\"\n"
operator|+
literal|"\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      indices.get_mapping:\n"
operator|+
literal|"        index: test_index\n"
operator|+
literal|"        type: test_type\n"
operator|+
literal|"\n"
operator|+
literal|"  - match: {test_type.properties.text.type:     string}\n"
operator|+
literal|"  - match: {test_type.properties.text.analyzer: whitespace}\n"
argument_list|)
expr_stmt|;
name|RestTestSuiteParser
name|testParser
init|=
operator|new
name|RestTestSuiteParser
argument_list|()
decl_stmt|;
name|RestTestSuite
name|restTestSuite
init|=
name|testParser
operator|.
name|parse
argument_list|(
operator|new
name|RestTestSuiteParseContext
argument_list|(
literal|"api"
argument_list|,
literal|"suite"
argument_list|,
name|parser
argument_list|,
literal|"0.90.5"
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"suite"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getSkipSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getDoSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getDoSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getApi
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"indices.create"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getDoSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getDoSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|get
argument_list|(
literal|"index"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"test_index"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"Get index mapping"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSkipSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|DoSection
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|DoSection
name|doSection
init|=
operator|(
name|DoSection
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getApi
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"indices.get_mapping"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|get
argument_list|(
literal|"index"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"test_index"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|MatchAssertion
name|matchAssertion
init|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test_index.test_type.properties.text.type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test_index.test_type.properties.text.analyzer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"whitespace"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"Get type mapping - pre 1.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getSkipSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getSkipSection
argument_list|()
operator|.
name|getReason
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"for newer versions the index name is always returned"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getSkipSection
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0.90.9 - 999"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|DoSection
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doSection
operator|=
operator|(
name|DoSection
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getApi
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"indices.get_mapping"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|get
argument_list|(
literal|"index"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"test_index"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"test_type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test_type.properties.text.type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test_type.properties.text.analyzer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"whitespace"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseTestSetupAndSectionsSkipLastSection
specifier|public
name|void
name|testParseTestSetupAndSectionsSkipLastSection
parameter_list|()
throws|throws
name|Exception
block|{
name|parser
operator|=
name|YamlXContent
operator|.
name|yamlXContent
operator|.
name|createParser
argument_list|(
literal|"setup:\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"        indices.create:\n"
operator|+
literal|"          index: test_index\n"
operator|+
literal|"\n"
operator|+
literal|"---\n"
operator|+
literal|"\"Get index mapping\":\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      indices.get_mapping:\n"
operator|+
literal|"        index: test_index\n"
operator|+
literal|"\n"
operator|+
literal|"  - match: {test_index.test_type.properties.text.type:     string}\n"
operator|+
literal|"  - match: {test_index.test_type.properties.text.analyzer: whitespace}\n"
operator|+
literal|"\n"
operator|+
literal|"---\n"
operator|+
literal|"\"Get type mapping - pre 1.0\":\n"
operator|+
literal|"\n"
operator|+
literal|"  - skip:\n"
operator|+
literal|"      version:     \"0.90.9 - 999\"\n"
operator|+
literal|"      reason:      \"for newer versions the index name is always returned\"\n"
operator|+
literal|"\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      indices.get_mapping:\n"
operator|+
literal|"        index: test_index\n"
operator|+
literal|"        type: test_type\n"
operator|+
literal|"\n"
operator|+
literal|"  - match: {test_type.properties.text.type:     string}\n"
operator|+
literal|"  - match: {test_type.properties.text.analyzer: whitespace}\n"
argument_list|)
expr_stmt|;
name|RestTestSuiteParser
name|testParser
init|=
operator|new
name|RestTestSuiteParser
argument_list|()
decl_stmt|;
name|RestTestSuite
name|restTestSuite
init|=
name|testParser
operator|.
name|parse
argument_list|(
operator|new
name|RestTestSuiteParseContext
argument_list|(
literal|"api"
argument_list|,
literal|"suite"
argument_list|,
name|parser
argument_list|,
literal|"1.0.0"
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"suite"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getSkipSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getDoSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getDoSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getApi
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"indices.create"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getDoSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getDoSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|get
argument_list|(
literal|"index"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"test_index"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"Get index mapping"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSkipSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|DoSection
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|DoSection
name|doSection
init|=
operator|(
name|DoSection
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getApi
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"indices.get_mapping"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|get
argument_list|(
literal|"index"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"test_index"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|MatchAssertion
name|matchAssertion
init|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test_index.test_type.properties.text.type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test_index.test_type.properties.text.analyzer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"whitespace"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"Get type mapping - pre 1.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getSkipSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getSkipSection
argument_list|()
operator|.
name|getReason
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"for newer versions the index name is always returned"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getSkipSection
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0.90.9 - 999"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseTestSetupAndSectionsSkipEntireFile
specifier|public
name|void
name|testParseTestSetupAndSectionsSkipEntireFile
parameter_list|()
throws|throws
name|Exception
block|{
name|parser
operator|=
name|YamlXContent
operator|.
name|yamlXContent
operator|.
name|createParser
argument_list|(
literal|"setup:\n"
operator|+
literal|"  - skip:\n"
operator|+
literal|"      version:     \"0.90.3 - 0.90.6\"\n"
operator|+
literal|"      reason:      \"test skip entire file\"\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"        indices.create:\n"
operator|+
literal|"          index: test_index\n"
operator|+
literal|"\n"
operator|+
literal|"---\n"
operator|+
literal|"\"Get index mapping\":\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      indices.get_mapping:\n"
operator|+
literal|"        index: test_index\n"
operator|+
literal|"\n"
operator|+
literal|"  - match: {test_index.test_type.properties.text.type:     string}\n"
operator|+
literal|"  - match: {test_index.test_type.properties.text.analyzer: whitespace}\n"
operator|+
literal|"\n"
operator|+
literal|"---\n"
operator|+
literal|"\"Get type mapping - pre 1.0\":\n"
operator|+
literal|"\n"
operator|+
literal|"  - skip:\n"
operator|+
literal|"      version:     \"0.90.9 - 999\"\n"
operator|+
literal|"      reason:      \"for newer versions the index name is always returned\"\n"
operator|+
literal|"\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      indices.get_mapping:\n"
operator|+
literal|"        index: test_index\n"
operator|+
literal|"        type: test_type\n"
operator|+
literal|"\n"
operator|+
literal|"  - match: {test_type.properties.text.type:     string}\n"
operator|+
literal|"  - match: {test_type.properties.text.analyzer: whitespace}\n"
argument_list|)
expr_stmt|;
name|RestTestSuiteParser
name|testParser
init|=
operator|new
name|RestTestSuiteParser
argument_list|()
decl_stmt|;
name|RestTestSuite
name|restTestSuite
init|=
name|testParser
operator|.
name|parse
argument_list|(
operator|new
name|RestTestSuiteParseContext
argument_list|(
literal|"api"
argument_list|,
literal|"suite"
argument_list|,
name|parser
argument_list|,
literal|"0.90.5"
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"suite"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getSkipSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getSkipSection
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0.90.3 - 0.90.6"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getSkipSection
argument_list|()
operator|.
name|getReason
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test skip entire file"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getDoSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseTestSetupAndSectionsSkipEntireFileNoDo
specifier|public
name|void
name|testParseTestSetupAndSectionsSkipEntireFileNoDo
parameter_list|()
throws|throws
name|Exception
block|{
name|parser
operator|=
name|YamlXContent
operator|.
name|yamlXContent
operator|.
name|createParser
argument_list|(
literal|"setup:\n"
operator|+
literal|"  - skip:\n"
operator|+
literal|"      version:     \"0.90.3 - 0.90.6\"\n"
operator|+
literal|"      reason:      \"test skip entire file\"\n"
operator|+
literal|"\n"
operator|+
literal|"---\n"
operator|+
literal|"\"Get index mapping\":\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      indices.get_mapping:\n"
operator|+
literal|"        index: test_index\n"
operator|+
literal|"\n"
operator|+
literal|"  - match: {test_index.test_type.properties.text.type:     string}\n"
operator|+
literal|"  - match: {test_index.test_type.properties.text.analyzer: whitespace}\n"
operator|+
literal|"\n"
operator|+
literal|"---\n"
operator|+
literal|"\"Get type mapping - pre 1.0\":\n"
operator|+
literal|"\n"
operator|+
literal|"  - skip:\n"
operator|+
literal|"      version:     \"0.90.9 - 999\"\n"
operator|+
literal|"      reason:      \"for newer versions the index name is always returned\"\n"
operator|+
literal|"\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      indices.get_mapping:\n"
operator|+
literal|"        index: test_index\n"
operator|+
literal|"        type: test_type\n"
operator|+
literal|"\n"
operator|+
literal|"  - match: {test_type.properties.text.type:     string}\n"
operator|+
literal|"  - match: {test_type.properties.text.analyzer: whitespace}\n"
argument_list|)
expr_stmt|;
name|RestTestSuiteParser
name|testParser
init|=
operator|new
name|RestTestSuiteParser
argument_list|()
decl_stmt|;
name|RestTestSuite
name|restTestSuite
init|=
name|testParser
operator|.
name|parse
argument_list|(
operator|new
name|RestTestSuiteParseContext
argument_list|(
literal|"api"
argument_list|,
literal|"suite"
argument_list|,
name|parser
argument_list|,
literal|"0.90.5"
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"suite"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getSkipSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getSkipSection
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0.90.3 - 0.90.6"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getSkipSection
argument_list|()
operator|.
name|getReason
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test skip entire file"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|getDoSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseTestSingleTestSection
specifier|public
name|void
name|testParseTestSingleTestSection
parameter_list|()
throws|throws
name|Exception
block|{
name|parser
operator|=
name|YamlXContent
operator|.
name|yamlXContent
operator|.
name|createParser
argument_list|(
literal|"---\n"
operator|+
literal|"\"Index with ID\":\n"
operator|+
literal|"\n"
operator|+
literal|" - do:\n"
operator|+
literal|"      index:\n"
operator|+
literal|"          index:  test-weird-index-ä¸­æ\n"
operator|+
literal|"          type:   weird.type\n"
operator|+
literal|"          id:     1\n"
operator|+
literal|"          body:   { foo: bar }\n"
operator|+
literal|"\n"
operator|+
literal|" - is_true:   ok\n"
operator|+
literal|" - match:   { _index:   test-weird-index-ä¸­æ }\n"
operator|+
literal|" - match:   { _type:    weird.type }\n"
operator|+
literal|" - match:   { _id:      \"1\"}\n"
operator|+
literal|" - match:   { _version: 1}\n"
operator|+
literal|"\n"
operator|+
literal|" - do:\n"
operator|+
literal|"      get:\n"
operator|+
literal|"          index:  test-weird-index-ä¸­æ\n"
operator|+
literal|"          type:   weird.type\n"
operator|+
literal|"          id:     1\n"
operator|+
literal|"\n"
operator|+
literal|" - match:   { _index:   test-weird-index-ä¸­æ }\n"
operator|+
literal|" - match:   { _type:    weird.type }\n"
operator|+
literal|" - match:   { _id:      \"1\"}\n"
operator|+
literal|" - match:   { _version: 1}\n"
operator|+
literal|" - match:   { _source: { foo: bar }}"
argument_list|)
expr_stmt|;
name|RestTestSuiteParser
name|testParser
init|=
operator|new
name|RestTestSuiteParser
argument_list|()
decl_stmt|;
name|RestTestSuite
name|restTestSuite
init|=
name|testParser
operator|.
name|parse
argument_list|(
operator|new
name|RestTestSuiteParseContext
argument_list|(
literal|"api"
argument_list|,
literal|"suite"
argument_list|,
name|parser
argument_list|,
literal|"0.90.5"
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"suite"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"Index with ID"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSkipSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|DoSection
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|DoSection
name|doSection
init|=
operator|(
name|DoSection
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getCatch
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getApi
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"index"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|hasBody
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|IsTrueAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|IsTrueAssertion
name|trueAssertion
init|=
operator|(
name|IsTrueAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|trueAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"ok"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|MatchAssertion
name|matchAssertion
init|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_index"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test-weird-index-ä¸­æ"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"weird.type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_version"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|DoSection
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doSection
operator|=
operator|(
name|DoSection
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getCatch
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getApi
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"get"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|hasBody
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_index"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test-weird-index-ä¸­æ"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|8
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"weird.type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|9
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|9
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|10
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_version"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|11
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|MatchAssertion
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|matchAssertion
operator|=
operator|(
name|MatchAssertion
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|11
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_source"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|Map
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Map
operator|)
name|matchAssertion
operator|.
name|getExpectedValue
argument_list|()
operator|)
operator|.
name|get
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseTestMultipleTestSections
specifier|public
name|void
name|testParseTestMultipleTestSections
parameter_list|()
throws|throws
name|Exception
block|{
name|parser
operator|=
name|YamlXContent
operator|.
name|yamlXContent
operator|.
name|createParser
argument_list|(
literal|"---\n"
operator|+
literal|"\"Missing document (partial doc)\":\n"
operator|+
literal|"\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      catch:      missing\n"
operator|+
literal|"      update:\n"
operator|+
literal|"          index:  test_1\n"
operator|+
literal|"          type:   test\n"
operator|+
literal|"          id:     1\n"
operator|+
literal|"          body:   { doc: { foo: bar } }\n"
operator|+
literal|"\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      update:\n"
operator|+
literal|"          index: test_1\n"
operator|+
literal|"          type:  test\n"
operator|+
literal|"          id:    1\n"
operator|+
literal|"          body:  { doc: { foo: bar } }\n"
operator|+
literal|"          ignore: 404\n"
operator|+
literal|"\n"
operator|+
literal|"---\n"
operator|+
literal|"\"Missing document (script)\":\n"
operator|+
literal|"\n"
operator|+
literal|"\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      catch:      missing\n"
operator|+
literal|"      update:\n"
operator|+
literal|"          index:  test_1\n"
operator|+
literal|"          type:   test\n"
operator|+
literal|"          id:     1\n"
operator|+
literal|"          body:\n"
operator|+
literal|"            script: \"ctx._source.foo = bar\"\n"
operator|+
literal|"            params: { bar: 'xxx' }\n"
operator|+
literal|"\n"
operator|+
literal|"  - do:\n"
operator|+
literal|"      update:\n"
operator|+
literal|"          index:  test_1\n"
operator|+
literal|"          type:   test\n"
operator|+
literal|"          id:     1\n"
operator|+
literal|"          ignore: 404\n"
operator|+
literal|"          body:\n"
operator|+
literal|"            script:       \"ctx._source.foo = bar\"\n"
operator|+
literal|"            params:       { bar: 'xxx' }\n"
argument_list|)
expr_stmt|;
name|RestTestSuiteParser
name|testParser
init|=
operator|new
name|RestTestSuiteParser
argument_list|()
decl_stmt|;
name|RestTestSuite
name|restTestSuite
init|=
name|testParser
operator|.
name|parse
argument_list|(
operator|new
name|RestTestSuiteParseContext
argument_list|(
literal|"api"
argument_list|,
literal|"suite"
argument_list|,
name|parser
argument_list|,
literal|"0.90.5"
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"suite"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getSetupSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"Missing document (partial doc)"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSkipSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|DoSection
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|DoSection
name|doSection
init|=
operator|(
name|DoSection
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getCatch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"missing"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getApi
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"update"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|hasBody
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|DoSection
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doSection
operator|=
operator|(
name|DoSection
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getCatch
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getApi
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"update"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|hasBody
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"Missing document (script)"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getSkipSection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|DoSection
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|DoSection
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doSection
operator|=
operator|(
name|DoSection
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getCatch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"missing"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getApi
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"update"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|hasBody
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|DoSection
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doSection
operator|=
operator|(
name|DoSection
operator|)
name|restTestSuite
operator|.
name|getTestSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getExecutableSections
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getCatch
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getApi
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"update"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|getParams
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doSection
operator|.
name|getApiCallSection
argument_list|()
operator|.
name|hasBody
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

