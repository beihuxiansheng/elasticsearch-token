begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.rest.client
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|client
package|;
end_package

begin_comment
comment|/**  * Thrown when a status code that holds an error is received (unless needs to be ignored)  * Holds the original {@link RestResponse}  */
end_comment

begin_class
DECL|class|RestException
specifier|public
class|class
name|RestException
extends|extends
name|Exception
block|{
DECL|field|restResponse
specifier|private
specifier|final
name|RestResponse
name|restResponse
decl_stmt|;
DECL|method|RestException
specifier|public
name|RestException
parameter_list|(
name|String
name|message
parameter_list|,
name|RestResponse
name|restResponse
parameter_list|)
block|{
name|super
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|this
operator|.
name|restResponse
operator|=
name|restResponse
expr_stmt|;
block|}
DECL|method|restResponse
specifier|public
name|RestResponse
name|restResponse
parameter_list|()
block|{
return|return
name|restResponse
return|;
block|}
DECL|method|statusCode
specifier|public
name|int
name|statusCode
parameter_list|()
block|{
return|return
name|restResponse
operator|.
name|getStatusCode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

