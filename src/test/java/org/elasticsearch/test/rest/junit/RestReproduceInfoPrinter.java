begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.rest.junit
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|junit
package|;
end_package

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|ReproduceErrorMessageBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|StandaloneRandomizedContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|TraceFormatting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
operator|.
name|ESLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
operator|.
name|Loggers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|junit
operator|.
name|listeners
operator|.
name|ReproduceInfoPrinter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|ElasticsearchRestTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|Description
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|notification
operator|.
name|Failure
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|SysGlobals
operator|.
name|SYSPROP_RANDOM_SEED
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|SysGlobals
operator|.
name|SYSPROP_TESTCLASS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|junit
operator|.
name|RestTestSuiteRunner
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * A {@link org.junit.runner.notification.RunListener} that emits to {@link System#err} a string with command  * line parameters allowing quick REST test re-run under MVN command line.  */
end_comment

begin_class
DECL|class|RestReproduceInfoPrinter
class|class
name|RestReproduceInfoPrinter
extends|extends
name|ReproduceInfoPrinter
block|{
DECL|field|logger
specifier|protected
specifier|static
specifier|final
name|ESLogger
name|logger
init|=
name|Loggers
operator|.
name|getLogger
argument_list|(
name|RestReproduceInfoPrinter
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|mustAppendClusterSeed
specifier|protected
name|boolean
name|mustAppendClusterSeed
parameter_list|(
name|Failure
name|failure
parameter_list|)
block|{
return|return
name|isTestCluster
argument_list|()
return|;
block|}
DECL|method|isTestCluster
specifier|private
specifier|static
name|boolean
name|isTestCluster
parameter_list|()
block|{
return|return
name|runMode
argument_list|()
operator|==
name|RunMode
operator|.
name|TEST_CLUSTER
return|;
block|}
annotation|@
name|Override
DECL|method|traces
specifier|protected
name|TraceFormatting
name|traces
parameter_list|()
block|{
return|return
operator|new
name|TraceFormatting
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"org.junit."
argument_list|,
literal|"junit.framework."
argument_list|,
literal|"sun."
argument_list|,
literal|"java.lang.reflect."
argument_list|,
literal|"com.carrotsearch.randomizedtesting."
argument_list|,
literal|"org.elasticsearch.test.rest.junit."
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|reproduceErrorMessageBuilder
specifier|protected
name|ReproduceErrorMessageBuilder
name|reproduceErrorMessageBuilder
parameter_list|(
name|StringBuilder
name|b
parameter_list|)
block|{
return|return
operator|new
name|MavenMessageBuilder
argument_list|(
name|b
argument_list|)
return|;
block|}
DECL|class|MavenMessageBuilder
specifier|private
specifier|static
class|class
name|MavenMessageBuilder
extends|extends
name|ReproduceInfoPrinter
operator|.
name|MavenMessageBuilder
block|{
DECL|method|MavenMessageBuilder
specifier|public
name|MavenMessageBuilder
parameter_list|(
name|StringBuilder
name|b
parameter_list|)
block|{
name|super
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|appendAllOpts
specifier|public
name|ReproduceErrorMessageBuilder
name|appendAllOpts
parameter_list|(
name|Description
name|description
parameter_list|)
block|{
try|try
block|{
name|appendOpt
argument_list|(
name|SYSPROP_RANDOM_SEED
argument_list|()
argument_list|,
name|StandaloneRandomizedContext
operator|.
name|getSeedAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"No context available when dumping reproduce options?"
argument_list|)
expr_stmt|;
block|}
comment|//we know that ElasticsearchRestTests is the only one that runs with RestTestSuiteRunner
name|appendOpt
argument_list|(
name|SYSPROP_TESTCLASS
argument_list|()
argument_list|,
name|ElasticsearchRestTests
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|description
operator|.
name|getClassName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|appendOpt
argument_list|(
name|REST_TESTS_SUITE
argument_list|,
name|description
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|appendRunnerProperties
argument_list|()
expr_stmt|;
name|appendEnvironmentSettings
argument_list|()
expr_stmt|;
name|appendProperties
argument_list|(
literal|"es.logger.level"
argument_list|)
expr_stmt|;
if|if
condition|(
name|isTestCluster
argument_list|()
condition|)
block|{
name|appendProperties
argument_list|(
literal|"es.node.mode"
argument_list|,
literal|"es.node.local"
argument_list|)
expr_stmt|;
block|}
name|appendRestTestsProperties
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|appendRestTestsProperties
specifier|public
name|ReproduceErrorMessageBuilder
name|appendRestTestsProperties
parameter_list|()
block|{
return|return
name|appendProperties
argument_list|(
name|REST_TESTS_MODE
argument_list|,
name|REST_TESTS_SPEC
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

