begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.unit.threadpool
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|unit
operator|.
name|threadpool
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ListeningExecutorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|EsAbortPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|EsThreadPoolExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
operator|.
name|Names
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
operator|.
name|settingsBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|UpdateThreadPoolSettingsTests
specifier|public
class|class
name|UpdateThreadPoolSettingsTests
block|{
DECL|method|info
specifier|private
name|ThreadPool
operator|.
name|Info
name|info
parameter_list|(
name|ThreadPool
name|threadPool
parameter_list|,
name|String
name|name
parameter_list|)
block|{
for|for
control|(
name|ThreadPool
operator|.
name|Info
name|info
range|:
name|threadPool
operator|.
name|info
argument_list|()
control|)
block|{
if|if
condition|(
name|info
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
return|return
name|info
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Test
DECL|method|testCachedExecutorType
specifier|public
name|void
name|testCachedExecutorType
parameter_list|()
block|{
name|ThreadPool
name|threadPool
init|=
operator|new
name|ThreadPool
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"cached"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"cached"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getKeepAlive
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|5L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|EsThreadPoolExecutor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Replace with different type
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"same"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"same"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|ListeningExecutorService
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Replace with different type again
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"scaling"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.keep_alive"
argument_list|,
literal|"10m"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scaling"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|EsThreadPoolExecutor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getCorePoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure keep alive value changed
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getKeepAlive
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getKeepAliveTime
argument_list|(
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Put old type back
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"cached"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"cached"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure keep alive value reused
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getKeepAlive
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|EsThreadPoolExecutor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Change keep alive
name|Executor
name|oldExecutor
init|=
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
decl_stmt|;
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.keep_alive"
argument_list|,
literal|"1m"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// Make sure keep alive value changed
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getKeepAlive
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getKeepAliveTime
argument_list|(
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure executor didn't change
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"cached"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|sameInstance
argument_list|(
name|oldExecutor
argument_list|)
argument_list|)
expr_stmt|;
comment|// Set the same keep alive
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.keep_alive"
argument_list|,
literal|"1m"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// Make sure keep alive value didn't change
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getKeepAlive
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getKeepAliveTime
argument_list|(
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure executor didn't change
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"cached"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|sameInstance
argument_list|(
name|oldExecutor
argument_list|)
argument_list|)
expr_stmt|;
name|threadPool
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFixedExecutorType
specifier|public
name|void
name|testFixedExecutorType
parameter_list|()
block|{
name|ThreadPool
name|threadPool
init|=
operator|new
name|ThreadPool
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"fixed"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getRejectSetting
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"abort"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getQueueType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"linked"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|EsThreadPoolExecutor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Replace with different type
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"scaling"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.keep_alive"
argument_list|,
literal|"10m"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.min"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.size"
argument_list|,
literal|"15"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scaling"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|EsThreadPoolExecutor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getCorePoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getMaximumPoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure keep alive value changed
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getKeepAlive
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getKeepAliveTime
argument_list|(
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Put old type back
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"fixed"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"fixed"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure keep alive value is not used
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getKeepAlive
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// Make sure keep pool size value were reused
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|EsThreadPoolExecutor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getCorePoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getMaximumPoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
comment|// Change size
name|Executor
name|oldExecutor
init|=
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
decl_stmt|;
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.size"
argument_list|,
literal|"10"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// Make sure size values changed
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getMaximumPoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getCorePoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure executor didn't change
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"fixed"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|sameInstance
argument_list|(
name|oldExecutor
argument_list|)
argument_list|)
expr_stmt|;
comment|// Change queue capacity
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.queue"
argument_list|,
literal|"500"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getQueueType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"linked"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getQueue
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|LinkedBlockingQueue
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Set different queue and size type
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.queue_type"
argument_list|,
literal|"array"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.size"
argument_list|,
literal|"12"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// Make sure keep size changed
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"fixed"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getCorePoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getQueueType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"array"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getQueue
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ArrayBlockingQueue
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Change rejection policy
name|oldExecutor
operator|=
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getRejectSetting
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"abort"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getRejectedExecutionHandler
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|EsAbortPolicy
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.reject_policy"
argument_list|,
literal|"caller"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// Make sure rejection handler changed
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getRejectSetting
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"caller"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getRejectedExecutionHandler
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ThreadPoolExecutor
operator|.
name|CallerRunsPolicy
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure executor didn't change
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|sameInstance
argument_list|(
name|oldExecutor
argument_list|)
argument_list|)
expr_stmt|;
name|threadPool
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testScalingExecutorType
specifier|public
name|void
name|testScalingExecutorType
parameter_list|()
block|{
name|ThreadPool
name|threadPool
init|=
operator|new
name|ThreadPool
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"scaling"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.size"
argument_list|,
literal|10
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getKeepAlive
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|5L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scaling"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|EsThreadPoolExecutor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Change settings that doesn't require pool replacement
name|Executor
name|oldExecutor
init|=
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
decl_stmt|;
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"scaling"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.keep_alive"
argument_list|,
literal|"10m"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.min"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.size"
argument_list|,
literal|"15"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scaling"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|EsThreadPoolExecutor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getCorePoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getMaximumPoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure keep alive value changed
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getKeepAlive
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getKeepAliveTime
argument_list|(
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|sameInstance
argument_list|(
name|oldExecutor
argument_list|)
argument_list|)
expr_stmt|;
name|threadPool
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBlockingExecutorType
specifier|public
name|void
name|testBlockingExecutorType
parameter_list|()
block|{
name|ThreadPool
name|threadPool
init|=
operator|new
name|ThreadPool
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"blocking"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.size"
argument_list|,
literal|"10"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getQueueSize
argument_list|()
operator|.
name|singles
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getWaitTime
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|EsThreadPoolExecutor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Replace with different type
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"scaling"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.keep_alive"
argument_list|,
literal|"10m"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.min"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.size"
argument_list|,
literal|"15"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"scaling"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|EsThreadPoolExecutor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getCorePoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getMaximumPoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure keep alive value changed
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getKeepAlive
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getKeepAliveTime
argument_list|(
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Put old type back
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"blocking"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"blocking"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure keep alive value is not used
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getKeepAlive
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure keep pool size value were reused
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|instanceOf
argument_list|(
name|EsThreadPoolExecutor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getCorePoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getMaximumPoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
comment|// Change size
name|Executor
name|oldExecutor
init|=
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
decl_stmt|;
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.size"
argument_list|,
literal|"10"
argument_list|)
operator|.
name|put
argument_list|(
literal|"threadpool.search.min"
argument_list|,
literal|"5"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// Make sure size values changed
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getCorePoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|EsThreadPoolExecutor
operator|)
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|)
operator|.
name|getMaximumPoolSize
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure executor didn't change
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"blocking"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|sameInstance
argument_list|(
name|oldExecutor
argument_list|)
argument_list|)
expr_stmt|;
comment|// Change queue capacity
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.queue_size"
argument_list|,
literal|"500"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getQueueSize
argument_list|()
operator|.
name|singles
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Change wait time capacity
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.wait_time"
argument_list|,
literal|"2m"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
argument_list|(
name|threadPool
argument_list|,
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|getWaitTime
argument_list|()
operator|.
name|minutes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|threadPool
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeOut
operator|=
literal|10000
argument_list|)
DECL|method|testShutdownDownNowDoesntBlock
specifier|public
name|void
name|testShutdownDownNowDoesntBlock
parameter_list|()
throws|throws
name|Exception
block|{
name|ThreadPool
name|threadPool
init|=
operator|new
name|ThreadPool
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"cached"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
specifier|final
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Executor
name|oldExecutor
init|=
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
decl_stmt|;
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
operator|.
name|execute
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|20000
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ex
parameter_list|)
block|{
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|interrupt
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|threadPool
operator|.
name|updateSettings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"threadpool.search.type"
argument_list|,
literal|"fixed"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|Names
operator|.
name|SEARCH
argument_list|)
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|oldExecutor
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|ThreadPoolExecutor
operator|)
name|oldExecutor
operator|)
operator|.
name|isShutdown
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|ThreadPoolExecutor
operator|)
name|oldExecutor
operator|)
operator|.
name|isTerminating
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|ThreadPoolExecutor
operator|)
name|oldExecutor
operator|)
operator|.
name|isTerminated
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|threadPool
operator|.
name|shutdownNow
argument_list|()
expr_stmt|;
name|latch
operator|.
name|await
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

