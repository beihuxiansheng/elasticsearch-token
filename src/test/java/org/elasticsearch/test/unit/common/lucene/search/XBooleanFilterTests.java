begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.test.unit.common.lucene.search
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|unit
operator|.
name|common
operator|.
name|lucene
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|core
operator|.
name|KeywordAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|FilterClause
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanClause
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|FieldCacheTermsFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|RAMDirectory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|FixedBitSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|Lucene
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|search
operator|.
name|XBooleanFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanClause
operator|.
name|Occur
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|IsEqual
operator|.
name|equalTo
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|XBooleanFilterTests
specifier|public
class|class
name|XBooleanFilterTests
block|{
DECL|field|directory
specifier|private
name|Directory
name|directory
decl_stmt|;
DECL|field|reader
specifier|private
name|AtomicReader
name|reader
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setup
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|char
index|[]
index|[]
name|documentMatrix
init|=
operator|new
name|char
index|[]
index|[]
block|{
block|{
literal|'a'
block|,
literal|'b'
block|,
literal|'c'
block|,
literal|'d'
block|}
block|,
block|{
literal|'a'
block|,
literal|'b'
block|,
literal|'c'
block|,
literal|'d'
block|}
block|,
block|{
literal|'a'
block|,
literal|'a'
block|,
literal|'a'
block|,
literal|'a'
block|}
block|}
decl_stmt|;
name|List
argument_list|<
name|Document
argument_list|>
name|documents
init|=
operator|new
name|ArrayList
argument_list|<
name|Document
argument_list|>
argument_list|(
name|documentMatrix
operator|.
name|length
argument_list|)
decl_stmt|;
for|for
control|(
name|char
index|[]
name|fields
range|:
name|documentMatrix
control|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|fields
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|document
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|fields
index|[
name|i
index|]
argument_list|)
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
block|}
name|directory
operator|=
operator|new
name|RAMDirectory
argument_list|()
expr_stmt|;
name|IndexWriter
name|w
init|=
operator|new
name|IndexWriter
argument_list|(
name|directory
argument_list|,
operator|new
name|IndexWriterConfig
argument_list|(
name|Lucene
operator|.
name|VERSION
argument_list|,
operator|new
name|KeywordAnalyzer
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|w
operator|.
name|addDocuments
argument_list|(
name|documents
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
operator|new
name|SlowCompositeReaderWrapper
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|directory
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWithTwoClausesOfEachOccur_allFixedBitsetFilters
specifier|public
name|void
name|testWithTwoClausesOfEachOccur_allFixedBitsetFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|XBooleanFilter
argument_list|>
name|booleanFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|XBooleanFilter
argument_list|>
argument_list|()
decl_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testWithTwoClausesOfEachOccur_allBitsBasedFilters
specifier|public
name|void
name|testWithTwoClausesOfEachOccur_allBitsBasedFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|XBooleanFilter
argument_list|>
name|booleanFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|XBooleanFilter
argument_list|>
argument_list|()
decl_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testWithTwoClausesOfEachOccur_allFilterTypes
specifier|public
name|void
name|testWithTwoClausesOfEachOccur_allFilterTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|XBooleanFilter
argument_list|>
name|booleanFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|XBooleanFilter
argument_list|>
argument_list|()
decl_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|booleanFilters
operator|.
name|clear
argument_list|()
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testWithTwoClausesOfEachOccur_singleClauseOptimisation
specifier|public
name|void
name|testWithTwoClausesOfEachOccur_singleClauseOptimisation
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|XBooleanFilter
argument_list|>
name|booleanFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|XBooleanFilter
argument_list|>
argument_list|()
decl_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|booleanFilters
operator|.
name|clear
argument_list|()
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'c'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|booleanFilters
operator|.
name|clear
argument_list|()
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|newFilterClause
specifier|private
specifier|static
name|FilterClause
name|newFilterClause
parameter_list|(
name|int
name|field
parameter_list|,
name|char
name|character
parameter_list|,
name|BooleanClause
operator|.
name|Occur
name|occur
parameter_list|,
name|boolean
name|slowerBitsBackedFilter
parameter_list|)
block|{
name|Filter
name|filter
decl_stmt|;
if|if
condition|(
name|slowerBitsBackedFilter
condition|)
block|{
name|filter
operator|=
operator|new
name|FieldCacheTermsFilter
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|field
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|character
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Term
name|term
init|=
operator|new
name|Term
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|field
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|character
argument_list|)
argument_list|)
decl_stmt|;
name|filter
operator|=
operator|new
name|TermFilter
argument_list|(
name|term
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|FilterClause
argument_list|(
name|filter
argument_list|,
name|occur
argument_list|)
return|;
block|}
DECL|method|createBooleanFilter
specifier|private
specifier|static
name|XBooleanFilter
name|createBooleanFilter
parameter_list|(
name|FilterClause
modifier|...
name|clauses
parameter_list|)
block|{
name|XBooleanFilter
name|booleanFilter
init|=
operator|new
name|XBooleanFilter
argument_list|()
decl_stmt|;
for|for
control|(
name|FilterClause
name|clause
range|:
name|clauses
control|)
block|{
name|booleanFilter
operator|.
name|add
argument_list|(
name|clause
argument_list|)
expr_stmt|;
block|}
return|return
name|booleanFilter
return|;
block|}
block|}
end_class

end_unit

