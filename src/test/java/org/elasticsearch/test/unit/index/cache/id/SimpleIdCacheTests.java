begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.unit.index.cache.id
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|unit
operator|.
name|index
operator|.
name|cache
operator|.
name|id
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|standard
operator|.
name|StandardAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|AtomicReaderContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriterConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|RAMDirectory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticSearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|HashedBytesArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|collect
operator|.
name|Tuple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Injector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|Lucene
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexShardMissingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|aliases
operator|.
name|IndexAliasesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
operator|.
name|AnalysisService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|IndexCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|id
operator|.
name|IdReaderCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|id
operator|.
name|IdReaderTypeCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|id
operator|.
name|simple
operator|.
name|SimpleIdCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|IndexEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|IndexFieldDataService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|gateway
operator|.
name|IndexGateway
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MapperService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|ParentFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|UidFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|percolator
operator|.
name|PercolatorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|IndexQueryParserService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|service
operator|.
name|IndexService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|settings
operator|.
name|IndexSettingsService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|service
operator|.
name|IndexShard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|similarity
operator|.
name|SimilarityService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|store
operator|.
name|IndexStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|unit
operator|.
name|index
operator|.
name|mapper
operator|.
name|MapperTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|nullValue
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|SimpleIdCacheTests
specifier|public
class|class
name|SimpleIdCacheTests
block|{
annotation|@
name|Test
DECL|method|testRefresh
specifier|public
name|void
name|testRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|SimpleIdCache
name|idCache
init|=
name|createSimpleIdCache
argument_list|(
name|Tuple
operator|.
name|tuple
argument_list|(
literal|"child"
argument_list|,
literal|"parent"
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
name|createIndexWriter
argument_list|()
decl_stmt|;
comment|// Begins with parent, ends with child docs
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"1"
argument_list|,
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"2"
argument_list|,
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"3"
argument_list|,
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"4"
argument_list|,
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// Begins with child, ends with parent docs
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"5"
argument_list|,
literal|"parent"
argument_list|,
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"parent"
argument_list|,
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"parent"
argument_list|,
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"parent"
argument_list|,
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"parent"
argument_list|,
literal|"5"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// Begins with parent, child docs in the middle and ends with parent doc
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"parent"
argument_list|,
literal|"6"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"6"
argument_list|,
literal|"parent"
argument_list|,
literal|"6"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"7"
argument_list|,
literal|"parent"
argument_list|,
literal|"6"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"8"
argument_list|,
literal|"parent"
argument_list|,
literal|"5"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"9"
argument_list|,
literal|"parent"
argument_list|,
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"parent"
argument_list|,
literal|"7"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// Garbage segment
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"zzz"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"xxx"
argument_list|,
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"aaa"
argument_list|,
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"ccc"
argument_list|,
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"parent"
argument_list|,
literal|"8"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|topLevelReader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
operator|.
name|getDirectory
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AtomicReaderContext
argument_list|>
name|leaves
init|=
name|topLevelReader
operator|.
name|getContext
argument_list|()
operator|.
name|leaves
argument_list|()
decl_stmt|;
name|idCache
operator|.
name|refresh
argument_list|(
name|leaves
argument_list|)
expr_stmt|;
comment|// Verify simple id cache for segment 1
name|IdReaderCache
name|readerCache
init|=
name|idCache
operator|.
name|reader
argument_list|(
name|leaves
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|readerCache
operator|.
name|type
argument_list|(
literal|"child"
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|IdReaderTypeCache
name|typeCache
init|=
name|readerCache
operator|.
name|type
argument_list|(
literal|"parent"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|0
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|1
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|2
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|3
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|4
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|0
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|1
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|2
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|3
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|4
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|docById
argument_list|(
operator|new
name|HashedBytesArray
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|docById
argument_list|(
operator|new
name|HashedBytesArray
argument_list|(
literal|"2"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|docById
argument_list|(
operator|new
name|HashedBytesArray
argument_list|(
literal|"3"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|docById
argument_list|(
operator|new
name|HashedBytesArray
argument_list|(
literal|"4"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verify simple id cache for segment 2
name|readerCache
operator|=
name|idCache
operator|.
name|reader
argument_list|(
name|leaves
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|reader
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readerCache
operator|.
name|type
argument_list|(
literal|"child"
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|typeCache
operator|=
name|readerCache
operator|.
name|type
argument_list|(
literal|"parent"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|0
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|1
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|2
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|3
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|4
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|0
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|1
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|2
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|3
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|4
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|docById
argument_list|(
operator|new
name|HashedBytesArray
argument_list|(
literal|"2"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|docById
argument_list|(
operator|new
name|HashedBytesArray
argument_list|(
literal|"3"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|docById
argument_list|(
operator|new
name|HashedBytesArray
argument_list|(
literal|"4"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|docById
argument_list|(
operator|new
name|HashedBytesArray
argument_list|(
literal|"5"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verify simple id cache for segment 3
name|readerCache
operator|=
name|idCache
operator|.
name|reader
argument_list|(
name|leaves
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|reader
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readerCache
operator|.
name|type
argument_list|(
literal|"child"
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|typeCache
operator|=
name|readerCache
operator|.
name|type
argument_list|(
literal|"parent"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|0
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"6"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|1
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|2
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|3
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|4
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|5
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"7"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|0
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|1
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"6"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|2
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"6"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|3
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|4
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|5
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|docById
argument_list|(
operator|new
name|HashedBytesArray
argument_list|(
literal|"6"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|docById
argument_list|(
operator|new
name|HashedBytesArray
argument_list|(
literal|"7"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verify simple id cache for segment 4
name|readerCache
operator|=
name|idCache
operator|.
name|reader
argument_list|(
name|leaves
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|reader
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readerCache
operator|.
name|type
argument_list|(
literal|"child"
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|typeCache
operator|=
name|readerCache
operator|.
name|type
argument_list|(
literal|"parent"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|0
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|1
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|2
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|3
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|idByDoc
argument_list|(
literal|4
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"8"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|0
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|1
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|2
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|3
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|parentIdByDoc
argument_list|(
literal|4
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|typeCache
operator|.
name|docById
argument_list|(
operator|new
name|HashedBytesArray
argument_list|(
literal|"8"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expectedExceptions
operator|=
name|AssertionError
operator|.
name|class
argument_list|)
DECL|method|testRefresh_tripAssert
specifier|public
name|void
name|testRefresh_tripAssert
parameter_list|()
throws|throws
name|Exception
block|{
name|SimpleIdCache
name|idCache
init|=
name|createSimpleIdCache
argument_list|(
name|Tuple
operator|.
name|tuple
argument_list|(
literal|"child"
argument_list|,
literal|"parent"
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
name|createIndexWriter
argument_list|()
decl_stmt|;
comment|// Begins with parent, ends with child docs
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"1"
argument_list|,
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"2"
argument_list|,
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"3"
argument_list|,
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|childDoc
argument_list|(
literal|"child"
argument_list|,
literal|"4"
argument_list|,
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Doc like this should never end up in the index, just wanna trip an assert here!
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"parent"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|topLevelReader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
operator|.
name|getDirectory
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AtomicReaderContext
argument_list|>
name|leaves
init|=
name|topLevelReader
operator|.
name|getContext
argument_list|()
operator|.
name|leaves
argument_list|()
decl_stmt|;
name|idCache
operator|.
name|refresh
argument_list|(
name|leaves
argument_list|)
expr_stmt|;
block|}
DECL|method|doc
specifier|private
name|Document
name|doc
parameter_list|(
name|String
name|type
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|Document
name|parent
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|parent
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"%s#%s"
argument_list|,
name|type
argument_list|,
name|id
argument_list|)
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|parent
return|;
block|}
DECL|method|childDoc
specifier|private
name|Document
name|childDoc
parameter_list|(
name|String
name|type
parameter_list|,
name|String
name|id
parameter_list|,
name|String
name|parentType
parameter_list|,
name|String
name|parentId
parameter_list|)
block|{
name|Document
name|parent
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|parent
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"%s#%s"
argument_list|,
name|type
argument_list|,
name|id
argument_list|)
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|parent
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
name|ParentFieldMapper
operator|.
name|NAME
argument_list|,
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"%s#%s"
argument_list|,
name|parentType
argument_list|,
name|parentId
argument_list|)
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|parent
return|;
block|}
DECL|method|createSimpleIdCache
specifier|private
name|SimpleIdCache
name|createSimpleIdCache
parameter_list|(
name|Tuple
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
modifier|...
name|documentTypes
parameter_list|)
throws|throws
name|IOException
block|{
name|Settings
name|settings
init|=
name|ImmutableSettings
operator|.
name|EMPTY
decl_stmt|;
name|Index
name|index
init|=
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|SimpleIdCache
name|idCache
init|=
operator|new
name|SimpleIdCache
argument_list|(
name|index
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|MapperService
name|mapperService
init|=
name|MapperTests
operator|.
name|newMapperService
argument_list|()
decl_stmt|;
for|for
control|(
name|Tuple
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|documentType
range|:
name|documentTypes
control|)
block|{
name|String
name|defaultMapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|documentType
operator|.
name|v1
argument_list|()
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"_parent"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
name|documentType
operator|.
name|v2
argument_list|()
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|mapperService
operator|.
name|merge
argument_list|(
name|documentType
operator|.
name|v1
argument_list|()
argument_list|,
name|defaultMapping
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|idCache
operator|.
name|setIndexService
argument_list|(
operator|new
name|StubIndexService
argument_list|(
name|mapperService
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|idCache
return|;
block|}
DECL|method|createIndexWriter
specifier|private
name|IndexWriter
name|createIndexWriter
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|IndexWriter
argument_list|(
operator|new
name|RAMDirectory
argument_list|()
argument_list|,
operator|new
name|IndexWriterConfig
argument_list|(
name|Lucene
operator|.
name|VERSION
argument_list|,
operator|new
name|StandardAnalyzer
argument_list|(
name|Lucene
operator|.
name|VERSION
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
DECL|class|StubIndexService
specifier|private
class|class
name|StubIndexService
implements|implements
name|IndexService
block|{
DECL|field|mapperService
specifier|private
specifier|final
name|MapperService
name|mapperService
decl_stmt|;
DECL|method|StubIndexService
specifier|private
name|StubIndexService
parameter_list|(
name|MapperService
name|mapperService
parameter_list|)
block|{
name|this
operator|.
name|mapperService
operator|=
name|mapperService
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|injector
specifier|public
name|Injector
name|injector
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|gateway
specifier|public
name|IndexGateway
name|gateway
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|cache
specifier|public
name|IndexCache
name|cache
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|fieldData
specifier|public
name|IndexFieldDataService
name|fieldData
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|settingsService
specifier|public
name|IndexSettingsService
name|settingsService
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|percolateService
specifier|public
name|PercolatorService
name|percolateService
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|analysisService
specifier|public
name|AnalysisService
name|analysisService
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|mapperService
specifier|public
name|MapperService
name|mapperService
parameter_list|()
block|{
return|return
name|mapperService
return|;
block|}
annotation|@
name|Override
DECL|method|queryParserService
specifier|public
name|IndexQueryParserService
name|queryParserService
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|similarityService
specifier|public
name|SimilarityService
name|similarityService
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|aliasesService
specifier|public
name|IndexAliasesService
name|aliasesService
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|engine
specifier|public
name|IndexEngine
name|engine
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|store
specifier|public
name|IndexStore
name|store
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|createShard
specifier|public
name|IndexShard
name|createShard
parameter_list|(
name|int
name|sShardId
parameter_list|)
throws|throws
name|ElasticSearchException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|removeShard
specifier|public
name|void
name|removeShard
parameter_list|(
name|int
name|shardId
parameter_list|,
name|String
name|reason
parameter_list|)
throws|throws
name|ElasticSearchException
block|{         }
annotation|@
name|Override
DECL|method|numberOfShards
specifier|public
name|int
name|numberOfShards
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|shardIds
specifier|public
name|ImmutableSet
argument_list|<
name|Integer
argument_list|>
name|shardIds
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|hasShard
specifier|public
name|boolean
name|hasShard
parameter_list|(
name|int
name|shardId
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|shard
specifier|public
name|IndexShard
name|shard
parameter_list|(
name|int
name|shardId
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|shardSafe
specifier|public
name|IndexShard
name|shardSafe
parameter_list|(
name|int
name|shardId
parameter_list|)
throws|throws
name|IndexShardMissingException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|shardInjector
specifier|public
name|Injector
name|shardInjector
parameter_list|(
name|int
name|shardId
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|shardInjectorSafe
specifier|public
name|Injector
name|shardInjectorSafe
parameter_list|(
name|int
name|shardId
parameter_list|)
throws|throws
name|IndexShardMissingException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|index
specifier|public
name|Index
name|index
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|iterator
specifier|public
name|Iterator
argument_list|<
name|IndexShard
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

