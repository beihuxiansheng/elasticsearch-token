begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.unit.index.search.geo
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|unit
operator|.
name|index
operator|.
name|search
operator|.
name|geo
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|DistanceUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|search
operator|.
name|geo
operator|.
name|GeoDistance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
annotation|@
name|Test
DECL|class|GeoDistanceTests
specifier|public
class|class
name|GeoDistanceTests
block|{
annotation|@
name|Test
DECL|method|testDistanceCheck
specifier|public
name|void
name|testDistanceCheck
parameter_list|()
block|{
comment|// Note, is within is an approximation, so, even though 0.52 is outside 50mi, we still get "true"
name|GeoDistance
operator|.
name|DistanceBoundingCheck
name|check
init|=
name|GeoDistance
operator|.
name|distanceBoundingCheck
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
name|DistanceUnit
operator|.
name|MILES
argument_list|)
decl_stmt|;
comment|//System.out.println("Dist: " + GeoDistance.ARC.calculate(0, 0, 0.5, 0.5, DistanceUnit.MILES));
name|assertThat
argument_list|(
name|check
operator|.
name|isWithin
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
comment|//System.out.println("Dist: " + GeoDistance.ARC.calculate(0, 0, 0.52, 0.52, DistanceUnit.MILES));
name|assertThat
argument_list|(
name|check
operator|.
name|isWithin
argument_list|(
literal|0.52
argument_list|,
literal|0.52
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
comment|//System.out.println("Dist: " + GeoDistance.ARC.calculate(0, 0, 1, 1, DistanceUnit.MILES));
name|assertThat
argument_list|(
name|check
operator|.
name|isWithin
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|check
operator|=
name|GeoDistance
operator|.
name|distanceBoundingCheck
argument_list|(
literal|0
argument_list|,
literal|179
argument_list|,
literal|200
argument_list|,
name|DistanceUnit
operator|.
name|MILES
argument_list|)
expr_stmt|;
comment|//System.out.println("Dist: " + GeoDistance.ARC.calculate(0, 179, 0, -179, DistanceUnit.MILES));
name|assertThat
argument_list|(
name|check
operator|.
name|isWithin
argument_list|(
literal|0
argument_list|,
operator|-
literal|179
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
comment|//System.out.println("Dist: " + GeoDistance.ARC.calculate(0, 179, 0, -178, DistanceUnit.MILES));
name|assertThat
argument_list|(
name|check
operator|.
name|isWithin
argument_list|(
literal|0
argument_list|,
operator|-
literal|178
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

