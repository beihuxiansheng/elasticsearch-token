begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.unit.index.fielddata.ordinals
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|unit
operator|.
name|index
operator|.
name|fielddata
operator|.
name|ordinals
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|ordinals
operator|.
name|Ordinals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|ordinals
operator|.
name|OrdinalsBuilder
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|FlatMultiOrdinalsTests
specifier|public
class|class
name|FlatMultiOrdinalsTests
extends|extends
name|MultiOrdinalsTests
block|{
annotation|@
name|Override
DECL|method|creationMultiOrdinals
specifier|protected
name|Ordinals
name|creationMultiOrdinals
parameter_list|(
name|OrdinalsBuilder
name|builder
parameter_list|,
name|ImmutableSettings
operator|.
name|Builder
name|settings
parameter_list|)
block|{
name|settings
operator|.
name|put
argument_list|(
literal|"multi_ordinals"
argument_list|,
literal|"flat"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|(
name|settings
operator|.
name|build
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

