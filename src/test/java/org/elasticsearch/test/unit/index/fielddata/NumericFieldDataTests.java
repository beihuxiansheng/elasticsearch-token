begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.unit.index.fielddata
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|unit
operator|.
name|index
operator|.
name|fielddata
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|DoubleField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
annotation|@
name|Test
DECL|class|NumericFieldDataTests
specifier|public
specifier|abstract
class|class
name|NumericFieldDataTests
extends|extends
name|StringFieldDataTests
block|{
DECL|method|getFieldDataType
specifier|protected
specifier|abstract
name|FieldDataType
name|getFieldDataType
parameter_list|()
function_decl|;
DECL|method|one
specifier|protected
name|String
name|one
parameter_list|()
block|{
return|return
literal|"1.0"
return|;
block|}
DECL|method|two
specifier|protected
name|String
name|two
parameter_list|()
block|{
return|return
literal|"2.0"
return|;
block|}
DECL|method|three
specifier|protected
name|String
name|three
parameter_list|()
block|{
return|return
literal|"3.0"
return|;
block|}
DECL|method|four
specifier|protected
name|String
name|four
parameter_list|()
block|{
return|return
literal|"4.0"
return|;
block|}
annotation|@
name|Override
DECL|method|fillSingleValueAllSet
specifier|protected
name|void
name|fillSingleValueAllSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Document
name|d
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"1"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|2.0d
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|d
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"2"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|1.0d
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|d
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"3"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|3.0d
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSingleValueAllSetNumber
specifier|public
name|void
name|testSingleValueAllSetNumber
parameter_list|()
throws|throws
name|Exception
block|{
name|fillSingleValueAllSet
argument_list|()
expr_stmt|;
name|IndexNumericFieldData
name|indexFieldData
init|=
name|getForField
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
name|AtomicNumericFieldData
name|fieldData
init|=
name|indexFieldData
operator|.
name|load
argument_list|(
name|refreshReader
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|fieldData
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|LongValues
name|longValues
init|=
name|fieldData
operator|.
name|getLongValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|LongArrayRef
name|longArrayRef
init|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|longArrayRef
operator|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|longArrayRef
operator|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|LongValues
operator|.
name|Iter
name|longValuesIter
init|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValuesIter
operator|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValuesIter
operator|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleValues
name|doubleValues
init|=
name|fieldData
operator|.
name|getDoubleValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleArrayRef
name|doubleArrayRef
init|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleArrayRef
operator|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleArrayRef
operator|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleValues
operator|.
name|Iter
name|doubleValuesIter
init|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValuesIter
operator|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValuesIter
operator|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|ByteValues
name|byteValues
init|=
name|fieldData
operator|.
name|getByteValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ByteArrayRef
name|byteArrayRef
init|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|byteArrayRef
operator|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|byteArrayRef
operator|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ByteValues
operator|.
name|Iter
name|byteValuesIter
init|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValuesIter
operator|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValuesIter
operator|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortValues
name|shortValues
init|=
name|fieldData
operator|.
name|getShortValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortArrayRef
name|shortArrayRef
init|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|shortArrayRef
operator|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|shortArrayRef
operator|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortValues
operator|.
name|Iter
name|shortValuesIter
init|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValuesIter
operator|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValuesIter
operator|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntValues
name|intValues
init|=
name|fieldData
operator|.
name|getIntValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntArrayRef
name|intArrayRef
init|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|intArrayRef
operator|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|intArrayRef
operator|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntValues
operator|.
name|Iter
name|intValuesIter
init|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValuesIter
operator|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValuesIter
operator|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|FloatValues
name|floatValues
init|=
name|fieldData
operator|.
name|getFloatValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|FloatArrayRef
name|floatArrayRef
init|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|floatArrayRef
operator|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|floatArrayRef
operator|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|FloatValues
operator|.
name|Iter
name|floatValuesIter
init|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValuesIter
operator|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValuesIter
operator|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|IndexSearcher
name|searcher
init|=
operator|new
name|IndexSearcher
argument_list|(
name|readerContext
operator|.
name|reader
argument_list|()
argument_list|)
decl_stmt|;
name|TopFieldDocs
name|topDocs
decl_stmt|;
name|topDocs
operator|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|10
argument_list|,
operator|new
name|Sort
argument_list|(
operator|new
name|SortField
argument_list|(
literal|"value"
argument_list|,
name|indexFieldData
operator|.
name|comparatorSource
argument_list|(
literal|null
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|totalHits
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|0
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|1
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|2
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|topDocs
operator|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|10
argument_list|,
operator|new
name|Sort
argument_list|(
operator|new
name|SortField
argument_list|(
literal|"value"
argument_list|,
name|indexFieldData
operator|.
name|comparatorSource
argument_list|(
literal|null
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|totalHits
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|0
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|1
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|2
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fillSingleValueWithMissing
specifier|protected
name|void
name|fillSingleValueWithMissing
parameter_list|()
throws|throws
name|Exception
block|{
name|Document
name|d
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"1"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|2.0d
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|d
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"2"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
comment|//d.add(new StringField("value", one(), Field.Store.NO)); // MISSING....
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|d
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"3"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|3.0d
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSingleValueWithMissingNumber
specifier|public
name|void
name|testSingleValueWithMissingNumber
parameter_list|()
throws|throws
name|Exception
block|{
name|fillSingleValueWithMissing
argument_list|()
expr_stmt|;
name|IndexNumericFieldData
name|indexFieldData
init|=
name|getForField
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
name|AtomicNumericFieldData
name|fieldData
init|=
name|indexFieldData
operator|.
name|load
argument_list|(
name|refreshReader
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|fieldData
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|LongValues
name|longValues
init|=
name|fieldData
operator|.
name|getLongValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|LongArrayRef
name|longArrayRef
init|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|longArrayRef
operator|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|longArrayRef
operator|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|LongValues
operator|.
name|Iter
name|longValuesIter
init|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValuesIter
operator|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValuesIter
operator|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleValues
name|doubleValues
init|=
name|fieldData
operator|.
name|getDoubleValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleArrayRef
name|doubleArrayRef
init|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleArrayRef
operator|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|doubleArrayRef
operator|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleValues
operator|.
name|Iter
name|doubleValuesIter
init|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValuesIter
operator|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValuesIter
operator|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|ByteValues
name|byteValues
init|=
name|fieldData
operator|.
name|getByteValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ByteArrayRef
name|byteArrayRef
init|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|byteArrayRef
operator|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|byteArrayRef
operator|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ByteValues
operator|.
name|Iter
name|byteValuesIter
init|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValuesIter
operator|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValuesIter
operator|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortValues
name|shortValues
init|=
name|fieldData
operator|.
name|getShortValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortArrayRef
name|shortArrayRef
init|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|shortArrayRef
operator|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shortArrayRef
operator|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortValues
operator|.
name|Iter
name|shortValuesIter
init|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValuesIter
operator|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValuesIter
operator|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntValues
name|intValues
init|=
name|fieldData
operator|.
name|getIntValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntArrayRef
name|intArrayRef
init|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|intArrayRef
operator|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|intArrayRef
operator|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntValues
operator|.
name|Iter
name|intValuesIter
init|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValuesIter
operator|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValuesIter
operator|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|FloatValues
name|floatValues
init|=
name|fieldData
operator|.
name|getFloatValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|FloatArrayRef
name|floatArrayRef
init|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|floatArrayRef
operator|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|floatArrayRef
operator|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|FloatValues
operator|.
name|Iter
name|floatValuesIter
init|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValuesIter
operator|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValuesIter
operator|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|IndexSearcher
name|searcher
init|=
operator|new
name|IndexSearcher
argument_list|(
name|readerContext
operator|.
name|reader
argument_list|()
argument_list|)
decl_stmt|;
name|TopFieldDocs
name|topDocs
decl_stmt|;
name|topDocs
operator|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|10
argument_list|,
operator|new
name|Sort
argument_list|(
operator|new
name|SortField
argument_list|(
literal|"value"
argument_list|,
name|indexFieldData
operator|.
name|comparatorSource
argument_list|(
literal|null
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// defaults to _last
name|assertThat
argument_list|(
name|topDocs
operator|.
name|totalHits
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|0
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|1
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|2
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|topDocs
operator|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|10
argument_list|,
operator|new
name|Sort
argument_list|(
operator|new
name|SortField
argument_list|(
literal|"value"
argument_list|,
name|indexFieldData
operator|.
name|comparatorSource
argument_list|(
literal|null
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// defaults to _last
name|assertThat
argument_list|(
name|topDocs
operator|.
name|totalHits
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|0
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|1
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|2
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|topDocs
operator|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|10
argument_list|,
operator|new
name|Sort
argument_list|(
operator|new
name|SortField
argument_list|(
literal|"value"
argument_list|,
name|indexFieldData
operator|.
name|comparatorSource
argument_list|(
literal|"_first"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|totalHits
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|0
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|1
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|2
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|topDocs
operator|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|10
argument_list|,
operator|new
name|Sort
argument_list|(
operator|new
name|SortField
argument_list|(
literal|"value"
argument_list|,
name|indexFieldData
operator|.
name|comparatorSource
argument_list|(
literal|"_first"
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|totalHits
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|0
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|1
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|2
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|topDocs
operator|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|10
argument_list|,
operator|new
name|Sort
argument_list|(
operator|new
name|SortField
argument_list|(
literal|"value"
argument_list|,
name|indexFieldData
operator|.
name|comparatorSource
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|totalHits
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|0
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|1
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|2
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|topDocs
operator|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|10
argument_list|,
operator|new
name|Sort
argument_list|(
operator|new
name|SortField
argument_list|(
literal|"value"
argument_list|,
name|indexFieldData
operator|.
name|comparatorSource
argument_list|(
literal|"1"
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|totalHits
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|0
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|1
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|2
index|]
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fillMultiValueAllSet
specifier|protected
name|void
name|fillMultiValueAllSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Document
name|d
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"1"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|2.0d
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|4.0d
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|d
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"2"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|1.0d
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|d
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"3"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|3.0d
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultiValueAllSetNumber
specifier|public
name|void
name|testMultiValueAllSetNumber
parameter_list|()
throws|throws
name|Exception
block|{
name|fillMultiValueAllSet
argument_list|()
expr_stmt|;
name|IndexNumericFieldData
name|indexFieldData
init|=
name|getForField
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
name|AtomicNumericFieldData
name|fieldData
init|=
name|indexFieldData
operator|.
name|load
argument_list|(
name|refreshReader
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|fieldData
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|LongValues
name|longValues
init|=
name|fieldData
operator|.
name|getLongValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|LongArrayRef
name|longArrayRef
init|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|4l
argument_list|)
argument_list|)
expr_stmt|;
name|longArrayRef
operator|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|longArrayRef
operator|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|LongValues
operator|.
name|Iter
name|longValuesIter
init|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValuesIter
operator|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValuesIter
operator|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2l
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|4l
argument_list|)
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleValues
name|doubleValues
init|=
name|fieldData
operator|.
name|getDoubleValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleArrayRef
name|doubleArrayRef
init|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|4d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleArrayRef
operator|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleArrayRef
operator|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleValues
operator|.
name|Iter
name|doubleValuesIter
init|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValuesIter
operator|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValuesIter
operator|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2d
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|4d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|ByteValues
name|byteValues
init|=
name|fieldData
operator|.
name|getByteValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ByteArrayRef
name|byteArrayRef
init|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|byteArrayRef
operator|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|byteArrayRef
operator|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ByteValues
operator|.
name|Iter
name|byteValuesIter
init|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValuesIter
operator|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValuesIter
operator|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortValues
name|shortValues
init|=
name|fieldData
operator|.
name|getShortValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortArrayRef
name|shortArrayRef
init|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|shortArrayRef
operator|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|shortArrayRef
operator|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortValues
operator|.
name|Iter
name|shortValuesIter
init|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValuesIter
operator|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValuesIter
operator|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntValues
name|intValues
init|=
name|fieldData
operator|.
name|getIntValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntArrayRef
name|intArrayRef
init|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|intArrayRef
operator|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|intArrayRef
operator|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntValues
operator|.
name|Iter
name|intValuesIter
init|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValuesIter
operator|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValuesIter
operator|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|FloatValues
name|floatValues
init|=
name|fieldData
operator|.
name|getFloatValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|FloatArrayRef
name|floatArrayRef
init|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|4f
argument_list|)
argument_list|)
expr_stmt|;
name|floatArrayRef
operator|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|floatArrayRef
operator|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|FloatValues
operator|.
name|Iter
name|floatValuesIter
init|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValuesIter
operator|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValuesIter
operator|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2f
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|4f
argument_list|)
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fillMultiValueWithMissing
specifier|protected
name|void
name|fillMultiValueWithMissing
parameter_list|()
throws|throws
name|Exception
block|{
name|Document
name|d
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"1"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|2.0d
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|4.0d
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|d
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"2"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
comment|//d.add(new StringField("value", one(), Field.Store.NO)); // MISSING
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|d
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"_id"
argument_list|,
literal|"3"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|DoubleField
argument_list|(
literal|"value"
argument_list|,
literal|3.0f
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultiValueWithMissingNumber
specifier|public
name|void
name|testMultiValueWithMissingNumber
parameter_list|()
throws|throws
name|Exception
block|{
name|fillMultiValueWithMissing
argument_list|()
expr_stmt|;
name|IndexNumericFieldData
name|indexFieldData
init|=
name|getForField
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
name|AtomicNumericFieldData
name|fieldData
init|=
name|indexFieldData
operator|.
name|load
argument_list|(
name|refreshReader
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|fieldData
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|LongValues
name|longValues
init|=
name|fieldData
operator|.
name|getLongValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|LongArrayRef
name|longArrayRef
init|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|4l
argument_list|)
argument_list|)
expr_stmt|;
name|longArrayRef
operator|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|longArrayRef
operator|=
name|longValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longArrayRef
operator|.
name|values
index|[
name|longArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|LongValues
operator|.
name|Iter
name|longValuesIter
init|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValuesIter
operator|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValuesIter
operator|=
name|longValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|longValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2l
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|4l
argument_list|)
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|longValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|LongValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleValues
name|doubleValues
init|=
name|fieldData
operator|.
name|getDoubleValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleArrayRef
name|doubleArrayRef
init|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|4d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleArrayRef
operator|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|doubleArrayRef
operator|=
name|doubleValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleArrayRef
operator|.
name|values
index|[
name|doubleArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|DoubleValues
operator|.
name|Iter
name|doubleValuesIter
init|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValuesIter
operator|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValuesIter
operator|=
name|doubleValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|doubleValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2d
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|4d
argument_list|)
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|doubleValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|DoubleValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3d
argument_list|)
argument_list|)
expr_stmt|;
name|ByteValues
name|byteValues
init|=
name|fieldData
operator|.
name|getByteValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ByteArrayRef
name|byteArrayRef
init|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|byteArrayRef
operator|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|byteArrayRef
operator|=
name|byteValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteArrayRef
operator|.
name|values
index|[
name|byteArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ByteValues
operator|.
name|Iter
name|byteValuesIter
init|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValuesIter
operator|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValuesIter
operator|=
name|byteValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|byteValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|byteValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|ByteValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortValues
name|shortValues
init|=
name|fieldData
operator|.
name|getShortValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortArrayRef
name|shortArrayRef
init|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|shortArrayRef
operator|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shortArrayRef
operator|=
name|shortValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortArrayRef
operator|.
name|values
index|[
name|shortArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShortValues
operator|.
name|Iter
name|shortValuesIter
init|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValuesIter
operator|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValuesIter
operator|=
name|shortValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shortValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|shortValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|ShortValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
operator|(
name|short
operator|)
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntValues
name|intValues
init|=
name|fieldData
operator|.
name|getIntValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntArrayRef
name|intArrayRef
init|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|intArrayRef
operator|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|intArrayRef
operator|=
name|intValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intArrayRef
operator|.
name|values
index|[
name|intArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|IntValues
operator|.
name|Iter
name|intValuesIter
init|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValuesIter
operator|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValuesIter
operator|=
name|intValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|intValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|intValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|IntValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|FloatValues
name|floatValues
init|=
name|fieldData
operator|.
name|getFloatValues
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|isMultiValued
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|hasValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValue
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValues
operator|.
name|getValueMissing
argument_list|(
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|FloatArrayRef
name|floatArrayRef
init|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
operator|+
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|4f
argument_list|)
argument_list|)
expr_stmt|;
name|floatArrayRef
operator|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|floatArrayRef
operator|=
name|floatValues
operator|.
name|getValues
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatArrayRef
operator|.
name|values
index|[
name|floatArrayRef
operator|.
name|start
index|]
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|FloatValues
operator|.
name|Iter
name|floatValuesIter
init|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValuesIter
operator|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValuesIter
operator|=
name|floatValues
operator|.
name|getIter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|next
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|floatValuesIter
operator|.
name|hasNext
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|0
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|0
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|2f
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|4f
argument_list|)
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|1
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|1
argument_list|)
operator|.
name|addMissing
argument_list|()
argument_list|)
expr_stmt|;
name|floatValues
operator|.
name|forEachValueInDoc
argument_list|(
literal|2
argument_list|,
operator|new
name|FloatValuesVerifierProc
argument_list|(
literal|2
argument_list|)
operator|.
name|addExpected
argument_list|(
literal|3f
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

