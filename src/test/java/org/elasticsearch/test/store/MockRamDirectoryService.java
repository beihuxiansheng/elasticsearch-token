begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.store
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|store
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cache
operator|.
name|memory
operator|.
name|ByteBufferCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|AbstractIndexShardComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|store
operator|.
name|DirectoryService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|MockRamDirectoryService
specifier|public
class|class
name|MockRamDirectoryService
extends|extends
name|AbstractIndexShardComponent
implements|implements
name|DirectoryService
block|{
DECL|field|helper
specifier|private
specifier|final
name|MockDirectoryHelper
name|helper
decl_stmt|;
DECL|field|delegateService
specifier|private
specifier|final
name|DirectoryService
name|delegateService
decl_stmt|;
annotation|@
name|Inject
DECL|method|MockRamDirectoryService
specifier|public
name|MockRamDirectoryService
parameter_list|(
name|ShardId
name|shardId
parameter_list|,
name|Settings
name|indexSettings
parameter_list|,
name|ByteBufferCache
name|byteBufferCache
parameter_list|)
block|{
name|super
argument_list|(
name|shardId
argument_list|,
name|indexSettings
argument_list|)
expr_stmt|;
name|helper
operator|=
operator|new
name|MockDirectoryHelper
argument_list|(
name|shardId
argument_list|,
name|indexSettings
argument_list|,
name|logger
argument_list|)
expr_stmt|;
name|delegateService
operator|=
name|helper
operator|.
name|randomRamDirecoryService
argument_list|(
name|byteBufferCache
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|build
specifier|public
name|Directory
index|[]
name|build
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|helper
operator|.
name|wrapAllInplace
argument_list|(
name|delegateService
operator|.
name|build
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|throttleTimeInNanos
specifier|public
name|long
name|throttleTimeInNanos
parameter_list|()
block|{
return|return
name|delegateService
operator|.
name|throttleTimeInNanos
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|renameFile
specifier|public
name|void
name|renameFile
parameter_list|(
name|Directory
name|dir
parameter_list|,
name|String
name|from
parameter_list|,
name|String
name|to
parameter_list|)
throws|throws
name|IOException
block|{
name|delegateService
operator|.
name|renameFile
argument_list|(
name|dir
argument_list|,
name|from
argument_list|,
name|to
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fullDelete
specifier|public
name|void
name|fullDelete
parameter_list|(
name|Directory
name|dir
parameter_list|)
throws|throws
name|IOException
block|{
name|delegateService
operator|.
name|fullDelete
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

