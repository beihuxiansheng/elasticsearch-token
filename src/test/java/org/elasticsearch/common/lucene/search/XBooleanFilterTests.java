begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.common.lucene.search
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|core
operator|.
name|KeywordAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|FilterClause
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|TermFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|FixedBitSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|Lucene
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchLuceneTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanClause
operator|.
name|Occur
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|IsEqual
operator|.
name|equalTo
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|XBooleanFilterTests
specifier|public
class|class
name|XBooleanFilterTests
extends|extends
name|ElasticsearchLuceneTestCase
block|{
DECL|field|directory
specifier|private
name|Directory
name|directory
decl_stmt|;
DECL|field|reader
specifier|private
name|AtomicReader
name|reader
decl_stmt|;
DECL|field|distinctValues
specifier|private
specifier|static
specifier|final
name|char
index|[]
name|distinctValues
init|=
operator|new
name|char
index|[]
block|{
literal|'a'
block|,
literal|'b'
block|,
literal|'c'
block|,
literal|'d'
block|,
literal|'v'
block|,
literal|'z'
block|,
literal|'y'
block|}
decl_stmt|;
annotation|@
name|Before
DECL|method|setup
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|char
index|[]
index|[]
name|documentMatrix
init|=
operator|new
name|char
index|[]
index|[]
block|{
block|{
literal|'a'
block|,
literal|'b'
block|,
literal|'c'
block|,
literal|'d'
block|,
literal|'v'
block|}
block|,
block|{
literal|'a'
block|,
literal|'b'
block|,
literal|'c'
block|,
literal|'d'
block|,
literal|'z'
block|}
block|,
block|{
literal|'a'
block|,
literal|'a'
block|,
literal|'a'
block|,
literal|'a'
block|,
literal|'x'
block|}
block|}
decl_stmt|;
name|List
argument_list|<
name|Document
argument_list|>
name|documents
init|=
operator|new
name|ArrayList
argument_list|<
name|Document
argument_list|>
argument_list|(
name|documentMatrix
operator|.
name|length
argument_list|)
decl_stmt|;
for|for
control|(
name|char
index|[]
name|fields
range|:
name|documentMatrix
control|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|fields
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|document
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|fields
index|[
name|i
index|]
argument_list|)
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
block|}
name|directory
operator|=
name|newDirectory
argument_list|()
expr_stmt|;
name|IndexWriter
name|w
init|=
operator|new
name|IndexWriter
argument_list|(
name|directory
argument_list|,
operator|new
name|IndexWriterConfig
argument_list|(
name|Lucene
operator|.
name|VERSION
argument_list|,
operator|new
name|KeywordAnalyzer
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|w
operator|.
name|addDocuments
argument_list|(
name|documents
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
name|SlowCompositeReaderWrapper
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|directory
operator|.
name|close
argument_list|()
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWithTwoClausesOfEachOccur_allFixedBitsetFilters
specifier|public
name|void
name|testWithTwoClausesOfEachOccur_allFixedBitsetFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|XBooleanFilter
argument_list|>
name|booleanFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|XBooleanFilter
argument_list|>
argument_list|()
decl_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testWithTwoClausesOfEachOccur_allBitsBasedFilters
specifier|public
name|void
name|testWithTwoClausesOfEachOccur_allBitsBasedFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|XBooleanFilter
argument_list|>
name|booleanFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|XBooleanFilter
argument_list|>
argument_list|()
decl_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testWithTwoClausesOfEachOccur_allFilterTypes
specifier|public
name|void
name|testWithTwoClausesOfEachOccur_allFilterTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|XBooleanFilter
argument_list|>
name|booleanFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|XBooleanFilter
argument_list|>
argument_list|()
decl_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|booleanFilters
operator|.
name|clear
argument_list|()
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'e'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|5
argument_list|,
literal|'f'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testWithTwoClausesOfEachOccur_singleClauseOptimisation
specifier|public
name|void
name|testWithTwoClausesOfEachOccur_singleClauseOptimisation
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|XBooleanFilter
argument_list|>
name|booleanFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|XBooleanFilter
argument_list|>
argument_list|()
decl_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|booleanFilters
operator|.
name|clear
argument_list|()
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'c'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|booleanFilters
operator|.
name|clear
argument_list|()
expr_stmt|;
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|2
argument_list|,
literal|'c'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testOnlyShouldClauses
specifier|public
name|void
name|testOnlyShouldClauses
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|XBooleanFilter
argument_list|>
name|booleanFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|XBooleanFilter
argument_list|>
argument_list|()
decl_stmt|;
comment|// 2 slow filters
comment|// This case caused: https://github.com/elasticsearch/elasticsearch/issues/2826
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// 2 fast filters
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// 1 fast filters, 1 slow filter
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'b'
argument_list|,
name|SHOULD
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testOnlyMustClauses
specifier|public
name|void
name|testOnlyMustClauses
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|XBooleanFilter
argument_list|>
name|booleanFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|XBooleanFilter
argument_list|>
argument_list|()
decl_stmt|;
comment|// Slow filters
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// 2 fast filters
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// 1 fast filters, 1 slow filter
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|MUST
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|3
argument_list|,
literal|'d'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testOnlyMustNotClauses
specifier|public
name|void
name|testOnlyMustNotClauses
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|XBooleanFilter
argument_list|>
name|booleanFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|XBooleanFilter
argument_list|>
argument_list|()
decl_stmt|;
comment|// Slow filters
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// 2 fast filters
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// 1 fast filters, 1 slow filter
name|booleanFilters
operator|.
name|add
argument_list|(
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|,
name|MUST_NOT
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|,
name|MUST_NOT
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|XBooleanFilter
name|booleanFilter
range|:
name|booleanFilters
control|)
block|{
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testNonMatchingSlowShouldWithMatchingMust
specifier|public
name|void
name|testNonMatchingSlowShouldWithMatchingMust
parameter_list|()
throws|throws
name|Exception
block|{
name|XBooleanFilter
name|booleanFilter
init|=
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'b'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|DocIdSet
name|docIdSet
init|=
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|docIdSet
argument_list|,
name|equalTo
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSlowShouldClause_atLeastOneShouldMustMatch
specifier|public
name|void
name|testSlowShouldClause_atLeastOneShouldMustMatch
parameter_list|()
throws|throws
name|Exception
block|{
name|XBooleanFilter
name|booleanFilter
init|=
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|booleanFilter
operator|=
name|createBooleanFilter
argument_list|(
name|newFilterClause
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|MUST
argument_list|,
literal|false
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|,
name|newFilterClause
argument_list|(
literal|4
argument_list|,
literal|'z'
argument_list|,
name|SHOULD
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|or
argument_list|(
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|newFilterClause
specifier|private
specifier|static
name|FilterClause
name|newFilterClause
parameter_list|(
name|int
name|field
parameter_list|,
name|char
name|character
parameter_list|,
name|BooleanClause
operator|.
name|Occur
name|occur
parameter_list|,
name|boolean
name|slowerBitsBackedFilter
parameter_list|)
block|{
name|Filter
name|filter
decl_stmt|;
if|if
condition|(
name|slowerBitsBackedFilter
condition|)
block|{
name|filter
operator|=
operator|new
name|PrettyPrintFieldCacheTermsFilter
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|field
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|character
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Term
name|term
init|=
operator|new
name|Term
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|field
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|character
argument_list|)
argument_list|)
decl_stmt|;
name|filter
operator|=
operator|new
name|TermFilter
argument_list|(
name|term
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|FilterClause
argument_list|(
name|filter
argument_list|,
name|occur
argument_list|)
return|;
block|}
DECL|method|createBooleanFilter
specifier|private
specifier|static
name|XBooleanFilter
name|createBooleanFilter
parameter_list|(
name|FilterClause
modifier|...
name|clauses
parameter_list|)
block|{
name|XBooleanFilter
name|booleanFilter
init|=
operator|new
name|XBooleanFilter
argument_list|()
decl_stmt|;
for|for
control|(
name|FilterClause
name|clause
range|:
name|clauses
control|)
block|{
name|booleanFilter
operator|.
name|add
argument_list|(
name|clause
argument_list|)
expr_stmt|;
block|}
return|return
name|booleanFilter
return|;
block|}
annotation|@
name|Test
annotation|@
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"https://github.com/elasticsearch/elasticsearch/pull/4144/"
argument_list|)
DECL|method|testRandom
specifier|public
name|void
name|testRandom
parameter_list|()
throws|throws
name|IOException
block|{
name|int
name|iterations
init|=
name|atLeast
argument_list|(
literal|400
argument_list|)
decl_stmt|;
comment|// don't worry that is fast!
for|for
control|(
name|int
name|iter
init|=
literal|0
init|;
name|iter
operator|<
name|iterations
condition|;
name|iter
operator|++
control|)
block|{
name|int
name|numClauses
init|=
literal|1
operator|+
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|FilterClause
index|[]
name|clauses
init|=
operator|new
name|FilterClause
index|[
name|numClauses
index|]
decl_stmt|;
name|BooleanQuery
name|topLevel
init|=
operator|new
name|BooleanQuery
argument_list|()
decl_stmt|;
name|BooleanQuery
name|orQuery
init|=
operator|new
name|BooleanQuery
argument_list|()
decl_stmt|;
name|boolean
name|hasMust
init|=
literal|false
decl_stmt|;
name|boolean
name|hasShould
init|=
literal|false
decl_stmt|;
name|boolean
name|hasMustNot
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numClauses
condition|;
name|i
operator|++
control|)
block|{
name|int
name|field
init|=
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|char
name|value
init|=
name|distinctValues
index|[
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
name|distinctValues
operator|.
name|length
argument_list|)
index|]
decl_stmt|;
switch|switch
condition|(
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
literal|10
argument_list|)
condition|)
block|{
case|case
literal|9
case|:
case|case
literal|8
case|:
case|case
literal|7
case|:
case|case
literal|6
case|:
case|case
literal|5
case|:
name|hasMust
operator|=
literal|true
expr_stmt|;
name|clauses
index|[
name|i
index|]
operator|=
name|newFilterClause
argument_list|(
name|field
argument_list|,
name|value
argument_list|,
name|MUST
argument_list|,
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|add
argument_list|(
operator|new
name|BooleanClause
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|field
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|MUST
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
literal|4
case|:
case|case
literal|3
case|:
case|case
literal|2
case|:
case|case
literal|1
case|:
name|hasShould
operator|=
literal|true
expr_stmt|;
name|clauses
index|[
name|i
index|]
operator|=
name|newFilterClause
argument_list|(
name|field
argument_list|,
name|value
argument_list|,
name|SHOULD
argument_list|,
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|orQuery
operator|.
name|add
argument_list|(
operator|new
name|BooleanClause
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|field
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|SHOULD
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
literal|0
case|:
name|hasMustNot
operator|=
literal|true
expr_stmt|;
name|clauses
index|[
name|i
index|]
operator|=
name|newFilterClause
argument_list|(
name|field
argument_list|,
name|value
argument_list|,
name|MUST_NOT
argument_list|,
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|add
argument_list|(
operator|new
name|BooleanClause
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|field
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|MUST_NOT
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|orQuery
operator|.
name|getClauses
argument_list|()
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|topLevel
operator|.
name|add
argument_list|(
operator|new
name|BooleanClause
argument_list|(
name|orQuery
argument_list|,
name|MUST
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasMustNot
operator|&&
operator|!
name|hasMust
operator|&&
operator|!
name|hasShould
condition|)
block|{
comment|// pure negative
name|topLevel
operator|.
name|add
argument_list|(
operator|new
name|BooleanClause
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|MUST
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|XBooleanFilter
name|booleanFilter
init|=
name|createBooleanFilter
argument_list|(
name|clauses
argument_list|)
decl_stmt|;
name|FixedBitSet
name|leftResult
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|FixedBitSet
name|rightResult
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|DocIdSet
name|left
init|=
name|booleanFilter
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
decl_stmt|;
name|DocIdSet
name|right
init|=
operator|new
name|QueryWrapperFilter
argument_list|(
name|topLevel
argument_list|)
operator|.
name|getDocIdSet
argument_list|(
name|reader
operator|.
name|getContext
argument_list|()
argument_list|,
name|reader
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|left
operator|==
literal|null
operator|||
name|right
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|left
operator|==
literal|null
operator|&&
name|right
operator|!=
literal|null
condition|)
block|{
name|assertThat
argument_list|(
name|errorMsg
argument_list|(
name|clauses
argument_list|,
name|topLevel
argument_list|)
argument_list|,
operator|(
name|right
operator|.
name|iterator
argument_list|()
operator|==
literal|null
condition|?
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
else|:
name|right
operator|.
name|iterator
argument_list|()
operator|.
name|nextDoc
argument_list|()
operator|)
argument_list|,
name|equalTo
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|left
operator|!=
literal|null
operator|&&
name|right
operator|==
literal|null
condition|)
block|{
name|assertThat
argument_list|(
name|errorMsg
argument_list|(
name|clauses
argument_list|,
name|topLevel
argument_list|)
argument_list|,
operator|(
name|left
operator|.
name|iterator
argument_list|()
operator|==
literal|null
condition|?
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
else|:
name|left
operator|.
name|iterator
argument_list|()
operator|.
name|nextDoc
argument_list|()
operator|)
argument_list|,
name|equalTo
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|DocIdSetIterator
name|leftIter
init|=
name|left
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|DocIdSetIterator
name|rightIter
init|=
name|right
operator|.
name|iterator
argument_list|()
decl_stmt|;
if|if
condition|(
name|leftIter
operator|!=
literal|null
condition|)
block|{
name|leftResult
operator|.
name|or
argument_list|(
name|leftIter
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rightIter
operator|!=
literal|null
condition|)
block|{
name|rightResult
operator|.
name|or
argument_list|(
name|rightIter
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|leftResult
operator|.
name|cardinality
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|leftResult
operator|.
name|cardinality
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|reader
operator|.
name|maxDoc
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertThat
argument_list|(
name|errorMsg
argument_list|(
name|clauses
argument_list|,
name|topLevel
argument_list|)
operator|+
literal|" -- failed at index "
operator|+
name|i
argument_list|,
name|leftResult
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|rightResult
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
DECL|method|errorMsg
specifier|private
name|String
name|errorMsg
parameter_list|(
name|FilterClause
index|[]
name|clauses
parameter_list|,
name|BooleanQuery
name|query
parameter_list|)
block|{
return|return
name|query
operator|.
name|toString
argument_list|()
operator|+
literal|" vs. "
operator|+
name|Arrays
operator|.
name|toString
argument_list|(
name|clauses
argument_list|)
return|;
block|}
DECL|class|PrettyPrintFieldCacheTermsFilter
specifier|public
specifier|static
specifier|final
class|class
name|PrettyPrintFieldCacheTermsFilter
extends|extends
name|FieldCacheTermsFilter
block|{
DECL|field|value
specifier|private
specifier|final
name|String
name|value
decl_stmt|;
DECL|field|field
specifier|private
specifier|final
name|String
name|field
decl_stmt|;
DECL|method|PrettyPrintFieldCacheTermsFilter
specifier|public
name|PrettyPrintFieldCacheTermsFilter
parameter_list|(
name|String
name|field
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|this
operator|.
name|field
operator|=
name|field
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"SLOW("
operator|+
name|field
operator|+
literal|":"
operator|+
name|value
operator|+
literal|")"
return|;
block|}
block|}
block|}
end_class

end_unit

