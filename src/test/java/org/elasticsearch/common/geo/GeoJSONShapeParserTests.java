begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.geo
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
package|;
end_package

begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|shape
operator|.
name|Circle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|shape
operator|.
name|Rectangle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|shape
operator|.
name|Shape
import|;
end_import

begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|shape
operator|.
name|ShapeCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|shape
operator|.
name|jts
operator|.
name|JtsGeometry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|shape
operator|.
name|jts
operator|.
name|JtsPoint
import|;
end_import

begin_import
import|import
name|com
operator|.
name|vividsolutions
operator|.
name|jts
operator|.
name|geom
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|builders
operator|.
name|ShapeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|json
operator|.
name|JsonXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchGeoAssertions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|builders
operator|.
name|ShapeBuilder
operator|.
name|SPATIAL_CONTEXT
import|;
end_import

begin_comment
comment|/**  * Tests for {@link GeoJSONShapeParser}  */
end_comment

begin_class
DECL|class|GeoJSONShapeParserTests
specifier|public
class|class
name|GeoJSONShapeParserTests
extends|extends
name|ElasticsearchTestCase
block|{
DECL|field|GEOMETRY_FACTORY
specifier|private
specifier|final
specifier|static
name|GeometryFactory
name|GEOMETRY_FACTORY
init|=
name|SPATIAL_CONTEXT
operator|.
name|getGeometryFactory
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|testParse_simplePoint
specifier|public
name|void
name|testParse_simplePoint
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|pointGeoJson
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"Point"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Point
name|expected
init|=
name|GEOMETRY_FACTORY
operator|.
name|createPoint
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.0
argument_list|,
literal|0.0
argument_list|)
argument_list|)
decl_stmt|;
name|assertGeometryEquals
argument_list|(
operator|new
name|JtsPoint
argument_list|(
name|expected
argument_list|,
name|SPATIAL_CONTEXT
argument_list|)
argument_list|,
name|pointGeoJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParse_lineString
specifier|public
name|void
name|testParse_lineString
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|lineGeoJson
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"LineString"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|101.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Coordinate
argument_list|>
name|lineCoordinates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|lineCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lineCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|101
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|LineString
name|expected
init|=
name|GEOMETRY_FACTORY
operator|.
name|createLineString
argument_list|(
name|lineCoordinates
operator|.
name|toArray
argument_list|(
operator|new
name|Coordinate
index|[
name|lineCoordinates
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
decl_stmt|;
name|assertGeometryEquals
argument_list|(
name|jtsGeom
argument_list|(
name|expected
argument_list|)
argument_list|,
name|lineGeoJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParse_multiLineString
specifier|public
name|void
name|testParse_multiLineString
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|multilinesGeoJson
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"MultiLineString"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|startArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|101.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|102.0
argument_list|)
operator|.
name|value
argument_list|(
literal|2.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|103.0
argument_list|)
operator|.
name|value
argument_list|(
literal|3.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|MultiLineString
name|expected
init|=
name|GEOMETRY_FACTORY
operator|.
name|createMultiLineString
argument_list|(
operator|new
name|LineString
index|[]
block|{
name|GEOMETRY_FACTORY
operator|.
name|createLineString
argument_list|(
operator|new
name|Coordinate
index|[]
block|{
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
block|,
operator|new
name|Coordinate
argument_list|(
literal|101
argument_list|,
literal|1
argument_list|)
block|,                 }
argument_list|)
block|,
name|GEOMETRY_FACTORY
operator|.
name|createLineString
argument_list|(
operator|new
name|Coordinate
index|[]
block|{
operator|new
name|Coordinate
argument_list|(
literal|102
argument_list|,
literal|2
argument_list|)
block|,
operator|new
name|Coordinate
argument_list|(
literal|103
argument_list|,
literal|3
argument_list|)
block|,                 }
argument_list|)
block|,         }
argument_list|)
decl_stmt|;
name|assertGeometryEquals
argument_list|(
name|jtsGeom
argument_list|(
name|expected
argument_list|)
argument_list|,
name|multilinesGeoJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParse_circle
specifier|public
name|void
name|testParse_circle
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|multilinesGeoJson
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"circle"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"radius"
argument_list|,
literal|"100m"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Circle
name|expected
init|=
name|SPATIAL_CONTEXT
operator|.
name|makeCircle
argument_list|(
literal|100.0
argument_list|,
literal|0.0
argument_list|,
literal|360
operator|*
literal|100
operator|/
name|GeoUtils
operator|.
name|EARTH_EQUATOR
argument_list|)
decl_stmt|;
name|assertGeometryEquals
argument_list|(
name|expected
argument_list|,
name|multilinesGeoJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParse_envelope
specifier|public
name|void
name|testParse_envelope
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|multilinesGeoJson
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"envelope"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
operator|-
literal|50
argument_list|)
operator|.
name|value
argument_list|(
literal|30
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|50
argument_list|)
operator|.
name|value
argument_list|(
operator|-
literal|30
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Rectangle
name|expected
init|=
name|SPATIAL_CONTEXT
operator|.
name|makeRectangle
argument_list|(
operator|-
literal|50
argument_list|,
literal|50
argument_list|,
operator|-
literal|30
argument_list|,
literal|30
argument_list|)
decl_stmt|;
name|assertGeometryEquals
argument_list|(
name|expected
argument_list|,
name|multilinesGeoJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParse_polygonNoHoles
specifier|public
name|void
name|testParse_polygonNoHoles
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|polygonGeoJson
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"Polygon"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|startArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|101.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|101.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Coordinate
argument_list|>
name|shellCoordinates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|101
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|101
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|LinearRing
name|shell
init|=
name|GEOMETRY_FACTORY
operator|.
name|createLinearRing
argument_list|(
name|shellCoordinates
operator|.
name|toArray
argument_list|(
operator|new
name|Coordinate
index|[
name|shellCoordinates
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
decl_stmt|;
name|Polygon
name|expected
init|=
name|GEOMETRY_FACTORY
operator|.
name|createPolygon
argument_list|(
name|shell
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertGeometryEquals
argument_list|(
name|jtsGeom
argument_list|(
name|expected
argument_list|)
argument_list|,
name|polygonGeoJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParse_polygonWithHole
specifier|public
name|void
name|testParse_polygonWithHole
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|polygonGeoJson
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"Polygon"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|startArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|101.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|101.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.2
argument_list|)
operator|.
name|value
argument_list|(
literal|0.8
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.2
argument_list|)
operator|.
name|value
argument_list|(
literal|0.2
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.8
argument_list|)
operator|.
name|value
argument_list|(
literal|0.2
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.8
argument_list|)
operator|.
name|value
argument_list|(
literal|0.8
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.2
argument_list|)
operator|.
name|value
argument_list|(
literal|0.8
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Coordinate
argument_list|>
name|shellCoordinates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|101
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|101
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Coordinate
argument_list|>
name|holeCoordinates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|holeCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.2
argument_list|,
literal|0.2
argument_list|)
argument_list|)
expr_stmt|;
name|holeCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.8
argument_list|,
literal|0.2
argument_list|)
argument_list|)
expr_stmt|;
name|holeCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.8
argument_list|,
literal|0.8
argument_list|)
argument_list|)
expr_stmt|;
name|holeCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.2
argument_list|,
literal|0.8
argument_list|)
argument_list|)
expr_stmt|;
name|holeCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.2
argument_list|,
literal|0.2
argument_list|)
argument_list|)
expr_stmt|;
name|LinearRing
name|shell
init|=
name|GEOMETRY_FACTORY
operator|.
name|createLinearRing
argument_list|(
name|shellCoordinates
operator|.
name|toArray
argument_list|(
operator|new
name|Coordinate
index|[
name|shellCoordinates
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
decl_stmt|;
name|LinearRing
index|[]
name|holes
init|=
operator|new
name|LinearRing
index|[
literal|1
index|]
decl_stmt|;
name|holes
index|[
literal|0
index|]
operator|=
name|GEOMETRY_FACTORY
operator|.
name|createLinearRing
argument_list|(
name|holeCoordinates
operator|.
name|toArray
argument_list|(
operator|new
name|Coordinate
index|[
name|holeCoordinates
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|Polygon
name|expected
init|=
name|GEOMETRY_FACTORY
operator|.
name|createPolygon
argument_list|(
name|shell
argument_list|,
name|holes
argument_list|)
decl_stmt|;
name|assertGeometryEquals
argument_list|(
name|jtsGeom
argument_list|(
name|expected
argument_list|)
argument_list|,
name|polygonGeoJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParse_multiPoint
specifier|public
name|void
name|testParse_multiPoint
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|multiPointGeoJson
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"MultiPoint"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|101.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|ShapeCollection
name|expected
init|=
name|shapeCollection
argument_list|(
name|SPATIAL_CONTEXT
operator|.
name|makePoint
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|,
name|SPATIAL_CONTEXT
operator|.
name|makePoint
argument_list|(
literal|101
argument_list|,
literal|1.0
argument_list|)
argument_list|)
decl_stmt|;
name|assertGeometryEquals
argument_list|(
name|expected
argument_list|,
name|multiPointGeoJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParse_multiPolygon
specifier|public
name|void
name|testParse_multiPolygon
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|multiPolygonGeoJson
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"MultiPolygon"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|startArray
argument_list|()
comment|//first poly (without holes)
operator|.
name|startArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|102.0
argument_list|)
operator|.
name|value
argument_list|(
literal|2.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|103.0
argument_list|)
operator|.
name|value
argument_list|(
literal|2.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|103.0
argument_list|)
operator|.
name|value
argument_list|(
literal|3.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|102.0
argument_list|)
operator|.
name|value
argument_list|(
literal|3.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|102.0
argument_list|)
operator|.
name|value
argument_list|(
literal|2.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
comment|//second poly (with hole)
operator|.
name|startArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|101.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|101.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
comment|//hole
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.2
argument_list|)
operator|.
name|value
argument_list|(
literal|0.8
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.2
argument_list|)
operator|.
name|value
argument_list|(
literal|0.2
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.8
argument_list|)
operator|.
name|value
argument_list|(
literal|0.2
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.8
argument_list|)
operator|.
name|value
argument_list|(
literal|0.8
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.2
argument_list|)
operator|.
name|value
argument_list|(
literal|0.8
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Coordinate
argument_list|>
name|shellCoordinates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|101
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|101
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Coordinate
argument_list|>
name|holeCoordinates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|holeCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.2
argument_list|,
literal|0.2
argument_list|)
argument_list|)
expr_stmt|;
name|holeCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.8
argument_list|,
literal|0.2
argument_list|)
argument_list|)
expr_stmt|;
name|holeCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.8
argument_list|,
literal|0.8
argument_list|)
argument_list|)
expr_stmt|;
name|holeCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.2
argument_list|,
literal|0.8
argument_list|)
argument_list|)
expr_stmt|;
name|holeCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.2
argument_list|,
literal|0.2
argument_list|)
argument_list|)
expr_stmt|;
name|LinearRing
name|shell
init|=
name|GEOMETRY_FACTORY
operator|.
name|createLinearRing
argument_list|(
name|shellCoordinates
operator|.
name|toArray
argument_list|(
operator|new
name|Coordinate
index|[
name|shellCoordinates
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
decl_stmt|;
name|LinearRing
index|[]
name|holes
init|=
operator|new
name|LinearRing
index|[
literal|1
index|]
decl_stmt|;
name|holes
index|[
literal|0
index|]
operator|=
name|GEOMETRY_FACTORY
operator|.
name|createLinearRing
argument_list|(
name|holeCoordinates
operator|.
name|toArray
argument_list|(
operator|new
name|Coordinate
index|[
name|holeCoordinates
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|Polygon
name|withHoles
init|=
name|GEOMETRY_FACTORY
operator|.
name|createPolygon
argument_list|(
name|shell
argument_list|,
name|holes
argument_list|)
decl_stmt|;
name|shellCoordinates
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|102
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|103
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|103
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|102
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|shellCoordinates
operator|.
name|add
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|102
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|shell
operator|=
name|GEOMETRY_FACTORY
operator|.
name|createLinearRing
argument_list|(
name|shellCoordinates
operator|.
name|toArray
argument_list|(
operator|new
name|Coordinate
index|[
name|shellCoordinates
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|Polygon
name|withoutHoles
init|=
name|GEOMETRY_FACTORY
operator|.
name|createPolygon
argument_list|(
name|shell
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Shape
name|expected
init|=
name|shapeCollection
argument_list|(
name|withoutHoles
argument_list|,
name|withHoles
argument_list|)
decl_stmt|;
name|assertGeometryEquals
argument_list|(
name|expected
argument_list|,
name|multiPolygonGeoJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParse_geometryCollection
specifier|public
name|void
name|testParse_geometryCollection
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|geometryCollectionGeoJson
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"GeometryCollection"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"geometries"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"LineString"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|101.0
argument_list|)
operator|.
name|value
argument_list|(
literal|1.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"Point"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|value
argument_list|(
literal|102.0
argument_list|)
operator|.
name|value
argument_list|(
literal|2.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Shape
index|[]
name|expected
init|=
operator|new
name|Shape
index|[
literal|2
index|]
decl_stmt|;
name|LineString
name|expectedLineString
init|=
name|GEOMETRY_FACTORY
operator|.
name|createLineString
argument_list|(
operator|new
name|Coordinate
index|[]
block|{
operator|new
name|Coordinate
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
block|,
operator|new
name|Coordinate
argument_list|(
literal|101
argument_list|,
literal|1
argument_list|)
block|,         }
argument_list|)
decl_stmt|;
name|expected
index|[
literal|0
index|]
operator|=
name|jtsGeom
argument_list|(
name|expectedLineString
argument_list|)
expr_stmt|;
name|Point
name|expectedPoint
init|=
name|GEOMETRY_FACTORY
operator|.
name|createPoint
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|102.0
argument_list|,
literal|2.0
argument_list|)
argument_list|)
decl_stmt|;
name|expected
index|[
literal|1
index|]
operator|=
operator|new
name|JtsPoint
argument_list|(
name|expectedPoint
argument_list|,
name|SPATIAL_CONTEXT
argument_list|)
expr_stmt|;
comment|//equals returns true only if geometries are in the same order
name|assertGeometryEquals
argument_list|(
name|shapeCollection
argument_list|(
name|expected
argument_list|)
argument_list|,
name|geometryCollectionGeoJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThatParserExtractsCorrectTypeAndCoordinatesFromArbitraryJson
specifier|public
name|void
name|testThatParserExtractsCorrectTypeAndCoordinatesFromArbitraryJson
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|pointGeoJson
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"crs"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"name"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|field
argument_list|(
literal|"name"
argument_list|,
literal|"urn:ogc:def:crs:OGC:1.3:CRS84"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"bbox"
argument_list|,
literal|"foobar"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"point"
argument_list|)
operator|.
name|field
argument_list|(
literal|"bubu"
argument_list|,
literal|"foobar"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|value
argument_list|(
literal|100.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"nested"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|value
argument_list|(
literal|200.0
argument_list|)
operator|.
name|value
argument_list|(
literal|0.0
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"lala"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"NotAPoint"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Point
name|expected
init|=
name|GEOMETRY_FACTORY
operator|.
name|createPoint
argument_list|(
operator|new
name|Coordinate
argument_list|(
literal|100.0
argument_list|,
literal|0.0
argument_list|)
argument_list|)
decl_stmt|;
name|assertGeometryEquals
argument_list|(
operator|new
name|JtsPoint
argument_list|(
name|expected
argument_list|,
name|SPATIAL_CONTEXT
argument_list|)
argument_list|,
name|pointGeoJson
argument_list|)
expr_stmt|;
block|}
DECL|method|assertGeometryEquals
specifier|private
name|void
name|assertGeometryEquals
parameter_list|(
name|Shape
name|expected
parameter_list|,
name|String
name|geoJson
parameter_list|)
throws|throws
name|IOException
block|{
name|XContentParser
name|parser
init|=
name|JsonXContent
operator|.
name|jsonXContent
operator|.
name|createParser
argument_list|(
name|geoJson
argument_list|)
decl_stmt|;
name|parser
operator|.
name|nextToken
argument_list|()
expr_stmt|;
name|ElasticsearchGeoAssertions
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|ShapeBuilder
operator|.
name|parse
argument_list|(
name|parser
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|shapeCollection
specifier|private
name|ShapeCollection
argument_list|<
name|Shape
argument_list|>
name|shapeCollection
parameter_list|(
name|Shape
modifier|...
name|shapes
parameter_list|)
block|{
return|return
operator|new
name|ShapeCollection
argument_list|<>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|shapes
argument_list|)
argument_list|,
name|SPATIAL_CONTEXT
argument_list|)
return|;
block|}
DECL|method|shapeCollection
specifier|private
name|ShapeCollection
argument_list|<
name|Shape
argument_list|>
name|shapeCollection
parameter_list|(
name|Geometry
modifier|...
name|geoms
parameter_list|)
block|{
name|List
argument_list|<
name|Shape
argument_list|>
name|shapes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|geoms
operator|.
name|length
argument_list|)
decl_stmt|;
for|for
control|(
name|Geometry
name|geom
range|:
name|geoms
control|)
block|{
name|shapes
operator|.
name|add
argument_list|(
name|jtsGeom
argument_list|(
name|geom
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|ShapeCollection
argument_list|<>
argument_list|(
name|shapes
argument_list|,
name|SPATIAL_CONTEXT
argument_list|)
return|;
block|}
DECL|method|jtsGeom
specifier|private
name|JtsGeometry
name|jtsGeom
parameter_list|(
name|Geometry
name|geom
parameter_list|)
block|{
return|return
operator|new
name|JtsGeometry
argument_list|(
name|geom
argument_list|,
name|SPATIAL_CONTEXT
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
return|;
block|}
block|}
end_class

end_unit

