begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cluster.metadata
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|compress
operator|.
name|CompressedString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MapperParsingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|nullValue
import|;
end_import

begin_class
DECL|class|MappingMetaDataParserTests
specifier|public
class|class
name|MappingMetaDataParserTests
extends|extends
name|ElasticsearchTestCase
block|{
annotation|@
name|Test
DECL|method|testParseIdAlone
specifier|public
name|void
name|testParseIdAlone
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|"routing_value"
argument_list|,
literal|"1"
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|idResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"routing_value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routingResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestampResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFailIfIdIsNoValue
specifier|public
name|void
name|testFailIfIdIsNoValue
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"id"
argument_list|)
operator|.
name|value
argument_list|(
literal|"id"
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|"routing_value"
argument_list|,
literal|"1"
argument_list|)
decl_stmt|;
try|try
block|{
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MapperParsingException
name|ex
parameter_list|)
block|{
comment|// bogus its an array
block|}
name|bytes
operator|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"id"
argument_list|)
operator|.
name|field
argument_list|(
literal|"x"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
expr_stmt|;
name|parseContext
operator|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|"routing_value"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
try|try
block|{
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MapperParsingException
name|ex
parameter_list|)
block|{
comment|// bogus its an object
block|}
block|}
annotation|@
name|Test
DECL|method|testParseRoutingAlone
specifier|public
name|void
name|testParseRoutingAlone
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|"id"
argument_list|,
literal|null
argument_list|,
literal|"1"
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|idResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"routing_value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routingResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestampResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseTimestampAlone
specifier|public
name|void
name|testParseTimestampAlone
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|"id"
argument_list|,
literal|"routing_value1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|idResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"routing_value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routingResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestampResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseTimestampEquals
specifier|public
name|void
name|testParseTimestampEquals
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md1
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|MappingMetaData
name|md2
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|md1
argument_list|,
name|equalTo
argument_list|(
name|md2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseIdAndRoutingAndTimestamp
specifier|public
name|void
name|testParseIdAndRoutingAndTimestamp
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"routing_value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseIdAndRoutingAndTimestampWithPath
specifier|public
name|void
name|testParseIdAndRoutingAndTimestampWithPath
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"obj1.id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"obj1.routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"obj2.timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"obj0"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"routing_value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseIdWithPath
specifier|public
name|void
name|testParseIdWithPath
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"obj1.id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"obj1.routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"obj2.timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"obj0"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|"routing_value"
argument_list|,
literal|"2"
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|idResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"routing_value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routingResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestampResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseRoutingWithPath
specifier|public
name|void
name|testParseRoutingWithPath
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"obj1.id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"obj1.routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"obj2.timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"obj0"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|"id"
argument_list|,
literal|null
argument_list|,
literal|"2"
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|idResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"routing_value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routingResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestampResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseTimestampWithPath
specifier|public
name|void
name|testParseTimestampWithPath
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"obj1.id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"obj1.routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"obj2.timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"obj0"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|"routing_value1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|idResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"routing_value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routingResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestampResolved
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseIdAndRoutingAndTimestampWithinSamePath
specifier|public
name|void
name|testParseIdAndRoutingAndTimestampWithinSamePath
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"obj1.id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"obj1.routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"obj1.timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"obj0"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"routing_value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseIdAndRoutingAndTimestampWithinSamePathAndMoreLevels
specifier|public
name|void
name|testParseIdAndRoutingAndTimestampWithinSamePathAndMoreLevels
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"obj1.obj0.id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"obj1.obj2.routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"obj1.obj3.timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"obj0"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"obj0"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj3"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"routing_value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseIdAndRoutingAndTimestampWithSameRepeatedObject
specifier|public
name|void
name|testParseIdAndRoutingAndTimestampWithSameRepeatedObject
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"obj1.id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"obj1.routing"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"obj1.timestamp"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"obj0"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"routing"
argument_list|,
literal|"routing_value"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"obj1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"timestamp"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"routing_value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//
annotation|@
name|Test
DECL|method|testParseIdRoutingTimestampWithRepeatedField
specifier|public
name|void
name|testParseIdRoutingTimestampWithRepeatedField
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"field1"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"field1.field1"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"field1"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"aaa"
argument_list|,
literal|"wr"
argument_list|)
operator|.
name|array
argument_list|(
literal|"arr1"
argument_list|,
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|field
argument_list|(
literal|"test"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|field
argument_list|(
literal|"zzz"
argument_list|,
literal|"wr"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseNoIdRoutingWithRepeatedFieldAndObject
specifier|public
name|void
name|testParseNoIdRoutingWithRepeatedFieldAndObject
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|"id"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"field1.field1.field2"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"field1"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"aaa"
argument_list|,
literal|"wr"
argument_list|)
operator|.
name|array
argument_list|(
literal|"arr1"
argument_list|,
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"foo"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"test"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|field
argument_list|(
literal|"zzz"
argument_list|,
literal|"wr"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseRoutingWithRepeatedFieldAndValidRouting
specifier|public
name|void
name|testParseRoutingWithRepeatedFieldAndValidRouting
parameter_list|()
throws|throws
name|Exception
block|{
name|MappingMetaData
name|md
init|=
operator|new
name|MappingMetaData
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedString
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Id
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Routing
argument_list|(
literal|true
argument_list|,
literal|"field1.field2"
argument_list|)
argument_list|,
operator|new
name|MappingMetaData
operator|.
name|Timestamp
argument_list|(
literal|true
argument_list|,
literal|"field1"
argument_list|,
literal|"dateOptionalTime"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"aaa"
argument_list|,
literal|"wr"
argument_list|)
operator|.
name|array
argument_list|(
literal|"arr1"
argument_list|,
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|,
literal|"foo"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"test"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|field
argument_list|(
literal|"zzz"
argument_list|,
literal|"wr"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
decl_stmt|;
name|MappingMetaData
operator|.
name|ParseContext
name|parseContext
init|=
name|md
operator|.
name|createParseContext
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|md
operator|.
name|parse
argument_list|(
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|bytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|parseContext
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|id
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|routing
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|parseContext
operator|.
name|timestamp
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

