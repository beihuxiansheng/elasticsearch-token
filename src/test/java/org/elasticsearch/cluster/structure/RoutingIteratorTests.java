begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cluster.structure
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|structure
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|MetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|AllocationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|decider
operator|.
name|AwarenessAllocationDecider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|operation
operator|.
name|hash
operator|.
name|djb
operator|.
name|DjbHashFunction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|operation
operator|.
name|plain
operator|.
name|PlainOperationRouting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|ShardRoutingState
operator|.
name|INITIALIZING
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|RoutingAllocationTests
operator|.
name|newNode
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
operator|.
name|settingsBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_class
DECL|class|RoutingIteratorTests
specifier|public
class|class
name|RoutingIteratorTests
extends|extends
name|ElasticsearchTestCase
block|{
annotation|@
name|Test
DECL|method|testEmptyIterator
specifier|public
name|void
name|testEmptyIterator
parameter_list|()
block|{
name|ShardIterator
name|shardIterator
init|=
operator|new
name|PlainShardIterator
argument_list|(
operator|new
name|ShardId
argument_list|(
literal|"test1"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|ImmutableList
operator|.
expr|<
name|ShardRouting
operator|>
name|of
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shardIterator
operator|=
operator|new
name|PlainShardIterator
argument_list|(
operator|new
name|ShardId
argument_list|(
literal|"test1"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|ImmutableList
operator|.
expr|<
name|ShardRouting
operator|>
name|of
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shardIterator
operator|=
operator|new
name|PlainShardIterator
argument_list|(
operator|new
name|ShardId
argument_list|(
literal|"test1"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|ImmutableList
operator|.
expr|<
name|ShardRouting
operator|>
name|of
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shardIterator
operator|=
operator|new
name|PlainShardIterator
argument_list|(
operator|new
name|ShardId
argument_list|(
literal|"test1"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|ImmutableList
operator|.
expr|<
name|ShardRouting
operator|>
name|of
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIterator1
specifier|public
name|void
name|testIterator1
parameter_list|()
block|{
name|MetaData
name|metaData
init|=
name|MetaData
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|numberOfShards
argument_list|(
literal|1
argument_list|)
operator|.
name|numberOfReplicas
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RoutingTable
name|routingTable
init|=
name|RoutingTable
operator|.
name|builder
argument_list|()
operator|.
name|addAsNew
argument_list|(
name|metaData
operator|.
name|index
argument_list|(
literal|"test1"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ShardIterator
name|shardIterator
init|=
name|routingTable
operator|.
name|index
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|shard
argument_list|(
literal|0
argument_list|)
operator|.
name|shardsIt
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShardRouting
name|firstRouting
init|=
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|sameInstance
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting1
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|firstRouting
argument_list|,
name|sameInstance
argument_list|(
name|shardRouting1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting1
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting2
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting2
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting2
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|shardRouting1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting3
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting3
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting3
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|shardRouting1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting3
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|shardRouting2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIterator2
specifier|public
name|void
name|testIterator2
parameter_list|()
block|{
name|MetaData
name|metaData
init|=
name|MetaData
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|numberOfShards
argument_list|(
literal|1
argument_list|)
operator|.
name|numberOfReplicas
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|numberOfShards
argument_list|(
literal|1
argument_list|)
operator|.
name|numberOfReplicas
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RoutingTable
name|routingTable
init|=
name|RoutingTable
operator|.
name|builder
argument_list|()
operator|.
name|addAsNew
argument_list|(
name|metaData
operator|.
name|index
argument_list|(
literal|"test1"
argument_list|)
argument_list|)
operator|.
name|addAsNew
argument_list|(
name|metaData
operator|.
name|index
argument_list|(
literal|"test2"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ShardIterator
name|shardIterator
init|=
name|routingTable
operator|.
name|index
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|shard
argument_list|(
literal|0
argument_list|)
operator|.
name|shardsIt
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|ShardRouting
name|firstRouting
init|=
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|sameInstance
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting1
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting1
argument_list|,
name|sameInstance
argument_list|(
name|firstRouting
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting1
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting2
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting2
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting2
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|shardRouting1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|remaining
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shardIterator
operator|=
name|routingTable
operator|.
name|index
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|shard
argument_list|(
literal|0
argument_list|)
operator|.
name|shardsIt
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|firstRouting
operator|=
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|sameInstance
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting3
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|firstRouting
argument_list|,
name|sameInstance
argument_list|(
name|shardRouting3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting1
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting4
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting2
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting2
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|shardRouting1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting1
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|shardRouting3
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting2
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|shardRouting4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting1
argument_list|,
name|sameInstance
argument_list|(
name|shardRouting4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting2
argument_list|,
name|sameInstance
argument_list|(
name|shardRouting3
argument_list|)
argument_list|)
expr_stmt|;
name|shardIterator
operator|=
name|routingTable
operator|.
name|index
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|shard
argument_list|(
literal|0
argument_list|)
operator|.
name|shardsIt
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|firstRouting
operator|=
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|sameInstance
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting5
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting5
argument_list|,
name|sameInstance
argument_list|(
name|firstRouting
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting5
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting6
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting6
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting6
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|shardRouting5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting5
argument_list|,
name|sameInstance
argument_list|(
name|shardRouting1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting6
argument_list|,
name|sameInstance
argument_list|(
name|shardRouting2
argument_list|)
argument_list|)
expr_stmt|;
name|shardIterator
operator|=
name|routingTable
operator|.
name|index
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|shard
argument_list|(
literal|0
argument_list|)
operator|.
name|shardsIt
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|firstRouting
operator|=
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|sameInstance
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting7
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting7
argument_list|,
name|sameInstance
argument_list|(
name|firstRouting
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting7
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting8
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting8
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting8
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|shardRouting7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting7
argument_list|,
name|sameInstance
argument_list|(
name|shardRouting3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting8
argument_list|,
name|sameInstance
argument_list|(
name|shardRouting4
argument_list|)
argument_list|)
expr_stmt|;
name|shardIterator
operator|=
name|routingTable
operator|.
name|index
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|shard
argument_list|(
literal|0
argument_list|)
operator|.
name|shardsIt
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|firstRouting
operator|=
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|,
name|sameInstance
argument_list|(
name|shardIterator
operator|.
name|firstOrNull
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting9
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting9
argument_list|,
name|sameInstance
argument_list|(
name|firstRouting
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting9
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting10
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting10
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting10
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|shardRouting9
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting9
argument_list|,
name|sameInstance
argument_list|(
name|shardRouting5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting10
argument_list|,
name|sameInstance
argument_list|(
name|shardRouting6
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRandomRouting
specifier|public
name|void
name|testRandomRouting
parameter_list|()
block|{
name|MetaData
name|metaData
init|=
name|MetaData
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|numberOfShards
argument_list|(
literal|1
argument_list|)
operator|.
name|numberOfReplicas
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|numberOfShards
argument_list|(
literal|1
argument_list|)
operator|.
name|numberOfReplicas
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RoutingTable
name|routingTable
init|=
name|RoutingTable
operator|.
name|builder
argument_list|()
operator|.
name|addAsNew
argument_list|(
name|metaData
operator|.
name|index
argument_list|(
literal|"test1"
argument_list|)
argument_list|)
operator|.
name|addAsNew
argument_list|(
name|metaData
operator|.
name|index
argument_list|(
literal|"test2"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ShardIterator
name|shardIterator
init|=
name|routingTable
operator|.
name|index
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|shard
argument_list|(
literal|0
argument_list|)
operator|.
name|shardsRandomIt
argument_list|()
decl_stmt|;
name|ShardRouting
name|shardRouting1
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting1
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|shardIterator
operator|=
name|routingTable
operator|.
name|index
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|shard
argument_list|(
literal|0
argument_list|)
operator|.
name|shardsRandomIt
argument_list|()
expr_stmt|;
name|ShardRouting
name|shardRouting2
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting2
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|ShardRouting
name|shardRouting3
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting3
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting1
argument_list|,
name|not
argument_list|(
name|sameInstance
argument_list|(
name|shardRouting2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting1
argument_list|,
name|sameInstance
argument_list|(
name|shardRouting3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAttributePreferenceRouting
specifier|public
name|void
name|testAttributePreferenceRouting
parameter_list|()
block|{
name|AllocationService
name|strategy
init|=
operator|new
name|AllocationService
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"cluster.routing.allocation.concurrent_recoveries"
argument_list|,
literal|10
argument_list|)
operator|.
name|put
argument_list|(
literal|"cluster.routing.allocation.allow_rebalance"
argument_list|,
literal|"always"
argument_list|)
operator|.
name|put
argument_list|(
literal|"cluster.routing.allocation.awareness.attributes"
argument_list|,
literal|"rack_id,zone"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|MetaData
name|metaData
init|=
name|MetaData
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"test"
argument_list|)
operator|.
name|numberOfShards
argument_list|(
literal|1
argument_list|)
operator|.
name|numberOfReplicas
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RoutingTable
name|routingTable
init|=
name|RoutingTable
operator|.
name|builder
argument_list|()
operator|.
name|addAsNew
argument_list|(
name|metaData
operator|.
name|index
argument_list|(
literal|"test"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ClusterState
name|clusterState
init|=
name|ClusterState
operator|.
name|builder
argument_list|()
operator|.
name|metaData
argument_list|(
name|metaData
argument_list|)
operator|.
name|routingTable
argument_list|(
name|routingTable
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|clusterState
operator|=
name|ClusterState
operator|.
name|builder
argument_list|(
name|clusterState
argument_list|)
operator|.
name|nodes
argument_list|(
name|DiscoveryNodes
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|newNode
argument_list|(
literal|"node1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"rack_id"
argument_list|,
literal|"rack_1"
argument_list|,
literal|"zone"
argument_list|,
literal|"zone1"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|newNode
argument_list|(
literal|"node2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"rack_id"
argument_list|,
literal|"rack_2"
argument_list|,
literal|"zone"
argument_list|,
literal|"zone2"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|localNodeId
argument_list|(
literal|"node1"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|routingTable
operator|=
name|strategy
operator|.
name|reroute
argument_list|(
name|clusterState
argument_list|)
operator|.
name|routingTable
argument_list|()
expr_stmt|;
name|clusterState
operator|=
name|ClusterState
operator|.
name|builder
argument_list|(
name|clusterState
argument_list|)
operator|.
name|routingTable
argument_list|(
name|routingTable
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|routingTable
operator|=
name|strategy
operator|.
name|applyStartedShards
argument_list|(
name|clusterState
argument_list|,
name|clusterState
operator|.
name|routingNodes
argument_list|()
operator|.
name|shardsWithState
argument_list|(
name|INITIALIZING
argument_list|)
argument_list|)
operator|.
name|routingTable
argument_list|()
expr_stmt|;
name|clusterState
operator|=
name|ClusterState
operator|.
name|builder
argument_list|(
name|clusterState
argument_list|)
operator|.
name|routingTable
argument_list|(
name|routingTable
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|routingTable
operator|=
name|strategy
operator|.
name|applyStartedShards
argument_list|(
name|clusterState
argument_list|,
name|clusterState
operator|.
name|routingNodes
argument_list|()
operator|.
name|shardsWithState
argument_list|(
name|INITIALIZING
argument_list|)
argument_list|)
operator|.
name|routingTable
argument_list|()
expr_stmt|;
name|clusterState
operator|=
name|ClusterState
operator|.
name|builder
argument_list|(
name|clusterState
argument_list|)
operator|.
name|routingTable
argument_list|(
name|routingTable
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
comment|// after all are started, check routing iteration
name|ShardIterator
name|shardIterator
init|=
name|clusterState
operator|.
name|routingTable
argument_list|()
operator|.
name|index
argument_list|(
literal|"test"
argument_list|)
operator|.
name|shard
argument_list|(
literal|0
argument_list|)
operator|.
name|preferAttributesActiveInitializingShardsIt
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"rack_id"
block|}
argument_list|,
name|clusterState
operator|.
name|nodes
argument_list|()
argument_list|)
decl_stmt|;
name|ShardRouting
name|shardRouting
init|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|shardRouting
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting
operator|.
name|currentNodeId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"node1"
argument_list|)
argument_list|)
expr_stmt|;
name|shardRouting
operator|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting
operator|.
name|currentNodeId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"node2"
argument_list|)
argument_list|)
expr_stmt|;
name|shardIterator
operator|=
name|clusterState
operator|.
name|routingTable
argument_list|()
operator|.
name|index
argument_list|(
literal|"test"
argument_list|)
operator|.
name|shard
argument_list|(
literal|0
argument_list|)
operator|.
name|preferAttributesActiveInitializingShardsIt
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"rack_id"
block|}
argument_list|,
name|clusterState
operator|.
name|nodes
argument_list|()
argument_list|)
expr_stmt|;
name|shardRouting
operator|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting
operator|.
name|currentNodeId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"node1"
argument_list|)
argument_list|)
expr_stmt|;
name|shardRouting
operator|=
name|shardIterator
operator|.
name|nextOrNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardRouting
operator|.
name|currentNodeId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"node2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testShardsAndPreferNodeRouting
specifier|public
name|void
name|testShardsAndPreferNodeRouting
parameter_list|()
block|{
name|AllocationService
name|strategy
init|=
operator|new
name|AllocationService
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"cluster.routing.allocation.concurrent_recoveries"
argument_list|,
literal|10
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|MetaData
name|metaData
init|=
name|MetaData
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"test"
argument_list|)
operator|.
name|numberOfShards
argument_list|(
literal|5
argument_list|)
operator|.
name|numberOfReplicas
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RoutingTable
name|routingTable
init|=
name|RoutingTable
operator|.
name|builder
argument_list|()
operator|.
name|addAsNew
argument_list|(
name|metaData
operator|.
name|index
argument_list|(
literal|"test"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ClusterState
name|clusterState
init|=
name|ClusterState
operator|.
name|builder
argument_list|()
operator|.
name|metaData
argument_list|(
name|metaData
argument_list|)
operator|.
name|routingTable
argument_list|(
name|routingTable
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|clusterState
operator|=
name|ClusterState
operator|.
name|builder
argument_list|(
name|clusterState
argument_list|)
operator|.
name|nodes
argument_list|(
name|DiscoveryNodes
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|newNode
argument_list|(
literal|"node1"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|newNode
argument_list|(
literal|"node2"
argument_list|)
argument_list|)
operator|.
name|localNodeId
argument_list|(
literal|"node1"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|routingTable
operator|=
name|strategy
operator|.
name|reroute
argument_list|(
name|clusterState
argument_list|)
operator|.
name|routingTable
argument_list|()
expr_stmt|;
name|clusterState
operator|=
name|ClusterState
operator|.
name|builder
argument_list|(
name|clusterState
argument_list|)
operator|.
name|routingTable
argument_list|(
name|routingTable
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|routingTable
operator|=
name|strategy
operator|.
name|applyStartedShards
argument_list|(
name|clusterState
argument_list|,
name|clusterState
operator|.
name|routingNodes
argument_list|()
operator|.
name|shardsWithState
argument_list|(
name|INITIALIZING
argument_list|)
argument_list|)
operator|.
name|routingTable
argument_list|()
expr_stmt|;
name|clusterState
operator|=
name|ClusterState
operator|.
name|builder
argument_list|(
name|clusterState
argument_list|)
operator|.
name|routingTable
argument_list|(
name|routingTable
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|routingTable
operator|=
name|strategy
operator|.
name|applyStartedShards
argument_list|(
name|clusterState
argument_list|,
name|clusterState
operator|.
name|routingNodes
argument_list|()
operator|.
name|shardsWithState
argument_list|(
name|INITIALIZING
argument_list|)
argument_list|)
operator|.
name|routingTable
argument_list|()
expr_stmt|;
name|clusterState
operator|=
name|ClusterState
operator|.
name|builder
argument_list|(
name|clusterState
argument_list|)
operator|.
name|routingTable
argument_list|(
name|routingTable
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|PlainOperationRouting
name|operationRouting
init|=
operator|new
name|PlainOperationRouting
argument_list|(
name|ImmutableSettings
operator|.
name|Builder
operator|.
name|EMPTY_SETTINGS
argument_list|,
operator|new
name|DjbHashFunction
argument_list|()
argument_list|,
operator|new
name|AwarenessAllocationDecider
argument_list|()
argument_list|)
decl_stmt|;
name|GroupShardsIterator
name|shardIterators
init|=
name|operationRouting
operator|.
name|searchShards
argument_list|(
name|clusterState
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
literal|null
argument_list|,
literal|"_shards:0"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|shardId
argument_list|()
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|shardIterators
operator|=
name|operationRouting
operator|.
name|searchShards
argument_list|(
name|clusterState
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
literal|null
argument_list|,
literal|"_shards:1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|shardId
argument_list|()
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|//check node preference, first without preference to see they switch
name|shardIterators
operator|=
name|operationRouting
operator|.
name|searchShards
argument_list|(
name|clusterState
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
literal|null
argument_list|,
literal|"_shards:0;"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|shardId
argument_list|()
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|firstRoundNodeId
init|=
name|shardIterators
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|nextOrNull
argument_list|()
operator|.
name|currentNodeId
argument_list|()
decl_stmt|;
name|shardIterators
operator|=
name|operationRouting
operator|.
name|searchShards
argument_list|(
name|clusterState
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
literal|null
argument_list|,
literal|"_shards:0"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|shardId
argument_list|()
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|nextOrNull
argument_list|()
operator|.
name|currentNodeId
argument_list|()
argument_list|,
name|not
argument_list|(
name|equalTo
argument_list|(
name|firstRoundNodeId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|shardIterators
operator|=
name|operationRouting
operator|.
name|searchShards
argument_list|(
name|clusterState
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
literal|null
argument_list|,
literal|"_shards:0;_prefer_node:node1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|shardId
argument_list|()
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|nextOrNull
argument_list|()
operator|.
name|currentNodeId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"node1"
argument_list|)
argument_list|)
expr_stmt|;
name|shardIterators
operator|=
name|operationRouting
operator|.
name|searchShards
argument_list|(
name|clusterState
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|,
literal|null
argument_list|,
literal|"_shards:0;_prefer_node:node1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|shardId
argument_list|()
operator|.
name|id
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|shardIterators
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|nextOrNull
argument_list|()
operator|.
name|currentNodeId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"node1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

