begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.benchmark.search.aggregations
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|benchmark
operator|.
name|search
operator|.
name|aggregations
package|;
end_package

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|hppc
operator|.
name|ObjectOpenHashSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|generators
operator|.
name|RandomStrings
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|health
operator|.
name|ClusterHealthResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|stats
operator|.
name|ClusterStatsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Requests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|StopWatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|jna
operator|.
name|Natives
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|SizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|discovery
operator|.
name|Discovery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|node
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|node
operator|.
name|internal
operator|.
name|InternalNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|Aggregator
operator|.
name|SubAggCollectionMode
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ThreadLocalRandom
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Requests
operator|.
name|createIndexRequest
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_REPLICAS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_SHARDS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
operator|.
name|settingsBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|matchAllQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|node
operator|.
name|NodeBuilder
operator|.
name|nodeBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|FacetBuilders
operator|.
name|termsFacet
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|FacetBuilders
operator|.
name|termsStatsFacet
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|TermsAggregationSearchBenchmark
specifier|public
class|class
name|TermsAggregationSearchBenchmark
block|{
DECL|field|COUNT
specifier|static
name|long
name|COUNT
init|=
name|SizeValue
operator|.
name|parseSizeValue
argument_list|(
literal|"2m"
argument_list|)
operator|.
name|singles
argument_list|()
decl_stmt|;
DECL|field|BATCH
specifier|static
name|int
name|BATCH
init|=
literal|1000
decl_stmt|;
DECL|field|QUERY_WARMUP
specifier|static
name|int
name|QUERY_WARMUP
init|=
literal|10
decl_stmt|;
DECL|field|QUERY_COUNT
specifier|static
name|int
name|QUERY_COUNT
init|=
literal|100
decl_stmt|;
DECL|field|NUMBER_OF_TERMS
specifier|static
name|int
name|NUMBER_OF_TERMS
init|=
literal|200
decl_stmt|;
DECL|field|NUMBER_OF_MULTI_VALUE_TERMS
specifier|static
name|int
name|NUMBER_OF_MULTI_VALUE_TERMS
init|=
literal|10
decl_stmt|;
DECL|field|STRING_TERM_SIZE
specifier|static
name|int
name|STRING_TERM_SIZE
init|=
literal|5
decl_stmt|;
DECL|field|client
specifier|static
name|Client
name|client
decl_stmt|;
DECL|field|nodes
specifier|static
name|InternalNode
index|[]
name|nodes
decl_stmt|;
DECL|enum|Method
specifier|public
enum|enum
name|Method
block|{
DECL|enum constant|FACET
name|FACET
block|{
annotation|@
name|Override
name|SearchRequestBuilder
name|addTermsAgg
parameter_list|(
name|SearchRequestBuilder
name|builder
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|field
parameter_list|,
name|String
name|executionHint
parameter_list|)
block|{
return|return
name|builder
operator|.
name|addFacet
argument_list|(
name|termsFacet
argument_list|(
name|name
argument_list|)
operator|.
name|field
argument_list|(
name|field
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
name|SearchRequestBuilder
name|addTermsStatsAgg
parameter_list|(
name|SearchRequestBuilder
name|builder
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|keyField
parameter_list|,
name|String
name|valueField
parameter_list|)
block|{
return|return
name|builder
operator|.
name|addFacet
argument_list|(
name|termsStatsFacet
argument_list|(
name|name
argument_list|)
operator|.
name|keyField
argument_list|(
name|keyField
argument_list|)
operator|.
name|valueField
argument_list|(
name|valueField
argument_list|)
argument_list|)
return|;
block|}
block|}
block|,
DECL|enum constant|AGGREGATION
name|AGGREGATION
block|{
annotation|@
name|Override
name|SearchRequestBuilder
name|addTermsAgg
parameter_list|(
name|SearchRequestBuilder
name|builder
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|field
parameter_list|,
name|String
name|executionHint
parameter_list|)
block|{
return|return
name|builder
operator|.
name|addAggregation
argument_list|(
name|AggregationBuilders
operator|.
name|terms
argument_list|(
name|name
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|field
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
name|SearchRequestBuilder
name|addTermsStatsAgg
parameter_list|(
name|SearchRequestBuilder
name|builder
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|keyField
parameter_list|,
name|String
name|valueField
parameter_list|)
block|{
return|return
name|builder
operator|.
name|addAggregation
argument_list|(
name|AggregationBuilders
operator|.
name|terms
argument_list|(
name|name
argument_list|)
operator|.
name|field
argument_list|(
name|keyField
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|AggregationBuilders
operator|.
name|stats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
name|valueField
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
block|,
DECL|enum constant|AGGREGATION_DEFERRED
name|AGGREGATION_DEFERRED
block|{
annotation|@
name|Override
name|SearchRequestBuilder
name|addTermsAgg
parameter_list|(
name|SearchRequestBuilder
name|builder
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|field
parameter_list|,
name|String
name|executionHint
parameter_list|)
block|{
return|return
name|builder
operator|.
name|addAggregation
argument_list|(
name|AggregationBuilders
operator|.
name|terms
argument_list|(
name|name
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|field
argument_list|(
name|field
argument_list|)
operator|.
name|collectMode
argument_list|(
name|SubAggCollectionMode
operator|.
name|BREADTH_FIRST
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
name|SearchRequestBuilder
name|addTermsStatsAgg
parameter_list|(
name|SearchRequestBuilder
name|builder
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|keyField
parameter_list|,
name|String
name|valueField
parameter_list|)
block|{
return|return
name|builder
operator|.
name|addAggregation
argument_list|(
name|AggregationBuilders
operator|.
name|terms
argument_list|(
name|name
argument_list|)
operator|.
name|field
argument_list|(
name|keyField
argument_list|)
operator|.
name|collectMode
argument_list|(
name|SubAggCollectionMode
operator|.
name|BREADTH_FIRST
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|AggregationBuilders
operator|.
name|stats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
name|valueField
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
block|;
DECL|method|addTermsAgg
specifier|abstract
name|SearchRequestBuilder
name|addTermsAgg
parameter_list|(
name|SearchRequestBuilder
name|builder
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|field
parameter_list|,
name|String
name|executionHint
parameter_list|)
function_decl|;
DECL|method|addTermsStatsAgg
specifier|abstract
name|SearchRequestBuilder
name|addTermsStatsAgg
parameter_list|(
name|SearchRequestBuilder
name|builder
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|keyField
parameter_list|,
name|String
name|valueField
parameter_list|)
function_decl|;
block|}
DECL|method|main
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|Natives
operator|.
name|tryMlockall
argument_list|()
expr_stmt|;
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|Settings
name|settings
init|=
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.refresh_interval"
argument_list|,
literal|"-1"
argument_list|)
operator|.
name|put
argument_list|(
literal|"gateway.type"
argument_list|,
literal|"local"
argument_list|)
operator|.
name|put
argument_list|(
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
literal|1
argument_list|)
operator|.
name|put
argument_list|(
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
literal|0
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|String
name|clusterName
init|=
name|TermsAggregationSearchBenchmark
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
decl_stmt|;
name|nodes
operator|=
operator|new
name|InternalNode
index|[
literal|1
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nodes
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|nodes
index|[
name|i
index|]
operator|=
operator|(
name|InternalNode
operator|)
name|nodeBuilder
argument_list|()
operator|.
name|clusterName
argument_list|(
name|clusterName
argument_list|)
operator|.
name|settings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|settings
argument_list|)
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
literal|"node"
operator|+
name|i
argument_list|)
argument_list|)
operator|.
name|node
argument_list|()
expr_stmt|;
block|}
name|Node
name|clientNode
init|=
name|nodeBuilder
argument_list|()
operator|.
name|clusterName
argument_list|(
name|clusterName
argument_list|)
operator|.
name|settings
argument_list|(
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|settings
argument_list|)
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
literal|"client"
argument_list|)
argument_list|)
operator|.
name|client
argument_list|(
literal|true
argument_list|)
operator|.
name|node
argument_list|()
decl_stmt|;
name|client
operator|=
name|clientNode
operator|.
name|client
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|create
argument_list|(
name|createIndexRequest
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapping
argument_list|(
literal|"type1"
argument_list|,
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"s_value_dv"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"index"
argument_list|,
literal|"no"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"fielddata"
argument_list|)
operator|.
name|field
argument_list|(
literal|"format"
argument_list|,
literal|"doc_values"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"sm_value_dv"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|field
argument_list|(
literal|"index"
argument_list|,
literal|"no"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"fielddata"
argument_list|)
operator|.
name|field
argument_list|(
literal|"format"
argument_list|,
literal|"doc_values"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"l_value_dv"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"long"
argument_list|)
operator|.
name|field
argument_list|(
literal|"index"
argument_list|,
literal|"no"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"fielddata"
argument_list|)
operator|.
name|field
argument_list|(
literal|"format"
argument_list|,
literal|"doc_values"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"lm_value_dv"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"long"
argument_list|)
operator|.
name|field
argument_list|(
literal|"index"
argument_list|,
literal|"no"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"fielddata"
argument_list|)
operator|.
name|field
argument_list|(
literal|"format"
argument_list|,
literal|"doc_values"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|long
index|[]
name|lValues
init|=
operator|new
name|long
index|[
name|NUMBER_OF_TERMS
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NUMBER_OF_TERMS
condition|;
name|i
operator|++
control|)
block|{
name|lValues
index|[
name|i
index|]
operator|=
name|ThreadLocalRandom
operator|.
name|current
argument_list|()
operator|.
name|nextLong
argument_list|()
expr_stmt|;
block|}
name|ObjectOpenHashSet
argument_list|<
name|String
argument_list|>
name|uniqueTerms
init|=
name|ObjectOpenHashSet
operator|.
name|newInstance
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NUMBER_OF_TERMS
condition|;
name|i
operator|++
control|)
block|{
name|boolean
name|added
decl_stmt|;
do|do
block|{
name|added
operator|=
name|uniqueTerms
operator|.
name|add
argument_list|(
name|RandomStrings
operator|.
name|randomAsciiOfLength
argument_list|(
name|random
argument_list|,
name|STRING_TERM_SIZE
argument_list|)
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
operator|!
name|added
condition|)
do|;
block|}
name|String
index|[]
name|sValues
init|=
name|uniqueTerms
operator|.
name|toArray
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|uniqueTerms
operator|=
literal|null
expr_stmt|;
name|StopWatch
name|stopWatch
init|=
operator|new
name|StopWatch
argument_list|()
operator|.
name|start
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Indexing ["
operator|+
name|COUNT
operator|+
literal|"] ..."
argument_list|)
expr_stmt|;
name|long
name|ITERS
init|=
name|COUNT
operator|/
name|BATCH
decl_stmt|;
name|long
name|i
init|=
literal|1
decl_stmt|;
name|int
name|counter
init|=
literal|0
decl_stmt|;
for|for
control|(
init|;
name|i
operator|<=
name|ITERS
condition|;
name|i
operator|++
control|)
block|{
name|BulkRequestBuilder
name|request
init|=
name|client
operator|.
name|prepareBulk
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|BATCH
condition|;
name|j
operator|++
control|)
block|{
name|counter
operator|++
expr_stmt|;
name|XContentBuilder
name|builder
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
decl_stmt|;
name|builder
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|counter
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|String
name|sValue
init|=
name|sValues
index|[
name|ThreadLocalRandom
operator|.
name|current
argument_list|()
operator|.
name|nextInt
argument_list|(
name|sValues
operator|.
name|length
argument_list|)
index|]
decl_stmt|;
specifier|final
name|long
name|lValue
init|=
name|lValues
index|[
name|ThreadLocalRandom
operator|.
name|current
argument_list|()
operator|.
name|nextInt
argument_list|(
name|lValues
operator|.
name|length
argument_list|)
index|]
decl_stmt|;
name|builder
operator|.
name|field
argument_list|(
literal|"s_value"
argument_list|,
name|sValue
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
literal|"l_value"
argument_list|,
name|lValue
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
literal|"s_value_dv"
argument_list|,
name|sValue
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
literal|"l_value_dv"
argument_list|,
name|lValue
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|field
range|:
operator|new
name|String
index|[]
block|{
literal|"sm_value"
block|,
literal|"sm_value_dv"
block|}
control|)
block|{
name|builder
operator|.
name|startArray
argument_list|(
name|field
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|NUMBER_OF_MULTI_VALUE_TERMS
condition|;
name|k
operator|++
control|)
block|{
name|builder
operator|.
name|value
argument_list|(
name|sValues
index|[
name|ThreadLocalRandom
operator|.
name|current
argument_list|()
operator|.
name|nextInt
argument_list|(
name|sValues
operator|.
name|length
argument_list|)
index|]
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endArray
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|String
name|field
range|:
operator|new
name|String
index|[]
block|{
literal|"lm_value"
block|,
literal|"lm_value_dv"
block|}
control|)
block|{
name|builder
operator|.
name|startArray
argument_list|(
name|field
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|NUMBER_OF_MULTI_VALUE_TERMS
condition|;
name|k
operator|++
control|)
block|{
name|builder
operator|.
name|value
argument_list|(
name|lValues
index|[
name|ThreadLocalRandom
operator|.
name|current
argument_list|()
operator|.
name|nextInt
argument_list|(
name|sValues
operator|.
name|length
argument_list|)
index|]
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endArray
argument_list|()
expr_stmt|;
block|}
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|request
operator|.
name|add
argument_list|(
name|Requests
operator|.
name|indexRequest
argument_list|(
literal|"test"
argument_list|)
operator|.
name|type
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|id
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|counter
argument_list|)
argument_list|)
operator|.
name|source
argument_list|(
name|builder
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|BulkResponse
name|response
init|=
name|request
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
if|if
condition|(
name|response
operator|.
name|hasFailures
argument_list|()
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"--> failures..."
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|i
operator|*
name|BATCH
operator|)
operator|%
literal|10000
operator|)
operator|==
literal|0
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Indexed "
operator|+
operator|(
name|i
operator|*
name|BATCH
operator|)
operator|+
literal|" took "
operator|+
name|stopWatch
operator|.
name|stop
argument_list|()
operator|.
name|lastTaskTime
argument_list|()
argument_list|)
expr_stmt|;
name|stopWatch
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Indexing took "
operator|+
name|stopWatch
operator|.
name|totalTime
argument_list|()
operator|+
literal|", TPS "
operator|+
operator|(
operator|(
call|(
name|double
call|)
argument_list|(
name|COUNT
argument_list|)
operator|)
operator|/
name|stopWatch
operator|.
name|totalTime
argument_list|()
operator|.
name|secondsFrac
argument_list|()
operator|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Index already exists, ignoring indexing phase, waiting for green"
argument_list|)
expr_stmt|;
name|ClusterHealthResponse
name|clusterHealthResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setWaitForGreenStatus
argument_list|()
operator|.
name|setTimeout
argument_list|(
literal|"10m"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
if|if
condition|(
name|clusterHealthResponse
operator|.
name|isTimedOut
argument_list|()
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"--> Timed out waiting for cluster health"
argument_list|)
expr_stmt|;
block|}
block|}
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|COUNT
operator|=
name|client
operator|.
name|prepareCount
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
operator|.
name|getCount
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Number of docs in index: "
operator|+
name|COUNT
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|StatsResult
argument_list|>
name|stats
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_s"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_s_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_map_s"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_map_s_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_s"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_s_local_ordinals"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value"
argument_list|,
literal|"ordinals"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_s_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_s_dv_local_ordinals"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"ordinals"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_map_s"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_map_s_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_s"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_s_local_ordinals"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value"
argument_list|,
literal|"ordinals"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_s_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_s_dv_local_ordinals"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"ordinals"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_map_s"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_map_s_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_l"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_l_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_l"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_l_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_l"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_l_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_sm"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"sm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_sm_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_map_sm"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"sm_value"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_map_sm_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_sm"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"sm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_sm_local_ordinals"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"sm_value"
argument_list|,
literal|"ordinals"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_sm_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_sm_dv_local_ordinals"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|"ordinals"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_map_sm"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"sm_value"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_map_sm_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_sm"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"sm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_sm_local_ordinals"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"sm_value"
argument_list|,
literal|"ordinals"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_sm_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_sm_dv_local_ordinals"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|"ordinals"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_map_sm"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"sm_value"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_map_sm_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|"map"
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_lm"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"lm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_facet_lm_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"lm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_lm"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"lm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_lm_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"lm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_lm"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"lm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|terms
argument_list|(
literal|"terms_agg_def_lm_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"lm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_s_l"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_s_l_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_s_l"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_s_l_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_s_l"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_s_l_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_s_lm"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value"
argument_list|,
literal|"lm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_s_lm_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"lm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_s_lm"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value"
argument_list|,
literal|"lm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_s_lm_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"lm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_s_lm"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value"
argument_list|,
literal|"lm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_s_lm_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"lm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_sm_l"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"sm_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_sm_l_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_sm_l"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"sm_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_sm_l_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_sm_l"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"sm_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_sm_l_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_s_l"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_s_l_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_s_l"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_s_l_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_s_l"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_s_l_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_s_lm"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value"
argument_list|,
literal|"lm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_s_lm_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"lm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_s_lm"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value"
argument_list|,
literal|"lm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_s_lm_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"lm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_s_lm"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value"
argument_list|,
literal|"lm_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_s_lm_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"s_value_dv"
argument_list|,
literal|"lm_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_sm_l"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"sm_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_facet_sm_l_dv"
argument_list|,
name|Method
operator|.
name|FACET
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_sm_l"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"sm_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_sm_l_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_sm_l"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"sm_value"
argument_list|,
literal|"l_value"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
name|termsStats
argument_list|(
literal|"terms_stats_agg_def_sm_l_dv"
argument_list|,
name|Method
operator|.
name|AGGREGATION_DEFERRED
argument_list|,
literal|"sm_value_dv"
argument_list|,
literal|"l_value_dv"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"------------------ SUMMARY ----------------------------------------------"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%35s%10s%10s%15s\n"
argument_list|,
literal|"name"
argument_list|,
literal|"took"
argument_list|,
literal|"millis"
argument_list|,
literal|"fieldata size"
argument_list|)
expr_stmt|;
for|for
control|(
name|StatsResult
name|stat
range|:
name|stats
control|)
block|{
name|System
operator|.
name|out
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%35s%10s%10d%15s\n"
argument_list|,
name|stat
operator|.
name|name
argument_list|,
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|stat
operator|.
name|took
argument_list|)
argument_list|,
operator|(
name|stat
operator|.
name|took
operator|/
name|QUERY_COUNT
operator|)
argument_list|,
name|stat
operator|.
name|fieldDataMemoryUsed
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"------------------ SUMMARY ----------------------------------------------"
argument_list|)
expr_stmt|;
name|clientNode
operator|.
name|close
argument_list|()
expr_stmt|;
for|for
control|(
name|Node
name|node
range|:
name|nodes
control|)
block|{
name|node
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|StatsResult
specifier|public
specifier|static
class|class
name|StatsResult
block|{
DECL|field|name
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|took
specifier|final
name|long
name|took
decl_stmt|;
DECL|field|fieldDataMemoryUsed
specifier|final
name|ByteSizeValue
name|fieldDataMemoryUsed
decl_stmt|;
DECL|method|StatsResult
specifier|public
name|StatsResult
parameter_list|(
name|String
name|name
parameter_list|,
name|long
name|took
parameter_list|,
name|ByteSizeValue
name|fieldDataMemoryUsed
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|took
operator|=
name|took
expr_stmt|;
name|this
operator|.
name|fieldDataMemoryUsed
operator|=
name|fieldDataMemoryUsed
expr_stmt|;
block|}
block|}
DECL|method|terms
specifier|private
specifier|static
name|StatsResult
name|terms
parameter_list|(
name|String
name|name
parameter_list|,
name|Method
name|method
parameter_list|,
name|String
name|field
parameter_list|,
name|String
name|executionHint
parameter_list|)
block|{
name|long
name|totalQueryTime
decl_stmt|;
comment|// LM VALUE
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClearCache
argument_list|()
operator|.
name|setFieldDataCache
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|System
operator|.
name|gc
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Warmup ("
operator|+
name|name
operator|+
literal|")..."
argument_list|)
expr_stmt|;
comment|// run just the child query, warm up first
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|QUERY_WARMUP
condition|;
name|j
operator|++
control|)
block|{
name|SearchResponse
name|searchResponse
init|=
name|method
operator|.
name|addTermsAgg
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test"
argument_list|)
operator|.
name|setSearchType
argument_list|(
name|SearchType
operator|.
name|COUNT
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
argument_list|,
name|name
argument_list|,
name|field
argument_list|,
name|executionHint
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
if|if
condition|(
name|j
operator|==
literal|0
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Loading ("
operator|+
name|field
operator|+
literal|"): took: "
operator|+
name|searchResponse
operator|.
name|getTook
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
operator|!=
name|COUNT
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"--> mismatch on hits"
argument_list|)
expr_stmt|;
block|}
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Warmup ("
operator|+
name|name
operator|+
literal|") DONE"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Running ("
operator|+
name|name
operator|+
literal|")..."
argument_list|)
expr_stmt|;
name|totalQueryTime
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|QUERY_COUNT
condition|;
name|j
operator|++
control|)
block|{
name|SearchResponse
name|searchResponse
init|=
name|method
operator|.
name|addTermsAgg
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setSearchType
argument_list|(
name|SearchType
operator|.
name|COUNT
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
argument_list|,
name|name
argument_list|,
name|field
argument_list|,
name|executionHint
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
if|if
condition|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
operator|!=
name|COUNT
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"--> mismatch on hits"
argument_list|)
expr_stmt|;
block|}
name|totalQueryTime
operator|+=
name|searchResponse
operator|.
name|getTookInMillis
argument_list|()
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Terms Agg ("
operator|+
name|name
operator|+
literal|"): "
operator|+
operator|(
name|totalQueryTime
operator|/
name|QUERY_COUNT
operator|)
operator|+
literal|"ms"
argument_list|)
expr_stmt|;
name|String
index|[]
name|nodeIds
init|=
operator|new
name|String
index|[
name|nodes
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nodeIds
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|nodeIds
index|[
name|i
index|]
operator|=
name|nodes
index|[
name|i
index|]
operator|.
name|injector
argument_list|()
operator|.
name|getInstance
argument_list|(
name|Discovery
operator|.
name|class
argument_list|)
operator|.
name|localNode
argument_list|()
operator|.
name|getId
argument_list|()
expr_stmt|;
block|}
name|ClusterStatsResponse
name|clusterStateResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareClusterStats
argument_list|()
operator|.
name|setNodesIds
argument_list|(
name|nodeIds
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Heap used: "
operator|+
name|clusterStateResponse
operator|.
name|getNodesStats
argument_list|()
operator|.
name|getJvm
argument_list|()
operator|.
name|getHeapUsed
argument_list|()
argument_list|)
expr_stmt|;
name|ByteSizeValue
name|fieldDataMemoryUsed
init|=
name|clusterStateResponse
operator|.
name|getIndicesStats
argument_list|()
operator|.
name|getFieldData
argument_list|()
operator|.
name|getMemorySize
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Fielddata memory size: "
operator|+
name|fieldDataMemoryUsed
argument_list|)
expr_stmt|;
return|return
operator|new
name|StatsResult
argument_list|(
name|name
argument_list|,
name|totalQueryTime
argument_list|,
name|fieldDataMemoryUsed
argument_list|)
return|;
block|}
DECL|method|termsStats
specifier|private
specifier|static
name|StatsResult
name|termsStats
parameter_list|(
name|String
name|name
parameter_list|,
name|Method
name|method
parameter_list|,
name|String
name|keyField
parameter_list|,
name|String
name|valueField
parameter_list|,
name|String
name|executionHint
parameter_list|)
block|{
name|long
name|totalQueryTime
decl_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClearCache
argument_list|()
operator|.
name|setFieldDataCache
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|System
operator|.
name|gc
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Warmup ("
operator|+
name|name
operator|+
literal|")..."
argument_list|)
expr_stmt|;
comment|// run just the child query, warm up first
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|QUERY_WARMUP
condition|;
name|j
operator|++
control|)
block|{
name|SearchResponse
name|searchResponse
init|=
name|method
operator|.
name|addTermsStatsAgg
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setSearchType
argument_list|(
name|SearchType
operator|.
name|COUNT
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
argument_list|,
name|name
argument_list|,
name|keyField
argument_list|,
name|valueField
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
if|if
condition|(
name|j
operator|==
literal|0
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Loading ("
operator|+
name|name
operator|+
literal|"): took: "
operator|+
name|searchResponse
operator|.
name|getTook
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
operator|!=
name|COUNT
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"--> mismatch on hits"
argument_list|)
expr_stmt|;
block|}
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Warmup ("
operator|+
name|name
operator|+
literal|") DONE"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Running ("
operator|+
name|name
operator|+
literal|")..."
argument_list|)
expr_stmt|;
name|totalQueryTime
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|QUERY_COUNT
condition|;
name|j
operator|++
control|)
block|{
name|SearchResponse
name|searchResponse
init|=
name|method
operator|.
name|addTermsStatsAgg
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setSearchType
argument_list|(
name|SearchType
operator|.
name|COUNT
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
argument_list|,
name|name
argument_list|,
name|keyField
argument_list|,
name|valueField
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
if|if
condition|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
operator|!=
name|COUNT
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"--> mismatch on hits"
argument_list|)
expr_stmt|;
block|}
name|totalQueryTime
operator|+=
name|searchResponse
operator|.
name|getTookInMillis
argument_list|()
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> Terms stats agg ("
operator|+
name|name
operator|+
literal|"): "
operator|+
operator|(
name|totalQueryTime
operator|/
name|QUERY_COUNT
operator|)
operator|+
literal|"ms"
argument_list|)
expr_stmt|;
return|return
operator|new
name|StatsResult
argument_list|(
name|name
argument_list|,
name|totalQueryTime
argument_list|,
name|ByteSizeValue
operator|.
name|parseBytesSizeValue
argument_list|(
literal|"0b"
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

