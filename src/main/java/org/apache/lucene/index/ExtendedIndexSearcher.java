begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|ExtendedIndexSearcher
specifier|public
class|class
name|ExtendedIndexSearcher
extends|extends
name|IndexSearcher
block|{
DECL|method|ExtendedIndexSearcher
specifier|public
name|ExtendedIndexSearcher
parameter_list|(
name|IndexSearcher
name|searcher
parameter_list|)
block|{
name|super
argument_list|(
name|searcher
operator|.
name|getIndexReader
argument_list|()
argument_list|)
expr_stmt|;
name|setSimilarity
argument_list|(
name|searcher
operator|.
name|getSimilarity
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|ExtendedIndexSearcher
specifier|public
name|ExtendedIndexSearcher
parameter_list|(
name|IndexReader
name|r
parameter_list|)
block|{
name|super
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
DECL|method|subReaders
specifier|public
name|IndexReader
index|[]
name|subReaders
parameter_list|()
block|{
return|return
name|this
operator|.
name|subReaders
return|;
block|}
DECL|method|docStarts
specifier|public
name|int
index|[]
name|docStarts
parameter_list|()
block|{
return|return
name|this
operator|.
name|docStarts
return|;
block|}
DECL|method|readerIndex
specifier|public
name|int
name|readerIndex
parameter_list|(
name|int
name|doc
parameter_list|)
block|{
return|return
name|DirectoryReader
operator|.
name|readerIndex
argument_list|(
name|doc
argument_list|,
name|docStarts
argument_list|,
name|subReaders
operator|.
name|length
argument_list|)
return|;
block|}
block|}
end_class

end_unit

