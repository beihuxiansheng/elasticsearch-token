begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.os
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|os
package|;
end_package

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|OsUtils
specifier|public
class|class
name|OsUtils
block|{
comment|/**      * The value of<tt>System.getProperty("os.name")<tt>.      */
DECL|field|OS_NAME
specifier|public
specifier|static
specifier|final
name|String
name|OS_NAME
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|)
decl_stmt|;
comment|/**      * True iff running on Linux.      */
DECL|field|LINUX
specifier|public
specifier|static
specifier|final
name|boolean
name|LINUX
init|=
name|OS_NAME
operator|.
name|trim
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"linux"
argument_list|)
decl_stmt|;
comment|/**      * True iff running on Windows.      */
DECL|field|WINDOWS
specifier|public
specifier|static
specifier|final
name|boolean
name|WINDOWS
init|=
name|OS_NAME
operator|.
name|trim
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"windows"
argument_list|)
decl_stmt|;
comment|/**      * True iff running on SunOS.      */
DECL|field|SOLARIS
specifier|public
specifier|static
specifier|final
name|boolean
name|SOLARIS
init|=
name|OS_NAME
operator|.
name|trim
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"sun"
argument_list|)
decl_stmt|;
comment|/**      * True iff running on Mac.      */
DECL|field|MAC
specifier|public
specifier|static
specifier|final
name|boolean
name|MAC
init|=
name|OS_NAME
operator|.
name|trim
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"mac"
argument_list|)
decl_stmt|;
comment|/**      * True iff running on HP.      */
DECL|field|HP
specifier|public
specifier|static
specifier|final
name|boolean
name|HP
init|=
name|OS_NAME
operator|.
name|trim
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"hp"
argument_list|)
decl_stmt|;
DECL|method|OsUtils
specifier|private
name|OsUtils
parameter_list|()
block|{      }
block|}
end_class

end_unit

