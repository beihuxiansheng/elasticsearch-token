begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.recycler
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|recycler
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lease
operator|.
name|Releasable
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_interface
DECL|interface|Recycler
specifier|public
interface|interface
name|Recycler
parameter_list|<
name|T
parameter_list|>
block|{
DECL|interface|Factory
specifier|public
specifier|static
interface|interface
name|Factory
parameter_list|<
name|T
parameter_list|>
block|{
DECL|method|build
name|Recycler
argument_list|<
name|T
argument_list|>
name|build
parameter_list|()
function_decl|;
block|}
DECL|interface|C
specifier|public
specifier|static
interface|interface
name|C
parameter_list|<
name|T
parameter_list|>
block|{
comment|/** Create a new empty instance of the given size. */
DECL|method|newInstance
name|T
name|newInstance
parameter_list|(
name|int
name|sizing
parameter_list|)
function_decl|;
comment|/** Clear the data. This operation is called when the data-structure is released. */
DECL|method|clear
name|void
name|clear
parameter_list|(
name|T
name|value
parameter_list|)
function_decl|;
block|}
DECL|interface|V
specifier|public
specifier|static
interface|interface
name|V
parameter_list|<
name|T
parameter_list|>
extends|extends
name|Releasable
block|{
comment|/** Reference to the value. */
DECL|method|v
name|T
name|v
parameter_list|()
function_decl|;
comment|/** Whether this instance has been recycled (true) or newly allocated (false). */
DECL|method|isRecycled
name|boolean
name|isRecycled
parameter_list|()
function_decl|;
block|}
DECL|method|close
name|void
name|close
parameter_list|()
function_decl|;
DECL|method|obtain
name|V
argument_list|<
name|T
argument_list|>
name|obtain
parameter_list|()
function_decl|;
DECL|method|obtain
name|V
argument_list|<
name|T
argument_list|>
name|obtain
parameter_list|(
name|int
name|sizing
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

