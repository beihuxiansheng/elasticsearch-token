begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.recycler
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|recycler
package|;
end_package

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|RecyclerUtils
specifier|public
specifier|final
class|class
name|RecyclerUtils
block|{
DECL|method|RecyclerUtils
specifier|private
name|RecyclerUtils
parameter_list|()
block|{     }
comment|// Borrowed from IOUtils#close
DECL|method|release
specifier|public
specifier|static
name|void
name|release
parameter_list|(
name|Recycler
operator|.
name|V
modifier|...
name|recyclers
parameter_list|)
block|{
name|Throwable
name|th
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Recycler
operator|.
name|V
name|recycler
range|:
name|recyclers
control|)
block|{
try|try
block|{
if|if
condition|(
name|recycler
operator|!=
literal|null
condition|)
block|{
name|recycler
operator|.
name|release
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
if|if
condition|(
name|th
operator|==
literal|null
condition|)
block|{
name|th
operator|=
name|t
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|th
operator|!=
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|th
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

