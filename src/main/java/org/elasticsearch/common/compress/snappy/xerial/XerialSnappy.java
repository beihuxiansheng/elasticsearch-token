begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.compress.snappy.xerial
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|compress
operator|.
name|snappy
operator|.
name|xerial
package|;
end_package

begin_import
import|import
name|org
operator|.
name|xerial
operator|.
name|snappy
operator|.
name|Snappy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|XerialSnappy
specifier|public
class|class
name|XerialSnappy
block|{
DECL|field|available
specifier|public
specifier|static
specifier|final
name|boolean
name|available
decl_stmt|;
DECL|field|failure
specifier|public
specifier|static
specifier|final
name|Throwable
name|failure
decl_stmt|;
static|static
block|{
name|Throwable
name|failureX
init|=
literal|null
decl_stmt|;
name|boolean
name|availableX
decl_stmt|;
comment|// Yuck!, we need to do this since snappy 1.0.4.1 does e.printStackTrace
comment|// when failing to load the snappy library, and we don't want it displayed...
name|PrintStream
name|err
init|=
name|System
operator|.
name|err
decl_stmt|;
try|try
block|{
name|System
operator|.
name|setErr
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|byte
index|[]
name|tests
init|=
name|Snappy
operator|.
name|compress
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|Snappy
operator|.
name|uncompressString
argument_list|(
name|tests
argument_list|)
expr_stmt|;
name|availableX
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|availableX
operator|=
literal|false
expr_stmt|;
name|failureX
operator|=
name|e
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|setErr
argument_list|(
name|err
argument_list|)
expr_stmt|;
block|}
name|available
operator|=
name|availableX
expr_stmt|;
name|failure
operator|=
name|failureX
expr_stmt|;
block|}
block|}
end_class

end_unit

