begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.lucene.docset
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|docset
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|DocIdSetIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|FilteredDocIdSetIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Bits
import|;
end_import

begin_comment
comment|/**  * A {@link Bits} based iterator.  */
end_comment

begin_class
DECL|class|BitsDocIdSetIterator
specifier|public
class|class
name|BitsDocIdSetIterator
extends|extends
name|MatchDocIdSetIterator
block|{
DECL|field|bits
specifier|private
specifier|final
name|Bits
name|bits
decl_stmt|;
DECL|method|BitsDocIdSetIterator
specifier|public
name|BitsDocIdSetIterator
parameter_list|(
name|Bits
name|bits
parameter_list|)
block|{
name|super
argument_list|(
name|bits
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|bits
operator|=
name|bits
expr_stmt|;
block|}
DECL|method|BitsDocIdSetIterator
specifier|public
name|BitsDocIdSetIterator
parameter_list|(
name|int
name|maxDoc
parameter_list|,
name|Bits
name|bits
parameter_list|)
block|{
name|super
argument_list|(
name|maxDoc
argument_list|)
expr_stmt|;
name|this
operator|.
name|bits
operator|=
name|bits
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|matchDoc
specifier|protected
name|boolean
name|matchDoc
parameter_list|(
name|int
name|doc
parameter_list|)
block|{
return|return
name|bits
operator|.
name|get
argument_list|(
name|doc
argument_list|)
return|;
block|}
DECL|class|FilteredIterator
specifier|public
specifier|static
class|class
name|FilteredIterator
extends|extends
name|FilteredDocIdSetIterator
block|{
DECL|field|bits
specifier|private
specifier|final
name|Bits
name|bits
decl_stmt|;
DECL|method|FilteredIterator
name|FilteredIterator
parameter_list|(
name|DocIdSetIterator
name|innerIter
parameter_list|,
name|Bits
name|bits
parameter_list|)
block|{
name|super
argument_list|(
name|innerIter
argument_list|)
expr_stmt|;
name|this
operator|.
name|bits
operator|=
name|bits
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|match
specifier|protected
name|boolean
name|match
parameter_list|(
name|int
name|doc
parameter_list|)
block|{
return|return
name|bits
operator|.
name|get
argument_list|(
name|doc
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|cost
specifier|public
name|long
name|cost
parameter_list|()
block|{
return|return
name|this
operator|.
name|bits
operator|.
name|length
argument_list|()
return|;
block|}
block|}
end_class

end_unit

