begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.lucene
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentInfos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
operator|.
name|ESLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
operator|.
name|Loggers
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|IndexWriters
specifier|public
specifier|abstract
class|class
name|IndexWriters
block|{
DECL|field|logger
specifier|private
specifier|static
name|ESLogger
name|logger
init|=
name|Loggers
operator|.
name|getLogger
argument_list|(
name|IndexWriters
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|rollbackSegmentInfosField
specifier|private
specifier|static
name|Field
name|rollbackSegmentInfosField
decl_stmt|;
DECL|field|docWriterReflection
specifier|private
specifier|static
specifier|final
name|boolean
name|docWriterReflection
decl_stmt|;
static|static
block|{
name|boolean
name|docWriterReflectionX
init|=
literal|false
decl_stmt|;
try|try
block|{
name|rollbackSegmentInfosField
operator|=
name|IndexWriter
operator|.
name|class
operator|.
name|getDeclaredField
argument_list|(
literal|"rollbackSegmentInfos"
argument_list|)
expr_stmt|;
name|rollbackSegmentInfosField
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|docWriterReflectionX
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"Failed to doc writer fields"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|docWriterReflection
operator|=
name|docWriterReflectionX
expr_stmt|;
block|}
DECL|method|rollbackSegmentInfos
specifier|public
specifier|static
name|SegmentInfos
name|rollbackSegmentInfos
parameter_list|(
name|IndexWriter
name|writer
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|(
name|SegmentInfos
operator|)
name|rollbackSegmentInfosField
operator|.
name|get
argument_list|(
name|writer
argument_list|)
return|;
block|}
DECL|method|IndexWriters
specifier|private
name|IndexWriters
parameter_list|()
block|{      }
block|}
end_class

end_unit

