begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.common.lucene.search.vectorhighlight
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|search
operator|.
name|vectorhighlight
package|;
end_package

begin_import
import|import
name|gnu
operator|.
name|trove
operator|.
name|set
operator|.
name|hash
operator|.
name|TCharHashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|vectorhighlight
operator|.
name|BoundaryScanner
import|;
end_import

begin_comment
comment|/**  * A copy of Lucene {@link org.apache.lucene.search.vectorhighlight.XSimpleBoundaryScanner}.  *<p/>  * Uses specialized char set to lookup boundary, and fixes a problem with start offset in the  * beginning of the text: https://issues.apache.org/jira/browse/LUCENE-3697 (which has a problem  * with multiple empty fields to highlight...).  */
end_comment

begin_class
DECL|class|SimpleBoundaryScanner2
specifier|public
class|class
name|SimpleBoundaryScanner2
implements|implements
name|BoundaryScanner
block|{
DECL|field|DEFAULT_MAX_SCAN
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MAX_SCAN
init|=
literal|20
decl_stmt|;
DECL|field|DEFAULT_BOUNDARY_CHARS
specifier|public
specifier|static
specifier|final
name|char
index|[]
name|DEFAULT_BOUNDARY_CHARS
init|=
block|{
literal|'.'
block|,
literal|','
block|,
literal|'!'
block|,
literal|'?'
block|,
literal|' '
block|,
literal|'\t'
block|,
literal|'\n'
block|}
decl_stmt|;
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|SimpleBoundaryScanner2
name|DEFAULT
init|=
operator|new
name|SimpleBoundaryScanner2
argument_list|()
decl_stmt|;
DECL|field|maxScan
specifier|public
name|int
name|maxScan
decl_stmt|;
DECL|field|boundaryChars
specifier|public
name|TCharHashSet
name|boundaryChars
decl_stmt|;
DECL|method|SimpleBoundaryScanner2
specifier|public
name|SimpleBoundaryScanner2
parameter_list|()
block|{
name|this
argument_list|(
name|DEFAULT_MAX_SCAN
argument_list|,
name|DEFAULT_BOUNDARY_CHARS
argument_list|)
expr_stmt|;
block|}
DECL|method|SimpleBoundaryScanner2
specifier|public
name|SimpleBoundaryScanner2
parameter_list|(
name|int
name|maxScan
parameter_list|,
name|char
index|[]
name|boundaryChars
parameter_list|)
block|{
name|this
operator|.
name|maxScan
operator|=
name|maxScan
expr_stmt|;
name|this
operator|.
name|boundaryChars
operator|=
operator|new
name|TCharHashSet
argument_list|(
name|boundaryChars
argument_list|)
expr_stmt|;
block|}
DECL|method|findStartOffset
specifier|public
name|int
name|findStartOffset
parameter_list|(
name|StringBuilder
name|buffer
parameter_list|,
name|int
name|start
parameter_list|)
block|{
comment|// avoid illegal start offset
if|if
condition|(
name|start
operator|>
name|buffer
operator|.
name|length
argument_list|()
operator|||
name|start
operator|<
literal|1
condition|)
return|return
name|start
return|;
name|int
name|offset
decl_stmt|,
name|count
init|=
name|maxScan
decl_stmt|;
for|for
control|(
name|offset
operator|=
name|start
init|;
name|offset
operator|>
literal|0
operator|&&
name|count
operator|>
literal|0
condition|;
name|count
operator|--
control|)
block|{
comment|// found?
if|if
condition|(
name|boundaryChars
operator|.
name|contains
argument_list|(
name|buffer
operator|.
name|charAt
argument_list|(
name|offset
operator|-
literal|1
argument_list|)
argument_list|)
condition|)
return|return
name|offset
return|;
name|offset
operator|--
expr_stmt|;
block|}
comment|// LUCENE-3697
if|if
condition|(
name|offset
operator|==
literal|0
condition|)
block|{
return|return
literal|0
return|;
block|}
comment|// not found
return|return
name|start
return|;
block|}
DECL|method|findEndOffset
specifier|public
name|int
name|findEndOffset
parameter_list|(
name|StringBuilder
name|buffer
parameter_list|,
name|int
name|start
parameter_list|)
block|{
comment|// avoid illegal start offset
if|if
condition|(
name|start
operator|>
name|buffer
operator|.
name|length
argument_list|()
operator|||
name|start
operator|<
literal|0
condition|)
return|return
name|start
return|;
name|int
name|offset
decl_stmt|,
name|count
init|=
name|maxScan
decl_stmt|;
comment|//for( offset = start; offset<= buffer.length()&& count> 0; count-- ){
for|for
control|(
name|offset
operator|=
name|start
init|;
name|offset
argument_list|<
name|buffer
operator|.
name|length
operator|(
operator|)
operator|&&
name|count
argument_list|>
literal|0
condition|;
name|count
operator|--
control|)
block|{
comment|// found?
if|if
condition|(
name|boundaryChars
operator|.
name|contains
argument_list|(
name|buffer
operator|.
name|charAt
argument_list|(
name|offset
argument_list|)
argument_list|)
condition|)
return|return
name|offset
return|;
name|offset
operator|++
expr_stmt|;
block|}
comment|// not found
return|return
name|start
return|;
block|}
block|}
end_class

end_unit

