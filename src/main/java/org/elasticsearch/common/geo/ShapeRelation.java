begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.common.geo
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_comment
comment|/**  * Enum representing the relationship between a Query / Filter Shape and indexed Shapes  * that will be used to determine if a Document should be matched or not  */
end_comment

begin_enum
DECL|enum|ShapeRelation
specifier|public
enum|enum
name|ShapeRelation
block|{
DECL|enum constant|INTERSECTS
name|INTERSECTS
argument_list|(
literal|"intersects"
argument_list|)
block|,
DECL|enum constant|DISJOINT
name|DISJOINT
argument_list|(
literal|"disjoint"
argument_list|)
block|,
DECL|enum constant|CONTAINS
name|CONTAINS
argument_list|(
literal|"contains"
argument_list|)
block|;
DECL|field|relationName
specifier|private
specifier|final
name|String
name|relationName
decl_stmt|;
DECL|method|ShapeRelation
name|ShapeRelation
parameter_list|(
name|String
name|relationName
parameter_list|)
block|{
name|this
operator|.
name|relationName
operator|=
name|relationName
expr_stmt|;
block|}
DECL|method|getRelationByName
specifier|public
specifier|static
name|ShapeRelation
name|getRelationByName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|name
operator|=
name|name
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|)
expr_stmt|;
for|for
control|(
name|ShapeRelation
name|relation
range|:
name|ShapeRelation
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|relation
operator|.
name|relationName
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
return|return
name|relation
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
DECL|method|getRelationName
specifier|public
name|String
name|getRelationName
parameter_list|()
block|{
return|return
name|relationName
return|;
block|}
block|}
end_enum

end_unit

