begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.blobstore.url
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|blobstore
operator|.
name|url
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|blobstore
operator|.
name|BlobPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|blobstore
operator|.
name|ImmutableBlobContainer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_comment
comment|/**  * Read-only URL-based implementation of {@link ImmutableBlobContainer}  */
end_comment

begin_class
DECL|class|URLImmutableBlobContainer
specifier|public
class|class
name|URLImmutableBlobContainer
extends|extends
name|AbstractURLBlobContainer
implements|implements
name|ImmutableBlobContainer
block|{
comment|/**      * Constructs a new URLImmutableBlobContainer      *      * @param blobStore blob store      * @param blobPath  blob path to this container      * @param path      URL of this container      */
DECL|method|URLImmutableBlobContainer
specifier|public
name|URLImmutableBlobContainer
parameter_list|(
name|URLBlobStore
name|blobStore
parameter_list|,
name|BlobPath
name|blobPath
parameter_list|,
name|URL
name|path
parameter_list|)
block|{
name|super
argument_list|(
name|blobStore
argument_list|,
name|blobPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
comment|/**      * This operation is not supported by URL Blob Container      */
annotation|@
name|Override
DECL|method|writeBlob
specifier|public
name|void
name|writeBlob
parameter_list|(
specifier|final
name|String
name|blobName
parameter_list|,
specifier|final
name|InputStream
name|is
parameter_list|,
specifier|final
name|long
name|sizeInBytes
parameter_list|,
specifier|final
name|WriterListener
name|listener
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"URL repository is read only"
argument_list|)
throw|;
block|}
comment|/**      * This operation is not supported by URL Blob Container      */
annotation|@
name|Override
DECL|method|writeBlob
specifier|public
name|void
name|writeBlob
parameter_list|(
name|String
name|blobName
parameter_list|,
name|InputStream
name|is
parameter_list|,
name|long
name|sizeInBytes
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"URL repository is read only"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

