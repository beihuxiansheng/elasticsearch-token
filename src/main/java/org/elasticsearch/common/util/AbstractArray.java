begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.util
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cache
operator|.
name|recycler
operator|.
name|PageCacheRecycler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lease
operator|.
name|Releasable
import|;
end_import

begin_class
DECL|class|AbstractArray
specifier|abstract
class|class
name|AbstractArray
implements|implements
name|Releasable
block|{
DECL|field|recycler
specifier|public
specifier|final
name|PageCacheRecycler
name|recycler
decl_stmt|;
DECL|field|clearOnResize
specifier|public
specifier|final
name|boolean
name|clearOnResize
decl_stmt|;
DECL|field|released
specifier|private
name|boolean
name|released
init|=
literal|false
decl_stmt|;
DECL|method|AbstractArray
name|AbstractArray
parameter_list|(
name|PageCacheRecycler
name|recycler
parameter_list|,
name|boolean
name|clearOnResize
parameter_list|)
block|{
name|this
operator|.
name|recycler
operator|=
name|recycler
expr_stmt|;
name|this
operator|.
name|clearOnResize
operator|=
name|clearOnResize
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|release
specifier|public
name|boolean
name|release
parameter_list|()
block|{
assert|assert
operator|!
name|released
operator|:
literal|"double release"
assert|;
name|released
operator|=
literal|true
expr_stmt|;
return|return
literal|true
return|;
comment|// nothing to release by default
block|}
block|}
end_class

end_unit

