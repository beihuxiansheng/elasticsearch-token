begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.util
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Accountable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_class
DECL|class|AbstractArray
specifier|abstract
class|class
name|AbstractArray
implements|implements
name|BigArray
block|{
DECL|field|bigArrays
specifier|private
specifier|final
name|BigArrays
name|bigArrays
decl_stmt|;
DECL|field|clearOnResize
specifier|public
specifier|final
name|boolean
name|clearOnResize
decl_stmt|;
DECL|field|released
specifier|private
name|boolean
name|released
init|=
literal|false
decl_stmt|;
DECL|method|AbstractArray
name|AbstractArray
parameter_list|(
name|BigArrays
name|bigArrays
parameter_list|,
name|boolean
name|clearOnResize
parameter_list|)
block|{
name|this
operator|.
name|bigArrays
operator|=
name|bigArrays
expr_stmt|;
name|this
operator|.
name|clearOnResize
operator|=
name|clearOnResize
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close
specifier|public
specifier|final
name|void
name|close
parameter_list|()
block|{
name|bigArrays
operator|.
name|adjustBreaker
argument_list|(
operator|-
name|ramBytesUsed
argument_list|()
argument_list|)
expr_stmt|;
assert|assert
operator|!
name|released
operator|:
literal|"double release"
assert|;
name|released
operator|=
literal|true
expr_stmt|;
name|doClose
argument_list|()
expr_stmt|;
block|}
DECL|method|doClose
specifier|protected
specifier|abstract
name|void
name|doClose
parameter_list|()
function_decl|;
annotation|@
name|Override
DECL|method|getChildResources
specifier|public
name|Collection
argument_list|<
name|Accountable
argument_list|>
name|getChildResources
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
block|}
end_class

end_unit

