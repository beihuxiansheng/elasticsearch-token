begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cloud.gce
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|gce
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|googleapis
operator|.
name|compute
operator|.
name|ComputeCredential
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|googleapis
operator|.
name|javanet
operator|.
name|GoogleNetHttpTransport
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|http
operator|.
name|HttpTransport
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|json
operator|.
name|JsonFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|json
operator|.
name|jackson2
operator|.
name|JacksonFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|compute
operator|.
name|Compute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|compute
operator|.
name|model
operator|.
name|Instance
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|compute
operator|.
name|model
operator|.
name|InstanceList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticSearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|component
operator|.
name|AbstractLifecycleComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|SettingsFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|discovery
operator|.
name|DiscoveryException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|GceComputeServiceImpl
specifier|public
class|class
name|GceComputeServiceImpl
extends|extends
name|AbstractLifecycleComponent
argument_list|<
name|GceComputeServiceImpl
argument_list|>
implements|implements
name|GceComputeService
block|{
DECL|field|project
specifier|private
specifier|final
name|String
name|project
decl_stmt|;
DECL|field|zone
specifier|private
specifier|final
name|String
name|zone
decl_stmt|;
annotation|@
name|Override
DECL|method|instances
specifier|public
name|Collection
argument_list|<
name|Instance
argument_list|>
name|instances
parameter_list|()
block|{
try|try
block|{
name|Compute
operator|.
name|Instances
operator|.
name|List
name|list
init|=
name|client
argument_list|()
operator|.
name|instances
argument_list|()
operator|.
name|list
argument_list|(
name|project
argument_list|,
name|zone
argument_list|)
decl_stmt|;
name|InstanceList
name|instanceList
init|=
name|list
operator|.
name|execute
argument_list|()
decl_stmt|;
return|return
name|instanceList
operator|.
name|getItems
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ElasticSearchException
argument_list|(
literal|"Pas glop"
argument_list|)
throw|;
block|}
block|}
DECL|field|client
specifier|private
name|Compute
name|client
decl_stmt|;
DECL|field|refreshInterval
specifier|private
name|TimeValue
name|refreshInterval
init|=
literal|null
decl_stmt|;
DECL|field|lastRefresh
specifier|private
name|long
name|lastRefresh
decl_stmt|;
comment|/** Global instance of the HTTP transport. */
DECL|field|HTTP_TRANSPORT
specifier|private
specifier|static
name|HttpTransport
name|HTTP_TRANSPORT
decl_stmt|;
comment|/** Global instance of the JSON factory. */
DECL|field|JSON_FACTORY
specifier|private
specifier|static
name|JsonFactory
name|JSON_FACTORY
decl_stmt|;
annotation|@
name|Inject
DECL|method|GceComputeServiceImpl
specifier|public
name|GceComputeServiceImpl
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|SettingsFilter
name|settingsFilter
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|settingsFilter
operator|.
name|addFilter
argument_list|(
operator|new
name|GceSettingsFilter
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|project
operator|=
name|componentSettings
operator|.
name|get
argument_list|(
name|Fields
operator|.
name|PROJECT
argument_list|,
name|settings
operator|.
name|get
argument_list|(
literal|"cloud.gce."
operator|+
name|Fields
operator|.
name|PROJECT
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|zone
operator|=
name|componentSettings
operator|.
name|get
argument_list|(
name|Fields
operator|.
name|ZONE
argument_list|,
name|settings
operator|.
name|get
argument_list|(
literal|"cloud.gce."
operator|+
name|Fields
operator|.
name|ZONE
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|client
specifier|public
specifier|synchronized
name|Compute
name|client
parameter_list|()
block|{
if|if
condition|(
name|refreshInterval
operator|!=
literal|null
operator|&&
name|refreshInterval
operator|.
name|millis
argument_list|()
operator|!=
literal|0
condition|)
block|{
if|if
condition|(
name|client
operator|!=
literal|null
operator|&&
operator|(
name|refreshInterval
operator|.
name|millis
argument_list|()
operator|<
literal|0
operator|||
operator|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|lastRefresh
operator|)
operator|<
name|refreshInterval
operator|.
name|millis
argument_list|()
operator|)
condition|)
block|{
if|if
condition|(
name|logger
operator|.
name|isTraceEnabled
argument_list|()
condition|)
name|logger
operator|.
name|trace
argument_list|(
literal|"using cache to retrieve client"
argument_list|)
expr_stmt|;
return|return
name|client
return|;
block|}
name|lastRefresh
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|HTTP_TRANSPORT
operator|=
name|GoogleNetHttpTransport
operator|.
name|newTrustedTransport
argument_list|()
expr_stmt|;
name|JSON_FACTORY
operator|=
operator|new
name|JacksonFactory
argument_list|()
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"starting GCE discovery service"
argument_list|)
expr_stmt|;
name|ComputeCredential
name|credential
init|=
operator|new
name|ComputeCredential
operator|.
name|Builder
argument_list|(
name|HTTP_TRANSPORT
argument_list|,
name|JSON_FACTORY
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|credential
operator|.
name|refreshToken
argument_list|()
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"token [{}] will expire in [{}] s"
argument_list|,
name|credential
operator|.
name|getAccessToken
argument_list|()
argument_list|,
name|credential
operator|.
name|getExpiresInSeconds
argument_list|()
argument_list|)
expr_stmt|;
name|refreshInterval
operator|=
name|TimeValue
operator|.
name|timeValueSeconds
argument_list|(
name|credential
operator|.
name|getExpiresInSeconds
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// Once done, let's use this token
name|this
operator|.
name|client
operator|=
operator|new
name|Compute
operator|.
name|Builder
argument_list|(
name|HTTP_TRANSPORT
argument_list|,
name|JSON_FACTORY
argument_list|,
literal|null
argument_list|)
operator|.
name|setApplicationName
argument_list|(
name|Fields
operator|.
name|VERSION
argument_list|)
operator|.
name|setHttpRequestInitializer
argument_list|(
name|credential
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"unable to start GCE discovery service: {} : {}"
argument_list|,
name|e
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|DiscoveryException
argument_list|(
literal|"unable to start GCE discovery service"
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
name|this
operator|.
name|client
return|;
block|}
annotation|@
name|Override
DECL|method|doStart
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|ElasticSearchException
block|{     }
annotation|@
name|Override
DECL|method|doStop
specifier|protected
name|void
name|doStop
parameter_list|()
throws|throws
name|ElasticSearchException
block|{     }
annotation|@
name|Override
DECL|method|doClose
specifier|protected
name|void
name|doClose
parameter_list|()
throws|throws
name|ElasticSearchException
block|{     }
block|}
end_class

end_unit

