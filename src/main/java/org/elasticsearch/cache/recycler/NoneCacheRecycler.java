begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cache.recycler
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cache
operator|.
name|recycler
package|;
end_package

begin_import
import|import
name|gnu
operator|.
name|trove
operator|.
name|map
operator|.
name|hash
operator|.
name|*
import|;
end_import

begin_import
import|import
name|gnu
operator|.
name|trove
operator|.
name|set
operator|.
name|hash
operator|.
name|THashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|trove
operator|.
name|ExtTDoubleObjectHashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|trove
operator|.
name|ExtTHashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|trove
operator|.
name|ExtTLongObjectHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_class
DECL|class|NoneCacheRecycler
specifier|public
class|class
name|NoneCacheRecycler
implements|implements
name|CacheRecycler
block|{
annotation|@
name|Override
DECL|method|clear
specifier|public
name|void
name|clear
parameter_list|()
block|{     }
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|popHashMap
specifier|public
parameter_list|<
name|K
parameter_list|,
name|V
parameter_list|>
name|ExtTHashMap
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|popHashMap
parameter_list|()
block|{
return|return
operator|new
name|ExtTHashMap
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushHashMap
specifier|public
name|void
name|pushHashMap
parameter_list|(
name|ExtTHashMap
name|map
parameter_list|)
block|{
name|map
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|popHashSet
specifier|public
parameter_list|<
name|T
parameter_list|>
name|THashSet
argument_list|<
name|T
argument_list|>
name|popHashSet
parameter_list|()
block|{
return|return
operator|new
name|THashSet
argument_list|<
name|T
argument_list|>
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushHashSet
specifier|public
name|void
name|pushHashSet
parameter_list|(
name|THashSet
name|map
parameter_list|)
block|{
name|map
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|popDoubleObjectMap
specifier|public
parameter_list|<
name|T
parameter_list|>
name|ExtTDoubleObjectHashMap
argument_list|<
name|T
argument_list|>
name|popDoubleObjectMap
parameter_list|()
block|{
return|return
operator|new
name|ExtTDoubleObjectHashMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushDoubleObjectMap
specifier|public
name|void
name|pushDoubleObjectMap
parameter_list|(
name|ExtTDoubleObjectHashMap
name|map
parameter_list|)
block|{
name|map
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|popLongObjectMap
specifier|public
parameter_list|<
name|T
parameter_list|>
name|ExtTLongObjectHashMap
argument_list|<
name|T
argument_list|>
name|popLongObjectMap
parameter_list|()
block|{
return|return
operator|new
name|ExtTLongObjectHashMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushLongObjectMap
specifier|public
name|void
name|pushLongObjectMap
parameter_list|(
name|ExtTLongObjectHashMap
name|map
parameter_list|)
block|{
name|map
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|popLongLongMap
specifier|public
name|TLongLongHashMap
name|popLongLongMap
parameter_list|()
block|{
return|return
operator|new
name|TLongLongHashMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushLongLongMap
specifier|public
name|void
name|pushLongLongMap
parameter_list|(
name|TLongLongHashMap
name|map
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|popIntIntMap
specifier|public
name|TIntIntHashMap
name|popIntIntMap
parameter_list|()
block|{
return|return
operator|new
name|TIntIntHashMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushIntIntMap
specifier|public
name|void
name|pushIntIntMap
parameter_list|(
name|TIntIntHashMap
name|map
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|popFloatIntMap
specifier|public
name|TFloatIntHashMap
name|popFloatIntMap
parameter_list|()
block|{
return|return
operator|new
name|TFloatIntHashMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushFloatIntMap
specifier|public
name|void
name|pushFloatIntMap
parameter_list|(
name|TFloatIntHashMap
name|map
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|popDoubleIntMap
specifier|public
name|TDoubleIntHashMap
name|popDoubleIntMap
parameter_list|()
block|{
return|return
operator|new
name|TDoubleIntHashMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushDoubleIntMap
specifier|public
name|void
name|pushDoubleIntMap
parameter_list|(
name|TDoubleIntHashMap
name|map
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|popByteIntMap
specifier|public
name|TByteIntHashMap
name|popByteIntMap
parameter_list|()
block|{
return|return
operator|new
name|TByteIntHashMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushByteIntMap
specifier|public
name|void
name|pushByteIntMap
parameter_list|(
name|TByteIntHashMap
name|map
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|popShortIntMap
specifier|public
name|TShortIntHashMap
name|popShortIntMap
parameter_list|()
block|{
return|return
operator|new
name|TShortIntHashMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushShortIntMap
specifier|public
name|void
name|pushShortIntMap
parameter_list|(
name|TShortIntHashMap
name|map
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|popLongIntMap
specifier|public
name|TLongIntHashMap
name|popLongIntMap
parameter_list|()
block|{
return|return
operator|new
name|TLongIntHashMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushLongIntMap
specifier|public
name|void
name|pushLongIntMap
parameter_list|(
name|TLongIntHashMap
name|map
parameter_list|)
block|{     }
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|}
argument_list|)
DECL|method|popObjectIntMap
specifier|public
parameter_list|<
name|T
parameter_list|>
name|TObjectIntHashMap
argument_list|<
name|T
argument_list|>
name|popObjectIntMap
parameter_list|()
block|{
return|return
operator|new
name|TObjectIntHashMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushObjectIntMap
specifier|public
parameter_list|<
name|T
parameter_list|>
name|void
name|pushObjectIntMap
parameter_list|(
name|TObjectIntHashMap
argument_list|<
name|T
argument_list|>
name|map
parameter_list|)
block|{     }
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|}
argument_list|)
DECL|method|popIntObjectMap
specifier|public
parameter_list|<
name|T
parameter_list|>
name|TIntObjectHashMap
argument_list|<
name|T
argument_list|>
name|popIntObjectMap
parameter_list|()
block|{
return|return
operator|new
name|TIntObjectHashMap
argument_list|<
name|T
argument_list|>
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushIntObjectMap
specifier|public
parameter_list|<
name|T
parameter_list|>
name|void
name|pushIntObjectMap
parameter_list|(
name|TIntObjectHashMap
argument_list|<
name|T
argument_list|>
name|map
parameter_list|)
block|{     }
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|}
argument_list|)
DECL|method|popObjectFloatMap
specifier|public
parameter_list|<
name|T
parameter_list|>
name|TObjectFloatHashMap
argument_list|<
name|T
argument_list|>
name|popObjectFloatMap
parameter_list|()
block|{
return|return
operator|new
name|TObjectFloatHashMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|pushObjectFloatMap
specifier|public
parameter_list|<
name|T
parameter_list|>
name|void
name|pushObjectFloatMap
parameter_list|(
name|TObjectFloatHashMap
argument_list|<
name|T
argument_list|>
name|map
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|popObjectArray
specifier|public
name|Object
index|[]
name|popObjectArray
parameter_list|(
name|int
name|size
parameter_list|)
block|{
return|return
operator|new
name|Object
index|[
name|size
index|]
return|;
block|}
annotation|@
name|Override
DECL|method|pushObjectArray
specifier|public
name|void
name|pushObjectArray
parameter_list|(
name|Object
index|[]
name|objects
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|popIntArray
specifier|public
name|int
index|[]
name|popIntArray
parameter_list|(
name|int
name|size
parameter_list|)
block|{
return|return
name|popIntArray
argument_list|(
name|size
argument_list|,
literal|0
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|popIntArray
specifier|public
name|int
index|[]
name|popIntArray
parameter_list|(
name|int
name|size
parameter_list|,
name|int
name|sentinal
parameter_list|)
block|{
name|int
index|[]
name|ints
init|=
operator|new
name|int
index|[
name|size
index|]
decl_stmt|;
if|if
condition|(
name|sentinal
operator|!=
literal|0
condition|)
block|{
name|Arrays
operator|.
name|fill
argument_list|(
name|ints
argument_list|,
name|sentinal
argument_list|)
expr_stmt|;
block|}
return|return
name|ints
return|;
block|}
annotation|@
name|Override
DECL|method|pushIntArray
specifier|public
name|void
name|pushIntArray
parameter_list|(
name|int
index|[]
name|ints
parameter_list|)
block|{
name|pushIntArray
argument_list|(
name|ints
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|pushIntArray
specifier|public
name|void
name|pushIntArray
parameter_list|(
name|int
index|[]
name|ints
parameter_list|,
name|int
name|sentinal
parameter_list|)
block|{     }
block|}
end_class

end_unit

