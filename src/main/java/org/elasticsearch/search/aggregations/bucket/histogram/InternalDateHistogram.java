begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.bucket.histogram
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|histogram
package|;
end_package

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|hppc
operator|.
name|ObjectObjectOpenHashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|core
operator|.
name|DateFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationStreams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|InternalAggregations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|support
operator|.
name|numeric
operator|.
name|ValueFormatter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTimeZone
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|InternalDateHistogram
specifier|public
class|class
name|InternalDateHistogram
extends|extends
name|InternalHistogram
argument_list|<
name|InternalDateHistogram
operator|.
name|Bucket
argument_list|>
implements|implements
name|DateHistogram
block|{
DECL|field|TYPE
specifier|final
specifier|static
name|Type
name|TYPE
init|=
operator|new
name|Type
argument_list|(
literal|"date_histogram"
argument_list|,
literal|"dhisto"
argument_list|)
decl_stmt|;
DECL|field|FACTORY
specifier|final
specifier|static
name|Factory
name|FACTORY
init|=
operator|new
name|Factory
argument_list|()
decl_stmt|;
DECL|field|STREAM
specifier|private
specifier|final
specifier|static
name|AggregationStreams
operator|.
name|Stream
name|STREAM
init|=
operator|new
name|AggregationStreams
operator|.
name|Stream
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|InternalDateHistogram
name|readResult
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|InternalDateHistogram
name|histogram
init|=
operator|new
name|InternalDateHistogram
argument_list|()
decl_stmt|;
name|histogram
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|histogram
return|;
block|}
block|}
decl_stmt|;
DECL|method|registerStream
specifier|public
specifier|static
name|void
name|registerStream
parameter_list|()
block|{
name|AggregationStreams
operator|.
name|registerStream
argument_list|(
name|STREAM
argument_list|,
name|TYPE
operator|.
name|stream
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|Bucket
specifier|static
class|class
name|Bucket
extends|extends
name|InternalHistogram
operator|.
name|Bucket
implements|implements
name|DateHistogram
operator|.
name|Bucket
block|{
DECL|field|formatter
specifier|private
specifier|final
name|ValueFormatter
name|formatter
decl_stmt|;
DECL|method|Bucket
name|Bucket
parameter_list|(
name|long
name|key
parameter_list|,
name|long
name|docCount
parameter_list|,
name|InternalAggregations
name|aggregations
parameter_list|,
name|ValueFormatter
name|formatter
parameter_list|)
block|{
name|super
argument_list|(
name|key
argument_list|,
name|docCount
argument_list|,
name|aggregations
argument_list|)
expr_stmt|;
name|this
operator|.
name|formatter
operator|=
name|formatter
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getKey
specifier|public
name|String
name|getKey
parameter_list|()
block|{
return|return
name|formatter
operator|!=
literal|null
condition|?
name|formatter
operator|.
name|format
argument_list|(
name|key
argument_list|)
else|:
name|DateFieldMapper
operator|.
name|Defaults
operator|.
name|DATE_TIME_FORMATTER
operator|.
name|printer
argument_list|()
operator|.
name|print
argument_list|(
name|key
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getKeyAsDate
specifier|public
name|DateTime
name|getKeyAsDate
parameter_list|()
block|{
return|return
operator|new
name|DateTime
argument_list|(
name|key
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getKey
argument_list|()
return|;
block|}
block|}
DECL|class|Factory
specifier|static
class|class
name|Factory
extends|extends
name|InternalHistogram
operator|.
name|Factory
argument_list|<
name|InternalDateHistogram
operator|.
name|Bucket
argument_list|>
block|{
DECL|method|Factory
specifier|private
name|Factory
parameter_list|()
block|{         }
annotation|@
name|Override
DECL|method|type
specifier|public
name|String
name|type
parameter_list|()
block|{
return|return
name|TYPE
operator|.
name|name
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|create
specifier|public
name|InternalDateHistogram
name|create
parameter_list|(
name|String
name|name
parameter_list|,
name|List
argument_list|<
name|InternalDateHistogram
operator|.
name|Bucket
argument_list|>
name|buckets
parameter_list|,
name|InternalOrder
name|order
parameter_list|,
name|long
name|minDocCount
parameter_list|,
name|EmptyBucketInfo
name|emptyBucketInfo
parameter_list|,
name|ValueFormatter
name|formatter
parameter_list|,
name|boolean
name|keyed
parameter_list|)
block|{
return|return
operator|new
name|InternalDateHistogram
argument_list|(
name|name
argument_list|,
name|buckets
argument_list|,
name|order
argument_list|,
name|minDocCount
argument_list|,
name|emptyBucketInfo
argument_list|,
name|formatter
argument_list|,
name|keyed
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createBucket
specifier|public
name|InternalDateHistogram
operator|.
name|Bucket
name|createBucket
parameter_list|(
name|long
name|key
parameter_list|,
name|long
name|docCount
parameter_list|,
name|InternalAggregations
name|aggregations
parameter_list|,
name|ValueFormatter
name|formatter
parameter_list|)
block|{
return|return
operator|new
name|Bucket
argument_list|(
name|key
argument_list|,
name|docCount
argument_list|,
name|aggregations
argument_list|,
name|formatter
argument_list|)
return|;
block|}
block|}
DECL|field|bucketsMap
specifier|private
name|ObjectObjectOpenHashMap
argument_list|<
name|String
argument_list|,
name|InternalDateHistogram
operator|.
name|Bucket
argument_list|>
name|bucketsMap
decl_stmt|;
DECL|method|InternalDateHistogram
name|InternalDateHistogram
parameter_list|()
block|{}
comment|// for serialization
DECL|method|InternalDateHistogram
name|InternalDateHistogram
parameter_list|(
name|String
name|name
parameter_list|,
name|List
argument_list|<
name|InternalDateHistogram
operator|.
name|Bucket
argument_list|>
name|buckets
parameter_list|,
name|InternalOrder
name|order
parameter_list|,
name|long
name|minDocCount
parameter_list|,
name|EmptyBucketInfo
name|emptyBucketInfo
parameter_list|,
name|ValueFormatter
name|formatter
parameter_list|,
name|boolean
name|keyed
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
name|buckets
argument_list|,
name|order
argument_list|,
name|minDocCount
argument_list|,
name|emptyBucketInfo
argument_list|,
name|formatter
argument_list|,
name|keyed
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|type
specifier|public
name|Type
name|type
parameter_list|()
block|{
return|return
name|TYPE
return|;
block|}
annotation|@
name|Override
DECL|method|getBucketByKey
specifier|public
name|Bucket
name|getBucketByKey
parameter_list|(
name|String
name|key
parameter_list|)
block|{
try|try
block|{
name|long
name|time
init|=
name|Long
operator|.
name|parseLong
argument_list|(
name|key
argument_list|)
decl_stmt|;
return|return
name|super
operator|.
name|getBucketByKey
argument_list|(
name|time
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|nfe
parameter_list|)
block|{
comment|// it's not a number, so lets try to parse it as a date using the formatter.
block|}
if|if
condition|(
name|bucketsMap
operator|==
literal|null
condition|)
block|{
name|bucketsMap
operator|=
operator|new
name|ObjectObjectOpenHashMap
argument_list|<>
argument_list|()
expr_stmt|;
for|for
control|(
name|InternalDateHistogram
operator|.
name|Bucket
name|bucket
range|:
name|buckets
control|)
block|{
name|bucketsMap
operator|.
name|put
argument_list|(
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucket
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|bucketsMap
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getBucketByKey
specifier|public
name|DateHistogram
operator|.
name|Bucket
name|getBucketByKey
parameter_list|(
name|DateTime
name|key
parameter_list|)
block|{
return|return
name|getBucketByKey
argument_list|(
name|key
operator|.
name|getMillis
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createBucket
specifier|protected
name|InternalDateHistogram
operator|.
name|Bucket
name|createBucket
parameter_list|(
name|long
name|key
parameter_list|,
name|long
name|docCount
parameter_list|,
name|InternalAggregations
name|aggregations
parameter_list|,
name|ValueFormatter
name|formatter
parameter_list|)
block|{
return|return
operator|new
name|Bucket
argument_list|(
name|key
argument_list|,
name|docCount
argument_list|,
name|aggregations
argument_list|,
name|formatter
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|bucketsMap
operator|=
literal|null
expr_stmt|;
comment|// we need to reset this on read (as it's lazily created on demand)
block|}
block|}
end_class

end_unit

