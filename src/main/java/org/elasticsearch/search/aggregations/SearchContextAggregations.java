begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|support
operator|.
name|AggregationContext
import|;
end_import

begin_comment
comment|/**  * The aggregation context that is part of the search context.  */
end_comment

begin_class
DECL|class|SearchContextAggregations
specifier|public
class|class
name|SearchContextAggregations
block|{
DECL|field|factories
specifier|private
specifier|final
name|AggregatorFactories
name|factories
decl_stmt|;
DECL|field|aggregators
specifier|private
name|Aggregator
index|[]
name|aggregators
decl_stmt|;
DECL|field|aggregationContext
specifier|private
name|AggregationContext
name|aggregationContext
decl_stmt|;
comment|/**      * Creates a new aggregation context with the parsed aggregator factories      */
DECL|method|SearchContextAggregations
specifier|public
name|SearchContextAggregations
parameter_list|(
name|AggregatorFactories
name|factories
parameter_list|)
block|{
name|this
operator|.
name|factories
operator|=
name|factories
expr_stmt|;
block|}
DECL|method|factories
specifier|public
name|AggregatorFactories
name|factories
parameter_list|()
block|{
return|return
name|factories
return|;
block|}
DECL|method|aggregators
specifier|public
name|Aggregator
index|[]
name|aggregators
parameter_list|()
block|{
return|return
name|aggregators
return|;
block|}
DECL|method|aggregationContext
specifier|public
name|AggregationContext
name|aggregationContext
parameter_list|()
block|{
return|return
name|aggregationContext
return|;
block|}
DECL|method|aggregationContext
specifier|public
name|void
name|aggregationContext
parameter_list|(
name|AggregationContext
name|aggregationContext
parameter_list|)
block|{
name|this
operator|.
name|aggregationContext
operator|=
name|aggregationContext
expr_stmt|;
block|}
comment|/**      * Registers all the created aggregators (top level aggregators) for the search execution context.      *      * @param aggregators The top level aggregators of the search execution.      */
DECL|method|aggregators
specifier|public
name|void
name|aggregators
parameter_list|(
name|Aggregator
index|[]
name|aggregators
parameter_list|)
block|{
name|this
operator|.
name|aggregators
operator|=
name|aggregators
expr_stmt|;
block|}
block|}
end_class

end_unit

