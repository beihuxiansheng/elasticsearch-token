begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.internal
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|hppc
operator|.
name|IntObjectOpenHashMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterators
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilderString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchHit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchHits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchShardTarget
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|IdentityHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchShardTarget
operator|.
name|readSearchShardTarget
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|InternalSearchHit
operator|.
name|readSearchHit
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|InternalSearchHits
specifier|public
class|class
name|InternalSearchHits
implements|implements
name|SearchHits
block|{
DECL|class|StreamContext
specifier|public
specifier|static
class|class
name|StreamContext
block|{
DECL|enum|ShardTargetType
specifier|public
specifier|static
enum|enum
name|ShardTargetType
block|{
DECL|enum constant|STREAM
name|STREAM
block|,
DECL|enum constant|LOOKUP
name|LOOKUP
block|,
DECL|enum constant|NO_STREAM
name|NO_STREAM
block|}
DECL|field|shardHandleLookup
specifier|private
name|IdentityHashMap
argument_list|<
name|SearchShardTarget
argument_list|,
name|Integer
argument_list|>
name|shardHandleLookup
init|=
operator|new
name|IdentityHashMap
argument_list|<
name|SearchShardTarget
argument_list|,
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|handleShardLookup
specifier|private
name|IntObjectOpenHashMap
argument_list|<
name|SearchShardTarget
argument_list|>
name|handleShardLookup
init|=
operator|new
name|IntObjectOpenHashMap
argument_list|<
name|SearchShardTarget
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|streamShardTarget
specifier|private
name|ShardTargetType
name|streamShardTarget
init|=
name|ShardTargetType
operator|.
name|STREAM
decl_stmt|;
DECL|method|reset
specifier|public
name|StreamContext
name|reset
parameter_list|()
block|{
name|shardHandleLookup
operator|.
name|clear
argument_list|()
expr_stmt|;
name|handleShardLookup
operator|.
name|clear
argument_list|()
expr_stmt|;
name|streamShardTarget
operator|=
name|ShardTargetType
operator|.
name|STREAM
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|shardHandleLookup
specifier|public
name|IdentityHashMap
argument_list|<
name|SearchShardTarget
argument_list|,
name|Integer
argument_list|>
name|shardHandleLookup
parameter_list|()
block|{
return|return
name|shardHandleLookup
return|;
block|}
DECL|method|handleShardLookup
specifier|public
name|IntObjectOpenHashMap
argument_list|<
name|SearchShardTarget
argument_list|>
name|handleShardLookup
parameter_list|()
block|{
return|return
name|handleShardLookup
return|;
block|}
DECL|method|streamShardTarget
specifier|public
name|ShardTargetType
name|streamShardTarget
parameter_list|()
block|{
return|return
name|streamShardTarget
return|;
block|}
DECL|method|streamShardTarget
specifier|public
name|StreamContext
name|streamShardTarget
parameter_list|(
name|ShardTargetType
name|streamShardTarget
parameter_list|)
block|{
name|this
operator|.
name|streamShardTarget
operator|=
name|streamShardTarget
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
DECL|field|cache
specifier|private
specifier|static
specifier|final
name|ThreadLocal
argument_list|<
name|StreamContext
argument_list|>
name|cache
init|=
operator|new
name|ThreadLocal
argument_list|<
name|StreamContext
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|StreamContext
name|initialValue
parameter_list|()
block|{
return|return
operator|new
name|StreamContext
argument_list|()
return|;
block|}
block|}
decl_stmt|;
DECL|method|streamContext
specifier|public
specifier|static
name|StreamContext
name|streamContext
parameter_list|()
block|{
return|return
name|cache
operator|.
name|get
argument_list|()
operator|.
name|reset
argument_list|()
return|;
block|}
DECL|field|EMPTY
specifier|public
specifier|static
specifier|final
name|InternalSearchHit
index|[]
name|EMPTY
init|=
operator|new
name|InternalSearchHit
index|[
literal|0
index|]
decl_stmt|;
DECL|field|hits
specifier|private
name|InternalSearchHit
index|[]
name|hits
decl_stmt|;
DECL|field|totalHits
specifier|public
name|long
name|totalHits
decl_stmt|;
DECL|field|maxScore
specifier|private
name|float
name|maxScore
decl_stmt|;
DECL|method|InternalSearchHits
name|InternalSearchHits
parameter_list|()
block|{      }
DECL|method|InternalSearchHits
specifier|public
name|InternalSearchHits
parameter_list|(
name|InternalSearchHit
index|[]
name|hits
parameter_list|,
name|long
name|totalHits
parameter_list|,
name|float
name|maxScore
parameter_list|)
block|{
name|this
operator|.
name|hits
operator|=
name|hits
expr_stmt|;
name|this
operator|.
name|totalHits
operator|=
name|totalHits
expr_stmt|;
name|this
operator|.
name|maxScore
operator|=
name|maxScore
expr_stmt|;
block|}
DECL|method|shardTarget
specifier|public
name|void
name|shardTarget
parameter_list|(
name|SearchShardTarget
name|shardTarget
parameter_list|)
block|{
for|for
control|(
name|InternalSearchHit
name|hit
range|:
name|hits
control|)
block|{
name|hit
operator|.
name|shardTarget
argument_list|(
name|shardTarget
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|totalHits
specifier|public
name|long
name|totalHits
parameter_list|()
block|{
return|return
name|totalHits
return|;
block|}
annotation|@
name|Override
DECL|method|getTotalHits
specifier|public
name|long
name|getTotalHits
parameter_list|()
block|{
return|return
name|totalHits
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|maxScore
specifier|public
name|float
name|maxScore
parameter_list|()
block|{
return|return
name|this
operator|.
name|maxScore
return|;
block|}
annotation|@
name|Override
DECL|method|getMaxScore
specifier|public
name|float
name|getMaxScore
parameter_list|()
block|{
return|return
name|maxScore
argument_list|()
return|;
block|}
DECL|method|hits
specifier|public
name|SearchHit
index|[]
name|hits
parameter_list|()
block|{
return|return
name|this
operator|.
name|hits
return|;
block|}
annotation|@
name|Override
DECL|method|getAt
specifier|public
name|SearchHit
name|getAt
parameter_list|(
name|int
name|position
parameter_list|)
block|{
return|return
name|hits
index|[
name|position
index|]
return|;
block|}
annotation|@
name|Override
DECL|method|getHits
specifier|public
name|SearchHit
index|[]
name|getHits
parameter_list|()
block|{
return|return
name|hits
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|iterator
specifier|public
name|Iterator
argument_list|<
name|SearchHit
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
name|Iterators
operator|.
name|forArray
argument_list|(
name|hits
argument_list|()
argument_list|)
return|;
block|}
DECL|method|internalHits
specifier|public
name|InternalSearchHit
index|[]
name|internalHits
parameter_list|()
block|{
return|return
name|this
operator|.
name|hits
return|;
block|}
DECL|class|Fields
specifier|static
specifier|final
class|class
name|Fields
block|{
DECL|field|HITS
specifier|static
specifier|final
name|XContentBuilderString
name|HITS
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"hits"
argument_list|)
decl_stmt|;
DECL|field|TOTAL
specifier|static
specifier|final
name|XContentBuilderString
name|TOTAL
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"total"
argument_list|)
decl_stmt|;
DECL|field|MAX_SCORE
specifier|static
specifier|final
name|XContentBuilderString
name|MAX_SCORE
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"max_score"
argument_list|)
decl_stmt|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|Fields
operator|.
name|HITS
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|TOTAL
argument_list|,
name|totalHits
argument_list|)
expr_stmt|;
if|if
condition|(
name|Float
operator|.
name|isNaN
argument_list|(
name|maxScore
argument_list|)
condition|)
block|{
name|builder
operator|.
name|nullField
argument_list|(
name|Fields
operator|.
name|MAX_SCORE
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|MAX_SCORE
argument_list|,
name|maxScore
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|HITS
argument_list|)
expr_stmt|;
name|builder
operator|.
name|startArray
argument_list|()
expr_stmt|;
for|for
control|(
name|SearchHit
name|hit
range|:
name|hits
control|)
block|{
name|hit
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endArray
argument_list|()
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|builder
return|;
block|}
DECL|method|readSearchHits
specifier|public
specifier|static
name|InternalSearchHits
name|readSearchHits
parameter_list|(
name|StreamInput
name|in
parameter_list|,
name|StreamContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|InternalSearchHits
name|hits
init|=
operator|new
name|InternalSearchHits
argument_list|()
decl_stmt|;
name|hits
operator|.
name|readFrom
argument_list|(
name|in
argument_list|,
name|context
argument_list|)
expr_stmt|;
return|return
name|hits
return|;
block|}
DECL|method|readSearchHits
specifier|public
specifier|static
name|InternalSearchHits
name|readSearchHits
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|InternalSearchHits
name|hits
init|=
operator|new
name|InternalSearchHits
argument_list|()
decl_stmt|;
name|hits
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|hits
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|readFrom
argument_list|(
name|in
argument_list|,
name|streamContext
argument_list|()
operator|.
name|streamShardTarget
argument_list|(
name|StreamContext
operator|.
name|ShardTargetType
operator|.
name|LOOKUP
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|,
name|StreamContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|totalHits
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|maxScore
operator|=
name|in
operator|.
name|readFloat
argument_list|()
expr_stmt|;
name|int
name|size
init|=
name|in
operator|.
name|readVInt
argument_list|()
decl_stmt|;
if|if
condition|(
name|size
operator|==
literal|0
condition|)
block|{
name|hits
operator|=
name|EMPTY
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|context
operator|.
name|streamShardTarget
argument_list|()
operator|==
name|StreamContext
operator|.
name|ShardTargetType
operator|.
name|LOOKUP
condition|)
block|{
comment|// read the lookup table first
name|int
name|lookupSize
init|=
name|in
operator|.
name|readVInt
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|lookupSize
condition|;
name|i
operator|++
control|)
block|{
name|context
operator|.
name|handleShardLookup
argument_list|()
operator|.
name|put
argument_list|(
name|in
operator|.
name|readVInt
argument_list|()
argument_list|,
name|readSearchShardTarget
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|hits
operator|=
operator|new
name|InternalSearchHit
index|[
name|size
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|hits
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|hits
index|[
name|i
index|]
operator|=
name|readSearchHit
argument_list|(
name|in
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|writeTo
argument_list|(
name|out
argument_list|,
name|streamContext
argument_list|()
operator|.
name|streamShardTarget
argument_list|(
name|StreamContext
operator|.
name|ShardTargetType
operator|.
name|LOOKUP
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|,
name|StreamContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVLong
argument_list|(
name|totalHits
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeFloat
argument_list|(
name|maxScore
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVInt
argument_list|(
name|hits
operator|.
name|length
argument_list|)
expr_stmt|;
if|if
condition|(
name|hits
operator|.
name|length
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|context
operator|.
name|streamShardTarget
argument_list|()
operator|==
name|StreamContext
operator|.
name|ShardTargetType
operator|.
name|LOOKUP
condition|)
block|{
comment|// start from 1, 0 is for null!
name|int
name|counter
init|=
literal|1
decl_stmt|;
for|for
control|(
name|InternalSearchHit
name|hit
range|:
name|hits
control|)
block|{
if|if
condition|(
name|hit
operator|.
name|shard
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Integer
name|handle
init|=
name|context
operator|.
name|shardHandleLookup
argument_list|()
operator|.
name|get
argument_list|(
name|hit
operator|.
name|shard
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|handle
operator|==
literal|null
condition|)
block|{
name|context
operator|.
name|shardHandleLookup
argument_list|()
operator|.
name|put
argument_list|(
name|hit
operator|.
name|shard
argument_list|()
argument_list|,
name|counter
operator|++
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|out
operator|.
name|writeVInt
argument_list|(
name|context
operator|.
name|shardHandleLookup
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|context
operator|.
name|shardHandleLookup
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|SearchShardTarget
argument_list|,
name|Integer
argument_list|>
name|entry
range|:
name|context
operator|.
name|shardHandleLookup
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|out
operator|.
name|writeVInt
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
block|}
for|for
control|(
name|InternalSearchHit
name|hit
range|:
name|hits
control|)
block|{
name|hit
operator|.
name|writeTo
argument_list|(
name|out
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

