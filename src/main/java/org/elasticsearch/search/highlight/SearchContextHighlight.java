begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.highlight
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|highlight
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|SearchContextHighlight
specifier|public
class|class
name|SearchContextHighlight
block|{
DECL|field|fields
specifier|private
specifier|final
name|List
argument_list|<
name|Field
argument_list|>
name|fields
decl_stmt|;
DECL|method|SearchContextHighlight
specifier|public
name|SearchContextHighlight
parameter_list|(
name|List
argument_list|<
name|Field
argument_list|>
name|fields
parameter_list|)
block|{
name|this
operator|.
name|fields
operator|=
name|fields
expr_stmt|;
block|}
DECL|method|fields
specifier|public
name|List
argument_list|<
name|Field
argument_list|>
name|fields
parameter_list|()
block|{
return|return
name|fields
return|;
block|}
DECL|class|Field
specifier|public
specifier|static
class|class
name|Field
block|{
DECL|field|field
specifier|private
specifier|final
name|String
name|field
decl_stmt|;
DECL|field|fragmentCharSize
specifier|private
name|int
name|fragmentCharSize
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|numberOfFragments
specifier|private
name|int
name|numberOfFragments
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|fragmentOffset
specifier|private
name|int
name|fragmentOffset
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|encoder
specifier|private
name|String
name|encoder
decl_stmt|;
DECL|field|preTags
specifier|private
name|String
index|[]
name|preTags
decl_stmt|;
DECL|field|postTags
specifier|private
name|String
index|[]
name|postTags
decl_stmt|;
DECL|field|scoreOrdered
specifier|private
name|Boolean
name|scoreOrdered
decl_stmt|;
DECL|field|highlightFilter
specifier|private
name|Boolean
name|highlightFilter
decl_stmt|;
DECL|method|Field
specifier|public
name|Field
parameter_list|(
name|String
name|field
parameter_list|)
block|{
name|this
operator|.
name|field
operator|=
name|field
expr_stmt|;
block|}
DECL|method|field
specifier|public
name|String
name|field
parameter_list|()
block|{
return|return
name|field
return|;
block|}
DECL|method|fragmentCharSize
specifier|public
name|int
name|fragmentCharSize
parameter_list|()
block|{
return|return
name|fragmentCharSize
return|;
block|}
DECL|method|fragmentCharSize
specifier|public
name|void
name|fragmentCharSize
parameter_list|(
name|int
name|fragmentCharSize
parameter_list|)
block|{
name|this
operator|.
name|fragmentCharSize
operator|=
name|fragmentCharSize
expr_stmt|;
block|}
DECL|method|numberOfFragments
specifier|public
name|int
name|numberOfFragments
parameter_list|()
block|{
return|return
name|numberOfFragments
return|;
block|}
DECL|method|numberOfFragments
specifier|public
name|void
name|numberOfFragments
parameter_list|(
name|int
name|numberOfFragments
parameter_list|)
block|{
name|this
operator|.
name|numberOfFragments
operator|=
name|numberOfFragments
expr_stmt|;
block|}
DECL|method|fragmentOffset
specifier|public
name|int
name|fragmentOffset
parameter_list|()
block|{
return|return
name|fragmentOffset
return|;
block|}
DECL|method|fragmentOffset
specifier|public
name|void
name|fragmentOffset
parameter_list|(
name|int
name|fragmentOffset
parameter_list|)
block|{
name|this
operator|.
name|fragmentOffset
operator|=
name|fragmentOffset
expr_stmt|;
block|}
DECL|method|encoder
specifier|public
name|String
name|encoder
parameter_list|()
block|{
return|return
name|encoder
return|;
block|}
DECL|method|encoder
specifier|public
name|void
name|encoder
parameter_list|(
name|String
name|encoder
parameter_list|)
block|{
name|this
operator|.
name|encoder
operator|=
name|encoder
expr_stmt|;
block|}
DECL|method|preTags
specifier|public
name|String
index|[]
name|preTags
parameter_list|()
block|{
return|return
name|preTags
return|;
block|}
DECL|method|preTags
specifier|public
name|void
name|preTags
parameter_list|(
name|String
index|[]
name|preTags
parameter_list|)
block|{
name|this
operator|.
name|preTags
operator|=
name|preTags
expr_stmt|;
block|}
DECL|method|postTags
specifier|public
name|String
index|[]
name|postTags
parameter_list|()
block|{
return|return
name|postTags
return|;
block|}
DECL|method|postTags
specifier|public
name|void
name|postTags
parameter_list|(
name|String
index|[]
name|postTags
parameter_list|)
block|{
name|this
operator|.
name|postTags
operator|=
name|postTags
expr_stmt|;
block|}
DECL|method|scoreOrdered
specifier|public
name|Boolean
name|scoreOrdered
parameter_list|()
block|{
return|return
name|scoreOrdered
return|;
block|}
DECL|method|scoreOrdered
specifier|public
name|void
name|scoreOrdered
parameter_list|(
name|boolean
name|scoreOrdered
parameter_list|)
block|{
name|this
operator|.
name|scoreOrdered
operator|=
name|scoreOrdered
expr_stmt|;
block|}
DECL|method|highlightFilter
specifier|public
name|Boolean
name|highlightFilter
parameter_list|()
block|{
return|return
name|highlightFilter
return|;
block|}
DECL|method|highlightFilter
specifier|public
name|void
name|highlightFilter
parameter_list|(
name|boolean
name|highlightFilter
parameter_list|)
block|{
name|this
operator|.
name|highlightFilter
operator|=
name|highlightFilter
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

