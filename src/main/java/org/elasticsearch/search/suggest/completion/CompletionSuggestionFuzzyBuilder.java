begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.suggest.completion
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|analyzing
operator|.
name|XFuzzySuggester
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|SuggestBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|CompletionSuggestionFuzzyBuilder
specifier|public
class|class
name|CompletionSuggestionFuzzyBuilder
extends|extends
name|SuggestBuilder
operator|.
name|SuggestionBuilder
argument_list|<
name|CompletionSuggestionFuzzyBuilder
argument_list|>
block|{
DECL|method|CompletionSuggestionFuzzyBuilder
specifier|public
name|CompletionSuggestionFuzzyBuilder
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
literal|"completion"
argument_list|)
expr_stmt|;
block|}
DECL|field|fuzzyEditDistance
specifier|private
name|int
name|fuzzyEditDistance
init|=
name|XFuzzySuggester
operator|.
name|DEFAULT_MAX_EDITS
decl_stmt|;
DECL|field|fuzzyTranspositions
specifier|private
name|boolean
name|fuzzyTranspositions
init|=
name|XFuzzySuggester
operator|.
name|DEFAULT_TRANSPOSITIONS
decl_stmt|;
DECL|field|fuzzyMinPrefixLength
specifier|private
name|int
name|fuzzyMinPrefixLength
init|=
name|XFuzzySuggester
operator|.
name|DEFAULT_MIN_FUZZY_LENGTH
decl_stmt|;
DECL|field|fuzzyNonPrefixLength
specifier|private
name|int
name|fuzzyNonPrefixLength
init|=
name|XFuzzySuggester
operator|.
name|DEFAULT_NON_FUZZY_PREFIX
decl_stmt|;
DECL|method|getFuzzyEditDistance
specifier|public
name|int
name|getFuzzyEditDistance
parameter_list|()
block|{
return|return
name|fuzzyEditDistance
return|;
block|}
DECL|method|setFuzzyEditDistance
specifier|public
name|CompletionSuggestionFuzzyBuilder
name|setFuzzyEditDistance
parameter_list|(
name|int
name|fuzzyEditDistance
parameter_list|)
block|{
name|this
operator|.
name|fuzzyEditDistance
operator|=
name|fuzzyEditDistance
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|isFuzzyTranspositions
specifier|public
name|boolean
name|isFuzzyTranspositions
parameter_list|()
block|{
return|return
name|fuzzyTranspositions
return|;
block|}
DECL|method|setFuzzyTranspositions
specifier|public
name|CompletionSuggestionFuzzyBuilder
name|setFuzzyTranspositions
parameter_list|(
name|boolean
name|fuzzyTranspositions
parameter_list|)
block|{
name|this
operator|.
name|fuzzyTranspositions
operator|=
name|fuzzyTranspositions
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|getFuzzyMinPrefixLength
specifier|public
name|int
name|getFuzzyMinPrefixLength
parameter_list|()
block|{
return|return
name|fuzzyMinPrefixLength
return|;
block|}
DECL|method|setFuzzyMinPrefixLength
specifier|public
name|CompletionSuggestionFuzzyBuilder
name|setFuzzyMinPrefixLength
parameter_list|(
name|int
name|fuzzyMinPrefixLength
parameter_list|)
block|{
name|this
operator|.
name|fuzzyMinPrefixLength
operator|=
name|fuzzyMinPrefixLength
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|getFuzzyNonPrefixLength
specifier|public
name|int
name|getFuzzyNonPrefixLength
parameter_list|()
block|{
return|return
name|fuzzyNonPrefixLength
return|;
block|}
DECL|method|setFuzzyNonPrefixLength
specifier|public
name|CompletionSuggestionFuzzyBuilder
name|setFuzzyNonPrefixLength
parameter_list|(
name|int
name|fuzzyNonPrefixLength
parameter_list|)
block|{
name|this
operator|.
name|fuzzyNonPrefixLength
operator|=
name|fuzzyNonPrefixLength
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|innerToXContent
specifier|protected
name|XContentBuilder
name|innerToXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|ToXContent
operator|.
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|(
literal|"fuzzy"
argument_list|)
expr_stmt|;
if|if
condition|(
name|fuzzyEditDistance
operator|!=
name|XFuzzySuggester
operator|.
name|DEFAULT_MAX_EDITS
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
literal|"edit_distance"
argument_list|,
name|fuzzyEditDistance
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fuzzyTranspositions
operator|!=
name|XFuzzySuggester
operator|.
name|DEFAULT_TRANSPOSITIONS
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
literal|"transpositions"
argument_list|,
name|fuzzyTranspositions
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fuzzyMinPrefixLength
operator|!=
name|XFuzzySuggester
operator|.
name|DEFAULT_MIN_FUZZY_LENGTH
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
literal|"min_prefix_len"
argument_list|,
name|fuzzyMinPrefixLength
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fuzzyNonPrefixLength
operator|!=
name|XFuzzySuggester
operator|.
name|DEFAULT_NON_FUZZY_PREFIX
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
literal|"non_prefix_len"
argument_list|,
name|fuzzyNonPrefixLength
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|builder
return|;
block|}
block|}
end_class

end_unit

