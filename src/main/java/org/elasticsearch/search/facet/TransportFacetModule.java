begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.facet
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|datehistogram
operator|.
name|InternalDateHistogramFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|filter
operator|.
name|InternalFilterFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|geodistance
operator|.
name|InternalGeoDistanceFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|histogram
operator|.
name|InternalHistogramFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|query
operator|.
name|InternalQueryFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|range
operator|.
name|InternalRangeFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|statistical
operator|.
name|InternalStatisticalFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|terms
operator|.
name|InternalTermsFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|termsstats
operator|.
name|InternalTermsStatsFacet
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|TransportFacetModule
specifier|public
class|class
name|TransportFacetModule
extends|extends
name|AbstractModule
block|{
annotation|@
name|Override
DECL|method|configure
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|InternalFilterFacet
operator|.
name|registerStreams
argument_list|()
expr_stmt|;
name|InternalQueryFacet
operator|.
name|registerStreams
argument_list|()
expr_stmt|;
name|InternalGeoDistanceFacet
operator|.
name|registerStreams
argument_list|()
expr_stmt|;
name|InternalHistogramFacet
operator|.
name|registerStreams
argument_list|()
expr_stmt|;
name|InternalDateHistogramFacet
operator|.
name|registerStreams
argument_list|()
expr_stmt|;
name|InternalRangeFacet
operator|.
name|registerStreams
argument_list|()
expr_stmt|;
name|InternalStatisticalFacet
operator|.
name|registerStreams
argument_list|()
expr_stmt|;
name|InternalTermsFacet
operator|.
name|registerStreams
argument_list|()
expr_stmt|;
name|InternalTermsStatsFacet
operator|.
name|registerStreams
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

