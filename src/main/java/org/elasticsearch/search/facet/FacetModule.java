begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.facet
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|multibindings
operator|.
name|Multibinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|datehistogram
operator|.
name|DateHistogramFacetParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|filter
operator|.
name|FilterFacetParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|geodistance
operator|.
name|GeoDistanceFacetParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|histogram
operator|.
name|HistogramFacetParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|query
operator|.
name|QueryFacetParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|range
operator|.
name|RangeFacetParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|statistical
operator|.
name|StatisticalFacetParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|terms
operator|.
name|TermsFacetParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|facet
operator|.
name|termsstats
operator|.
name|TermsStatsFacetParser
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|FacetModule
specifier|public
class|class
name|FacetModule
extends|extends
name|AbstractModule
block|{
DECL|field|processors
specifier|private
name|List
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|FacetParser
argument_list|>
argument_list|>
name|processors
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
DECL|method|FacetModule
specifier|public
name|FacetModule
parameter_list|()
block|{
name|processors
operator|.
name|add
argument_list|(
name|FilterFacetParser
operator|.
name|class
argument_list|)
expr_stmt|;
name|processors
operator|.
name|add
argument_list|(
name|QueryFacetParser
operator|.
name|class
argument_list|)
expr_stmt|;
name|processors
operator|.
name|add
argument_list|(
name|GeoDistanceFacetParser
operator|.
name|class
argument_list|)
expr_stmt|;
name|processors
operator|.
name|add
argument_list|(
name|HistogramFacetParser
operator|.
name|class
argument_list|)
expr_stmt|;
name|processors
operator|.
name|add
argument_list|(
name|DateHistogramFacetParser
operator|.
name|class
argument_list|)
expr_stmt|;
name|processors
operator|.
name|add
argument_list|(
name|RangeFacetParser
operator|.
name|class
argument_list|)
expr_stmt|;
name|processors
operator|.
name|add
argument_list|(
name|StatisticalFacetParser
operator|.
name|class
argument_list|)
expr_stmt|;
name|processors
operator|.
name|add
argument_list|(
name|TermsFacetParser
operator|.
name|class
argument_list|)
expr_stmt|;
name|processors
operator|.
name|add
argument_list|(
name|TermsStatsFacetParser
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|addFacetProcessor
specifier|public
name|void
name|addFacetProcessor
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|FacetParser
argument_list|>
name|facetProcessor
parameter_list|)
block|{
name|processors
operator|.
name|add
argument_list|(
name|facetProcessor
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|configure
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|Multibinder
argument_list|<
name|FacetParser
argument_list|>
name|multibinder
init|=
name|Multibinder
operator|.
name|newSetBinder
argument_list|(
name|binder
argument_list|()
argument_list|,
name|FacetParser
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|Class
argument_list|<
name|?
extends|extends
name|FacetParser
argument_list|>
name|processor
range|:
name|processors
control|)
block|{
name|multibinder
operator|.
name|addBinding
argument_list|()
operator|.
name|to
argument_list|(
name|processor
argument_list|)
expr_stmt|;
block|}
name|bind
argument_list|(
name|FacetParsers
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
name|bind
argument_list|(
name|FacetParseElement
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
name|bind
argument_list|(
name|FacetPhase
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

