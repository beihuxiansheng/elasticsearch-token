begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.get
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|get
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilderString
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|GetStats
specifier|public
class|class
name|GetStats
implements|implements
name|Streamable
implements|,
name|ToXContent
block|{
DECL|field|existsCount
specifier|private
name|long
name|existsCount
decl_stmt|;
DECL|field|existsTimeInMillis
specifier|private
name|long
name|existsTimeInMillis
decl_stmt|;
DECL|field|missingCount
specifier|private
name|long
name|missingCount
decl_stmt|;
DECL|field|missingTimeInMillis
specifier|private
name|long
name|missingTimeInMillis
decl_stmt|;
DECL|field|current
specifier|private
name|long
name|current
decl_stmt|;
DECL|method|GetStats
specifier|public
name|GetStats
parameter_list|()
block|{     }
DECL|method|GetStats
specifier|public
name|GetStats
parameter_list|(
name|long
name|existsCount
parameter_list|,
name|long
name|existsTimeInMillis
parameter_list|,
name|long
name|missingCount
parameter_list|,
name|long
name|missingTimeInMillis
parameter_list|,
name|long
name|current
parameter_list|)
block|{
name|this
operator|.
name|existsCount
operator|=
name|existsCount
expr_stmt|;
name|this
operator|.
name|existsTimeInMillis
operator|=
name|existsTimeInMillis
expr_stmt|;
name|this
operator|.
name|missingCount
operator|=
name|missingCount
expr_stmt|;
name|this
operator|.
name|missingTimeInMillis
operator|=
name|missingTimeInMillis
expr_stmt|;
name|this
operator|.
name|current
operator|=
name|current
expr_stmt|;
block|}
DECL|method|add
specifier|public
name|void
name|add
parameter_list|(
name|GetStats
name|stats
parameter_list|)
block|{
if|if
condition|(
name|stats
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|existsCount
operator|+=
name|stats
operator|.
name|existsCount
expr_stmt|;
name|existsTimeInMillis
operator|+=
name|stats
operator|.
name|existsTimeInMillis
expr_stmt|;
name|missingCount
operator|+=
name|stats
operator|.
name|missingCount
expr_stmt|;
name|missingTimeInMillis
operator|+=
name|stats
operator|.
name|missingTimeInMillis
expr_stmt|;
name|current
operator|+=
name|stats
operator|.
name|current
expr_stmt|;
block|}
DECL|method|getCount
specifier|public
name|long
name|getCount
parameter_list|()
block|{
return|return
name|existsCount
operator|+
name|missingCount
return|;
block|}
DECL|method|getTimeInMillis
specifier|public
name|long
name|getTimeInMillis
parameter_list|()
block|{
return|return
name|existsTimeInMillis
operator|+
name|missingTimeInMillis
return|;
block|}
DECL|method|getTime
specifier|public
name|TimeValue
name|getTime
parameter_list|()
block|{
return|return
operator|new
name|TimeValue
argument_list|(
name|getTimeInMillis
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getExistsCount
specifier|public
name|long
name|getExistsCount
parameter_list|()
block|{
return|return
name|this
operator|.
name|existsCount
return|;
block|}
DECL|method|getExistsTimeInMillis
specifier|public
name|long
name|getExistsTimeInMillis
parameter_list|()
block|{
return|return
name|this
operator|.
name|existsTimeInMillis
return|;
block|}
DECL|method|getExistsTime
specifier|public
name|TimeValue
name|getExistsTime
parameter_list|()
block|{
return|return
operator|new
name|TimeValue
argument_list|(
name|existsTimeInMillis
argument_list|)
return|;
block|}
DECL|method|getMissingCount
specifier|public
name|long
name|getMissingCount
parameter_list|()
block|{
return|return
name|this
operator|.
name|missingCount
return|;
block|}
DECL|method|getMissingTimeInMillis
specifier|public
name|long
name|getMissingTimeInMillis
parameter_list|()
block|{
return|return
name|this
operator|.
name|missingTimeInMillis
return|;
block|}
DECL|method|getMissingTime
specifier|public
name|TimeValue
name|getMissingTime
parameter_list|()
block|{
return|return
operator|new
name|TimeValue
argument_list|(
name|missingTimeInMillis
argument_list|)
return|;
block|}
DECL|method|current
specifier|public
name|long
name|current
parameter_list|()
block|{
return|return
name|this
operator|.
name|current
return|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|Fields
operator|.
name|GET
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|TOTAL
argument_list|,
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|timeValueField
argument_list|(
name|Fields
operator|.
name|TIME_IN_MILLIS
argument_list|,
name|Fields
operator|.
name|TIME
argument_list|,
name|getTimeInMillis
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|EXISTS_TOTAL
argument_list|,
name|existsCount
argument_list|)
expr_stmt|;
name|builder
operator|.
name|timeValueField
argument_list|(
name|Fields
operator|.
name|EXISTS_TIME_IN_MILLIS
argument_list|,
name|Fields
operator|.
name|EXISTS_TIME
argument_list|,
name|existsTimeInMillis
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|MISSING_TOTAL
argument_list|,
name|missingCount
argument_list|)
expr_stmt|;
name|builder
operator|.
name|timeValueField
argument_list|(
name|Fields
operator|.
name|MISSING_TIME_IN_MILLIS
argument_list|,
name|Fields
operator|.
name|MISSING_TIME
argument_list|,
name|missingTimeInMillis
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|CURRENT
argument_list|,
name|current
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|builder
return|;
block|}
DECL|class|Fields
specifier|static
specifier|final
class|class
name|Fields
block|{
DECL|field|GET
specifier|static
specifier|final
name|XContentBuilderString
name|GET
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"get"
argument_list|)
decl_stmt|;
DECL|field|TOTAL
specifier|static
specifier|final
name|XContentBuilderString
name|TOTAL
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"total"
argument_list|)
decl_stmt|;
DECL|field|TIME
specifier|static
specifier|final
name|XContentBuilderString
name|TIME
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"getTime"
argument_list|)
decl_stmt|;
DECL|field|TIME_IN_MILLIS
specifier|static
specifier|final
name|XContentBuilderString
name|TIME_IN_MILLIS
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"time_in_millis"
argument_list|)
decl_stmt|;
DECL|field|EXISTS_TOTAL
specifier|static
specifier|final
name|XContentBuilderString
name|EXISTS_TOTAL
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"exists_total"
argument_list|)
decl_stmt|;
DECL|field|EXISTS_TIME
specifier|static
specifier|final
name|XContentBuilderString
name|EXISTS_TIME
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"exists_time"
argument_list|)
decl_stmt|;
DECL|field|EXISTS_TIME_IN_MILLIS
specifier|static
specifier|final
name|XContentBuilderString
name|EXISTS_TIME_IN_MILLIS
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"exists_time_in_millis"
argument_list|)
decl_stmt|;
DECL|field|MISSING_TOTAL
specifier|static
specifier|final
name|XContentBuilderString
name|MISSING_TOTAL
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"missing_total"
argument_list|)
decl_stmt|;
DECL|field|MISSING_TIME
specifier|static
specifier|final
name|XContentBuilderString
name|MISSING_TIME
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"missing_time"
argument_list|)
decl_stmt|;
DECL|field|MISSING_TIME_IN_MILLIS
specifier|static
specifier|final
name|XContentBuilderString
name|MISSING_TIME_IN_MILLIS
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"missing_time_in_millis"
argument_list|)
decl_stmt|;
DECL|field|CURRENT
specifier|static
specifier|final
name|XContentBuilderString
name|CURRENT
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"current"
argument_list|)
decl_stmt|;
block|}
DECL|method|readGetStats
specifier|public
specifier|static
name|GetStats
name|readGetStats
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|GetStats
name|stats
init|=
operator|new
name|GetStats
argument_list|()
decl_stmt|;
name|stats
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|stats
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|existsCount
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|existsTimeInMillis
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|missingCount
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|missingTimeInMillis
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|current
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVLong
argument_list|(
name|existsCount
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|existsTimeInMillis
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|missingCount
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|missingTimeInMillis
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|current
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

