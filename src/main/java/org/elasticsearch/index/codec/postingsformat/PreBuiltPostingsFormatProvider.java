begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.codec.postingsformat
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|codec
operator|.
name|postingsformat
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|PostingsFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|PreBuiltPostingsFormatProvider
specifier|public
class|class
name|PreBuiltPostingsFormatProvider
implements|implements
name|PostingsFormatProvider
block|{
DECL|class|Factory
specifier|public
specifier|static
specifier|final
class|class
name|Factory
implements|implements
name|PostingsFormatProvider
operator|.
name|Factory
block|{
DECL|field|provider
specifier|private
specifier|final
name|PreBuiltPostingsFormatProvider
name|provider
decl_stmt|;
DECL|method|Factory
specifier|public
name|Factory
parameter_list|(
name|PostingsFormat
name|postingsFormat
parameter_list|)
block|{
name|this
argument_list|(
name|postingsFormat
operator|.
name|getName
argument_list|()
argument_list|,
name|postingsFormat
argument_list|)
expr_stmt|;
block|}
DECL|method|Factory
specifier|public
name|Factory
parameter_list|(
name|String
name|name
parameter_list|,
name|PostingsFormat
name|postingsFormat
parameter_list|)
block|{
name|this
operator|.
name|provider
operator|=
operator|new
name|PreBuiltPostingsFormatProvider
argument_list|(
name|name
argument_list|,
name|postingsFormat
argument_list|)
expr_stmt|;
block|}
DECL|method|get
specifier|public
name|PostingsFormatProvider
name|get
parameter_list|()
block|{
return|return
name|provider
return|;
block|}
annotation|@
name|Override
DECL|method|create
specifier|public
name|PostingsFormatProvider
name|create
parameter_list|(
name|String
name|name
parameter_list|,
name|Settings
name|settings
parameter_list|)
block|{
return|return
name|provider
return|;
block|}
DECL|method|name
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
name|provider
operator|.
name|name
argument_list|()
return|;
block|}
block|}
DECL|field|name
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|postingsFormat
specifier|private
specifier|final
name|PostingsFormat
name|postingsFormat
decl_stmt|;
DECL|method|PreBuiltPostingsFormatProvider
specifier|public
name|PreBuiltPostingsFormatProvider
parameter_list|(
name|PostingsFormat
name|postingsFormat
parameter_list|)
block|{
name|this
argument_list|(
name|postingsFormat
operator|.
name|getName
argument_list|()
argument_list|,
name|postingsFormat
argument_list|)
expr_stmt|;
block|}
DECL|method|PreBuiltPostingsFormatProvider
specifier|public
name|PreBuiltPostingsFormatProvider
parameter_list|(
name|String
name|name
parameter_list|,
name|PostingsFormat
name|postingsFormat
parameter_list|)
block|{
if|if
condition|(
name|postingsFormat
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"PostingsFormat must not be null"
argument_list|)
throw|;
block|}
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|postingsFormat
operator|=
name|postingsFormat
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|name
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
name|name
return|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|PostingsFormat
name|get
parameter_list|()
block|{
return|return
name|postingsFormat
return|;
block|}
block|}
end_class

end_unit

