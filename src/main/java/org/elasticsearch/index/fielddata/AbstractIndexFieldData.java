begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.index.fielddata
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|AtomicReaderContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticSearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|AbstractIndexComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|FieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|settings
operator|.
name|IndexSettings
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|AbstractIndexFieldData
specifier|public
specifier|abstract
class|class
name|AbstractIndexFieldData
parameter_list|<
name|FD
extends|extends
name|AtomicFieldData
parameter_list|>
extends|extends
name|AbstractIndexComponent
implements|implements
name|IndexFieldData
argument_list|<
name|FD
argument_list|>
block|{
DECL|field|fieldNames
specifier|private
specifier|final
name|FieldMapper
operator|.
name|Names
name|fieldNames
decl_stmt|;
DECL|field|highestUniqueValuesCount
specifier|private
specifier|final
name|AtomicLong
name|highestUniqueValuesCount
init|=
operator|new
name|AtomicLong
argument_list|()
decl_stmt|;
DECL|field|fieldDataType
specifier|protected
specifier|final
name|FieldDataType
name|fieldDataType
decl_stmt|;
DECL|field|cache
specifier|protected
specifier|final
name|IndexFieldDataCache
name|cache
decl_stmt|;
DECL|method|AbstractIndexFieldData
specifier|public
name|AbstractIndexFieldData
parameter_list|(
name|Index
name|index
parameter_list|,
annotation|@
name|IndexSettings
name|Settings
name|indexSettings
parameter_list|,
name|FieldMapper
operator|.
name|Names
name|fieldNames
parameter_list|,
name|FieldDataType
name|fieldDataType
parameter_list|,
name|IndexFieldDataCache
name|cache
parameter_list|)
block|{
name|super
argument_list|(
name|index
argument_list|,
name|indexSettings
argument_list|)
expr_stmt|;
name|this
operator|.
name|fieldNames
operator|=
name|fieldNames
expr_stmt|;
name|this
operator|.
name|fieldDataType
operator|=
name|fieldDataType
expr_stmt|;
name|this
operator|.
name|cache
operator|=
name|cache
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getFieldNames
specifier|public
name|FieldMapper
operator|.
name|Names
name|getFieldNames
parameter_list|()
block|{
return|return
name|this
operator|.
name|fieldNames
return|;
block|}
annotation|@
name|Override
DECL|method|clear
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|cache
operator|.
name|clear
argument_list|(
name|fieldNames
operator|.
name|indexName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|clear
specifier|public
name|void
name|clear
parameter_list|(
name|IndexReader
name|reader
parameter_list|)
block|{
name|cache
operator|.
name|clear
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getHighestNumberOfSeenUniqueValues
specifier|public
name|long
name|getHighestNumberOfSeenUniqueValues
parameter_list|()
block|{
return|return
name|highestUniqueValuesCount
operator|.
name|get
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|load
specifier|public
specifier|final
name|FD
name|load
parameter_list|(
name|AtomicReaderContext
name|context
parameter_list|)
block|{
try|try
block|{
name|FD
name|fd
init|=
name|cache
operator|.
name|load
argument_list|(
name|context
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|updateHighestSeenValuesCount
argument_list|(
name|fd
operator|.
name|getNumberUniqueValues
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|fd
return|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|instanceof
name|ElasticSearchException
condition|)
block|{
throw|throw
operator|(
name|ElasticSearchException
operator|)
name|e
throw|;
block|}
else|else
block|{
throw|throw
operator|new
name|ElasticSearchException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|method|updateHighestSeenValuesCount
specifier|private
name|void
name|updateHighestSeenValuesCount
parameter_list|(
name|long
name|newValuesCount
parameter_list|)
block|{
name|long
name|current
decl_stmt|;
do|do
block|{
if|if
condition|(
operator|(
name|current
operator|=
name|highestUniqueValuesCount
operator|.
name|get
argument_list|()
operator|)
operator|>=
name|newValuesCount
condition|)
block|{
break|break;
block|}
block|}
do|while
condition|(
operator|!
name|highestUniqueValuesCount
operator|.
name|compareAndSet
argument_list|(
name|current
argument_list|,
name|newValuesCount
argument_list|)
condition|)
do|;
block|}
block|}
end_class

end_unit

