begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.fielddata.fieldcomparator
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|fieldcomparator
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|AtomicReaderContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|NumericDocValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SortedNumericDocValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|FieldComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|IndexNumericFieldData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|MultiValueMode
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|LongValuesComparatorBase
specifier|abstract
class|class
name|LongValuesComparatorBase
parameter_list|<
name|T
extends|extends
name|Number
parameter_list|>
extends|extends
name|NumberComparatorBase
argument_list|<
name|T
argument_list|>
block|{
DECL|field|indexFieldData
specifier|protected
specifier|final
name|IndexNumericFieldData
name|indexFieldData
decl_stmt|;
DECL|field|missingValue
specifier|protected
specifier|final
name|long
name|missingValue
decl_stmt|;
DECL|field|bottom
specifier|protected
name|long
name|bottom
decl_stmt|;
DECL|field|readerValues
specifier|protected
name|NumericDocValues
name|readerValues
decl_stmt|;
DECL|field|sortMode
specifier|protected
specifier|final
name|MultiValueMode
name|sortMode
decl_stmt|;
DECL|method|LongValuesComparatorBase
specifier|public
name|LongValuesComparatorBase
parameter_list|(
name|IndexNumericFieldData
name|indexFieldData
parameter_list|,
name|long
name|missingValue
parameter_list|,
name|MultiValueMode
name|sortMode
parameter_list|)
block|{
name|this
operator|.
name|indexFieldData
operator|=
name|indexFieldData
expr_stmt|;
name|this
operator|.
name|missingValue
operator|=
name|missingValue
expr_stmt|;
name|this
operator|.
name|sortMode
operator|=
name|sortMode
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|compareBottom
specifier|public
specifier|final
name|int
name|compareBottom
parameter_list|(
name|int
name|doc
parameter_list|)
throws|throws
name|IOException
block|{
name|long
name|v2
init|=
name|readerValues
operator|.
name|get
argument_list|(
name|doc
argument_list|)
decl_stmt|;
return|return
name|Long
operator|.
name|compare
argument_list|(
name|bottom
argument_list|,
name|v2
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|compareTop
specifier|public
name|int
name|compareTop
parameter_list|(
name|int
name|doc
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|Long
operator|.
name|compare
argument_list|(
name|top
operator|.
name|longValue
argument_list|()
argument_list|,
name|readerValues
operator|.
name|get
argument_list|(
name|doc
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setNextReader
specifier|public
specifier|final
name|FieldComparator
argument_list|<
name|T
argument_list|>
name|setNextReader
parameter_list|(
name|AtomicReaderContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|SortedNumericDocValues
name|readerValues
init|=
name|indexFieldData
operator|.
name|load
argument_list|(
name|context
argument_list|)
operator|.
name|getLongValues
argument_list|()
decl_stmt|;
name|this
operator|.
name|readerValues
operator|=
name|sortMode
operator|.
name|select
argument_list|(
name|readerValues
argument_list|,
name|missingValue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|compareBottomMissing
specifier|public
name|int
name|compareBottomMissing
parameter_list|()
block|{
return|return
name|Long
operator|.
name|compare
argument_list|(
name|bottom
argument_list|,
name|missingValue
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|compareTopMissing
specifier|public
name|int
name|compareTopMissing
parameter_list|()
block|{
return|return
name|Long
operator|.
name|compare
argument_list|(
name|top
operator|.
name|longValue
argument_list|()
argument_list|,
name|missingValue
argument_list|)
return|;
block|}
block|}
end_class

end_unit

