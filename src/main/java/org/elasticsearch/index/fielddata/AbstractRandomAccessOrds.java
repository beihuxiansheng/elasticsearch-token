begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.fielddata
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|RandomAccessOrds
import|;
end_import

begin_comment
comment|/**  * Base implementation of a {@link RandomAccessOrds} instance.  */
end_comment

begin_class
DECL|class|AbstractRandomAccessOrds
specifier|public
specifier|abstract
class|class
name|AbstractRandomAccessOrds
extends|extends
name|RandomAccessOrds
block|{
DECL|field|i
name|int
name|i
init|=
literal|0
decl_stmt|;
DECL|method|doSetDocument
specifier|protected
specifier|abstract
name|void
name|doSetDocument
parameter_list|(
name|int
name|docID
parameter_list|)
function_decl|;
annotation|@
name|Override
DECL|method|setDocument
specifier|public
specifier|final
name|void
name|setDocument
parameter_list|(
name|int
name|docID
parameter_list|)
block|{
name|doSetDocument
argument_list|(
name|docID
argument_list|)
expr_stmt|;
name|i
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|nextOrd
specifier|public
name|long
name|nextOrd
parameter_list|()
block|{
return|return
name|ordAt
argument_list|(
name|i
operator|++
argument_list|)
return|;
block|}
block|}
end_class

end_unit

