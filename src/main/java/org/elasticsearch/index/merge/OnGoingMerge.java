begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.merge
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|merge
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|MergePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentInfoPerCommit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Represents a single on going merge within an index.  */
end_comment

begin_class
DECL|class|OnGoingMerge
specifier|public
class|class
name|OnGoingMerge
block|{
DECL|field|id
specifier|private
specifier|final
name|String
name|id
decl_stmt|;
DECL|field|mergedSegments
specifier|private
specifier|final
name|List
argument_list|<
name|SegmentInfoPerCommit
argument_list|>
name|mergedSegments
decl_stmt|;
DECL|method|OnGoingMerge
specifier|public
name|OnGoingMerge
parameter_list|(
name|MergePolicy
operator|.
name|OneMerge
name|merge
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|Integer
operator|.
name|toString
argument_list|(
name|System
operator|.
name|identityHashCode
argument_list|(
name|merge
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|mergedSegments
operator|=
name|merge
operator|.
name|segments
expr_stmt|;
block|}
comment|/**      * A unique id for the merge.      */
DECL|method|getId
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
comment|/**      * The list of segments that are being merged.      */
DECL|method|getMergedSegments
specifier|public
name|List
argument_list|<
name|SegmentInfoPerCommit
argument_list|>
name|getMergedSegments
parameter_list|()
block|{
return|return
name|mergedSegments
return|;
block|}
block|}
end_class

end_unit

