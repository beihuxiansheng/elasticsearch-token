begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.analysis
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
package|;
end_package

begin_import
import|import
name|com
operator|.
name|ibm
operator|.
name|icu
operator|.
name|text
operator|.
name|Transliterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|TokenStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|icu
operator|.
name|ICUTransformFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|assistedinject
operator|.
name|Assisted
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|settings
operator|.
name|IndexSettings
import|;
end_import

begin_comment
comment|/**  * @author joergprante  */
end_comment

begin_class
DECL|class|IcuTransformTokenFilterFactory
specifier|public
class|class
name|IcuTransformTokenFilterFactory
extends|extends
name|AbstractTokenFilterFactory
block|{
DECL|field|id
specifier|private
specifier|final
name|String
name|id
decl_stmt|;
DECL|field|dir
specifier|private
specifier|final
name|int
name|dir
decl_stmt|;
DECL|field|transliterator
specifier|private
specifier|final
name|Transliterator
name|transliterator
decl_stmt|;
annotation|@
name|Inject
DECL|method|IcuTransformTokenFilterFactory
specifier|public
name|IcuTransformTokenFilterFactory
parameter_list|(
name|Index
name|index
parameter_list|,
annotation|@
name|IndexSettings
name|Settings
name|indexSettings
parameter_list|,
annotation|@
name|Assisted
name|String
name|name
parameter_list|,
annotation|@
name|Assisted
name|Settings
name|settings
parameter_list|)
block|{
name|super
argument_list|(
name|index
argument_list|,
name|indexSettings
argument_list|,
name|name
argument_list|,
name|settings
argument_list|)
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|settings
operator|.
name|get
argument_list|(
literal|"id"
argument_list|,
literal|"Null"
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|settings
operator|.
name|get
argument_list|(
literal|"dir"
argument_list|,
literal|"forward"
argument_list|)
decl_stmt|;
name|this
operator|.
name|dir
operator|=
literal|"forward"
operator|.
name|equals
argument_list|(
name|s
argument_list|)
condition|?
name|Transliterator
operator|.
name|FORWARD
else|:
name|Transliterator
operator|.
name|REVERSE
expr_stmt|;
name|this
operator|.
name|transliterator
operator|=
name|Transliterator
operator|.
name|getInstance
argument_list|(
name|id
argument_list|,
name|dir
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|create
specifier|public
name|TokenStream
name|create
parameter_list|(
name|TokenStream
name|tokenStream
parameter_list|)
block|{
return|return
operator|new
name|ICUTransformFilter
argument_list|(
name|tokenStream
argument_list|,
name|transliterator
argument_list|)
return|;
block|}
block|}
end_class

end_unit

