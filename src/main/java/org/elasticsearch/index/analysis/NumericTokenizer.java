begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.analysis
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|NumericTokenStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|Tokenizer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|NumericTokenizer
specifier|public
specifier|abstract
class|class
name|NumericTokenizer
extends|extends
name|Tokenizer
block|{
DECL|field|numericTokenStream
specifier|private
specifier|final
name|NumericTokenStream
name|numericTokenStream
decl_stmt|;
DECL|field|buffer
specifier|private
specifier|final
name|char
index|[]
name|buffer
decl_stmt|;
DECL|field|extra
specifier|protected
specifier|final
name|Object
name|extra
decl_stmt|;
DECL|method|NumericTokenizer
specifier|protected
name|NumericTokenizer
parameter_list|(
name|Reader
name|reader
parameter_list|,
name|NumericTokenStream
name|numericTokenStream
parameter_list|,
name|Object
name|extra
parameter_list|)
throws|throws
name|IOException
block|{
name|this
argument_list|(
name|reader
argument_list|,
name|numericTokenStream
argument_list|,
operator|new
name|char
index|[
literal|32
index|]
argument_list|,
name|extra
argument_list|)
expr_stmt|;
block|}
DECL|method|NumericTokenizer
specifier|protected
name|NumericTokenizer
parameter_list|(
name|Reader
name|reader
parameter_list|,
name|NumericTokenStream
name|numericTokenStream
parameter_list|,
name|char
index|[]
name|buffer
parameter_list|,
name|Object
name|extra
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|reader
argument_list|)
expr_stmt|;
name|this
operator|.
name|numericTokenStream
operator|=
name|numericTokenStream
expr_stmt|;
name|this
operator|.
name|extra
operator|=
name|extra
expr_stmt|;
name|this
operator|.
name|buffer
operator|=
name|buffer
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|reset
specifier|public
name|void
name|reset
parameter_list|()
throws|throws
name|IOException
block|{
name|reset
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
DECL|method|reset
specifier|public
name|void
name|reset
parameter_list|(
name|char
index|[]
name|buffer
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|len
init|=
name|input
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
decl_stmt|;
name|String
name|value
init|=
operator|new
name|String
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|len
argument_list|)
decl_stmt|;
name|setValue
argument_list|(
name|numericTokenStream
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|numericTokenStream
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|incrementToken
specifier|public
specifier|final
name|boolean
name|incrementToken
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|numericTokenStream
operator|.
name|incrementToken
argument_list|()
return|;
block|}
DECL|method|setValue
specifier|protected
specifier|abstract
name|void
name|setValue
parameter_list|(
name|NumericTokenStream
name|tokenStream
parameter_list|,
name|String
name|value
parameter_list|)
function_decl|;
block|}
end_class

end_unit

