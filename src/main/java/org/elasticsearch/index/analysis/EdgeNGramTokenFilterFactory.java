begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.analysis
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|TokenStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|ngram
operator|.
name|EdgeNGramTokenFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|ngram
operator|.
name|EdgeNGramTokenFilter
operator|.
name|Side
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|ngram
operator|.
name|Lucene43EdgeNGramTokenizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|ngram
operator|.
name|NGramTokenFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|reverse
operator|.
name|ReverseStringFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|assistedinject
operator|.
name|Assisted
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|settings
operator|.
name|IndexSettings
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|EdgeNGramTokenFilterFactory
specifier|public
class|class
name|EdgeNGramTokenFilterFactory
extends|extends
name|AbstractTokenFilterFactory
block|{
DECL|field|minGram
specifier|private
specifier|final
name|int
name|minGram
decl_stmt|;
DECL|field|maxGram
specifier|private
specifier|final
name|int
name|maxGram
decl_stmt|;
DECL|field|side
specifier|private
specifier|final
name|EdgeNGramTokenFilter
operator|.
name|Side
name|side
decl_stmt|;
DECL|field|esVersion
specifier|private
name|org
operator|.
name|elasticsearch
operator|.
name|Version
name|esVersion
decl_stmt|;
annotation|@
name|Inject
DECL|method|EdgeNGramTokenFilterFactory
specifier|public
name|EdgeNGramTokenFilterFactory
parameter_list|(
name|Index
name|index
parameter_list|,
annotation|@
name|IndexSettings
name|Settings
name|indexSettings
parameter_list|,
annotation|@
name|Assisted
name|String
name|name
parameter_list|,
annotation|@
name|Assisted
name|Settings
name|settings
parameter_list|)
block|{
name|super
argument_list|(
name|index
argument_list|,
name|indexSettings
argument_list|,
name|name
argument_list|,
name|settings
argument_list|)
expr_stmt|;
name|this
operator|.
name|minGram
operator|=
name|settings
operator|.
name|getAsInt
argument_list|(
literal|"min_gram"
argument_list|,
name|NGramTokenFilter
operator|.
name|DEFAULT_MIN_NGRAM_SIZE
argument_list|)
expr_stmt|;
name|this
operator|.
name|maxGram
operator|=
name|settings
operator|.
name|getAsInt
argument_list|(
literal|"max_gram"
argument_list|,
name|NGramTokenFilter
operator|.
name|DEFAULT_MAX_NGRAM_SIZE
argument_list|)
expr_stmt|;
name|this
operator|.
name|side
operator|=
name|EdgeNGramTokenFilter
operator|.
name|Side
operator|.
name|getSide
argument_list|(
name|settings
operator|.
name|get
argument_list|(
literal|"side"
argument_list|,
name|Lucene43EdgeNGramTokenizer
operator|.
name|DEFAULT_SIDE
operator|.
name|getLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|esVersion
operator|=
name|org
operator|.
name|elasticsearch
operator|.
name|Version
operator|.
name|indexCreated
argument_list|(
name|indexSettings
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|create
specifier|public
name|TokenStream
name|create
parameter_list|(
name|TokenStream
name|tokenStream
parameter_list|)
block|{
if|if
condition|(
name|version
operator|.
name|onOrAfter
argument_list|(
name|Version
operator|.
name|LUCENE_43
argument_list|)
operator|&&
name|esVersion
operator|.
name|onOrAfter
argument_list|(
name|org
operator|.
name|elasticsearch
operator|.
name|Version
operator|.
name|V_0_90_2
argument_list|)
condition|)
block|{
comment|/*              * We added this in 0.90.2 but 0.90.1 used LUCENE_43 already so we can not rely on the lucene version.              * Yet if somebody uses 0.90.2 or higher with a prev. lucene version we should also use the deprecated version.              */
specifier|final
name|Version
name|version
init|=
name|this
operator|.
name|version
operator|==
name|Version
operator|.
name|LUCENE_43
condition|?
name|Version
operator|.
name|LUCENE_44
else|:
name|this
operator|.
name|version
decl_stmt|;
comment|// always use 4.4 or higher
name|TokenStream
name|result
init|=
name|tokenStream
decl_stmt|;
comment|// side=BACK is not supported anymore but applying ReverseStringFilter up-front and after the token filter has the same effect
if|if
condition|(
name|side
operator|==
name|Side
operator|.
name|BACK
condition|)
block|{
name|result
operator|=
operator|new
name|ReverseStringFilter
argument_list|(
name|version
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
operator|new
name|EdgeNGramTokenFilter
argument_list|(
name|version
argument_list|,
name|result
argument_list|,
name|minGram
argument_list|,
name|maxGram
argument_list|)
expr_stmt|;
if|if
condition|(
name|side
operator|==
name|Side
operator|.
name|BACK
condition|)
block|{
name|result
operator|=
operator|new
name|ReverseStringFilter
argument_list|(
name|version
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
return|return
operator|new
name|EdgeNGramTokenFilter
argument_list|(
name|version
argument_list|,
name|tokenStream
argument_list|,
name|side
argument_list|,
name|minGram
argument_list|,
name|maxGram
argument_list|)
return|;
block|}
block|}
end_class

end_unit

