begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.translog
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|Channels
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ReleasableLock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_class
DECL|class|SimpleTranslogFile
specifier|public
specifier|final
class|class
name|SimpleTranslogFile
extends|extends
name|TranslogFile
block|{
DECL|field|operationCounter
specifier|private
specifier|volatile
name|int
name|operationCounter
init|=
literal|0
decl_stmt|;
DECL|field|lastPosition
specifier|private
specifier|volatile
name|long
name|lastPosition
init|=
literal|0
decl_stmt|;
DECL|field|lastWrittenPosition
specifier|private
specifier|volatile
name|long
name|lastWrittenPosition
init|=
literal|0
decl_stmt|;
DECL|field|lastSyncPosition
specifier|private
specifier|volatile
name|long
name|lastSyncPosition
init|=
literal|0
decl_stmt|;
DECL|method|SimpleTranslogFile
specifier|public
name|SimpleTranslogFile
parameter_list|(
name|ShardId
name|shardId
parameter_list|,
name|long
name|id
parameter_list|,
name|ChannelReference
name|channelReference
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|shardId
argument_list|,
name|id
argument_list|,
name|channelReference
argument_list|)
expr_stmt|;
name|int
name|headerSize
init|=
name|this
operator|.
name|channelReference
operator|.
name|stream
argument_list|()
operator|.
name|writeHeader
argument_list|(
name|channelReference
operator|.
name|channel
argument_list|()
argument_list|)
decl_stmt|;
name|this
operator|.
name|lastPosition
operator|+=
name|headerSize
expr_stmt|;
name|this
operator|.
name|lastWrittenPosition
operator|+=
name|headerSize
expr_stmt|;
name|this
operator|.
name|lastSyncPosition
operator|+=
name|headerSize
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|totalOperations
specifier|public
name|int
name|totalOperations
parameter_list|()
block|{
return|return
name|operationCounter
return|;
block|}
annotation|@
name|Override
DECL|method|sizeInBytes
specifier|public
name|long
name|sizeInBytes
parameter_list|()
block|{
return|return
name|lastWrittenPosition
return|;
block|}
annotation|@
name|Override
DECL|method|add
specifier|public
name|Translog
operator|.
name|Location
name|add
parameter_list|(
name|BytesReference
name|data
parameter_list|)
throws|throws
name|IOException
block|{
try|try
init|(
name|ReleasableLock
name|lock
init|=
name|writeLock
operator|.
name|acquire
argument_list|()
init|)
block|{
name|long
name|position
init|=
name|lastPosition
decl_stmt|;
name|data
operator|.
name|writeTo
argument_list|(
name|channelReference
operator|.
name|channel
argument_list|()
argument_list|)
expr_stmt|;
name|lastPosition
operator|=
name|lastPosition
operator|+
name|data
operator|.
name|length
argument_list|()
expr_stmt|;
name|lastWrittenPosition
operator|=
name|lastWrittenPosition
operator|+
name|data
operator|.
name|length
argument_list|()
expr_stmt|;
name|operationCounter
operator|=
name|operationCounter
operator|+
literal|1
expr_stmt|;
return|return
operator|new
name|Translog
operator|.
name|Location
argument_list|(
name|id
argument_list|,
name|position
argument_list|,
name|data
operator|.
name|length
argument_list|()
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|readBytes
specifier|protected
name|void
name|readBytes
parameter_list|(
name|ByteBuffer
name|buffer
parameter_list|,
name|long
name|position
parameter_list|)
throws|throws
name|IOException
block|{
try|try
init|(
name|ReleasableLock
name|lock
init|=
name|readLock
operator|.
name|acquire
argument_list|()
init|)
block|{
name|Channels
operator|.
name|readFromFileChannelWithEofException
argument_list|(
name|channelReference
operator|.
name|channel
argument_list|()
argument_list|,
name|position
argument_list|,
name|buffer
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|doClose
specifier|public
name|void
name|doClose
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|sync
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|super
operator|.
name|doClose
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|immutableReader
specifier|public
name|ChannelImmutableReader
name|immutableReader
parameter_list|()
throws|throws
name|TranslogException
block|{
if|if
condition|(
name|channelReference
operator|.
name|tryIncRef
argument_list|()
condition|)
block|{
try|try
init|(
name|ReleasableLock
name|lock
init|=
name|writeLock
operator|.
name|acquire
argument_list|()
init|)
block|{
name|ChannelImmutableReader
name|reader
init|=
operator|new
name|ChannelImmutableReader
argument_list|(
name|this
operator|.
name|id
argument_list|,
name|channelReference
argument_list|,
name|lastWrittenPosition
argument_list|,
name|operationCounter
argument_list|)
decl_stmt|;
name|channelReference
operator|.
name|incRef
argument_list|()
expr_stmt|;
comment|// for the new object
return|return
name|reader
return|;
block|}
finally|finally
block|{
name|channelReference
operator|.
name|decRef
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
throw|throw
operator|new
name|TranslogException
argument_list|(
name|shardId
argument_list|,
literal|"can't increment channel ["
operator|+
name|channelReference
operator|+
literal|"] channel ref count"
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|syncNeeded
specifier|public
name|boolean
name|syncNeeded
parameter_list|()
block|{
return|return
name|lastWrittenPosition
operator|!=
name|lastSyncPosition
return|;
block|}
annotation|@
name|Override
DECL|method|sync
specifier|public
name|void
name|sync
parameter_list|()
throws|throws
name|IOException
block|{
comment|// check if we really need to sync here...
if|if
condition|(
operator|!
name|syncNeeded
argument_list|()
condition|)
block|{
return|return;
block|}
try|try
init|(
name|ReleasableLock
name|lock
init|=
name|writeLock
operator|.
name|acquire
argument_list|()
init|)
block|{
name|lastSyncPosition
operator|=
name|lastWrittenPosition
expr_stmt|;
name|channelReference
operator|.
name|channel
argument_list|()
operator|.
name|force
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|reuse
specifier|public
name|void
name|reuse
parameter_list|(
name|TranslogFile
name|other
parameter_list|)
block|{
comment|// nothing to do there
block|}
annotation|@
name|Override
DECL|method|updateBufferSize
specifier|public
name|void
name|updateBufferSize
parameter_list|(
name|int
name|bufferSize
parameter_list|)
throws|throws
name|TranslogException
block|{
comment|// nothing to do here...
block|}
block|}
end_class

end_unit

