begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.translog
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilderString
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|TranslogStats
specifier|public
class|class
name|TranslogStats
implements|implements
name|ToXContent
implements|,
name|Streamable
block|{
DECL|field|translogSizeInBytes
specifier|private
name|long
name|translogSizeInBytes
init|=
literal|0
decl_stmt|;
DECL|field|estimatedNumberOfOperations
specifier|private
name|int
name|estimatedNumberOfOperations
init|=
literal|0
decl_stmt|;
DECL|method|TranslogStats
specifier|public
name|TranslogStats
parameter_list|()
block|{}
DECL|method|TranslogStats
specifier|public
name|TranslogStats
parameter_list|(
name|int
name|estimatedNumberOfOperations
parameter_list|,
name|long
name|translogSizeInBytes
parameter_list|)
block|{
name|this
operator|.
name|estimatedNumberOfOperations
operator|=
name|estimatedNumberOfOperations
expr_stmt|;
name|this
operator|.
name|translogSizeInBytes
operator|=
name|translogSizeInBytes
expr_stmt|;
block|}
DECL|method|add
specifier|public
name|void
name|add
parameter_list|(
name|TranslogStats
name|translogStats
parameter_list|)
block|{
if|if
condition|(
name|translogStats
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|this
operator|.
name|estimatedNumberOfOperations
operator|+=
name|translogStats
operator|.
name|estimatedNumberOfOperations
expr_stmt|;
name|this
operator|.
name|translogSizeInBytes
operator|=
operator|+
name|translogStats
operator|.
name|translogSizeInBytes
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|Fields
operator|.
name|TRANSLOG
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|OPERATIONS
argument_list|,
name|estimatedNumberOfOperations
argument_list|)
expr_stmt|;
name|builder
operator|.
name|byteSizeField
argument_list|(
name|Fields
operator|.
name|SIZE_IN_BYTES
argument_list|,
name|Fields
operator|.
name|SIZE
argument_list|,
name|translogSizeInBytes
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|builder
return|;
block|}
DECL|class|Fields
specifier|static
specifier|final
class|class
name|Fields
block|{
DECL|field|TRANSLOG
specifier|static
specifier|final
name|XContentBuilderString
name|TRANSLOG
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"translog"
argument_list|)
decl_stmt|;
DECL|field|OPERATIONS
specifier|static
specifier|final
name|XContentBuilderString
name|OPERATIONS
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"operations"
argument_list|)
decl_stmt|;
DECL|field|SIZE
specifier|static
specifier|final
name|XContentBuilderString
name|SIZE
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"size"
argument_list|)
decl_stmt|;
DECL|field|SIZE_IN_BYTES
specifier|static
specifier|final
name|XContentBuilderString
name|SIZE_IN_BYTES
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"size_in_bytes"
argument_list|)
decl_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|estimatedNumberOfOperations
operator|=
name|in
operator|.
name|readVInt
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVInt
argument_list|(
name|estimatedNumberOfOperations
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

