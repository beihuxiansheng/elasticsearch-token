begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.index.query
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
package|;
end_package

begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|shape
operator|.
name|Shape
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|GeoJSONShapeSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|ShapeRelation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * {@link FilterBuilder} that builds a GeoShape Filter  */
end_comment

begin_class
DECL|class|GeoShapeFilterBuilder
specifier|public
class|class
name|GeoShapeFilterBuilder
extends|extends
name|BaseFilterBuilder
block|{
DECL|field|name
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|relation
specifier|private
name|ShapeRelation
name|relation
init|=
name|ShapeRelation
operator|.
name|INTERSECTS
decl_stmt|;
DECL|field|shape
specifier|private
specifier|final
name|Shape
name|shape
decl_stmt|;
DECL|field|cache
specifier|private
name|Boolean
name|cache
decl_stmt|;
DECL|field|cacheKey
specifier|private
name|String
name|cacheKey
decl_stmt|;
DECL|field|filterName
specifier|private
name|String
name|filterName
decl_stmt|;
comment|/**      * Creates a new GeoShapeFilterBuilder whose Filter will be against the      * given field name      *      * @param name Name of the field that will be filtered      * @param shape Shape used in the filter      */
DECL|method|GeoShapeFilterBuilder
specifier|public
name|GeoShapeFilterBuilder
parameter_list|(
name|String
name|name
parameter_list|,
name|Shape
name|shape
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|shape
operator|=
name|shape
expr_stmt|;
block|}
comment|/**      * Sets the {@link ShapeRelation} that defines how the Shape used in the      * Filter must relate to indexed Shapes      *      * @param relation ShapeRelation used in the filter      * @return this      */
DECL|method|relation
specifier|public
name|GeoShapeFilterBuilder
name|relation
parameter_list|(
name|ShapeRelation
name|relation
parameter_list|)
block|{
name|this
operator|.
name|relation
operator|=
name|relation
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets whether the filter will be cached.      *      * @param cache Whether filter will be cached      * @return this      */
DECL|method|cache
specifier|public
name|GeoShapeFilterBuilder
name|cache
parameter_list|(
name|boolean
name|cache
parameter_list|)
block|{
name|this
operator|.
name|cache
operator|=
name|cache
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets the key used for the filter if it is cached      *      * @param cacheKey Key for the Filter if cached      * @return this      */
DECL|method|cacheKey
specifier|public
name|GeoShapeFilterBuilder
name|cacheKey
parameter_list|(
name|String
name|cacheKey
parameter_list|)
block|{
name|this
operator|.
name|cacheKey
operator|=
name|cacheKey
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets the name of the filter      *      * @param filterName Name of the filter      * @return this      */
DECL|method|filterName
specifier|public
name|GeoShapeFilterBuilder
name|filterName
parameter_list|(
name|String
name|filterName
parameter_list|)
block|{
name|this
operator|.
name|filterName
operator|=
name|filterName
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|doXContent
specifier|protected
name|void
name|doXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|GeoShapeFilterParser
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|builder
operator|.
name|startObject
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
literal|"relation"
argument_list|,
name|relation
operator|.
name|getRelationName
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|startObject
argument_list|(
literal|"shape"
argument_list|)
expr_stmt|;
name|GeoJSONShapeSerializer
operator|.
name|serialize
argument_list|(
name|shape
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
literal|"_name"
argument_list|,
name|filterName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|cache
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
literal|"_cache"
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|cacheKey
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
literal|"_cache_key"
argument_list|,
name|cacheKey
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

