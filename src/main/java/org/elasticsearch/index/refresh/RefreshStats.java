begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.refresh
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|refresh
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilderString
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|RefreshStats
specifier|public
class|class
name|RefreshStats
implements|implements
name|Streamable
implements|,
name|ToXContent
block|{
DECL|field|total
specifier|private
name|long
name|total
decl_stmt|;
DECL|field|totalTimeInMillis
specifier|private
name|long
name|totalTimeInMillis
decl_stmt|;
DECL|method|RefreshStats
specifier|public
name|RefreshStats
parameter_list|()
block|{      }
DECL|method|RefreshStats
specifier|public
name|RefreshStats
parameter_list|(
name|long
name|total
parameter_list|,
name|long
name|totalTimeInMillis
parameter_list|)
block|{
name|this
operator|.
name|total
operator|=
name|total
expr_stmt|;
name|this
operator|.
name|totalTimeInMillis
operator|=
name|totalTimeInMillis
expr_stmt|;
block|}
DECL|method|add
specifier|public
name|void
name|add
parameter_list|(
name|long
name|total
parameter_list|,
name|long
name|totalTimeInMillis
parameter_list|)
block|{
name|this
operator|.
name|total
operator|+=
name|total
expr_stmt|;
name|this
operator|.
name|totalTimeInMillis
operator|+=
name|totalTimeInMillis
expr_stmt|;
block|}
DECL|method|add
specifier|public
name|void
name|add
parameter_list|(
name|RefreshStats
name|refreshStats
parameter_list|)
block|{
if|if
condition|(
name|refreshStats
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|this
operator|.
name|total
operator|+=
name|refreshStats
operator|.
name|total
expr_stmt|;
name|this
operator|.
name|totalTimeInMillis
operator|+=
name|refreshStats
operator|.
name|totalTimeInMillis
expr_stmt|;
block|}
comment|/**      * The total number of refresh executed.      */
DECL|method|getTotal
specifier|public
name|long
name|getTotal
parameter_list|()
block|{
return|return
name|this
operator|.
name|total
return|;
block|}
comment|/**      * The total time merges have been executed (in milliseconds).      */
DECL|method|getTotalTimeInMillis
specifier|public
name|long
name|getTotalTimeInMillis
parameter_list|()
block|{
return|return
name|this
operator|.
name|totalTimeInMillis
return|;
block|}
comment|/**      * The total time merges have been executed.      */
DECL|method|getTotalTime
specifier|public
name|TimeValue
name|getTotalTime
parameter_list|()
block|{
return|return
operator|new
name|TimeValue
argument_list|(
name|totalTimeInMillis
argument_list|)
return|;
block|}
DECL|method|readRefreshStats
specifier|public
specifier|static
name|RefreshStats
name|readRefreshStats
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|RefreshStats
name|refreshStats
init|=
operator|new
name|RefreshStats
argument_list|()
decl_stmt|;
name|refreshStats
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|refreshStats
return|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|Fields
operator|.
name|REFRESH
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|TOTAL
argument_list|,
name|total
argument_list|)
expr_stmt|;
name|builder
operator|.
name|timeValueField
argument_list|(
name|Fields
operator|.
name|TOTAL_TIME_IN_MILLIS
argument_list|,
name|Fields
operator|.
name|TOTAL_TIME
argument_list|,
name|totalTimeInMillis
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|builder
return|;
block|}
DECL|class|Fields
specifier|static
specifier|final
class|class
name|Fields
block|{
DECL|field|REFRESH
specifier|static
specifier|final
name|XContentBuilderString
name|REFRESH
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"refresh"
argument_list|)
decl_stmt|;
DECL|field|TOTAL
specifier|static
specifier|final
name|XContentBuilderString
name|TOTAL
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"total"
argument_list|)
decl_stmt|;
DECL|field|TOTAL_TIME
specifier|static
specifier|final
name|XContentBuilderString
name|TOTAL_TIME
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"total_time"
argument_list|)
decl_stmt|;
DECL|field|TOTAL_TIME_IN_MILLIS
specifier|static
specifier|final
name|XContentBuilderString
name|TOTAL_TIME_IN_MILLIS
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"total_time_in_millis"
argument_list|)
decl_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|total
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|totalTimeInMillis
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVLong
argument_list|(
name|total
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|totalTimeInMillis
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

