begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.mapper
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|UnmodifiableIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|Analyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableOpenMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|collect
operator|.
name|UpdateInPlaceMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
operator|.
name|FieldNameAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|settings
operator|.
name|IndexSettings
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|DocumentFieldMappers
specifier|public
class|class
name|DocumentFieldMappers
implements|implements
name|Iterable
argument_list|<
name|FieldMapper
argument_list|>
block|{
DECL|field|docMapper
specifier|private
specifier|final
name|DocumentMapper
name|docMapper
decl_stmt|;
DECL|field|fieldMappers
specifier|private
specifier|final
name|FieldMappersLookup
name|fieldMappers
decl_stmt|;
DECL|field|indexAnalyzer
specifier|private
specifier|final
name|FieldNameAnalyzer
name|indexAnalyzer
decl_stmt|;
DECL|field|searchAnalyzer
specifier|private
specifier|final
name|FieldNameAnalyzer
name|searchAnalyzer
decl_stmt|;
DECL|field|searchQuoteAnalyzer
specifier|private
specifier|final
name|FieldNameAnalyzer
name|searchQuoteAnalyzer
decl_stmt|;
DECL|method|DocumentFieldMappers
specifier|public
name|DocumentFieldMappers
parameter_list|(
annotation|@
name|Nullable
annotation|@
name|IndexSettings
name|Settings
name|settings
parameter_list|,
name|DocumentMapper
name|docMapper
parameter_list|)
block|{
name|this
operator|.
name|docMapper
operator|=
name|docMapper
expr_stmt|;
name|this
operator|.
name|fieldMappers
operator|=
operator|new
name|FieldMappersLookup
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexAnalyzer
operator|=
operator|new
name|FieldNameAnalyzer
argument_list|(
name|UpdateInPlaceMap
operator|.
expr|<
name|String
argument_list|,
name|Analyzer
operator|>
name|of
argument_list|(
name|MapperService
operator|.
name|getFieldMappersCollectionSwitch
argument_list|(
name|settings
argument_list|)
argument_list|)
argument_list|,
name|docMapper
operator|.
name|indexAnalyzer
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|searchAnalyzer
operator|=
operator|new
name|FieldNameAnalyzer
argument_list|(
name|UpdateInPlaceMap
operator|.
expr|<
name|String
argument_list|,
name|Analyzer
operator|>
name|of
argument_list|(
name|MapperService
operator|.
name|getFieldMappersCollectionSwitch
argument_list|(
name|settings
argument_list|)
argument_list|)
argument_list|,
name|docMapper
operator|.
name|searchAnalyzer
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|searchQuoteAnalyzer
operator|=
operator|new
name|FieldNameAnalyzer
argument_list|(
name|UpdateInPlaceMap
operator|.
expr|<
name|String
argument_list|,
name|Analyzer
operator|>
name|of
argument_list|(
name|MapperService
operator|.
name|getFieldMappersCollectionSwitch
argument_list|(
name|settings
argument_list|)
argument_list|)
argument_list|,
name|docMapper
operator|.
name|searchQuotedAnalyzer
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addNewMappers
specifier|public
name|void
name|addNewMappers
parameter_list|(
name|List
argument_list|<
name|FieldMapper
argument_list|>
name|newMappers
parameter_list|)
block|{
name|fieldMappers
operator|.
name|addNewMappers
argument_list|(
name|newMappers
argument_list|)
expr_stmt|;
specifier|final
name|UpdateInPlaceMap
argument_list|<
name|String
argument_list|,
name|Analyzer
argument_list|>
operator|.
name|Mutator
name|indexAnalyzersMutator
init|=
name|this
operator|.
name|indexAnalyzer
operator|.
name|analyzers
argument_list|()
operator|.
name|mutator
argument_list|()
decl_stmt|;
specifier|final
name|UpdateInPlaceMap
argument_list|<
name|String
argument_list|,
name|Analyzer
argument_list|>
operator|.
name|Mutator
name|searchAnalyzersMutator
init|=
name|this
operator|.
name|searchAnalyzer
operator|.
name|analyzers
argument_list|()
operator|.
name|mutator
argument_list|()
decl_stmt|;
specifier|final
name|UpdateInPlaceMap
argument_list|<
name|String
argument_list|,
name|Analyzer
argument_list|>
operator|.
name|Mutator
name|searchQuoteAnalyzersMutator
init|=
name|this
operator|.
name|searchQuoteAnalyzer
operator|.
name|analyzers
argument_list|()
operator|.
name|mutator
argument_list|()
decl_stmt|;
for|for
control|(
name|FieldMapper
name|fieldMapper
range|:
name|newMappers
control|)
block|{
if|if
condition|(
name|fieldMapper
operator|.
name|indexAnalyzer
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|indexAnalyzersMutator
operator|.
name|put
argument_list|(
name|fieldMapper
operator|.
name|names
argument_list|()
operator|.
name|indexName
argument_list|()
argument_list|,
name|fieldMapper
operator|.
name|indexAnalyzer
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fieldMapper
operator|.
name|searchAnalyzer
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|searchAnalyzersMutator
operator|.
name|put
argument_list|(
name|fieldMapper
operator|.
name|names
argument_list|()
operator|.
name|indexName
argument_list|()
argument_list|,
name|fieldMapper
operator|.
name|searchAnalyzer
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fieldMapper
operator|.
name|searchQuoteAnalyzer
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|searchQuoteAnalyzersMutator
operator|.
name|put
argument_list|(
name|fieldMapper
operator|.
name|names
argument_list|()
operator|.
name|indexName
argument_list|()
argument_list|,
name|fieldMapper
operator|.
name|searchQuoteAnalyzer
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|indexAnalyzersMutator
operator|.
name|close
argument_list|()
expr_stmt|;
name|searchAnalyzersMutator
operator|.
name|close
argument_list|()
expr_stmt|;
name|searchQuoteAnalyzersMutator
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|iterator
specifier|public
name|UnmodifiableIterator
argument_list|<
name|FieldMapper
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
name|fieldMappers
operator|.
name|iterator
argument_list|()
return|;
block|}
DECL|method|mappers
specifier|public
name|List
argument_list|<
name|FieldMapper
argument_list|>
name|mappers
parameter_list|()
block|{
return|return
name|this
operator|.
name|fieldMappers
operator|.
name|mappers
argument_list|()
return|;
block|}
DECL|method|hasMapper
specifier|public
name|boolean
name|hasMapper
parameter_list|(
name|FieldMapper
name|fieldMapper
parameter_list|)
block|{
return|return
name|fieldMappers
operator|.
name|mappers
argument_list|()
operator|.
name|contains
argument_list|(
name|fieldMapper
argument_list|)
return|;
block|}
DECL|method|name
specifier|public
name|FieldMappers
name|name
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|fieldMappers
operator|.
name|name
argument_list|(
name|name
argument_list|)
return|;
block|}
DECL|method|indexName
specifier|public
name|FieldMappers
name|indexName
parameter_list|(
name|String
name|indexName
parameter_list|)
block|{
return|return
name|fieldMappers
operator|.
name|indexName
argument_list|(
name|indexName
argument_list|)
return|;
block|}
DECL|method|fullName
specifier|public
name|FieldMappers
name|fullName
parameter_list|(
name|String
name|fullName
parameter_list|)
block|{
return|return
name|fieldMappers
operator|.
name|fullName
argument_list|(
name|fullName
argument_list|)
return|;
block|}
DECL|method|simpleMatchToIndexNames
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|simpleMatchToIndexNames
parameter_list|(
name|String
name|pattern
parameter_list|)
block|{
return|return
name|fieldMappers
operator|.
name|simpleMatchToIndexNames
argument_list|(
name|pattern
argument_list|)
return|;
block|}
DECL|method|simpleMatchToFullName
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|simpleMatchToFullName
parameter_list|(
name|String
name|pattern
parameter_list|)
block|{
return|return
name|fieldMappers
operator|.
name|simpleMatchToFullName
argument_list|(
name|pattern
argument_list|)
return|;
block|}
comment|/**      * Tries to find first based on {@link #fullName(String)}, then by {@link #indexName(String)}, and last      * by {@link #name(String)}.      */
DECL|method|smartName
specifier|public
name|FieldMappers
name|smartName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|fieldMappers
operator|.
name|smartName
argument_list|(
name|name
argument_list|)
return|;
block|}
DECL|method|smartNameFieldMapper
specifier|public
name|FieldMapper
name|smartNameFieldMapper
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|fieldMappers
operator|.
name|smartNameFieldMapper
argument_list|(
name|name
argument_list|)
return|;
block|}
comment|/**      * A smart analyzer used for indexing that takes into account specific analyzers configured      * per {@link FieldMapper}.      */
DECL|method|indexAnalyzer
specifier|public
name|Analyzer
name|indexAnalyzer
parameter_list|()
block|{
return|return
name|this
operator|.
name|indexAnalyzer
return|;
block|}
comment|/**      * A smart analyzer used for indexing that takes into account specific analyzers configured      * per {@link FieldMapper} with a custom default analyzer for no explicit field analyzer.      */
DECL|method|indexAnalyzer
specifier|public
name|Analyzer
name|indexAnalyzer
parameter_list|(
name|Analyzer
name|defaultAnalyzer
parameter_list|)
block|{
return|return
operator|new
name|FieldNameAnalyzer
argument_list|(
name|indexAnalyzer
operator|.
name|analyzers
argument_list|()
argument_list|,
name|defaultAnalyzer
argument_list|)
return|;
block|}
comment|/**      * A smart analyzer used for searching that takes into account specific analyzers configured      * per {@link FieldMapper}.      */
DECL|method|searchAnalyzer
specifier|public
name|Analyzer
name|searchAnalyzer
parameter_list|()
block|{
return|return
name|this
operator|.
name|searchAnalyzer
return|;
block|}
DECL|method|searchQuoteAnalyzer
specifier|public
name|Analyzer
name|searchQuoteAnalyzer
parameter_list|()
block|{
return|return
name|this
operator|.
name|searchQuoteAnalyzer
return|;
block|}
block|}
end_class

end_unit

