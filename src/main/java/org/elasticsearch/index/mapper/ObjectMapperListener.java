begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.mapper
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|object
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|ObjectMapperListener
specifier|public
specifier|abstract
class|class
name|ObjectMapperListener
block|{
DECL|class|Aggregator
specifier|public
specifier|static
class|class
name|Aggregator
extends|extends
name|ObjectMapperListener
block|{
DECL|field|mappers
specifier|public
specifier|final
name|List
argument_list|<
name|ObjectMapper
argument_list|>
name|mappers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|objectMapper
specifier|public
name|void
name|objectMapper
parameter_list|(
name|ObjectMapper
name|objectMapper
parameter_list|)
block|{
name|mappers
operator|.
name|add
argument_list|(
name|objectMapper
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|objectMapper
specifier|public
specifier|abstract
name|void
name|objectMapper
parameter_list|(
name|ObjectMapper
name|objectMapper
parameter_list|)
function_decl|;
DECL|method|objectMappers
specifier|public
name|void
name|objectMappers
parameter_list|(
name|Collection
argument_list|<
name|ObjectMapper
argument_list|>
name|objectMappers
parameter_list|)
block|{
for|for
control|(
name|ObjectMapper
name|objectMapper
range|:
name|objectMappers
control|)
block|{
name|objectMapper
argument_list|(
name|objectMapper
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

