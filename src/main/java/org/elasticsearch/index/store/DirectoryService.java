begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.store
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|store
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|FilterDirectory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|settings
operator|.
name|IndexSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|AbstractIndexShardComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|store
operator|.
name|distributor
operator|.
name|Distributor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|DirectoryService
specifier|public
specifier|abstract
class|class
name|DirectoryService
extends|extends
name|AbstractIndexShardComponent
block|{
DECL|method|DirectoryService
specifier|protected
name|DirectoryService
parameter_list|(
name|ShardId
name|shardId
parameter_list|,
annotation|@
name|IndexSettings
name|Settings
name|indexSettings
parameter_list|)
block|{
name|super
argument_list|(
name|shardId
argument_list|,
name|indexSettings
argument_list|)
expr_stmt|;
block|}
DECL|method|build
specifier|public
specifier|abstract
name|Directory
index|[]
name|build
parameter_list|()
throws|throws
name|IOException
function_decl|;
DECL|method|throttleTimeInNanos
specifier|public
specifier|abstract
name|long
name|throttleTimeInNanos
parameter_list|()
function_decl|;
comment|/**      * Creates a new Directory from the given distributor.      * The default implementation returns a new {@link org.elasticsearch.index.store.DistributorDirectory}      * if there is more than one data path in the distributor.      */
DECL|method|newFromDistributor
specifier|public
name|Directory
name|newFromDistributor
parameter_list|(
specifier|final
name|Distributor
name|distributor
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|distributor
operator|.
name|all
argument_list|()
operator|.
name|length
operator|==
literal|1
condition|)
block|{
comment|// use filter dir for consistent toString methods
return|return
operator|new
name|FilterDirectory
argument_list|(
name|distributor
operator|.
name|primary
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|distributor
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
return|;
block|}
return|return
operator|new
name|DistributorDirectory
argument_list|(
name|distributor
argument_list|)
return|;
block|}
block|}
end_class

end_unit

