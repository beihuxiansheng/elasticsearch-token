begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.store
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|store
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|ShardLock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardPath
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|StoreModule
specifier|public
class|class
name|StoreModule
extends|extends
name|AbstractModule
block|{
DECL|field|lock
specifier|private
specifier|final
name|ShardLock
name|lock
decl_stmt|;
DECL|field|closeCallback
specifier|private
specifier|final
name|Store
operator|.
name|OnClose
name|closeCallback
decl_stmt|;
DECL|field|path
specifier|private
specifier|final
name|ShardPath
name|path
decl_stmt|;
DECL|field|shardDirectory
specifier|private
specifier|final
name|Class
argument_list|<
name|?
extends|extends
name|DirectoryService
argument_list|>
name|shardDirectory
decl_stmt|;
DECL|method|StoreModule
specifier|public
name|StoreModule
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|DirectoryService
argument_list|>
name|shardDirectory
parameter_list|,
name|ShardLock
name|lock
parameter_list|,
name|Store
operator|.
name|OnClose
name|closeCallback
parameter_list|,
name|ShardPath
name|path
parameter_list|)
block|{
name|this
operator|.
name|shardDirectory
operator|=
name|shardDirectory
expr_stmt|;
name|this
operator|.
name|lock
operator|=
name|lock
expr_stmt|;
name|this
operator|.
name|closeCallback
operator|=
name|closeCallback
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|configure
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|bind
argument_list|(
name|DirectoryService
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|shardDirectory
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
name|bind
argument_list|(
name|Store
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
name|bind
argument_list|(
name|ShardLock
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|lock
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|Store
operator|.
name|OnClose
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|closeCallback
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|ShardPath
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

