begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cluster.ack
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ack
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_comment
comment|/**  * Base class to be used when needing to update the cluster state  * Contains the basic fields that are always needed  */
end_comment

begin_class
DECL|class|ClusterStateUpdateRequest
specifier|public
specifier|abstract
class|class
name|ClusterStateUpdateRequest
parameter_list|<
name|T
extends|extends
name|ClusterStateUpdateRequest
parameter_list|<
name|T
parameter_list|>
parameter_list|>
block|{
DECL|field|ackTimeout
specifier|private
name|TimeValue
name|ackTimeout
decl_stmt|;
DECL|field|masterNodeTimeout
specifier|private
name|TimeValue
name|masterNodeTimeout
decl_stmt|;
comment|/**      * Returns the maximum time interval to wait for acknowledgements      */
DECL|method|ackTimeout
specifier|public
name|TimeValue
name|ackTimeout
parameter_list|()
block|{
return|return
name|ackTimeout
return|;
block|}
comment|/**      * Sets the acknowledgement timeout      */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|ackTimeout
specifier|public
name|T
name|ackTimeout
parameter_list|(
name|TimeValue
name|ackTimeout
parameter_list|)
block|{
name|this
operator|.
name|ackTimeout
operator|=
name|ackTimeout
expr_stmt|;
return|return
operator|(
name|T
operator|)
name|this
return|;
block|}
comment|/**      * Returns the maximum time interval to wait for the request to      * be completed on the master node      */
DECL|method|masterNodeTimeout
specifier|public
name|TimeValue
name|masterNodeTimeout
parameter_list|()
block|{
return|return
name|masterNodeTimeout
return|;
block|}
comment|/**      * Sets the master node timeout      */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|masterNodeTimeout
specifier|public
name|T
name|masterNodeTimeout
parameter_list|(
name|TimeValue
name|masterNodeTimeout
parameter_list|)
block|{
name|this
operator|.
name|masterNodeTimeout
operator|=
name|masterNodeTimeout
expr_stmt|;
return|return
operator|(
name|T
operator|)
name|this
return|;
block|}
block|}
end_class

end_unit

