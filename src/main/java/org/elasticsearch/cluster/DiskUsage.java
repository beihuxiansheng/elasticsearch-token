begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cluster
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
package|;
end_package

begin_comment
comment|/**  * Encapsulation class used to represent the amount of disk used on a node.  */
end_comment

begin_class
DECL|class|DiskUsage
specifier|public
class|class
name|DiskUsage
block|{
DECL|field|nodeId
specifier|final
name|String
name|nodeId
decl_stmt|;
DECL|field|totalBytes
specifier|final
name|long
name|totalBytes
decl_stmt|;
DECL|field|freeBytes
specifier|final
name|long
name|freeBytes
decl_stmt|;
DECL|method|DiskUsage
specifier|public
name|DiskUsage
parameter_list|(
name|String
name|nodeId
parameter_list|,
name|long
name|totalBytes
parameter_list|,
name|long
name|freeBytes
parameter_list|)
block|{
if|if
condition|(
operator|(
name|totalBytes
operator|<
name|freeBytes
operator|)
operator|||
operator|(
name|totalBytes
operator|<
literal|0
operator|)
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Free bytes ["
operator|+
name|freeBytes
operator|+
literal|"] cannot be less than 0 or greater than total bytes ["
operator|+
name|totalBytes
operator|+
literal|"]"
argument_list|)
throw|;
block|}
name|this
operator|.
name|nodeId
operator|=
name|nodeId
expr_stmt|;
name|this
operator|.
name|totalBytes
operator|=
name|totalBytes
expr_stmt|;
name|this
operator|.
name|freeBytes
operator|=
name|freeBytes
expr_stmt|;
block|}
DECL|method|getFreeDiskAsPercentage
specifier|public
name|double
name|getFreeDiskAsPercentage
parameter_list|()
block|{
name|double
name|freePct
init|=
literal|100.0
operator|*
operator|(
operator|(
name|double
operator|)
name|freeBytes
operator|/
name|totalBytes
operator|)
decl_stmt|;
return|return
name|freePct
return|;
block|}
DECL|method|getFreeBytes
specifier|public
name|long
name|getFreeBytes
parameter_list|()
block|{
return|return
name|freeBytes
return|;
block|}
DECL|method|getTotalBytes
specifier|public
name|long
name|getTotalBytes
parameter_list|()
block|{
return|return
name|totalBytes
return|;
block|}
DECL|method|getUsedBytes
specifier|public
name|long
name|getUsedBytes
parameter_list|()
block|{
return|return
name|getTotalBytes
argument_list|()
operator|-
name|getFreeBytes
argument_list|()
return|;
block|}
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"["
operator|+
name|nodeId
operator|+
literal|"] free: "
operator|+
name|getFreeBytes
argument_list|()
operator|+
literal|"["
operator|+
name|getFreeDiskAsPercentage
argument_list|()
operator|+
literal|"%]"
return|;
block|}
block|}
end_class

end_unit

