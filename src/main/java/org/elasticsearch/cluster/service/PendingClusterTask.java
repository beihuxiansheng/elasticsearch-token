begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cluster.service
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|service
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|text
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|PendingClusterTask
specifier|public
class|class
name|PendingClusterTask
implements|implements
name|Streamable
block|{
DECL|field|insertOrder
specifier|private
name|long
name|insertOrder
decl_stmt|;
DECL|field|priority
specifier|private
name|Priority
name|priority
decl_stmt|;
DECL|field|source
specifier|private
name|Text
name|source
decl_stmt|;
DECL|field|timeInQueue
specifier|private
name|long
name|timeInQueue
decl_stmt|;
DECL|method|PendingClusterTask
specifier|public
name|PendingClusterTask
parameter_list|()
block|{     }
DECL|method|PendingClusterTask
specifier|public
name|PendingClusterTask
parameter_list|(
name|long
name|insertOrder
parameter_list|,
name|Priority
name|priority
parameter_list|,
name|Text
name|source
parameter_list|,
name|long
name|timeInQueue
parameter_list|)
block|{
name|this
operator|.
name|insertOrder
operator|=
name|insertOrder
expr_stmt|;
name|this
operator|.
name|priority
operator|=
name|priority
expr_stmt|;
name|this
operator|.
name|source
operator|=
name|source
expr_stmt|;
name|this
operator|.
name|timeInQueue
operator|=
name|timeInQueue
expr_stmt|;
block|}
DECL|method|insertOrder
specifier|public
name|long
name|insertOrder
parameter_list|()
block|{
return|return
name|insertOrder
return|;
block|}
DECL|method|getInsertOrder
specifier|public
name|long
name|getInsertOrder
parameter_list|()
block|{
return|return
name|insertOrder
argument_list|()
return|;
block|}
DECL|method|priority
specifier|public
name|Priority
name|priority
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
DECL|method|getPriority
specifier|public
name|Priority
name|getPriority
parameter_list|()
block|{
return|return
name|priority
argument_list|()
return|;
block|}
DECL|method|source
specifier|public
name|Text
name|source
parameter_list|()
block|{
return|return
name|source
return|;
block|}
DECL|method|getSource
specifier|public
name|Text
name|getSource
parameter_list|()
block|{
return|return
name|source
argument_list|()
return|;
block|}
DECL|method|timeInQueueInMillis
specifier|public
name|long
name|timeInQueueInMillis
parameter_list|()
block|{
return|return
name|timeInQueue
return|;
block|}
DECL|method|getTimeInQueueInMillis
specifier|public
name|long
name|getTimeInQueueInMillis
parameter_list|()
block|{
return|return
name|timeInQueueInMillis
argument_list|()
return|;
block|}
DECL|method|getTimeInQueue
specifier|public
name|TimeValue
name|getTimeInQueue
parameter_list|()
block|{
return|return
operator|new
name|TimeValue
argument_list|(
name|getTimeInQueueInMillis
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|insertOrder
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|priority
operator|=
name|Priority
operator|.
name|fromByte
argument_list|(
name|in
operator|.
name|readByte
argument_list|()
argument_list|)
expr_stmt|;
name|source
operator|=
name|in
operator|.
name|readText
argument_list|()
expr_stmt|;
name|timeInQueue
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVLong
argument_list|(
name|insertOrder
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeByte
argument_list|(
name|priority
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeText
argument_list|(
name|source
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|timeInQueue
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

