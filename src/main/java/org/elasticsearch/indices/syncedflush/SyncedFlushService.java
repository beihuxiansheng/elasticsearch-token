begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.indices.syncedflush
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|syncedflush
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|component
operator|.
name|AbstractComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_class
DECL|class|SyncedFlushService
specifier|public
class|class
name|SyncedFlushService
extends|extends
name|AbstractComponent
block|{
DECL|field|transportPreSyncedFlushAction
specifier|private
specifier|final
name|TransportPreSyncedFlushAction
name|transportPreSyncedFlushAction
decl_stmt|;
DECL|field|transportSyncedFlushAction
specifier|private
specifier|final
name|TransportSyncedFlushAction
name|transportSyncedFlushAction
decl_stmt|;
annotation|@
name|Inject
DECL|method|SyncedFlushService
specifier|public
name|SyncedFlushService
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|TransportPreSyncedFlushAction
name|transportPreSyncedFlushAction
parameter_list|,
name|TransportSyncedFlushAction
name|transportSyncedFlushAction
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|this
operator|.
name|transportPreSyncedFlushAction
operator|=
name|transportPreSyncedFlushAction
expr_stmt|;
name|this
operator|.
name|transportSyncedFlushAction
operator|=
name|transportSyncedFlushAction
expr_stmt|;
block|}
DECL|method|attemptSyncedFlush
specifier|public
name|SyncedFlushResponse
name|attemptSyncedFlush
parameter_list|(
name|ShardId
name|shardId
parameter_list|)
throws|throws
name|ExecutionException
throws|,
name|InterruptedException
block|{
name|PreSyncedFlushResponse
name|preSyncedFlushResponse
init|=
name|transportPreSyncedFlushAction
operator|.
name|execute
argument_list|(
operator|new
name|PreSyncedFlushRequest
argument_list|(
name|shardId
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
comment|// exit if this did not work
name|String
name|syncId
init|=
name|Strings
operator|.
name|base64UUID
argument_list|()
decl_stmt|;
name|SyncedFlushResponse
name|syncedFlushResponse
init|=
name|transportSyncedFlushAction
operator|.
name|execute
argument_list|(
operator|new
name|SyncedFlushRequest
argument_list|(
name|shardId
argument_list|,
name|syncId
argument_list|,
name|preSyncedFlushResponse
operator|.
name|commitIds
argument_list|()
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
return|return
name|syncedFlushResponse
return|;
block|}
block|}
end_class

end_unit

