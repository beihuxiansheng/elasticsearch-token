begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.transport.netty
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|netty
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|buffer
operator|.
name|ChannelBuffer
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|NettyHeader
specifier|public
class|class
name|NettyHeader
block|{
DECL|field|HEADER_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|HEADER_SIZE
init|=
literal|2
operator|+
literal|4
operator|+
literal|8
operator|+
literal|1
operator|+
literal|4
decl_stmt|;
DECL|method|writeHeader
specifier|public
specifier|static
name|void
name|writeHeader
parameter_list|(
name|ChannelBuffer
name|buffer
parameter_list|,
name|long
name|requestId
parameter_list|,
name|byte
name|status
parameter_list|,
name|Version
name|version
parameter_list|)
block|{
name|int
name|index
init|=
name|buffer
operator|.
name|readerIndex
argument_list|()
decl_stmt|;
name|buffer
operator|.
name|setByte
argument_list|(
name|index
argument_list|,
literal|'E'
argument_list|)
expr_stmt|;
name|index
operator|+=
literal|1
expr_stmt|;
name|buffer
operator|.
name|setByte
argument_list|(
name|index
argument_list|,
literal|'S'
argument_list|)
expr_stmt|;
name|index
operator|+=
literal|1
expr_stmt|;
comment|// write the size, the size indicates the remaining message size, not including the size int
name|buffer
operator|.
name|setInt
argument_list|(
name|index
argument_list|,
name|buffer
operator|.
name|readableBytes
argument_list|()
operator|-
literal|6
argument_list|)
expr_stmt|;
name|index
operator|+=
literal|4
expr_stmt|;
name|buffer
operator|.
name|setLong
argument_list|(
name|index
argument_list|,
name|requestId
argument_list|)
expr_stmt|;
name|index
operator|+=
literal|8
expr_stmt|;
name|buffer
operator|.
name|setByte
argument_list|(
name|index
argument_list|,
name|status
argument_list|)
expr_stmt|;
name|index
operator|+=
literal|1
expr_stmt|;
name|buffer
operator|.
name|setInt
argument_list|(
name|index
argument_list|,
name|version
operator|.
name|id
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

