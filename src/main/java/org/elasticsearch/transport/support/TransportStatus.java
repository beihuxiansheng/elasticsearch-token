begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.transport.support
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|support
package|;
end_package

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|TransportStatus
specifier|public
class|class
name|TransportStatus
block|{
DECL|field|STATUS_REQRES
specifier|private
specifier|static
specifier|final
name|byte
name|STATUS_REQRES
init|=
literal|1
operator|<<
literal|0
decl_stmt|;
DECL|field|STATUS_ERROR
specifier|private
specifier|static
specifier|final
name|byte
name|STATUS_ERROR
init|=
literal|1
operator|<<
literal|1
decl_stmt|;
DECL|field|STATUS_COMPRESS
specifier|private
specifier|static
specifier|final
name|byte
name|STATUS_COMPRESS
init|=
literal|1
operator|<<
literal|2
decl_stmt|;
DECL|method|isRequest
specifier|public
specifier|static
name|boolean
name|isRequest
parameter_list|(
name|byte
name|value
parameter_list|)
block|{
return|return
operator|(
name|value
operator|&
name|STATUS_REQRES
operator|)
operator|==
literal|0
return|;
block|}
DECL|method|setRequest
specifier|public
specifier|static
name|byte
name|setRequest
parameter_list|(
name|byte
name|value
parameter_list|)
block|{
name|value
operator|&=
operator|~
name|STATUS_REQRES
expr_stmt|;
return|return
name|value
return|;
block|}
DECL|method|setResponse
specifier|public
specifier|static
name|byte
name|setResponse
parameter_list|(
name|byte
name|value
parameter_list|)
block|{
name|value
operator||=
name|STATUS_REQRES
expr_stmt|;
return|return
name|value
return|;
block|}
DECL|method|isError
specifier|public
specifier|static
name|boolean
name|isError
parameter_list|(
name|byte
name|value
parameter_list|)
block|{
return|return
operator|(
name|value
operator|&
name|STATUS_ERROR
operator|)
operator|!=
literal|0
return|;
block|}
DECL|method|setError
specifier|public
specifier|static
name|byte
name|setError
parameter_list|(
name|byte
name|value
parameter_list|)
block|{
name|value
operator||=
name|STATUS_ERROR
expr_stmt|;
return|return
name|value
return|;
block|}
DECL|method|isCompress
specifier|public
specifier|static
name|boolean
name|isCompress
parameter_list|(
name|byte
name|value
parameter_list|)
block|{
return|return
operator|(
name|value
operator|&
name|STATUS_COMPRESS
operator|)
operator|!=
literal|0
return|;
block|}
DECL|method|setCompress
specifier|public
specifier|static
name|byte
name|setCompress
parameter_list|(
name|byte
name|value
parameter_list|)
block|{
name|value
operator||=
name|STATUS_COMPRESS
expr_stmt|;
return|return
name|value
return|;
block|}
block|}
end_class

end_unit

