begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.client
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|IndicesAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|IndicesAliasesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|IndicesAliasesRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|IndicesAliasesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|exists
operator|.
name|AliasesExistRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|exists
operator|.
name|AliasesExistResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|get
operator|.
name|GetAliasesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|get
operator|.
name|GetAliasesRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|get
operator|.
name|GetAliasesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|analyze
operator|.
name|AnalyzeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|analyze
operator|.
name|AnalyzeRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|analyze
operator|.
name|AnalyzeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|cache
operator|.
name|clear
operator|.
name|ClearIndicesCacheRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|cache
operator|.
name|clear
operator|.
name|ClearIndicesCacheRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|cache
operator|.
name|clear
operator|.
name|ClearIndicesCacheResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|close
operator|.
name|CloseIndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|close
operator|.
name|CloseIndexRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|close
operator|.
name|CloseIndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|create
operator|.
name|CreateIndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|create
operator|.
name|CreateIndexRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|create
operator|.
name|CreateIndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|delete
operator|.
name|DeleteIndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|delete
operator|.
name|DeleteIndexRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|delete
operator|.
name|DeleteIndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|exists
operator|.
name|indices
operator|.
name|IndicesExistsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|exists
operator|.
name|indices
operator|.
name|IndicesExistsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|exists
operator|.
name|indices
operator|.
name|IndicesExistsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|exists
operator|.
name|types
operator|.
name|TypesExistsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|exists
operator|.
name|types
operator|.
name|TypesExistsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|exists
operator|.
name|types
operator|.
name|TypesExistsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|flush
operator|.
name|FlushRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|flush
operator|.
name|FlushRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|flush
operator|.
name|FlushResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|gateway
operator|.
name|snapshot
operator|.
name|GatewaySnapshotRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|gateway
operator|.
name|snapshot
operator|.
name|GatewaySnapshotRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|gateway
operator|.
name|snapshot
operator|.
name|GatewaySnapshotResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|delete
operator|.
name|DeleteMappingRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|delete
operator|.
name|DeleteMappingRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|delete
operator|.
name|DeleteMappingResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|get
operator|.
name|GetMappingsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|get
operator|.
name|GetMappingsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|get
operator|.
name|GetMappingsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|put
operator|.
name|PutMappingRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|put
operator|.
name|PutMappingRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|put
operator|.
name|PutMappingResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|open
operator|.
name|OpenIndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|open
operator|.
name|OpenIndexRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|open
operator|.
name|OpenIndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|optimize
operator|.
name|OptimizeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|optimize
operator|.
name|OptimizeRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|optimize
operator|.
name|OptimizeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|refresh
operator|.
name|RefreshRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|refresh
operator|.
name|RefreshRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|refresh
operator|.
name|RefreshResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|segments
operator|.
name|IndicesSegmentResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|segments
operator|.
name|IndicesSegmentsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|segments
operator|.
name|IndicesSegmentsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|settings
operator|.
name|UpdateSettingsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|settings
operator|.
name|UpdateSettingsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|settings
operator|.
name|UpdateSettingsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
operator|.
name|IndicesStatsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
operator|.
name|IndicesStatsRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
operator|.
name|IndicesStatsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|status
operator|.
name|IndicesStatusRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|status
operator|.
name|IndicesStatusRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|status
operator|.
name|IndicesStatusResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|template
operator|.
name|delete
operator|.
name|DeleteIndexTemplateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|template
operator|.
name|delete
operator|.
name|DeleteIndexTemplateRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|template
operator|.
name|delete
operator|.
name|DeleteIndexTemplateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|template
operator|.
name|get
operator|.
name|GetIndexTemplatesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|template
operator|.
name|get
operator|.
name|GetIndexTemplatesRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|template
operator|.
name|get
operator|.
name|GetIndexTemplatesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|template
operator|.
name|put
operator|.
name|PutIndexTemplateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|template
operator|.
name|put
operator|.
name|PutIndexTemplateRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|template
operator|.
name|put
operator|.
name|PutIndexTemplateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|validate
operator|.
name|query
operator|.
name|ValidateQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|validate
operator|.
name|query
operator|.
name|ValidateQueryRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|validate
operator|.
name|query
operator|.
name|ValidateQueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|warmer
operator|.
name|delete
operator|.
name|DeleteWarmerRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|warmer
operator|.
name|delete
operator|.
name|DeleteWarmerRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|warmer
operator|.
name|delete
operator|.
name|DeleteWarmerResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|warmer
operator|.
name|get
operator|.
name|GetWarmersRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|warmer
operator|.
name|get
operator|.
name|GetWarmersRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|warmer
operator|.
name|get
operator|.
name|GetWarmersResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|warmer
operator|.
name|put
operator|.
name|PutWarmerRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|warmer
operator|.
name|put
operator|.
name|PutWarmerRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|warmer
operator|.
name|put
operator|.
name|PutWarmerResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_comment
comment|/**  * Administrative actions/operations against indices.  *  * @see AdminClient#indices()  */
end_comment

begin_interface
DECL|interface|IndicesAdminClient
specifier|public
interface|interface
name|IndicesAdminClient
block|{
DECL|method|execute
parameter_list|<
name|Request
extends|extends
name|ActionRequest
parameter_list|,
name|Response
extends|extends
name|ActionResponse
parameter_list|,
name|RequestBuilder
extends|extends
name|ActionRequestBuilder
argument_list|<
name|Request
argument_list|,
name|Response
argument_list|,
name|RequestBuilder
argument_list|>
parameter_list|>
name|ActionFuture
argument_list|<
name|Response
argument_list|>
name|execute
parameter_list|(
specifier|final
name|IndicesAction
argument_list|<
name|Request
argument_list|,
name|Response
argument_list|,
name|RequestBuilder
argument_list|>
name|action
parameter_list|,
specifier|final
name|Request
name|request
parameter_list|)
function_decl|;
DECL|method|execute
parameter_list|<
name|Request
extends|extends
name|ActionRequest
parameter_list|,
name|Response
extends|extends
name|ActionResponse
parameter_list|,
name|RequestBuilder
extends|extends
name|ActionRequestBuilder
argument_list|<
name|Request
argument_list|,
name|Response
argument_list|,
name|RequestBuilder
argument_list|>
parameter_list|>
name|void
name|execute
parameter_list|(
specifier|final
name|IndicesAction
argument_list|<
name|Request
argument_list|,
name|Response
argument_list|,
name|RequestBuilder
argument_list|>
name|action
parameter_list|,
specifier|final
name|Request
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|Response
argument_list|>
name|listener
parameter_list|)
function_decl|;
DECL|method|prepareExecute
parameter_list|<
name|Request
extends|extends
name|ActionRequest
parameter_list|,
name|Response
extends|extends
name|ActionResponse
parameter_list|,
name|RequestBuilder
extends|extends
name|ActionRequestBuilder
argument_list|<
name|Request
argument_list|,
name|Response
argument_list|,
name|RequestBuilder
argument_list|>
parameter_list|>
name|RequestBuilder
name|prepareExecute
parameter_list|(
specifier|final
name|IndicesAction
argument_list|<
name|Request
argument_list|,
name|Response
argument_list|,
name|RequestBuilder
argument_list|>
name|action
parameter_list|)
function_decl|;
comment|/**      * Indices Exists.      *      * @param request The indices exists request      * @return The result future      * @see Requests#indicesExistsRequest(String...)      */
DECL|method|exists
name|ActionFuture
argument_list|<
name|IndicesExistsResponse
argument_list|>
name|exists
parameter_list|(
name|IndicesExistsRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * The status of one or more indices.      *      * @param request  The indices status request      * @param listener A listener to be notified with a result      * @see Requests#indicesExistsRequest(String...)      */
DECL|method|exists
name|void
name|exists
parameter_list|(
name|IndicesExistsRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|IndicesExistsResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Indices exists.      */
DECL|method|prepareExists
name|IndicesExistsRequestBuilder
name|prepareExists
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Types Exists.      *      * @param request The types exists request      * @return The result future      */
DECL|method|typesExists
name|ActionFuture
argument_list|<
name|TypesExistsResponse
argument_list|>
name|typesExists
parameter_list|(
name|TypesExistsRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Types exists      *      * @param request  The types exists      * @param listener A listener to be notified with a result      */
DECL|method|typesExists
name|void
name|typesExists
parameter_list|(
name|TypesExistsRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|TypesExistsResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Indices exists.      */
DECL|method|prepareTypesExists
name|TypesExistsRequestBuilder
name|prepareTypesExists
parameter_list|(
name|String
modifier|...
name|index
parameter_list|)
function_decl|;
comment|/**      * Indices stats.      */
DECL|method|stats
name|ActionFuture
argument_list|<
name|IndicesStatsResponse
argument_list|>
name|stats
parameter_list|(
name|IndicesStatsRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Indices stats.      */
DECL|method|stats
name|void
name|stats
parameter_list|(
name|IndicesStatsRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|IndicesStatsResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Indices stats.      */
DECL|method|prepareStats
name|IndicesStatsRequestBuilder
name|prepareStats
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * The status of one or more indices.      *      * @param request The indices status request      * @return The result future      * @see Requests#indicesStatusRequest(String...)      */
DECL|method|status
name|ActionFuture
argument_list|<
name|IndicesStatusResponse
argument_list|>
name|status
parameter_list|(
name|IndicesStatusRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * The status of one or more indices.      *      * @param request  The indices status request      * @param listener A listener to be notified with a result      * @see Requests#indicesStatusRequest(String...)      */
DECL|method|status
name|void
name|status
parameter_list|(
name|IndicesStatusRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|IndicesStatusResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * The status of one or more indices.      */
DECL|method|prepareStatus
name|IndicesStatusRequestBuilder
name|prepareStatus
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * The segments of one or more indices.      *      * @param request The indices segments request      * @return The result future      * @see Requests#indicesSegmentsRequest(String...)      */
DECL|method|segments
name|ActionFuture
argument_list|<
name|IndicesSegmentResponse
argument_list|>
name|segments
parameter_list|(
name|IndicesSegmentsRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * The segments of one or more indices.      *      * @param request  The indices segments request      * @param listener A listener to be notified with a result      * @see Requests#indicesSegmentsRequest(String...)      */
DECL|method|segments
name|void
name|segments
parameter_list|(
name|IndicesSegmentsRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|IndicesSegmentResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * The segments of one or more indices.      */
DECL|method|prepareSegments
name|IndicesSegmentsRequestBuilder
name|prepareSegments
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Creates an index using an explicit request allowing to specify the settings of the index.      *      * @param request The create index request      * @return The result future      * @see org.elasticsearch.client.Requests#createIndexRequest(String)      */
DECL|method|create
name|ActionFuture
argument_list|<
name|CreateIndexResponse
argument_list|>
name|create
parameter_list|(
name|CreateIndexRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Creates an index using an explicit request allowing to specify the settings of the index.      *      * @param request  The create index request      * @param listener A listener to be notified with a result      * @see org.elasticsearch.client.Requests#createIndexRequest(String)      */
DECL|method|create
name|void
name|create
parameter_list|(
name|CreateIndexRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|CreateIndexResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Creates an index using an explicit request allowing to specify the settings of the index.      *      * @param index The index name to create      */
DECL|method|prepareCreate
name|CreateIndexRequestBuilder
name|prepareCreate
parameter_list|(
name|String
name|index
parameter_list|)
function_decl|;
comment|/**      * Deletes an index based on the index name.      *      * @param request The delete index request      * @return The result future      * @see org.elasticsearch.client.Requests#deleteIndexRequest(String)      */
DECL|method|delete
name|ActionFuture
argument_list|<
name|DeleteIndexResponse
argument_list|>
name|delete
parameter_list|(
name|DeleteIndexRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Deletes an index based on the index name.      *      * @param request  The delete index request      * @param listener A listener to be notified with a result      * @see org.elasticsearch.client.Requests#deleteIndexRequest(String)      */
DECL|method|delete
name|void
name|delete
parameter_list|(
name|DeleteIndexRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|DeleteIndexResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Deletes an index based on the index name.      *      * @param indices The indices to delete. Empty array to delete all indices.      */
DECL|method|prepareDelete
name|DeleteIndexRequestBuilder
name|prepareDelete
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Closes an index based on the index name.      *      * @param request The close index request      * @return The result future      * @see org.elasticsearch.client.Requests#closeIndexRequest(String)      */
DECL|method|close
name|ActionFuture
argument_list|<
name|CloseIndexResponse
argument_list|>
name|close
parameter_list|(
name|CloseIndexRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Closes an index based on the index name.      *      * @param request  The close index request      * @param listener A listener to be notified with a result      * @see org.elasticsearch.client.Requests#closeIndexRequest(String)      */
DECL|method|close
name|void
name|close
parameter_list|(
name|CloseIndexRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|CloseIndexResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Closes one or more indices based on their index name.      *      * @param indices The name of the indices to close      */
DECL|method|prepareClose
name|CloseIndexRequestBuilder
name|prepareClose
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Open an index based on the index name.      *      * @param request The close index request      * @return The result future      * @see org.elasticsearch.client.Requests#openIndexRequest(String)      */
DECL|method|open
name|ActionFuture
argument_list|<
name|OpenIndexResponse
argument_list|>
name|open
parameter_list|(
name|OpenIndexRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Open an index based on the index name.      *      * @param request  The close index request      * @param listener A listener to be notified with a result      * @see org.elasticsearch.client.Requests#openIndexRequest(String)      */
DECL|method|open
name|void
name|open
parameter_list|(
name|OpenIndexRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|OpenIndexResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Opens one or more indices based on their index name.      *      * @param indices The name of the indices to close      */
DECL|method|prepareOpen
name|OpenIndexRequestBuilder
name|prepareOpen
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Explicitly refresh one or more indices (making the content indexed since the last refresh searchable).      *      * @param request The refresh request      * @return The result future      * @see org.elasticsearch.client.Requests#refreshRequest(String...)      */
DECL|method|refresh
name|ActionFuture
argument_list|<
name|RefreshResponse
argument_list|>
name|refresh
parameter_list|(
name|RefreshRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Explicitly refresh one or more indices (making the content indexed since the last refresh searchable).      *      * @param request  The refresh request      * @param listener A listener to be notified with a result      * @see org.elasticsearch.client.Requests#refreshRequest(String...)      */
DECL|method|refresh
name|void
name|refresh
parameter_list|(
name|RefreshRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|RefreshResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Explicitly refresh one or more indices (making the content indexed since the last refresh searchable).      */
DECL|method|prepareRefresh
name|RefreshRequestBuilder
name|prepareRefresh
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Explicitly flush one or more indices (releasing memory from the node).      *      * @param request The flush request      * @return A result future      * @see org.elasticsearch.client.Requests#flushRequest(String...)      */
DECL|method|flush
name|ActionFuture
argument_list|<
name|FlushResponse
argument_list|>
name|flush
parameter_list|(
name|FlushRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Explicitly flush one or more indices (releasing memory from the node).      *      * @param request  The flush request      * @param listener A listener to be notified with a result      * @see org.elasticsearch.client.Requests#flushRequest(String...)      */
DECL|method|flush
name|void
name|flush
parameter_list|(
name|FlushRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|FlushResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Explicitly flush one or more indices (releasing memory from the node).      */
DECL|method|prepareFlush
name|FlushRequestBuilder
name|prepareFlush
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Explicitly optimize one or more indices into a the number of segments.      *      * @param request The optimize request      * @return A result future      * @see org.elasticsearch.client.Requests#optimizeRequest(String...)      */
DECL|method|optimize
name|ActionFuture
argument_list|<
name|OptimizeResponse
argument_list|>
name|optimize
parameter_list|(
name|OptimizeRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Explicitly optimize one or more indices into a the number of segments.      *      * @param request  The optimize request      * @param listener A listener to be notified with a result      * @see org.elasticsearch.client.Requests#optimizeRequest(String...)      */
DECL|method|optimize
name|void
name|optimize
parameter_list|(
name|OptimizeRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|OptimizeResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Explicitly optimize one or more indices into a the number of segments.      */
DECL|method|prepareOptimize
name|OptimizeRequestBuilder
name|prepareOptimize
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
DECL|method|getMappings
name|void
name|getMappings
parameter_list|(
name|GetMappingsRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|GetMappingsResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
DECL|method|getMappings
name|ActionFuture
argument_list|<
name|GetMappingsResponse
argument_list|>
name|getMappings
parameter_list|(
name|GetMappingsRequest
name|request
parameter_list|)
function_decl|;
DECL|method|prepareGetMappings
name|GetMappingsRequestBuilder
name|prepareGetMappings
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Add mapping definition for a type into one or more indices.      *      * @param request The create mapping request      * @return A result future      * @see org.elasticsearch.client.Requests#putMappingRequest(String...)      */
DECL|method|putMapping
name|ActionFuture
argument_list|<
name|PutMappingResponse
argument_list|>
name|putMapping
parameter_list|(
name|PutMappingRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Add mapping definition for a type into one or more indices.      *      * @param request  The create mapping request      * @param listener A listener to be notified with a result      * @see org.elasticsearch.client.Requests#putMappingRequest(String...)      */
DECL|method|putMapping
name|void
name|putMapping
parameter_list|(
name|PutMappingRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|PutMappingResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Add mapping definition for a type into one or more indices.      */
DECL|method|preparePutMapping
name|PutMappingRequestBuilder
name|preparePutMapping
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Deletes mapping (and all its data) from one or more indices.      *      * @param request The delete mapping request      * @return A result future      * @see org.elasticsearch.client.Requests#deleteMappingRequest(String...)      */
DECL|method|deleteMapping
name|ActionFuture
argument_list|<
name|DeleteMappingResponse
argument_list|>
name|deleteMapping
parameter_list|(
name|DeleteMappingRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Deletes mapping definition for a type into one or more indices.      *      * @param request  The delete mapping request      * @param listener A listener to be notified with a result      * @see org.elasticsearch.client.Requests#deleteMappingRequest(String...)      */
DECL|method|deleteMapping
name|void
name|deleteMapping
parameter_list|(
name|DeleteMappingRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|DeleteMappingResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Deletes mapping definition for a type into one or more indices.      */
DECL|method|prepareDeleteMapping
name|DeleteMappingRequestBuilder
name|prepareDeleteMapping
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Explicitly perform gateway snapshot for one or more indices.      *      * @param request The gateway snapshot request      * @return The result future      * @see org.elasticsearch.client.Requests#gatewaySnapshotRequest(String...)      */
DECL|method|gatewaySnapshot
name|ActionFuture
argument_list|<
name|GatewaySnapshotResponse
argument_list|>
name|gatewaySnapshot
parameter_list|(
name|GatewaySnapshotRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Explicitly perform gateway snapshot for one or more indices.      *      * @param request  The gateway snapshot request      * @param listener A listener to be notified with a result      * @see org.elasticsearch.client.Requests#gatewaySnapshotRequest(String...)      */
DECL|method|gatewaySnapshot
name|void
name|gatewaySnapshot
parameter_list|(
name|GatewaySnapshotRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|GatewaySnapshotResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Explicitly perform gateway snapshot for one or more indices.      */
DECL|method|prepareGatewaySnapshot
name|GatewaySnapshotRequestBuilder
name|prepareGatewaySnapshot
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Allows to add/remove aliases from indices.      *      * @param request The index aliases request      * @return The result future      * @see Requests#indexAliasesRequest()      */
DECL|method|aliases
name|ActionFuture
argument_list|<
name|IndicesAliasesResponse
argument_list|>
name|aliases
parameter_list|(
name|IndicesAliasesRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Allows to add/remove aliases from indices.      *      * @param request  The index aliases request      * @param listener A listener to be notified with a result      * @see Requests#indexAliasesRequest()      */
DECL|method|aliases
name|void
name|aliases
parameter_list|(
name|IndicesAliasesRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|IndicesAliasesResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Allows to add/remove aliases from indices.      */
DECL|method|prepareAliases
name|IndicesAliasesRequestBuilder
name|prepareAliases
parameter_list|()
function_decl|;
comment|/**      * Get specific index aliases that exists in particular indices and / or by name.      *      * @param request The result future      */
DECL|method|getAliases
name|ActionFuture
argument_list|<
name|GetAliasesResponse
argument_list|>
name|getAliases
parameter_list|(
name|GetAliasesRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Get specific index aliases that exists in particular indices and / or by name.      *      * @param request  The index aliases request      * @param listener A listener to be notified with a result      */
DECL|method|getAliases
name|void
name|getAliases
parameter_list|(
name|GetAliasesRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|GetAliasesResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Get specific index aliases that exists in particular indices and / or by name.      */
DECL|method|prepareGetAliases
name|GetAliasesRequestBuilder
name|prepareGetAliases
parameter_list|(
name|String
modifier|...
name|aliases
parameter_list|)
function_decl|;
comment|/**      * Allows to check to existence of aliases from indices.      */
DECL|method|prepareAliasesExist
name|AliasesExistRequestBuilder
name|prepareAliasesExist
parameter_list|(
name|String
modifier|...
name|aliases
parameter_list|)
function_decl|;
comment|/**      * Check to existence of index aliases.      *      * @param request The result future      */
DECL|method|aliasesExist
name|ActionFuture
argument_list|<
name|AliasesExistResponse
argument_list|>
name|aliasesExist
parameter_list|(
name|GetAliasesRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Check the existence of specified index aliases.      *      * @param request  The index aliases request      * @param listener A listener to be notified with a result      */
DECL|method|aliasesExist
name|void
name|aliasesExist
parameter_list|(
name|GetAliasesRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|AliasesExistResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Clear indices cache.      *      * @param request The clear indices cache request      * @return The result future      * @see Requests#clearIndicesCacheRequest(String...)      */
DECL|method|clearCache
name|ActionFuture
argument_list|<
name|ClearIndicesCacheResponse
argument_list|>
name|clearCache
parameter_list|(
name|ClearIndicesCacheRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Clear indices cache.      *      * @param request  The clear indices cache request      * @param listener A listener to be notified with a result      * @see Requests#clearIndicesCacheRequest(String...)      */
DECL|method|clearCache
name|void
name|clearCache
parameter_list|(
name|ClearIndicesCacheRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|ClearIndicesCacheResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Clear indices cache.      */
DECL|method|prepareClearCache
name|ClearIndicesCacheRequestBuilder
name|prepareClearCache
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Updates settings of one or more indices.      *      * @param request the update settings request      * @return The result future      */
DECL|method|updateSettings
name|ActionFuture
argument_list|<
name|UpdateSettingsResponse
argument_list|>
name|updateSettings
parameter_list|(
name|UpdateSettingsRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Updates settings of one or more indices.      *      * @param request  the update settings request      * @param listener A listener to be notified with the response      */
DECL|method|updateSettings
name|void
name|updateSettings
parameter_list|(
name|UpdateSettingsRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|UpdateSettingsResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Update indices settings.      */
DECL|method|prepareUpdateSettings
name|UpdateSettingsRequestBuilder
name|prepareUpdateSettings
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Analyze text under the provided index.      */
DECL|method|analyze
name|ActionFuture
argument_list|<
name|AnalyzeResponse
argument_list|>
name|analyze
parameter_list|(
name|AnalyzeRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Analyze text under the provided index.      */
DECL|method|analyze
name|void
name|analyze
parameter_list|(
name|AnalyzeRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|AnalyzeResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Analyze text under the provided index.      *      * @param index The index name      * @param text  The text to analyze      */
DECL|method|prepareAnalyze
name|AnalyzeRequestBuilder
name|prepareAnalyze
parameter_list|(
annotation|@
name|Nullable
name|String
name|index
parameter_list|,
name|String
name|text
parameter_list|)
function_decl|;
comment|/**      * Analyze text.      *      * @param text The text to analyze      */
DECL|method|prepareAnalyze
name|AnalyzeRequestBuilder
name|prepareAnalyze
parameter_list|(
name|String
name|text
parameter_list|)
function_decl|;
comment|/**      * Puts an index template.      */
DECL|method|putTemplate
name|ActionFuture
argument_list|<
name|PutIndexTemplateResponse
argument_list|>
name|putTemplate
parameter_list|(
name|PutIndexTemplateRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Puts an index template.      */
DECL|method|putTemplate
name|void
name|putTemplate
parameter_list|(
name|PutIndexTemplateRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|PutIndexTemplateResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Puts an index template.      *      * @param name The name of the template.      */
DECL|method|preparePutTemplate
name|PutIndexTemplateRequestBuilder
name|preparePutTemplate
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
comment|/**      * Deletes index template.      */
DECL|method|deleteTemplate
name|ActionFuture
argument_list|<
name|DeleteIndexTemplateResponse
argument_list|>
name|deleteTemplate
parameter_list|(
name|DeleteIndexTemplateRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Deletes an index template.      */
DECL|method|deleteTemplate
name|void
name|deleteTemplate
parameter_list|(
name|DeleteIndexTemplateRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|DeleteIndexTemplateResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Deletes an index template.      *      * @param name The name of the template.      */
DECL|method|prepareDeleteTemplate
name|DeleteIndexTemplateRequestBuilder
name|prepareDeleteTemplate
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
comment|/**      * Gets index template.      */
DECL|method|getTemplates
name|ActionFuture
argument_list|<
name|GetIndexTemplatesResponse
argument_list|>
name|getTemplates
parameter_list|(
name|GetIndexTemplatesRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Gets an index template.      */
DECL|method|getTemplates
name|void
name|getTemplates
parameter_list|(
name|GetIndexTemplatesRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|GetIndexTemplatesResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Gets an index template.      *      * @param name The name of the template.      */
annotation|@
name|Deprecated
DECL|method|prepareGetTemplates
name|GetIndexTemplatesRequestBuilder
name|prepareGetTemplates
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
comment|/**      * Gets an index template (optional).      */
DECL|method|prepareGetTemplates
name|GetIndexTemplatesRequestBuilder
name|prepareGetTemplates
parameter_list|(
name|String
modifier|...
name|name
parameter_list|)
function_decl|;
comment|/**      * Validate a query for correctness.      *      * @param request The count request      * @return The result future      * @see Requests#countRequest(String...)      */
DECL|method|validateQuery
name|ActionFuture
argument_list|<
name|ValidateQueryResponse
argument_list|>
name|validateQuery
parameter_list|(
name|ValidateQueryRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Validate a query for correctness.      *      * @param request  The count request      * @param listener A listener to be notified of the result      * @see Requests#countRequest(String...)      */
DECL|method|validateQuery
name|void
name|validateQuery
parameter_list|(
name|ValidateQueryRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|ValidateQueryResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Validate a query for correctness.      */
DECL|method|prepareValidateQuery
name|ValidateQueryRequestBuilder
name|prepareValidateQuery
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
comment|/**      * Puts an index search warmer to be applies when applicable.      */
DECL|method|putWarmer
name|ActionFuture
argument_list|<
name|PutWarmerResponse
argument_list|>
name|putWarmer
parameter_list|(
name|PutWarmerRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Puts an index search warmer to be applies when applicable.      */
DECL|method|putWarmer
name|void
name|putWarmer
parameter_list|(
name|PutWarmerRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|PutWarmerResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Puts an index search warmer to be applies when applicable.      */
DECL|method|preparePutWarmer
name|PutWarmerRequestBuilder
name|preparePutWarmer
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
comment|/**      * Deletes an index warmer.      */
DECL|method|deleteWarmer
name|ActionFuture
argument_list|<
name|DeleteWarmerResponse
argument_list|>
name|deleteWarmer
parameter_list|(
name|DeleteWarmerRequest
name|request
parameter_list|)
function_decl|;
comment|/**      * Deletes an index warmer.      */
DECL|method|deleteWarmer
name|void
name|deleteWarmer
parameter_list|(
name|DeleteWarmerRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|DeleteWarmerResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
comment|/**      * Deletes an index warmer.      */
DECL|method|prepareDeleteWarmer
name|DeleteWarmerRequestBuilder
name|prepareDeleteWarmer
parameter_list|()
function_decl|;
DECL|method|getWarmers
name|void
name|getWarmers
parameter_list|(
name|GetWarmersRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|GetWarmersResponse
argument_list|>
name|listener
parameter_list|)
function_decl|;
DECL|method|getWarmers
name|ActionFuture
argument_list|<
name|GetWarmersResponse
argument_list|>
name|getWarmers
parameter_list|(
name|GetWarmersRequest
name|request
parameter_list|)
function_decl|;
DECL|method|prepareGetWarmers
name|GetWarmersRequestBuilder
name|prepareGetWarmers
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

