begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.plugins
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ExceptionsHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|collect
operator|.
name|Tuple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|http
operator|.
name|client
operator|.
name|HttpDownloadHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|FileSystemUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|Streams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|Environment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|node
operator|.
name|internal
operator|.
name|InternalSettingsPerparer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|HttpsURLConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|TrustManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|X509TrustManager
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipFile
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
operator|.
name|Builder
operator|.
name|EMPTY_SETTINGS
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|PluginManager
specifier|public
class|class
name|PluginManager
block|{
DECL|class|ACTION
specifier|public
specifier|static
specifier|final
class|class
name|ACTION
block|{
DECL|field|NONE
specifier|public
specifier|static
specifier|final
name|int
name|NONE
init|=
literal|0
decl_stmt|;
DECL|field|INSTALL
specifier|public
specifier|static
specifier|final
name|int
name|INSTALL
init|=
literal|1
decl_stmt|;
DECL|field|REMOVE
specifier|public
specifier|static
specifier|final
name|int
name|REMOVE
init|=
literal|2
decl_stmt|;
DECL|field|LIST
specifier|public
specifier|static
specifier|final
name|int
name|LIST
init|=
literal|3
decl_stmt|;
block|}
DECL|field|environment
specifier|private
specifier|final
name|Environment
name|environment
decl_stmt|;
DECL|field|url
specifier|private
name|String
name|url
decl_stmt|;
DECL|method|PluginManager
specifier|public
name|PluginManager
parameter_list|(
name|Environment
name|environment
parameter_list|,
name|String
name|url
parameter_list|)
block|{
name|this
operator|.
name|environment
operator|=
name|environment
expr_stmt|;
name|this
operator|.
name|url
operator|=
name|url
expr_stmt|;
name|TrustManager
index|[]
name|trustAllCerts
init|=
operator|new
name|TrustManager
index|[]
block|{
operator|new
name|X509TrustManager
argument_list|()
block|{
specifier|public
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
index|[]
name|getAcceptedIssuers
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
function|public void checkClientTrusted
parameter_list|(
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
index|[]
name|certs
parameter_list|,
name|String
name|authType
parameter_list|)
block|{
block|}
function|public void checkServerTrusted
parameter_list|(
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
index|[]
name|certs
parameter_list|,
name|String
name|authType
parameter_list|)
block|{
block|}
function|}         };
comment|// Install the all-trusting trust manager
try|try
block|{
name|SSLContext
name|sc
init|=
name|SSLContext
operator|.
name|getInstance
argument_list|(
literal|"SSL"
argument_list|)
decl_stmt|;
name|sc
operator|.
name|init
argument_list|(
literal|null
argument_list|,
name|trustAllCerts
argument_list|,
operator|new
name|java
operator|.
name|security
operator|.
name|SecureRandom
argument_list|()
argument_list|)
expr_stmt|;
name|HttpsURLConnection
operator|.
name|setDefaultSSLSocketFactory
argument_list|(
name|sc
operator|.
name|getSocketFactory
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|downloadAndExtract
specifier|public
name|void
name|downloadAndExtract
parameter_list|(
name|String
name|name
parameter_list|,
name|boolean
name|verbose
parameter_list|)
throws|throws
name|IOException
block|{
name|HttpDownloadHelper
name|downloadHelper
init|=
operator|new
name|HttpDownloadHelper
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|environment
operator|.
name|pluginsFile
argument_list|()
operator|.
name|canWrite
argument_list|()
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|IOException
argument_list|(
literal|"plugin directory "
operator|+
name|environment
operator|.
name|pluginsFile
argument_list|()
operator|+
literal|" is read only"
argument_list|)
throw|;
block|}
name|File
name|pluginFile
init|=
operator|new
name|File
argument_list|(
name|environment
operator|.
name|pluginsFile
argument_list|()
argument_list|,
name|name
operator|+
literal|".zip"
argument_list|)
decl_stmt|;
comment|// first, try directly from the URL provided
name|boolean
name|downloaded
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|url
operator|!=
literal|null
condition|)
block|{
name|URL
name|pluginUrl
init|=
operator|new
name|URL
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Trying "
operator|+
name|pluginUrl
operator|.
name|toExternalForm
argument_list|()
operator|+
literal|"..."
argument_list|)
expr_stmt|;
try|try
block|{
name|downloadHelper
operator|.
name|download
argument_list|(
name|pluginUrl
argument_list|,
name|pluginFile
argument_list|,
operator|new
name|HttpDownloadHelper
operator|.
name|VerboseProgress
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|downloaded
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// ignore
if|if
condition|(
name|verbose
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Failed: "
operator|+
name|ExceptionsHelper
operator|.
name|detailedMessage
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// now, try as a path name...
name|String
name|filterZipName
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|downloaded
condition|)
block|{
if|if
condition|(
name|name
operator|.
name|indexOf
argument_list|(
literal|'/'
argument_list|)
operator|!=
operator|-
literal|1
condition|)
block|{
comment|// github repo
name|String
index|[]
name|elements
init|=
name|name
operator|.
name|split
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|String
name|userName
init|=
name|elements
index|[
literal|0
index|]
decl_stmt|;
name|String
name|repoName
init|=
name|elements
index|[
literal|1
index|]
decl_stmt|;
name|String
name|version
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|elements
operator|.
name|length
operator|>
literal|2
condition|)
block|{
name|version
operator|=
name|elements
index|[
literal|2
index|]
expr_stmt|;
block|}
name|filterZipName
operator|=
name|userName
operator|+
literal|"-"
operator|+
name|repoName
expr_stmt|;
comment|// the installation file should not include the userName, just the repoName
name|name
operator|=
name|repoName
expr_stmt|;
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"elasticsearch-"
argument_list|)
condition|)
block|{
comment|// remove elasticsearch- prefix
name|name
operator|=
name|name
operator|.
name|substring
argument_list|(
literal|"elasticsearch-"
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"es-"
argument_list|)
condition|)
block|{
comment|// remove es- prefix
name|name
operator|=
name|name
operator|.
name|substring
argument_list|(
literal|"es-"
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// update the plugin file name to reflect the extracted name
name|pluginFile
operator|=
operator|new
name|File
argument_list|(
name|environment
operator|.
name|pluginsFile
argument_list|()
argument_list|,
name|name
operator|+
literal|".zip"
argument_list|)
expr_stmt|;
if|if
condition|(
name|version
operator|!=
literal|null
condition|)
block|{
name|URL
name|pluginUrl
init|=
operator|new
name|URL
argument_list|(
literal|"http://download.elasticsearch.org/"
operator|+
name|userName
operator|+
literal|"/"
operator|+
name|repoName
operator|+
literal|"/"
operator|+
name|repoName
operator|+
literal|"-"
operator|+
name|version
operator|+
literal|".zip"
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Trying "
operator|+
name|pluginUrl
operator|.
name|toExternalForm
argument_list|()
operator|+
literal|"..."
argument_list|)
expr_stmt|;
try|try
block|{
name|downloadHelper
operator|.
name|download
argument_list|(
name|pluginUrl
argument_list|,
name|pluginFile
argument_list|,
operator|new
name|HttpDownloadHelper
operator|.
name|VerboseProgress
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|downloaded
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
if|if
condition|(
name|verbose
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Failed: "
operator|+
name|ExceptionsHelper
operator|.
name|detailedMessage
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|downloaded
condition|)
block|{
comment|// try maven, see if its there... (both central and sonatype)
name|pluginUrl
operator|=
operator|new
name|URL
argument_list|(
literal|"http://search.maven.org/remotecontent?filepath="
operator|+
name|userName
operator|.
name|replace
argument_list|(
literal|'.'
argument_list|,
literal|'/'
argument_list|)
operator|+
literal|"/"
operator|+
name|repoName
operator|+
literal|"/"
operator|+
name|version
operator|+
literal|"/"
operator|+
name|repoName
operator|+
literal|"-"
operator|+
name|version
operator|+
literal|".zip"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Trying "
operator|+
name|pluginUrl
operator|.
name|toExternalForm
argument_list|()
operator|+
literal|"..."
argument_list|)
expr_stmt|;
try|try
block|{
name|downloadHelper
operator|.
name|download
argument_list|(
name|pluginUrl
argument_list|,
name|pluginFile
argument_list|,
operator|new
name|HttpDownloadHelper
operator|.
name|VerboseProgress
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|downloaded
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
if|if
condition|(
name|verbose
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Failed: "
operator|+
name|ExceptionsHelper
operator|.
name|detailedMessage
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|downloaded
condition|)
block|{
name|pluginUrl
operator|=
operator|new
name|URL
argument_list|(
literal|"https://oss.sonatype.org/service/local/repositories/releases/content/"
operator|+
name|userName
operator|.
name|replace
argument_list|(
literal|'.'
argument_list|,
literal|'/'
argument_list|)
operator|+
literal|"/"
operator|+
name|repoName
operator|+
literal|"/"
operator|+
name|version
operator|+
literal|"/"
operator|+
name|repoName
operator|+
literal|"-"
operator|+
name|version
operator|+
literal|".zip"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Trying "
operator|+
name|pluginUrl
operator|.
name|toExternalForm
argument_list|()
operator|+
literal|"..."
argument_list|)
expr_stmt|;
try|try
block|{
name|downloadHelper
operator|.
name|download
argument_list|(
name|pluginUrl
argument_list|,
name|pluginFile
argument_list|,
operator|new
name|HttpDownloadHelper
operator|.
name|VerboseProgress
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|downloaded
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
if|if
condition|(
name|verbose
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Failed: "
operator|+
name|ExceptionsHelper
operator|.
name|detailedMessage
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
if|if
condition|(
operator|!
name|downloaded
condition|)
block|{
comment|// try it as a site plugin tagged
name|pluginUrl
operator|=
operator|new
name|URL
argument_list|(
literal|"https://github.com/"
operator|+
name|userName
operator|+
literal|"/"
operator|+
name|repoName
operator|+
literal|"/zipball/v"
operator|+
name|version
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Trying "
operator|+
name|pluginUrl
operator|.
name|toExternalForm
argument_list|()
operator|+
literal|"... (assuming site plugin)"
argument_list|)
expr_stmt|;
try|try
block|{
name|downloadHelper
operator|.
name|download
argument_list|(
name|pluginUrl
argument_list|,
name|pluginFile
argument_list|,
operator|new
name|HttpDownloadHelper
operator|.
name|VerboseProgress
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|downloaded
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e1
parameter_list|)
block|{
comment|// ignore
if|if
condition|(
name|verbose
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Failed: "
operator|+
name|ExceptionsHelper
operator|.
name|detailedMessage
argument_list|(
name|e1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
else|else
block|{
comment|// assume site plugin, download master....
name|URL
name|pluginUrl
init|=
operator|new
name|URL
argument_list|(
literal|"https://github.com/"
operator|+
name|userName
operator|+
literal|"/"
operator|+
name|repoName
operator|+
literal|"/zipball/master"
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Trying "
operator|+
name|pluginUrl
operator|.
name|toExternalForm
argument_list|()
operator|+
literal|"... (assuming site plugin)"
argument_list|)
expr_stmt|;
try|try
block|{
name|downloadHelper
operator|.
name|download
argument_list|(
name|pluginUrl
argument_list|,
name|pluginFile
argument_list|,
operator|new
name|HttpDownloadHelper
operator|.
name|VerboseProgress
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|downloaded
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e2
parameter_list|)
block|{
comment|// ignore
if|if
condition|(
name|verbose
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Failed: "
operator|+
name|ExceptionsHelper
operator|.
name|detailedMessage
argument_list|(
name|e2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
if|if
condition|(
operator|!
name|downloaded
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"failed to download out of all possible locations..., use -verbose to get detailed information"
argument_list|)
throw|;
block|}
comment|// extract the plugin
name|File
name|extractLocation
init|=
operator|new
name|File
argument_list|(
name|environment
operator|.
name|pluginsFile
argument_list|()
argument_list|,
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|extractLocation
operator|.
name|exists
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"plugin directory "
operator|+
name|extractLocation
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|" already exists. To update the plugin, uninstall it first using -remove "
operator|+
name|name
operator|+
literal|" command"
argument_list|)
throw|;
block|}
name|ZipFile
name|zipFile
init|=
literal|null
decl_stmt|;
try|try
block|{
name|zipFile
operator|=
operator|new
name|ZipFile
argument_list|(
name|pluginFile
argument_list|)
expr_stmt|;
name|Enumeration
argument_list|<
name|?
extends|extends
name|ZipEntry
argument_list|>
name|zipEntries
init|=
name|zipFile
operator|.
name|entries
argument_list|()
decl_stmt|;
while|while
condition|(
name|zipEntries
operator|.
name|hasMoreElements
argument_list|()
condition|)
block|{
name|ZipEntry
name|zipEntry
init|=
name|zipEntries
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|zipEntry
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
continue|continue;
block|}
name|String
name|zipName
init|=
name|zipEntry
operator|.
name|getName
argument_list|()
operator|.
name|replace
argument_list|(
literal|'\\'
argument_list|,
literal|'/'
argument_list|)
decl_stmt|;
if|if
condition|(
name|filterZipName
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|zipName
operator|.
name|startsWith
argument_list|(
name|filterZipName
argument_list|)
condition|)
block|{
name|zipName
operator|=
name|zipName
operator|.
name|substring
argument_list|(
name|zipName
operator|.
name|indexOf
argument_list|(
literal|'/'
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|File
name|target
init|=
operator|new
name|File
argument_list|(
name|extractLocation
argument_list|,
name|zipName
argument_list|)
decl_stmt|;
name|FileSystemUtils
operator|.
name|mkdirs
argument_list|(
name|target
operator|.
name|getParentFile
argument_list|()
argument_list|)
expr_stmt|;
name|Streams
operator|.
name|copy
argument_list|(
name|zipFile
operator|.
name|getInputStream
argument_list|(
name|zipEntry
argument_list|)
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|target
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Installed "
operator|+
name|name
operator|+
literal|" into "
operator|+
name|extractLocation
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"failed to extract plugin ["
operator|+
name|pluginFile
operator|+
literal|"]: "
operator|+
name|ExceptionsHelper
operator|.
name|detailedMessage
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
return|return;
block|}
finally|finally
block|{
if|if
condition|(
name|zipFile
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|zipFile
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
name|pluginFile
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|FileSystemUtils
operator|.
name|hasExtensions
argument_list|(
name|extractLocation
argument_list|,
literal|".java"
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Plugin installation assumed to be site plugin, but contains source code, aborting installation..."
argument_list|)
expr_stmt|;
name|FileSystemUtils
operator|.
name|deleteRecursively
argument_list|(
name|extractLocation
argument_list|)
expr_stmt|;
return|return;
block|}
name|File
name|binFile
init|=
operator|new
name|File
argument_list|(
name|extractLocation
argument_list|,
literal|"bin"
argument_list|)
decl_stmt|;
if|if
condition|(
name|binFile
operator|.
name|exists
argument_list|()
operator|&&
name|binFile
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
name|File
name|toLocation
init|=
operator|new
name|File
argument_list|(
operator|new
name|File
argument_list|(
name|environment
operator|.
name|homeFile
argument_list|()
argument_list|,
literal|"bin"
argument_list|)
argument_list|,
name|name
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Found bin, moving to "
operator|+
name|toLocation
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystemUtils
operator|.
name|deleteRecursively
argument_list|(
name|toLocation
argument_list|)
expr_stmt|;
name|binFile
operator|.
name|renameTo
argument_list|(
name|toLocation
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Installed "
operator|+
name|name
operator|+
literal|" into "
operator|+
name|toLocation
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// try and identify the plugin type, see if it has no .class or .jar files in it
comment|// so its probably a _site, and it it does not have a _site in it, move everything to _site
if|if
condition|(
operator|!
operator|new
name|File
argument_list|(
name|extractLocation
argument_list|,
literal|"_site"
argument_list|)
operator|.
name|exists
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|FileSystemUtils
operator|.
name|hasExtensions
argument_list|(
name|extractLocation
argument_list|,
literal|".class"
argument_list|,
literal|".jar"
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Identified as a _site plugin, moving to _site structure ..."
argument_list|)
expr_stmt|;
name|File
name|site
init|=
operator|new
name|File
argument_list|(
name|extractLocation
argument_list|,
literal|"_site"
argument_list|)
decl_stmt|;
name|File
name|tmpLocation
init|=
operator|new
name|File
argument_list|(
name|environment
operator|.
name|pluginsFile
argument_list|()
argument_list|,
name|name
operator|+
literal|".tmp"
argument_list|)
decl_stmt|;
name|extractLocation
operator|.
name|renameTo
argument_list|(
name|tmpLocation
argument_list|)
expr_stmt|;
name|FileSystemUtils
operator|.
name|mkdirs
argument_list|(
name|extractLocation
argument_list|)
expr_stmt|;
name|tmpLocation
operator|.
name|renameTo
argument_list|(
name|site
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Installed "
operator|+
name|name
operator|+
literal|" into "
operator|+
name|site
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|removePlugin
function|public void removePlugin
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|pluginToDelete
init|=
operator|new
name|File
argument_list|(
name|environment
operator|.
name|pluginsFile
argument_list|()
argument_list|,
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|pluginToDelete
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileSystemUtils
operator|.
name|deleteRecursively
argument_list|(
name|pluginToDelete
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|pluginToDelete
operator|=
operator|new
name|File
argument_list|(
name|environment
operator|.
name|pluginsFile
argument_list|()
argument_list|,
name|name
operator|+
literal|".zip"
argument_list|)
expr_stmt|;
if|if
condition|(
name|pluginToDelete
operator|.
name|exists
argument_list|()
condition|)
block|{
name|pluginToDelete
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
name|File
name|binLocation
init|=
operator|new
name|File
argument_list|(
operator|new
name|File
argument_list|(
name|environment
operator|.
name|homeFile
argument_list|()
argument_list|,
literal|"bin"
argument_list|)
argument_list|,
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|binLocation
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileSystemUtils
operator|.
name|deleteRecursively
argument_list|(
name|binLocation
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|listInstalledPlugins
function|public void listInstalledPlugins
parameter_list|()
block|{
name|File
index|[]
name|plugins
init|=
name|environment
operator|.
name|pluginsFile
argument_list|()
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Installed plugins:"
argument_list|)
expr_stmt|;
if|if
condition|(
name|plugins
operator|==
literal|null
operator|||
name|plugins
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    - No plugin detected in "
operator|+
name|environment
operator|.
name|pluginsFile
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|plugins
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    - "
operator|+
name|plugins
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|main
function|public static void main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|Tuple
argument_list|<
name|Settings
argument_list|,
name|Environment
argument_list|>
name|initialSettings
init|=
name|InternalSettingsPerparer
operator|.
name|prepareSettings
argument_list|(
name|EMPTY_SETTINGS
argument_list|,
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|initialSettings
operator|.
name|v2
argument_list|()
operator|.
name|pluginsFile
argument_list|()
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileSystemUtils
operator|.
name|mkdirs
argument_list|(
name|initialSettings
operator|.
name|v2
argument_list|()
operator|.
name|pluginsFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|url
init|=
literal|null
decl_stmt|;
name|boolean
name|verbose
init|=
literal|false
decl_stmt|;
name|String
name|pluginName
init|=
literal|null
decl_stmt|;
name|int
name|action
init|=
name|ACTION
operator|.
name|NONE
decl_stmt|;
if|if
condition|(
name|args
operator|.
name|length
operator|<
literal|1
condition|)
block|{
name|displayHelp
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
try|try
block|{
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|args
operator|.
name|length
condition|;
name|c
operator|++
control|)
block|{
name|String
name|command
init|=
name|args
index|[
name|c
index|]
decl_stmt|;
if|if
condition|(
literal|"-u"
operator|.
name|equals
argument_list|(
name|command
argument_list|)
operator|||
literal|"--url"
operator|.
name|equals
argument_list|(
name|command
argument_list|)
comment|// Deprecated commands
operator|||
literal|"url"
operator|.
name|equals
argument_list|(
name|command
argument_list|)
operator|||
literal|"-url"
operator|.
name|equals
argument_list|(
name|command
argument_list|)
condition|)
block|{
name|url
operator|=
name|args
index|[
operator|++
name|c
index|]
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"-v"
operator|.
name|equals
argument_list|(
name|command
argument_list|)
operator|||
literal|"--v"
operator|.
name|equals
argument_list|(
name|command
argument_list|)
operator|||
literal|"verbose"
operator|.
name|equals
argument_list|(
name|command
argument_list|)
operator|||
literal|"-verbose"
operator|.
name|equals
argument_list|(
name|command
argument_list|)
condition|)
block|{
name|verbose
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|command
operator|.
name|equals
argument_list|(
literal|"-i"
argument_list|)
operator|||
name|command
operator|.
name|equals
argument_list|(
literal|"--install"
argument_list|)
comment|// Deprecated commands
operator|||
name|command
operator|.
name|equals
argument_list|(
literal|"install"
argument_list|)
operator|||
name|command
operator|.
name|equals
argument_list|(
literal|"-install"
argument_list|)
condition|)
block|{
name|pluginName
operator|=
name|args
index|[
operator|++
name|c
index|]
expr_stmt|;
name|action
operator|=
name|ACTION
operator|.
name|INSTALL
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|command
operator|.
name|equals
argument_list|(
literal|"-r"
argument_list|)
operator|||
name|command
operator|.
name|equals
argument_list|(
literal|"--remove"
argument_list|)
comment|// Deprecated commands
operator|||
name|command
operator|.
name|equals
argument_list|(
literal|"remove"
argument_list|)
operator|||
name|command
operator|.
name|equals
argument_list|(
literal|"-remove"
argument_list|)
condition|)
block|{
name|pluginName
operator|=
name|args
index|[
operator|++
name|c
index|]
expr_stmt|;
name|action
operator|=
name|ACTION
operator|.
name|REMOVE
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|command
operator|.
name|equals
argument_list|(
literal|"-l"
argument_list|)
operator|||
name|command
operator|.
name|equals
argument_list|(
literal|"--list"
argument_list|)
condition|)
block|{
name|action
operator|=
name|ACTION
operator|.
name|LIST
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|command
operator|.
name|equals
argument_list|(
literal|"-h"
argument_list|)
operator|||
name|command
operator|.
name|equals
argument_list|(
literal|"--help"
argument_list|)
condition|)
block|{
name|displayHelp
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|displayHelp
argument_list|(
literal|"Command ["
operator|+
name|args
index|[
name|c
index|]
operator|+
literal|"] unknown."
argument_list|)
expr_stmt|;
comment|// Unknown command. We break...
name|System
operator|.
name|exit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|displayHelp
argument_list|(
literal|"Error while parsing options: "
operator|+
name|e
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|action
operator|>
name|ACTION
operator|.
name|NONE
condition|)
block|{
name|PluginManager
name|pluginManager
init|=
operator|new
name|PluginManager
argument_list|(
name|initialSettings
operator|.
name|v2
argument_list|()
argument_list|,
name|url
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|action
condition|)
block|{
case|case
name|ACTION
operator|.
name|INSTALL
case|:
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"-> Installing "
operator|+
name|pluginName
operator|+
literal|"..."
argument_list|)
expr_stmt|;
name|pluginManager
operator|.
name|downloadAndExtract
argument_list|(
name|pluginName
argument_list|,
name|verbose
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Failed to install "
operator|+
name|pluginName
operator|+
literal|", reason: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|displayHelp
argument_list|(
literal|"Error while installing plugin, reason: "
operator|+
name|e
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|ACTION
operator|.
name|REMOVE
case|:
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"-> Removing "
operator|+
name|pluginName
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|pluginManager
operator|.
name|removePlugin
argument_list|(
name|pluginName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Failed to remove "
operator|+
name|pluginName
operator|+
literal|", reason: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|displayHelp
argument_list|(
literal|"Error while removing plugin, reason: "
operator|+
name|e
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|ACTION
operator|.
name|LIST
case|:
name|pluginManager
operator|.
name|listInstalledPlugins
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
DECL|method|displayHelp
function|private static void displayHelp
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Usage:"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    -u, --url     [plugin location]   : Set exact URL to download the plugin from"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    -i, --install [plugin name]       : Downloads and installs listed plugins [*]"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    -r, --remove  [plugin name]       : Removes listed plugins"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    -l, --list                        : List installed plugins"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    -v, --verbose                     : Prints verbose messages"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    -h, --help                        : Prints this help message"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|" [*] Plugin name could be:"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"     elasticsearch/plugin/version for official elasticsearch plugins (download from download.elasticsearch.org)"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"     groupId/artifactId/version   for community plugins (download from maven central or oss sonatype)"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"     username/repository          for site plugins (download from github master)"
argument_list|)
expr_stmt|;
if|if
condition|(
name|message
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Message:"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"   "
operator|+
name|message
argument_list|)
expr_stmt|;
block|}
block|}
function|}
end_class

end_unit

