begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/*  * A Simple class to handle wrapping a response with another response  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.support
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionResponse
import|;
end_import

begin_class
DECL|class|DelegatingActionListener
specifier|public
specifier|abstract
class|class
name|DelegatingActionListener
parameter_list|<
name|Instigator
extends|extends
name|ActionResponse
parameter_list|,
name|Delegated
extends|extends
name|ActionResponse
parameter_list|>
implements|implements
name|ActionListener
argument_list|<
name|Instigator
argument_list|>
block|{
DECL|field|delegatedActionListener
name|ActionListener
argument_list|<
name|Delegated
argument_list|>
name|delegatedActionListener
decl_stmt|;
DECL|method|DelegatingActionListener
specifier|protected
name|DelegatingActionListener
parameter_list|(
specifier|final
name|ActionListener
argument_list|<
name|Delegated
argument_list|>
name|listener
parameter_list|)
block|{
name|this
operator|.
name|delegatedActionListener
operator|=
name|listener
expr_stmt|;
block|}
DECL|method|getDelegatedFromInstigator
specifier|protected
specifier|abstract
name|Delegated
name|getDelegatedFromInstigator
parameter_list|(
name|Instigator
name|response
parameter_list|)
function_decl|;
annotation|@
name|Override
DECL|method|onResponse
specifier|public
specifier|final
name|void
name|onResponse
parameter_list|(
name|Instigator
name|response
parameter_list|)
block|{
name|delegatedActionListener
operator|.
name|onResponse
argument_list|(
name|getDelegatedFromInstigator
argument_list|(
name|response
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onFailure
specifier|public
specifier|final
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|delegatedActionListener
operator|.
name|onFailure
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

