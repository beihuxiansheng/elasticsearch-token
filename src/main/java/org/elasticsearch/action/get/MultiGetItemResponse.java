begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.get
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|get
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * A single multi get response.  */
end_comment

begin_class
DECL|class|MultiGetItemResponse
specifier|public
class|class
name|MultiGetItemResponse
implements|implements
name|Streamable
block|{
DECL|field|response
specifier|private
name|GetResponse
name|response
decl_stmt|;
DECL|field|failure
specifier|private
name|MultiGetResponse
operator|.
name|Failure
name|failure
decl_stmt|;
DECL|method|MultiGetItemResponse
name|MultiGetItemResponse
parameter_list|()
block|{      }
DECL|method|MultiGetItemResponse
specifier|public
name|MultiGetItemResponse
parameter_list|(
name|GetResponse
name|response
parameter_list|,
name|MultiGetResponse
operator|.
name|Failure
name|failure
parameter_list|)
block|{
name|this
operator|.
name|response
operator|=
name|response
expr_stmt|;
name|this
operator|.
name|failure
operator|=
name|failure
expr_stmt|;
block|}
comment|/**      * The index name of the document.      */
DECL|method|index
specifier|public
name|String
name|index
parameter_list|()
block|{
if|if
condition|(
name|failure
operator|!=
literal|null
condition|)
block|{
return|return
name|failure
operator|.
name|index
argument_list|()
return|;
block|}
return|return
name|response
operator|.
name|index
argument_list|()
return|;
block|}
comment|/**      * The index name of the document.      */
DECL|method|getIndex
specifier|public
name|String
name|getIndex
parameter_list|()
block|{
return|return
name|index
argument_list|()
return|;
block|}
comment|/**      * The type of the document.      */
DECL|method|type
specifier|public
name|String
name|type
parameter_list|()
block|{
if|if
condition|(
name|failure
operator|!=
literal|null
condition|)
block|{
return|return
name|failure
operator|.
name|type
argument_list|()
return|;
block|}
return|return
name|response
operator|.
name|type
argument_list|()
return|;
block|}
comment|/**      * The type of the document.      */
DECL|method|getType
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|type
argument_list|()
return|;
block|}
comment|/**      * The id of the document.      */
DECL|method|id
specifier|public
name|String
name|id
parameter_list|()
block|{
if|if
condition|(
name|failure
operator|!=
literal|null
condition|)
block|{
return|return
name|failure
operator|.
name|id
argument_list|()
return|;
block|}
return|return
name|response
operator|.
name|id
argument_list|()
return|;
block|}
comment|/**      * The id of the document.      */
DECL|method|getId
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
argument_list|()
return|;
block|}
comment|/**      * Is this a failed execution?      */
DECL|method|failed
specifier|public
name|boolean
name|failed
parameter_list|()
block|{
return|return
name|failure
operator|!=
literal|null
return|;
block|}
comment|/**      * Is this a failed execution?      */
DECL|method|isFailed
specifier|public
name|boolean
name|isFailed
parameter_list|()
block|{
return|return
name|failed
argument_list|()
return|;
block|}
comment|/**      * The actual get response,<tt>null</tt> if its a failure.      */
DECL|method|response
specifier|public
name|GetResponse
name|response
parameter_list|()
block|{
return|return
name|this
operator|.
name|response
return|;
block|}
comment|/**      * The actual get response,<tt>null</tt> if its a failure.      */
DECL|method|getResponse
specifier|public
name|GetResponse
name|getResponse
parameter_list|()
block|{
return|return
name|this
operator|.
name|response
return|;
block|}
comment|/**      * The failure if relevant.      */
DECL|method|failure
specifier|public
name|MultiGetResponse
operator|.
name|Failure
name|failure
parameter_list|()
block|{
return|return
name|this
operator|.
name|failure
return|;
block|}
comment|/**      * The failure if relevant.      */
DECL|method|getFailure
specifier|public
name|MultiGetResponse
operator|.
name|Failure
name|getFailure
parameter_list|()
block|{
return|return
name|failure
argument_list|()
return|;
block|}
DECL|method|readItemResponse
specifier|public
specifier|static
name|MultiGetItemResponse
name|readItemResponse
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|MultiGetItemResponse
name|response
init|=
operator|new
name|MultiGetItemResponse
argument_list|()
decl_stmt|;
name|response
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|failure
operator|=
name|MultiGetResponse
operator|.
name|Failure
operator|.
name|readFailure
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|response
operator|=
operator|new
name|GetResponse
argument_list|()
expr_stmt|;
name|response
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|failure
operator|!=
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|failure
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|response
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

