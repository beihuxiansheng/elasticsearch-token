begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.delete
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|delete
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|replication
operator|.
name|IndexReplicationOperationRequest
import|;
end_import

begin_comment
comment|/**  * Delete request to execute on all shards that belong to a specific index.  * Used when routing is required but not specified within the delete request.  */
end_comment

begin_class
DECL|class|IndexDeleteRequest
class|class
name|IndexDeleteRequest
extends|extends
name|IndexReplicationOperationRequest
argument_list|<
name|IndexDeleteRequest
argument_list|>
block|{
DECL|field|type
specifier|private
specifier|final
name|String
name|type
decl_stmt|;
DECL|field|id
specifier|private
specifier|final
name|String
name|id
decl_stmt|;
DECL|field|refresh
specifier|private
specifier|final
name|boolean
name|refresh
decl_stmt|;
DECL|field|version
specifier|private
specifier|final
name|long
name|version
decl_stmt|;
DECL|field|originalIndex
specifier|private
specifier|final
name|String
name|originalIndex
decl_stmt|;
DECL|method|IndexDeleteRequest
name|IndexDeleteRequest
parameter_list|(
name|DeleteRequest
name|request
parameter_list|,
name|String
name|concreteIndex
parameter_list|)
block|{
name|super
argument_list|(
name|concreteIndex
argument_list|,
name|request
operator|.
name|timeout
argument_list|()
argument_list|,
name|request
operator|.
name|consistencyLevel
argument_list|()
argument_list|,
name|request
operator|.
name|indices
argument_list|()
argument_list|,
name|request
operator|.
name|indicesOptions
argument_list|()
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|request
operator|.
name|type
argument_list|()
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|request
operator|.
name|id
argument_list|()
expr_stmt|;
name|this
operator|.
name|refresh
operator|=
name|request
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|this
operator|.
name|version
operator|=
name|request
operator|.
name|version
argument_list|()
expr_stmt|;
name|this
operator|.
name|originalIndex
operator|=
name|request
operator|.
name|index
argument_list|()
expr_stmt|;
block|}
DECL|method|type
name|String
name|type
parameter_list|()
block|{
return|return
name|this
operator|.
name|type
return|;
block|}
DECL|method|id
name|String
name|id
parameter_list|()
block|{
return|return
name|this
operator|.
name|id
return|;
block|}
DECL|method|refresh
name|boolean
name|refresh
parameter_list|()
block|{
return|return
name|this
operator|.
name|refresh
return|;
block|}
DECL|method|version
name|long
name|version
parameter_list|()
block|{
return|return
name|this
operator|.
name|version
return|;
block|}
DECL|method|originalIndex
name|String
name|originalIndex
parameter_list|()
block|{
return|return
name|originalIndex
return|;
block|}
block|}
end_class

end_unit

