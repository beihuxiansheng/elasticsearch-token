begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.cluster.snapshots.status
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|snapshots
operator|.
name|status
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilderString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|snapshots
operator|.
name|IndexShardSnapshotStatus
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|SnapshotStats
specifier|public
class|class
name|SnapshotStats
implements|implements
name|Streamable
implements|,
name|ToXContent
block|{
DECL|field|startTime
specifier|private
name|long
name|startTime
decl_stmt|;
DECL|field|time
specifier|private
name|long
name|time
decl_stmt|;
DECL|field|numberOfFiles
specifier|private
name|int
name|numberOfFiles
decl_stmt|;
DECL|field|processedFiles
specifier|private
name|int
name|processedFiles
decl_stmt|;
DECL|field|totalSize
specifier|private
name|long
name|totalSize
decl_stmt|;
DECL|field|processedSize
specifier|private
name|long
name|processedSize
decl_stmt|;
DECL|method|SnapshotStats
name|SnapshotStats
parameter_list|()
block|{     }
DECL|method|SnapshotStats
name|SnapshotStats
parameter_list|(
name|IndexShardSnapshotStatus
name|indexShardStatus
parameter_list|)
block|{
name|startTime
operator|=
name|indexShardStatus
operator|.
name|startTime
argument_list|()
expr_stmt|;
name|time
operator|=
name|indexShardStatus
operator|.
name|time
argument_list|()
expr_stmt|;
name|numberOfFiles
operator|=
name|indexShardStatus
operator|.
name|numberOfFiles
argument_list|()
expr_stmt|;
name|processedFiles
operator|=
name|indexShardStatus
operator|.
name|processedFiles
argument_list|()
expr_stmt|;
name|totalSize
operator|=
name|indexShardStatus
operator|.
name|totalSize
argument_list|()
expr_stmt|;
name|processedSize
operator|=
name|indexShardStatus
operator|.
name|processedSize
argument_list|()
expr_stmt|;
block|}
comment|/**      * Returns time when snapshot started      */
DECL|method|getStartTime
specifier|public
name|long
name|getStartTime
parameter_list|()
block|{
return|return
name|startTime
return|;
block|}
comment|/**      * Returns snapshot running time      */
DECL|method|getTime
specifier|public
name|long
name|getTime
parameter_list|()
block|{
return|return
name|time
return|;
block|}
comment|/**      * Returns number of files in the snapshot      */
DECL|method|getNumberOfFiles
specifier|public
name|int
name|getNumberOfFiles
parameter_list|()
block|{
return|return
name|numberOfFiles
return|;
block|}
comment|/**      * Returns number of files in the snapshot that were processed so far      */
DECL|method|getProcessedFiles
specifier|public
name|int
name|getProcessedFiles
parameter_list|()
block|{
return|return
name|processedFiles
return|;
block|}
comment|/**      * Returns total size of files in the snapshot      */
DECL|method|getTotalSize
specifier|public
name|long
name|getTotalSize
parameter_list|()
block|{
return|return
name|totalSize
return|;
block|}
comment|/**      * Returns total size of files in the snapshot that were processed so far      */
DECL|method|getProcessedSize
specifier|public
name|long
name|getProcessedSize
parameter_list|()
block|{
return|return
name|processedSize
return|;
block|}
DECL|method|readSnapshotStats
specifier|public
specifier|static
name|SnapshotStats
name|readSnapshotStats
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|SnapshotStats
name|stats
init|=
operator|new
name|SnapshotStats
argument_list|()
decl_stmt|;
name|stats
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|stats
return|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVLong
argument_list|(
name|startTime
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|time
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVInt
argument_list|(
name|numberOfFiles
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVInt
argument_list|(
name|processedFiles
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|totalSize
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|processedSize
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|startTime
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|time
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|numberOfFiles
operator|=
name|in
operator|.
name|readVInt
argument_list|()
expr_stmt|;
name|processedFiles
operator|=
name|in
operator|.
name|readVInt
argument_list|()
expr_stmt|;
name|totalSize
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|processedSize
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
block|}
DECL|class|Fields
specifier|static
specifier|final
class|class
name|Fields
block|{
DECL|field|STATS
specifier|static
specifier|final
name|XContentBuilderString
name|STATS
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
DECL|field|NUMBER_OF_FILES
specifier|static
specifier|final
name|XContentBuilderString
name|NUMBER_OF_FILES
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"number_of_files"
argument_list|)
decl_stmt|;
DECL|field|PROCESSED_FILES
specifier|static
specifier|final
name|XContentBuilderString
name|PROCESSED_FILES
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"processed_files"
argument_list|)
decl_stmt|;
DECL|field|TOTAL_SIZE_IN_BYTES
specifier|static
specifier|final
name|XContentBuilderString
name|TOTAL_SIZE_IN_BYTES
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"total_size_in_bytes"
argument_list|)
decl_stmt|;
DECL|field|TOTAL_SIZE
specifier|static
specifier|final
name|XContentBuilderString
name|TOTAL_SIZE
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"total_size"
argument_list|)
decl_stmt|;
DECL|field|PROCESSED_SIZE_IN_BYTES
specifier|static
specifier|final
name|XContentBuilderString
name|PROCESSED_SIZE_IN_BYTES
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"processed_size_in_bytes"
argument_list|)
decl_stmt|;
DECL|field|PROCESSED_SIZE
specifier|static
specifier|final
name|XContentBuilderString
name|PROCESSED_SIZE
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"processed_size"
argument_list|)
decl_stmt|;
DECL|field|START_TIME_IN_MILLIS
specifier|static
specifier|final
name|XContentBuilderString
name|START_TIME_IN_MILLIS
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"start_time_in_millis"
argument_list|)
decl_stmt|;
DECL|field|TIME_IN_MILLIS
specifier|static
specifier|final
name|XContentBuilderString
name|TIME_IN_MILLIS
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"time_in_millis"
argument_list|)
decl_stmt|;
DECL|field|TIME
specifier|static
specifier|final
name|XContentBuilderString
name|TIME
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"time"
argument_list|)
decl_stmt|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|ToXContent
operator|.
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|Fields
operator|.
name|STATS
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|NUMBER_OF_FILES
argument_list|,
name|getNumberOfFiles
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|PROCESSED_FILES
argument_list|,
name|getProcessedFiles
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|byteSizeField
argument_list|(
name|Fields
operator|.
name|TOTAL_SIZE_IN_BYTES
argument_list|,
name|Fields
operator|.
name|TOTAL_SIZE
argument_list|,
name|getTotalSize
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|byteSizeField
argument_list|(
name|Fields
operator|.
name|PROCESSED_SIZE_IN_BYTES
argument_list|,
name|Fields
operator|.
name|PROCESSED_SIZE
argument_list|,
name|getProcessedSize
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|START_TIME_IN_MILLIS
argument_list|,
name|getStartTime
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|timeValueField
argument_list|(
name|Fields
operator|.
name|TIME_IN_MILLIS
argument_list|,
name|Fields
operator|.
name|TIME
argument_list|,
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|builder
return|;
block|}
DECL|method|add
name|void
name|add
parameter_list|(
name|SnapshotStats
name|stats
parameter_list|)
block|{
name|numberOfFiles
operator|+=
name|stats
operator|.
name|numberOfFiles
expr_stmt|;
name|processedFiles
operator|+=
name|stats
operator|.
name|processedFiles
expr_stmt|;
name|totalSize
operator|+=
name|stats
operator|.
name|totalSize
expr_stmt|;
name|processedSize
operator|+=
name|stats
operator|.
name|processedSize
expr_stmt|;
if|if
condition|(
name|startTime
operator|==
literal|0
condition|)
block|{
comment|// First time here
name|startTime
operator|=
name|stats
operator|.
name|startTime
expr_stmt|;
name|time
operator|=
name|stats
operator|.
name|time
expr_stmt|;
block|}
else|else
block|{
comment|// The time the last snapshot ends
name|long
name|endTime
init|=
name|Math
operator|.
name|max
argument_list|(
name|startTime
operator|+
name|time
argument_list|,
name|stats
operator|.
name|startTime
operator|+
name|stats
operator|.
name|time
argument_list|)
decl_stmt|;
comment|// The time the first snapshot starts
name|startTime
operator|=
name|Math
operator|.
name|min
argument_list|(
name|startTime
argument_list|,
name|stats
operator|.
name|startTime
argument_list|)
expr_stmt|;
comment|// Update duration
name|time
operator|=
name|endTime
operator|-
name|startTime
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

