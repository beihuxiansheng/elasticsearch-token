begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.cluster.state
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|state
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequestValidationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|master
operator|.
name|MasterNodeOperationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|ClusterStateRequest
specifier|public
class|class
name|ClusterStateRequest
extends|extends
name|MasterNodeOperationRequest
argument_list|<
name|ClusterStateRequest
argument_list|>
block|{
DECL|field|NONE
specifier|public
specifier|final
specifier|static
name|String
name|NONE
init|=
literal|"_na"
decl_stmt|;
DECL|field|filterRoutingTable
specifier|private
name|boolean
name|filterRoutingTable
init|=
literal|false
decl_stmt|;
DECL|field|filterNodes
specifier|private
name|boolean
name|filterNodes
init|=
literal|false
decl_stmt|;
DECL|field|filterMetaData
specifier|private
name|boolean
name|filterMetaData
init|=
literal|false
decl_stmt|;
DECL|field|filterBlocks
specifier|private
name|boolean
name|filterBlocks
init|=
literal|false
decl_stmt|;
DECL|field|filteredIndices
specifier|private
name|String
index|[]
name|filteredIndices
init|=
name|Strings
operator|.
name|EMPTY_ARRAY
decl_stmt|;
DECL|field|filteredIndexTemplates
specifier|private
name|String
index|[]
name|filteredIndexTemplates
init|=
name|Strings
operator|.
name|EMPTY_ARRAY
decl_stmt|;
DECL|field|local
specifier|private
name|boolean
name|local
init|=
literal|false
decl_stmt|;
DECL|method|ClusterStateRequest
specifier|public
name|ClusterStateRequest
parameter_list|()
block|{     }
annotation|@
name|Override
DECL|method|validate
specifier|public
name|ActionRequestValidationException
name|validate
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
DECL|method|filterAll
specifier|public
name|ClusterStateRequest
name|filterAll
parameter_list|()
block|{
name|filterRoutingTable
operator|=
literal|true
expr_stmt|;
name|filterNodes
operator|=
literal|true
expr_stmt|;
name|filterMetaData
operator|=
literal|true
expr_stmt|;
name|filterBlocks
operator|=
literal|true
expr_stmt|;
name|filteredIndices
operator|=
name|Strings
operator|.
name|EMPTY_ARRAY
expr_stmt|;
name|filteredIndexTemplates
operator|=
name|Strings
operator|.
name|EMPTY_ARRAY
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|filterRoutingTable
specifier|public
name|boolean
name|filterRoutingTable
parameter_list|()
block|{
return|return
name|filterRoutingTable
return|;
block|}
DECL|method|filterRoutingTable
specifier|public
name|ClusterStateRequest
name|filterRoutingTable
parameter_list|(
name|boolean
name|filterRoutingTable
parameter_list|)
block|{
name|this
operator|.
name|filterRoutingTable
operator|=
name|filterRoutingTable
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|filterNodes
specifier|public
name|boolean
name|filterNodes
parameter_list|()
block|{
return|return
name|filterNodes
return|;
block|}
DECL|method|filterNodes
specifier|public
name|ClusterStateRequest
name|filterNodes
parameter_list|(
name|boolean
name|filterNodes
parameter_list|)
block|{
name|this
operator|.
name|filterNodes
operator|=
name|filterNodes
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|filterMetaData
specifier|public
name|boolean
name|filterMetaData
parameter_list|()
block|{
return|return
name|filterMetaData
return|;
block|}
DECL|method|filterMetaData
specifier|public
name|ClusterStateRequest
name|filterMetaData
parameter_list|(
name|boolean
name|filterMetaData
parameter_list|)
block|{
name|this
operator|.
name|filterMetaData
operator|=
name|filterMetaData
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|filterBlocks
specifier|public
name|boolean
name|filterBlocks
parameter_list|()
block|{
return|return
name|filterBlocks
return|;
block|}
DECL|method|filterBlocks
specifier|public
name|ClusterStateRequest
name|filterBlocks
parameter_list|(
name|boolean
name|filterBlocks
parameter_list|)
block|{
name|this
operator|.
name|filterBlocks
operator|=
name|filterBlocks
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|filteredIndices
specifier|public
name|String
index|[]
name|filteredIndices
parameter_list|()
block|{
return|return
name|filteredIndices
return|;
block|}
DECL|method|filterOutIndices
specifier|public
name|ClusterStateRequest
name|filterOutIndices
parameter_list|()
block|{
name|this
operator|.
name|filteredIndices
operator|=
operator|new
name|String
index|[]
block|{
name|NONE
block|}
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|filteredIndices
specifier|public
name|ClusterStateRequest
name|filteredIndices
parameter_list|(
name|String
modifier|...
name|filteredIndices
parameter_list|)
block|{
name|this
operator|.
name|filteredIndices
operator|=
name|filteredIndices
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|filteredIndexTemplates
specifier|public
name|String
index|[]
name|filteredIndexTemplates
parameter_list|()
block|{
return|return
name|this
operator|.
name|filteredIndexTemplates
return|;
block|}
DECL|method|filteredIndexTemplates
specifier|public
name|ClusterStateRequest
name|filteredIndexTemplates
parameter_list|(
name|String
modifier|...
name|filteredIndexTemplates
parameter_list|)
block|{
name|this
operator|.
name|filteredIndexTemplates
operator|=
name|filteredIndexTemplates
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|local
specifier|public
name|ClusterStateRequest
name|local
parameter_list|(
name|boolean
name|local
parameter_list|)
block|{
name|this
operator|.
name|local
operator|=
name|local
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|local
specifier|public
name|boolean
name|local
parameter_list|()
block|{
return|return
name|this
operator|.
name|local
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|filterRoutingTable
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
name|filterNodes
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
name|filterMetaData
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
name|filterBlocks
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
name|filteredIndices
operator|=
name|in
operator|.
name|readStringArray
argument_list|()
expr_stmt|;
name|filteredIndexTemplates
operator|=
name|in
operator|.
name|readStringArray
argument_list|()
expr_stmt|;
name|local
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|filterRoutingTable
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|filterNodes
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|filterMetaData
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|filterBlocks
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeStringArray
argument_list|(
name|filteredIndices
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeStringArray
argument_list|(
name|filteredIndexTemplates
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|local
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

