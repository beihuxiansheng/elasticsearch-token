begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.indices.upgrade.get
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|upgrade
operator|.
name|get
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|broadcast
operator|.
name|BroadcastShardResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|ShardRouting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|ImmutableShardRouting
operator|.
name|readShardRoutingEntry
import|;
end_import

begin_class
DECL|class|ShardUpgradeStatus
specifier|public
class|class
name|ShardUpgradeStatus
extends|extends
name|BroadcastShardResponse
block|{
DECL|field|shardRouting
specifier|private
name|ShardRouting
name|shardRouting
decl_stmt|;
DECL|field|totalBytes
specifier|private
name|long
name|totalBytes
decl_stmt|;
DECL|field|toUpgradeBytes
specifier|private
name|long
name|toUpgradeBytes
decl_stmt|;
DECL|field|toUpgradeBytesAncient
specifier|private
name|long
name|toUpgradeBytesAncient
decl_stmt|;
DECL|method|ShardUpgradeStatus
name|ShardUpgradeStatus
parameter_list|()
block|{     }
DECL|method|ShardUpgradeStatus
name|ShardUpgradeStatus
parameter_list|(
name|ShardRouting
name|shardRouting
parameter_list|,
name|long
name|totalBytes
parameter_list|,
name|long
name|toUpgradeBytes
parameter_list|,
name|long
name|upgradeBytesAncient
parameter_list|)
block|{
name|super
argument_list|(
name|shardRouting
operator|.
name|shardId
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|shardRouting
operator|=
name|shardRouting
expr_stmt|;
name|this
operator|.
name|totalBytes
operator|=
name|totalBytes
expr_stmt|;
name|this
operator|.
name|toUpgradeBytes
operator|=
name|toUpgradeBytes
expr_stmt|;
name|this
operator|.
name|toUpgradeBytesAncient
operator|=
name|upgradeBytesAncient
expr_stmt|;
block|}
DECL|method|getShardRouting
specifier|public
name|ShardRouting
name|getShardRouting
parameter_list|()
block|{
return|return
name|this
operator|.
name|shardRouting
return|;
block|}
DECL|method|getTotalBytes
specifier|public
name|long
name|getTotalBytes
parameter_list|()
block|{
return|return
name|totalBytes
return|;
block|}
DECL|method|getToUpgradeBytes
specifier|public
name|long
name|getToUpgradeBytes
parameter_list|()
block|{
return|return
name|toUpgradeBytes
return|;
block|}
DECL|method|getToUpgradeBytesAncient
specifier|public
name|long
name|getToUpgradeBytesAncient
parameter_list|()
block|{
return|return
name|toUpgradeBytesAncient
return|;
block|}
DECL|method|readShardUpgradeStatus
specifier|public
specifier|static
name|ShardUpgradeStatus
name|readShardUpgradeStatus
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|ShardUpgradeStatus
name|shard
init|=
operator|new
name|ShardUpgradeStatus
argument_list|()
decl_stmt|;
name|shard
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|shard
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|shardRouting
operator|=
name|readShardRoutingEntry
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|totalBytes
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|toUpgradeBytes
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|toUpgradeBytesAncient
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|shardRouting
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|totalBytes
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|toUpgradeBytes
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|toUpgradeBytesAncient
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

