begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.indices.status
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|status
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|support
operator|.
name|BaseIndicesRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|IgnoreIndices
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|IndicesAdminClient
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|IndicesStatusRequestBuilder
specifier|public
class|class
name|IndicesStatusRequestBuilder
extends|extends
name|BaseIndicesRequestBuilder
argument_list|<
name|IndicesStatusRequest
argument_list|,
name|IndicesStatusResponse
argument_list|>
block|{
DECL|method|IndicesStatusRequestBuilder
specifier|public
name|IndicesStatusRequestBuilder
parameter_list|(
name|IndicesAdminClient
name|indicesClient
parameter_list|)
block|{
name|super
argument_list|(
name|indicesClient
argument_list|,
operator|new
name|IndicesStatusRequest
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Sets specific indices to return the status for.      */
DECL|method|setIndices
specifier|public
name|IndicesStatusRequestBuilder
name|setIndices
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
name|request
operator|.
name|indices
argument_list|(
name|indices
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Should the status include recovery information. Defaults to<tt>false</tt>.      */
DECL|method|setRecovery
specifier|public
name|IndicesStatusRequestBuilder
name|setRecovery
parameter_list|(
name|boolean
name|recovery
parameter_list|)
block|{
name|request
operator|.
name|recovery
argument_list|(
name|recovery
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Should the status include recovery information. Defaults to<tt>false</tt>.      */
DECL|method|setSnapshot
specifier|public
name|IndicesStatusRequestBuilder
name|setSnapshot
parameter_list|(
name|boolean
name|snapshot
parameter_list|)
block|{
name|request
operator|.
name|snapshot
argument_list|(
name|snapshot
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Specifies what type of requested indices to ignore. For example indices that don't exist.      */
DECL|method|setIgnoreIndices
specifier|public
name|IndicesStatusRequestBuilder
name|setIgnoreIndices
parameter_list|(
name|IgnoreIndices
name|ignoreIndices
parameter_list|)
block|{
name|request
argument_list|()
operator|.
name|ignoreIndices
argument_list|(
name|ignoreIndices
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|doExecute
specifier|protected
name|void
name|doExecute
parameter_list|(
name|ActionListener
argument_list|<
name|IndicesStatusResponse
argument_list|>
name|listener
parameter_list|)
block|{
name|client
operator|.
name|status
argument_list|(
name|request
argument_list|,
name|listener
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

