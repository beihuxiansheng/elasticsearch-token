begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.mlt
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|mlt
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|ElasticsearchClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|Scroll
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|builder
operator|.
name|SearchSourceBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|MoreLikeThisRequestBuilder
specifier|public
class|class
name|MoreLikeThisRequestBuilder
extends|extends
name|ActionRequestBuilder
argument_list|<
name|MoreLikeThisRequest
argument_list|,
name|SearchResponse
argument_list|,
name|MoreLikeThisRequestBuilder
argument_list|>
block|{
DECL|method|MoreLikeThisRequestBuilder
specifier|public
name|MoreLikeThisRequestBuilder
parameter_list|(
name|ElasticsearchClient
name|client
parameter_list|,
name|MoreLikeThisAction
name|action
parameter_list|)
block|{
name|super
argument_list|(
name|client
argument_list|,
name|action
argument_list|,
operator|new
name|MoreLikeThisRequest
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|MoreLikeThisRequestBuilder
specifier|public
name|MoreLikeThisRequestBuilder
parameter_list|(
name|ElasticsearchClient
name|client
parameter_list|,
name|MoreLikeThisAction
name|action
parameter_list|,
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|super
argument_list|(
name|client
argument_list|,
name|action
argument_list|,
operator|new
name|MoreLikeThisRequest
argument_list|(
name|index
argument_list|)
operator|.
name|type
argument_list|(
name|type
argument_list|)
operator|.
name|id
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * The fields of the document to use in order to find documents "like" this one. Defaults to run      * against all the document fields.      */
DECL|method|setField
specifier|public
name|MoreLikeThisRequestBuilder
name|setField
parameter_list|(
name|String
modifier|...
name|fields
parameter_list|)
block|{
name|request
operator|.
name|fields
argument_list|(
name|fields
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets the routing. Required if routing isn't id based.      */
DECL|method|setRouting
specifier|public
name|MoreLikeThisRequestBuilder
name|setRouting
parameter_list|(
name|String
name|routing
parameter_list|)
block|{
name|request
operator|.
name|routing
argument_list|(
name|routing
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Number of terms that must match the generated query expressed in the      * common syntax for minimum should match. Defaults to<tt>30%</tt>.      *      * @see org.elasticsearch.common.lucene.search.Queries#calculateMinShouldMatch(int, String)      */
DECL|method|setMinimumShouldMatch
specifier|public
name|MoreLikeThisRequestBuilder
name|setMinimumShouldMatch
parameter_list|(
name|String
name|minimumShouldMatch
parameter_list|)
block|{
name|request
operator|.
name|minimumShouldMatch
argument_list|(
name|minimumShouldMatch
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The percent of the terms to match for each field. Defaults to<tt>0.3f</tt>.      */
DECL|method|setPercentTermsToMatch
specifier|public
name|MoreLikeThisRequestBuilder
name|setPercentTermsToMatch
parameter_list|(
name|float
name|percentTermsToMatch
parameter_list|)
block|{
return|return
name|setMinimumShouldMatch
argument_list|(
name|Math
operator|.
name|round
argument_list|(
name|percentTermsToMatch
operator|*
literal|100
argument_list|)
operator|+
literal|"%"
argument_list|)
return|;
block|}
comment|/**      * The frequency below which terms will be ignored in the source doc. Defaults to<tt>2</tt>.      */
DECL|method|setMinTermFreq
specifier|public
name|MoreLikeThisRequestBuilder
name|setMinTermFreq
parameter_list|(
name|int
name|minTermFreq
parameter_list|)
block|{
name|request
operator|.
name|minTermFreq
argument_list|(
name|minTermFreq
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The maximum number of query terms that will be included in any generated query. Defaults to<tt>25</tt>.      */
DECL|method|maxQueryTerms
specifier|public
name|MoreLikeThisRequestBuilder
name|maxQueryTerms
parameter_list|(
name|int
name|maxQueryTerms
parameter_list|)
block|{
name|request
operator|.
name|maxQueryTerms
argument_list|(
name|maxQueryTerms
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Any word in this set is considered "uninteresting" and ignored.      *<p/>      *<p>Even if your Analyzer allows stopwords, you might want to tell the MoreLikeThis code to ignore them, as      * for the purposes of document similarity it seems reasonable to assume that "a stop word is never interesting".      *<p/>      *<p>Defaults to no stop words.      */
DECL|method|setStopWords
specifier|public
name|MoreLikeThisRequestBuilder
name|setStopWords
parameter_list|(
name|String
modifier|...
name|stopWords
parameter_list|)
block|{
name|request
operator|.
name|stopWords
argument_list|(
name|stopWords
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The frequency at which words will be ignored which do not occur in at least this      * many docs. Defaults to<tt>5</tt>.      */
DECL|method|setMinDocFreq
specifier|public
name|MoreLikeThisRequestBuilder
name|setMinDocFreq
parameter_list|(
name|int
name|minDocFreq
parameter_list|)
block|{
name|request
operator|.
name|minDocFreq
argument_list|(
name|minDocFreq
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The maximum frequency in which words may still appear. Words that appear      * in more than this many docs will be ignored. Defaults to unbounded.      */
DECL|method|setMaxDocFreq
specifier|public
name|MoreLikeThisRequestBuilder
name|setMaxDocFreq
parameter_list|(
name|int
name|maxDocFreq
parameter_list|)
block|{
name|request
operator|.
name|maxDocFreq
argument_list|(
name|maxDocFreq
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The minimum word length below which words will be ignored. Defaults to<tt>0</tt>.      */
DECL|method|setMinWordLen
specifier|public
name|MoreLikeThisRequestBuilder
name|setMinWordLen
parameter_list|(
name|int
name|minWordLen
parameter_list|)
block|{
name|request
operator|.
name|minWordLength
argument_list|(
name|minWordLen
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The maximum word length above which words will be ignored. Defaults to unbounded.      */
DECL|method|setMaxWordLen
specifier|public
name|MoreLikeThisRequestBuilder
name|setMaxWordLen
parameter_list|(
name|int
name|maxWordLen
parameter_list|)
block|{
name|request
argument_list|()
operator|.
name|maxWordLength
argument_list|(
name|maxWordLen
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The boost factor to use when boosting terms. Defaults to<tt>1</tt>.      */
DECL|method|setBoostTerms
specifier|public
name|MoreLikeThisRequestBuilder
name|setBoostTerms
parameter_list|(
name|float
name|boostTerms
parameter_list|)
block|{
name|request
operator|.
name|boostTerms
argument_list|(
name|boostTerms
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Whether to include the queried document. Defaults to<tt>false</tt>.      */
DECL|method|setInclude
specifier|public
name|MoreLikeThisRequestBuilder
name|setInclude
parameter_list|(
name|boolean
name|include
parameter_list|)
block|{
name|request
operator|.
name|include
argument_list|(
name|include
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * An optional search source request allowing to control the search request for the      * more like this documents.      */
DECL|method|setSearchSource
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchSource
parameter_list|(
name|SearchSourceBuilder
name|sourceBuilder
parameter_list|)
block|{
name|request
operator|.
name|searchSource
argument_list|(
name|sourceBuilder
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * An optional search source request allowing to control the search request for the      * more like this documents.      */
DECL|method|setSearchSource
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchSource
parameter_list|(
name|String
name|searchSource
parameter_list|)
block|{
name|request
operator|.
name|searchSource
argument_list|(
name|searchSource
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * An optional search source request allowing to control the search request for the      * more like this documents.      */
DECL|method|setSearchSource
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchSource
parameter_list|(
name|Map
name|searchSource
parameter_list|)
block|{
name|request
operator|.
name|searchSource
argument_list|(
name|searchSource
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * An optional search source request allowing to control the search request for the      * more like this documents.      */
DECL|method|setSearchSource
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchSource
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|)
block|{
name|request
operator|.
name|searchSource
argument_list|(
name|builder
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * An optional search source request allowing to control the search request for the      * more like this documents.      */
DECL|method|setSearchSource
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchSource
parameter_list|(
name|byte
index|[]
name|searchSource
parameter_list|)
block|{
name|request
operator|.
name|searchSource
argument_list|(
name|searchSource
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The search type of the mlt search query.      */
DECL|method|setSearchType
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchType
parameter_list|(
name|SearchType
name|searchType
parameter_list|)
block|{
name|request
operator|.
name|searchType
argument_list|(
name|searchType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The search type of the mlt search query.      */
DECL|method|setSearchType
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchType
parameter_list|(
name|String
name|searchType
parameter_list|)
block|{
name|request
operator|.
name|searchType
argument_list|(
name|searchType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The indices the resulting mlt query will run against. If not set, will run      * against the index the document was fetched from.      */
DECL|method|setSearchIndices
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchIndices
parameter_list|(
name|String
modifier|...
name|searchIndices
parameter_list|)
block|{
name|request
operator|.
name|searchIndices
argument_list|(
name|searchIndices
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The types the resulting mlt query will run against. If not set, will run      * against the type of the document fetched.      */
DECL|method|setSearchTypes
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchTypes
parameter_list|(
name|String
modifier|...
name|searchTypes
parameter_list|)
block|{
name|request
operator|.
name|searchTypes
argument_list|(
name|searchTypes
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * An optional search scroll request to be able to continue and scroll the search      * operation.      */
DECL|method|setSearchScroll
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchScroll
parameter_list|(
name|Scroll
name|searchScroll
parameter_list|)
block|{
name|request
operator|.
name|searchScroll
argument_list|(
name|searchScroll
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * The number of documents to return, defaults to 10.      */
DECL|method|setSearchSize
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchSize
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|request
operator|.
name|searchSize
argument_list|(
name|size
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * From which search result set to return.      */
DECL|method|setSearchFrom
specifier|public
name|MoreLikeThisRequestBuilder
name|setSearchFrom
parameter_list|(
name|int
name|from
parameter_list|)
block|{
name|request
operator|.
name|searchFrom
argument_list|(
name|from
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

