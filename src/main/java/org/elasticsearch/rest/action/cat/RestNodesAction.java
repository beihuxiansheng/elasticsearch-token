begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.rest.action.cat
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|cat
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|info
operator|.
name|NodeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|info
operator|.
name|NodesInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|info
operator|.
name|NodesInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|stats
operator|.
name|NodeStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|stats
operator|.
name|NodesStatsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|stats
operator|.
name|NodesStatsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|state
operator|.
name|ClusterStateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|state
operator|.
name|ClusterStateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|transport
operator|.
name|InetSocketTransportAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|XContentThrowableRestResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|support
operator|.
name|RestTable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestRequest
operator|.
name|Method
operator|.
name|GET
import|;
end_import

begin_class
DECL|class|RestNodesAction
specifier|public
class|class
name|RestNodesAction
extends|extends
name|AbstractCatAction
block|{
annotation|@
name|Inject
DECL|method|RestNodesAction
specifier|public
name|RestNodesAction
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|Client
name|client
parameter_list|,
name|RestController
name|controller
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|,
name|client
argument_list|)
expr_stmt|;
name|controller
operator|.
name|registerHandler
argument_list|(
name|GET
argument_list|,
literal|"/_cat/nodes"
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|documentation
name|void
name|documentation
parameter_list|(
name|StringBuilder
name|sb
parameter_list|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"/_cat/nodes\n"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doRequest
specifier|public
name|void
name|doRequest
parameter_list|(
specifier|final
name|RestRequest
name|request
parameter_list|,
specifier|final
name|RestChannel
name|channel
parameter_list|)
block|{
specifier|final
name|ClusterStateRequest
name|clusterStateRequest
init|=
operator|new
name|ClusterStateRequest
argument_list|()
decl_stmt|;
name|clusterStateRequest
operator|.
name|clear
argument_list|()
operator|.
name|nodes
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|clusterStateRequest
operator|.
name|local
argument_list|(
name|request
operator|.
name|paramAsBoolean
argument_list|(
literal|"local"
argument_list|,
name|clusterStateRequest
operator|.
name|local
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|clusterStateRequest
operator|.
name|masterNodeTimeout
argument_list|(
name|request
operator|.
name|paramAsTime
argument_list|(
literal|"master_timeout"
argument_list|,
name|clusterStateRequest
operator|.
name|masterNodeTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|state
argument_list|(
name|clusterStateRequest
argument_list|,
operator|new
name|ActionListener
argument_list|<
name|ClusterStateResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
specifier|final
name|ClusterStateResponse
name|clusterStateResponse
parameter_list|)
block|{
name|NodesInfoRequest
name|nodesInfoRequest
init|=
operator|new
name|NodesInfoRequest
argument_list|()
decl_stmt|;
name|nodesInfoRequest
operator|.
name|clear
argument_list|()
operator|.
name|jvm
argument_list|(
literal|true
argument_list|)
operator|.
name|os
argument_list|(
literal|true
argument_list|)
operator|.
name|process
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|nodesInfo
argument_list|(
name|nodesInfoRequest
argument_list|,
operator|new
name|ActionListener
argument_list|<
name|NodesInfoResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
specifier|final
name|NodesInfoResponse
name|nodesInfoResponse
parameter_list|)
block|{
name|NodesStatsRequest
name|nodesStatsRequest
init|=
operator|new
name|NodesStatsRequest
argument_list|()
decl_stmt|;
name|nodesStatsRequest
operator|.
name|clear
argument_list|()
operator|.
name|jvm
argument_list|(
literal|true
argument_list|)
operator|.
name|os
argument_list|(
literal|true
argument_list|)
operator|.
name|fs
argument_list|(
literal|true
argument_list|)
operator|.
name|indices
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|nodesStats
argument_list|(
name|nodesStatsRequest
argument_list|,
operator|new
name|ActionListener
argument_list|<
name|NodesStatsResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|NodesStatsResponse
name|nodesStatsResponse
parameter_list|)
block|{
try|try
block|{
name|channel
operator|.
name|sendResponse
argument_list|(
name|RestTable
operator|.
name|buildResponse
argument_list|(
name|buildTable
argument_list|(
name|request
argument_list|,
name|clusterStateResponse
argument_list|,
name|nodesInfoResponse
argument_list|,
name|nodesStatsResponse
argument_list|)
argument_list|,
name|request
argument_list|,
name|channel
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|onFailure
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
try|try
block|{
name|channel
operator|.
name|sendResponse
argument_list|(
operator|new
name|XContentThrowableRestResponse
argument_list|(
name|request
argument_list|,
name|e
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e1
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"Failed to send failure response"
argument_list|,
name|e1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
try|try
block|{
name|channel
operator|.
name|sendResponse
argument_list|(
operator|new
name|XContentThrowableRestResponse
argument_list|(
name|request
argument_list|,
name|e
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e1
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"Failed to send failure response"
argument_list|,
name|e1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
try|try
block|{
name|channel
operator|.
name|sendResponse
argument_list|(
operator|new
name|XContentThrowableRestResponse
argument_list|(
name|request
argument_list|,
name|e
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e1
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"Failed to send failure response"
argument_list|,
name|e1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getTableWithHeader
name|Table
name|getTableWithHeader
parameter_list|(
specifier|final
name|RestRequest
name|request
parameter_list|)
block|{
name|Table
name|table
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|table
operator|.
name|startHeaders
argument_list|()
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"id"
argument_list|,
literal|"default:false;alias:id,nodeId;desc:unique node id"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"pid"
argument_list|,
literal|"default:false;alias:p;desc:process id"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"host"
argument_list|,
literal|"alias:h;desc:host name"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"ip"
argument_list|,
literal|"alias:i;desc:ip address"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"port"
argument_list|,
literal|"default:false;alias:po;desc:bound transport port"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"version"
argument_list|,
literal|"default:false;alias:v;desc:es version"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"build"
argument_list|,
literal|"default:false;alias:b;desc:es build hash"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"jdk"
argument_list|,
literal|"default:false;alias:j;desc:jdk version"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"disk.avail"
argument_list|,
literal|"default:false;alias:d,disk,diskAvail;text-align:right;desc:available disk space"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"heap.percent"
argument_list|,
literal|"alias:hp,heapPercent;text-align:right;desc:used heap ratio"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"heap.max"
argument_list|,
literal|"default:false;alias:hm,heapMax;text-align:right;desc:max configured heap"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"ram.percent"
argument_list|,
literal|"alias:rp,ramPercent;text-align:right;desc:used machine memory ratio"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"ram.max"
argument_list|,
literal|"default:false;alias:rm,ramMax;text-align:right;desc:total machine memory"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"load"
argument_list|,
literal|"alias:l;text-align:right;desc:most recent load avg"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"uptime"
argument_list|,
literal|"default:false;alias:u;text-align:right;desc:node uptime"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"node.role"
argument_list|,
literal|"alias:r,role,dc,nodeRole;desc:d:data node, c:client node"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"master"
argument_list|,
literal|"alias:m;desc:m:master-eligible, *:current master"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"name"
argument_list|,
literal|"alias:n;desc:node name"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"completion.size"
argument_list|,
literal|"alias:cs,completionSize;default:false;text-align:right;desc:size of completion"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"fielddata.memory_size"
argument_list|,
literal|"alias:fm,fielddataMemory;default:false;text-align:right;desc:used fielddata cache"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"fielddata.evictions"
argument_list|,
literal|"alias:fe,fielddataEvictions;default:false;text-align:right;desc:fielddata evictions"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"filter_cache.memory_size"
argument_list|,
literal|"alias:fcm,filterCacheMemory;default:false;text-align:right;desc:used filter cache"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"filter_cache.evictions"
argument_list|,
literal|"alias:fce,filterCacheEvictions;default:false;text-align:right;desc:filter cache evictions"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"flush.total"
argument_list|,
literal|"alias:ft,flushTotal;default:false;text-align:right;desc:number of flushes"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"flush.total_time"
argument_list|,
literal|"alias:ftt,flushTotalTime;default:false;text-align:right;desc:time spent in flush"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.current"
argument_list|,
literal|"alias:gc,getCurrent;default:false;text-align:right;desc:number of current get ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.time"
argument_list|,
literal|"alias:gti,getTime;default:false;text-align:right;desc:time spent in get"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.total"
argument_list|,
literal|"alias:gto,getTotal;default:false;text-align:right;desc:number of get ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.exists_time"
argument_list|,
literal|"alias:geti,getExistsTime;default:false;text-align:right;desc:time spent in successful gets"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.exists_total"
argument_list|,
literal|"alias:geto,getExistsTotal;default:false;text-align:right;desc:number of successful gets"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.missing_time"
argument_list|,
literal|"alias:gmti,getMissingTime;default:false;text-align:right;desc:time spent in failed gets"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.missing_total"
argument_list|,
literal|"alias:gmto,getMissingTotal;default:false;text-align:right;desc:number of failed gets"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"id_cache.memory_size"
argument_list|,
literal|"alias:im,idCacheMemory;default:false;text-align:right;desc:used id cache"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.delete_current"
argument_list|,
literal|"alias:idc,indexingDeleteCurrent;default:false;text-align:right;desc:number of current deletions"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.delete_time"
argument_list|,
literal|"alias:idti,indexingDeleteTime;default:false;text-align:right;desc:time spent in deletions"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.delete_total"
argument_list|,
literal|"alias:idto,indexingDeleteTotal;default:false;text-align:right;desc:number of delete ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.index_current"
argument_list|,
literal|"alias:iic,indexingIndexCurrent;default:false;text-align:right;desc:number of current indexing ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.index_time"
argument_list|,
literal|"alias:iiti,indexingIndexTime;default:false;text-align:right;desc:time spent in indexing"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.index_total"
argument_list|,
literal|"alias:iito,indexingIndexTotal;default:false;text-align:right;desc:number of indexing ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.current"
argument_list|,
literal|"alias:mc,mergesCurrent;default:false;text-align:right;desc:number of current merges"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.current_docs"
argument_list|,
literal|"alias:mcd,mergesCurrentDocs;default:false;text-align:right;desc:number of current merging docs"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.current_size"
argument_list|,
literal|"alias:mcs,mergesCurrentSize;default:false;text-align:right;desc:size of current merges"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.total"
argument_list|,
literal|"alias:mt,mergesTotal;default:false;text-align:right;desc:number of completed merge ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.total_docs"
argument_list|,
literal|"alias:mtd,mergesTotalDocs;default:false;text-align:right;desc:docs merged"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.total_size"
argument_list|,
literal|"alias:mts,mergesTotalSize;default:false;text-align:right;desc:size merged"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.total_time"
argument_list|,
literal|"alias:mtt,mergesTotalTime;default:false;text-align:right;desc:time spent in merges"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"percolate.current"
argument_list|,
literal|"alias:pc,percolateCurrent;default:false;text-align:right;desc:number of current percolations"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"percolate.memory_size"
argument_list|,
literal|"alias:pm,percolateMemory;default:false;text-align:right;desc:memory used by percolations"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"percolate.queries"
argument_list|,
literal|"alias:pq,percolateQueries;default:false;text-align:right;desc:number of registered percolation queries"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"percolate.time"
argument_list|,
literal|"alias:pti,percolateTime;default:false;text-align:right;desc:time spent percolating"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"percolate.total"
argument_list|,
literal|"alias:pto,percolateTotal;default:false;text-align:right;desc:total percolations"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"refresh.total"
argument_list|,
literal|"alias:rto,refreshTotal;default:false;text-align:right;desc:total refreshes"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"refresh.time"
argument_list|,
literal|"alias:rti,refreshTime;default:false;text-align:right;desc:time spent in refreshes"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.fetch_current"
argument_list|,
literal|"alias:sfc,searchFetchCurrent;default:false;text-align:right;desc:current fetch phase ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.fetch_time"
argument_list|,
literal|"alias:sfti,searchFetchTime;default:false;text-align:right;desc:time spent in fetch phase"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.fetch_total"
argument_list|,
literal|"alias:sfto,searchFetchTotal;default:false;text-align:right;desc:total fetch ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.open_contexts"
argument_list|,
literal|"alias:so,searchOpenContexts;default:false;text-align:right;desc:open search contexts"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.query_current"
argument_list|,
literal|"alias:sqc,searchQueryCurrent;default:false;text-align:right;desc:current query phase ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.query_time"
argument_list|,
literal|"alias:sqti,searchQueryTime;default:false;text-align:right;desc:time spent in query phase"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.query_total"
argument_list|,
literal|"alias:sqto,searchQueryTotal;default:false;text-align:right;desc:total query phase ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"segments.count"
argument_list|,
literal|"alias:sc,segmentsCount;default:false;text-align:right;desc:number of segments"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"segments.memory"
argument_list|,
literal|"alias:sm,segmentsMemory;default:false;text-align:right;desc:memory used by segments"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"suggest.current"
argument_list|,
literal|"alias:suc,suggestCurrent;default:false;text-align:right;desc:number of current suggest ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"suggest.time"
argument_list|,
literal|"alias:suti,suggestTime;default:false;text-align:right;desc:time spend in suggest"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"suggest.total"
argument_list|,
literal|"alias:suto,suggestTotal;default:false;text-align:right;desc:number of suggest ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|endHeaders
argument_list|()
expr_stmt|;
return|return
name|table
return|;
block|}
DECL|method|buildTable
specifier|private
name|Table
name|buildTable
parameter_list|(
name|RestRequest
name|req
parameter_list|,
name|ClusterStateResponse
name|state
parameter_list|,
name|NodesInfoResponse
name|nodesInfo
parameter_list|,
name|NodesStatsResponse
name|nodesStats
parameter_list|)
block|{
name|boolean
name|fullId
init|=
name|req
operator|.
name|paramAsBoolean
argument_list|(
literal|"full_id"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|DiscoveryNodes
name|nodes
init|=
name|state
operator|.
name|getState
argument_list|()
operator|.
name|nodes
argument_list|()
decl_stmt|;
name|String
name|masterId
init|=
name|nodes
operator|.
name|masterNodeId
argument_list|()
decl_stmt|;
name|Table
name|table
init|=
name|getTableWithHeader
argument_list|(
name|req
argument_list|)
decl_stmt|;
for|for
control|(
name|DiscoveryNode
name|node
range|:
name|nodes
control|)
block|{
name|NodeInfo
name|info
init|=
name|nodesInfo
operator|.
name|getNodesMap
argument_list|()
operator|.
name|get
argument_list|(
name|node
operator|.
name|id
argument_list|()
argument_list|)
decl_stmt|;
name|NodeStats
name|stats
init|=
name|nodesStats
operator|.
name|getNodesMap
argument_list|()
operator|.
name|get
argument_list|(
name|node
operator|.
name|id
argument_list|()
argument_list|)
decl_stmt|;
name|table
operator|.
name|startRow
argument_list|()
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|fullId
condition|?
name|node
operator|.
name|id
argument_list|()
else|:
name|Strings
operator|.
name|substring
argument_list|(
name|node
operator|.
name|getId
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|info
operator|==
literal|null
condition|?
literal|null
else|:
name|info
operator|.
name|getProcess
argument_list|()
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|node
operator|.
name|getHostName
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|node
operator|.
name|getHostAddress
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|node
operator|.
name|address
argument_list|()
operator|instanceof
name|InetSocketTransportAddress
condition|)
block|{
name|table
operator|.
name|addCell
argument_list|(
operator|(
operator|(
name|InetSocketTransportAddress
operator|)
name|node
operator|.
name|address
argument_list|()
operator|)
operator|.
name|address
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|table
operator|.
name|addCell
argument_list|(
literal|"-"
argument_list|)
expr_stmt|;
block|}
name|table
operator|.
name|addCell
argument_list|(
name|info
operator|==
literal|null
condition|?
literal|null
else|:
name|info
operator|.
name|getVersion
argument_list|()
operator|.
name|number
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|info
operator|==
literal|null
condition|?
literal|null
else|:
name|info
operator|.
name|getBuild
argument_list|()
operator|.
name|hashShort
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|info
operator|==
literal|null
condition|?
literal|null
else|:
name|info
operator|.
name|getJvm
argument_list|()
operator|.
name|version
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getFs
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getFs
argument_list|()
operator|.
name|total
argument_list|()
operator|.
name|getAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getJvm
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapUsedPrecent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|info
operator|==
literal|null
condition|?
literal|null
else|:
name|info
operator|.
name|getJvm
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapMax
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getOs
argument_list|()
operator|.
name|mem
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getOs
argument_list|()
operator|.
name|mem
argument_list|()
operator|.
name|usedPercent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|info
operator|==
literal|null
condition|?
literal|null
else|:
name|info
operator|.
name|getOs
argument_list|()
operator|.
name|mem
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|info
operator|.
name|getOs
argument_list|()
operator|.
name|mem
argument_list|()
operator|.
name|total
argument_list|()
argument_list|)
expr_stmt|;
comment|// sigar fails to load in IntelliJ
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getOs
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getOs
argument_list|()
operator|.
name|getLoadAverage
argument_list|()
operator|.
name|length
operator|<
literal|1
condition|?
literal|null
else|:
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"%.2f"
argument_list|,
name|stats
operator|.
name|getOs
argument_list|()
operator|.
name|getLoadAverage
argument_list|()
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getJvm
argument_list|()
operator|.
name|uptime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|node
operator|.
name|clientNode
argument_list|()
condition|?
literal|"c"
else|:
name|node
operator|.
name|dataNode
argument_list|()
condition|?
literal|"d"
else|:
literal|"-"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|masterId
operator|==
literal|null
condition|?
literal|"x"
else|:
name|masterId
operator|.
name|equals
argument_list|(
name|node
operator|.
name|id
argument_list|()
argument_list|)
condition|?
literal|"*"
else|:
name|node
operator|.
name|masterNode
argument_list|()
condition|?
literal|"m"
else|:
literal|"-"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|node
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getCompletion
argument_list|()
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getFieldData
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getFieldData
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getFilterCache
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getFilterCache
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getFlush
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getFlush
argument_list|()
operator|.
name|getTotalTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getGet
argument_list|()
operator|.
name|current
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getGet
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getGet
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getGet
argument_list|()
operator|.
name|getExistsTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getGet
argument_list|()
operator|.
name|getExistsCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getGet
argument_list|()
operator|.
name|getMissingTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getGet
argument_list|()
operator|.
name|getMissingCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getIdCache
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getIndexing
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getDeleteCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getIndexing
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getDeleteTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getIndexing
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getDeleteCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getIndexing
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getIndexCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getIndexing
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getIndexTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getIndexing
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getIndexCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getMerge
argument_list|()
operator|.
name|getCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getMerge
argument_list|()
operator|.
name|getCurrentNumDocs
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getMerge
argument_list|()
operator|.
name|getCurrentSize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getMerge
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getMerge
argument_list|()
operator|.
name|getTotalNumDocs
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getMerge
argument_list|()
operator|.
name|getTotalSize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getMerge
argument_list|()
operator|.
name|getTotalTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getPercolate
argument_list|()
operator|.
name|getCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getPercolate
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getPercolate
argument_list|()
operator|.
name|getNumQueries
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getPercolate
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getPercolate
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getRefresh
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getRefresh
argument_list|()
operator|.
name|getTotalTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSearch
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getFetchCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSearch
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getFetchTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSearch
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getFetchCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSearch
argument_list|()
operator|.
name|getOpenContexts
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSearch
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getQueryCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSearch
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getQueryTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSearch
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getQueryCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSegments
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSegments
argument_list|()
operator|.
name|getMemory
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSuggest
argument_list|()
operator|.
name|getCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSuggest
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getSuggest
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|endRow
argument_list|()
expr_stmt|;
block|}
return|return
name|table
return|;
block|}
block|}
end_class

end_unit

