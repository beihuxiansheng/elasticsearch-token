begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.discovery.ec2
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|discovery
operator|.
name|ec2
package|;
end_package

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|ClientConfiguration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|Protocol
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|auth
operator|.
name|AWSCredentials
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|auth
operator|.
name|AWSCredentialsProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|auth
operator|.
name|DefaultAWSCredentialsProviderChain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|MockSecureSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|discovery
operator|.
name|ec2
operator|.
name|AwsEc2Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|discovery
operator|.
name|ec2
operator|.
name|AwsEc2ServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|containsString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|instanceOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|nullValue
import|;
end_import

begin_class
DECL|class|AwsEc2ServiceImplTests
specifier|public
class|class
name|AwsEc2ServiceImplTests
extends|extends
name|ESTestCase
block|{
DECL|method|testAWSCredentialsWithSystemProviders
specifier|public
name|void
name|testAWSCredentialsWithSystemProviders
parameter_list|()
block|{
name|AWSCredentialsProvider
name|credentialsProvider
init|=
name|AwsEc2ServiceImpl
operator|.
name|buildCredentials
argument_list|(
name|logger
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|credentialsProvider
argument_list|,
name|instanceOf
argument_list|(
name|DefaultAWSCredentialsProviderChain
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testAWSCredentialsWithElasticsearchAwsSettings
specifier|public
name|void
name|testAWSCredentialsWithElasticsearchAwsSettings
parameter_list|()
block|{
name|MockSecureSettings
name|secureSettings
init|=
operator|new
name|MockSecureSettings
argument_list|()
decl_stmt|;
name|secureSettings
operator|.
name|setString
argument_list|(
literal|"discovery.ec2.access_key"
argument_list|,
literal|"aws_key"
argument_list|)
expr_stmt|;
name|secureSettings
operator|.
name|setString
argument_list|(
literal|"discovery.ec2.secret_key"
argument_list|,
literal|"aws_secret"
argument_list|)
expr_stmt|;
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|setSecureSettings
argument_list|(
name|secureSettings
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|launchAWSCredentialsWithElasticsearchSettingsTest
argument_list|(
name|settings
argument_list|,
literal|"aws_key"
argument_list|,
literal|"aws_secret"
argument_list|)
expr_stmt|;
block|}
DECL|method|launchAWSCredentialsWithElasticsearchSettingsTest
specifier|protected
name|void
name|launchAWSCredentialsWithElasticsearchSettingsTest
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|String
name|expectedKey
parameter_list|,
name|String
name|expectedSecret
parameter_list|)
block|{
name|AWSCredentials
name|credentials
init|=
name|AwsEc2ServiceImpl
operator|.
name|buildCredentials
argument_list|(
name|logger
argument_list|,
name|settings
argument_list|)
operator|.
name|getCredentials
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|credentials
operator|.
name|getAWSAccessKeyId
argument_list|()
argument_list|,
name|is
argument_list|(
name|expectedKey
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|credentials
operator|.
name|getAWSSecretKey
argument_list|()
argument_list|,
name|is
argument_list|(
name|expectedSecret
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testAWSDefaultConfiguration
specifier|public
name|void
name|testAWSDefaultConfiguration
parameter_list|()
block|{
name|launchAWSConfigurationTest
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|Protocol
operator|.
name|HTTPS
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|ClientConfiguration
operator|.
name|DEFAULT_SOCKET_TIMEOUT
argument_list|)
expr_stmt|;
block|}
DECL|method|testAWSConfigurationWithAwsSettings
specifier|public
name|void
name|testAWSConfigurationWithAwsSettings
parameter_list|()
block|{
name|MockSecureSettings
name|secureSettings
init|=
operator|new
name|MockSecureSettings
argument_list|()
decl_stmt|;
name|secureSettings
operator|.
name|setString
argument_list|(
literal|"discovery.ec2.proxy.username"
argument_list|,
literal|"aws_proxy_username"
argument_list|)
expr_stmt|;
name|secureSettings
operator|.
name|setString
argument_list|(
literal|"discovery.ec2.proxy.password"
argument_list|,
literal|"aws_proxy_password"
argument_list|)
expr_stmt|;
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"discovery.ec2.protocol"
argument_list|,
literal|"http"
argument_list|)
operator|.
name|put
argument_list|(
literal|"discovery.ec2.proxy.host"
argument_list|,
literal|"aws_proxy_host"
argument_list|)
operator|.
name|put
argument_list|(
literal|"discovery.ec2.proxy.port"
argument_list|,
literal|8080
argument_list|)
operator|.
name|put
argument_list|(
literal|"discovery.ec2.read_timeout"
argument_list|,
literal|"10s"
argument_list|)
operator|.
name|setSecureSettings
argument_list|(
name|secureSettings
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|launchAWSConfigurationTest
argument_list|(
name|settings
argument_list|,
name|Protocol
operator|.
name|HTTP
argument_list|,
literal|"aws_proxy_host"
argument_list|,
literal|8080
argument_list|,
literal|"aws_proxy_username"
argument_list|,
literal|"aws_proxy_password"
argument_list|,
literal|10000
argument_list|)
expr_stmt|;
block|}
DECL|method|launchAWSConfigurationTest
specifier|protected
name|void
name|launchAWSConfigurationTest
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|Protocol
name|expectedProtocol
parameter_list|,
name|String
name|expectedProxyHost
parameter_list|,
name|int
name|expectedProxyPort
parameter_list|,
name|String
name|expectedProxyUsername
parameter_list|,
name|String
name|expectedProxyPassword
parameter_list|,
name|int
name|expectedReadTimeout
parameter_list|)
block|{
name|ClientConfiguration
name|configuration
init|=
name|AwsEc2ServiceImpl
operator|.
name|buildConfiguration
argument_list|(
name|logger
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getResponseMetadataCacheSize
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getProtocol
argument_list|()
argument_list|,
name|is
argument_list|(
name|expectedProtocol
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getProxyHost
argument_list|()
argument_list|,
name|is
argument_list|(
name|expectedProxyHost
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getProxyPort
argument_list|()
argument_list|,
name|is
argument_list|(
name|expectedProxyPort
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getProxyUsername
argument_list|()
argument_list|,
name|is
argument_list|(
name|expectedProxyUsername
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getProxyPassword
argument_list|()
argument_list|,
name|is
argument_list|(
name|expectedProxyPassword
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getSocketTimeout
argument_list|()
argument_list|,
name|is
argument_list|(
name|expectedReadTimeout
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDefaultEndpoint
specifier|public
name|void
name|testDefaultEndpoint
parameter_list|()
block|{
name|String
name|endpoint
init|=
name|AwsEc2ServiceImpl
operator|.
name|findEndpoint
argument_list|(
name|logger
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|endpoint
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testSpecificEndpoint
specifier|public
name|void
name|testSpecificEndpoint
parameter_list|()
block|{
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|AwsEc2Service
operator|.
name|ENDPOINT_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"ec2.endpoint"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|String
name|endpoint
init|=
name|AwsEc2ServiceImpl
operator|.
name|findEndpoint
argument_list|(
name|logger
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|endpoint
argument_list|,
name|is
argument_list|(
literal|"ec2.endpoint"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

