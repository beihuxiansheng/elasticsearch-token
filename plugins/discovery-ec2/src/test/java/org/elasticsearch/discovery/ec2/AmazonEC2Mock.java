begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.discovery.ec2
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|discovery
operator|.
name|ec2
package|;
end_package

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|AmazonClientException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|AmazonServiceException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|AmazonWebServiceRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|ResponseMetadata
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|regions
operator|.
name|Region
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|AmazonEC2
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AcceptVpcPeeringConnectionRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AcceptVpcPeeringConnectionResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AllocateAddressRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AllocateAddressResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AllocateHostsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AllocateHostsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AssignPrivateIpAddressesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AssociateAddressRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AssociateAddressResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AssociateDhcpOptionsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AssociateRouteTableRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AssociateRouteTableResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AttachClassicLinkVpcRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AttachClassicLinkVpcResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AttachInternetGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AttachNetworkInterfaceRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AttachNetworkInterfaceResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AttachVolumeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AttachVolumeResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AttachVpnGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AttachVpnGatewayResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AuthorizeSecurityGroupEgressRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|AuthorizeSecurityGroupIngressRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|BundleInstanceRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|BundleInstanceResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelBundleTaskRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelBundleTaskResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelConversionTaskRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelExportTaskRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelImportTaskRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelImportTaskResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelReservedInstancesListingRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelReservedInstancesListingResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelSpotFleetRequestsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelSpotFleetRequestsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelSpotInstanceRequestsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CancelSpotInstanceRequestsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ConfirmProductInstanceRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ConfirmProductInstanceResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CopyImageRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CopyImageResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CopySnapshotRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CopySnapshotResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateCustomerGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateCustomerGatewayResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateDhcpOptionsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateDhcpOptionsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateFlowLogsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateFlowLogsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateImageRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateImageResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateInstanceExportTaskRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateInstanceExportTaskResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateInternetGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateInternetGatewayResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateKeyPairRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateKeyPairResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateNatGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateNatGatewayResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateNetworkAclEntryRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateNetworkAclRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateNetworkAclResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateNetworkInterfaceRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateNetworkInterfaceResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreatePlacementGroupRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateReservedInstancesListingRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateReservedInstancesListingResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateRouteRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateRouteResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateRouteTableRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateRouteTableResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateSecurityGroupRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateSecurityGroupResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateSnapshotRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateSnapshotResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateSpotDatafeedSubscriptionRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateSpotDatafeedSubscriptionResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateSubnetRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateSubnetResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateTagsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVolumeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVolumeResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVpcEndpointRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVpcEndpointResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVpcPeeringConnectionRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVpcPeeringConnectionResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVpcRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVpcResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVpnConnectionRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVpnConnectionResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVpnConnectionRouteRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVpnGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|CreateVpnGatewayResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteCustomerGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteDhcpOptionsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteFlowLogsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteFlowLogsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteInternetGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteKeyPairRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteNatGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteNatGatewayResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteNetworkAclEntryRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteNetworkAclRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteNetworkInterfaceRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeletePlacementGroupRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteRouteRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteRouteTableRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteSecurityGroupRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteSnapshotRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteSpotDatafeedSubscriptionRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteSubnetRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteTagsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteVolumeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteVpcEndpointsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteVpcEndpointsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteVpcPeeringConnectionRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteVpcPeeringConnectionResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteVpcRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteVpnConnectionRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteVpnConnectionRouteRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeleteVpnGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DeregisterImageRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeAccountAttributesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeAccountAttributesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeAddressesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeAddressesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeAvailabilityZonesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeAvailabilityZonesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeBundleTasksRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeBundleTasksResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeClassicLinkInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeClassicLinkInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeConversionTasksRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeConversionTasksResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeCustomerGatewaysRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeCustomerGatewaysResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeDhcpOptionsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeDhcpOptionsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeExportTasksRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeExportTasksResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeFlowLogsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeFlowLogsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeHostsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeHostsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeIdFormatRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeIdFormatResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeImageAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeImageAttributeResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeImagesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeImagesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeImportImageTasksRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeImportImageTasksResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeImportSnapshotTasksRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeImportSnapshotTasksResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeInstanceAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeInstanceAttributeResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeInstanceStatusRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeInstanceStatusResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeInternetGatewaysRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeInternetGatewaysResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeKeyPairsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeKeyPairsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeMovingAddressesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeMovingAddressesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeNatGatewaysRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeNatGatewaysResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeNetworkAclsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeNetworkAclsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeNetworkInterfaceAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeNetworkInterfaceAttributeResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeNetworkInterfacesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeNetworkInterfacesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribePlacementGroupsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribePlacementGroupsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribePrefixListsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribePrefixListsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeRegionsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeRegionsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeReservedInstancesListingsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeReservedInstancesListingsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeReservedInstancesModificationsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeReservedInstancesModificationsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeReservedInstancesOfferingsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeReservedInstancesOfferingsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeReservedInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeReservedInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeRouteTablesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeRouteTablesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeScheduledInstanceAvailabilityRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeScheduledInstanceAvailabilityResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeScheduledInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeScheduledInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSecurityGroupsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSecurityGroupsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSnapshotAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSnapshotAttributeResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSnapshotsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSnapshotsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotDatafeedSubscriptionRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotDatafeedSubscriptionResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotFleetInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotFleetInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotFleetRequestHistoryRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotFleetRequestHistoryResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotFleetRequestsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotFleetRequestsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotInstanceRequestsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotInstanceRequestsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotPriceHistoryRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSpotPriceHistoryResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSubnetsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeSubnetsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeTagsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeTagsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVolumeAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVolumeAttributeResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVolumeStatusRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVolumeStatusResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVolumesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVolumesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcAttributeResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcClassicLinkDnsSupportRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcClassicLinkDnsSupportResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcClassicLinkRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcClassicLinkResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcEndpointServicesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcEndpointServicesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcEndpointsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcEndpointsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcPeeringConnectionsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcPeeringConnectionsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpcsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpnConnectionsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpnConnectionsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpnGatewaysRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DescribeVpnGatewaysResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DetachClassicLinkVpcRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DetachClassicLinkVpcResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DetachInternetGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DetachNetworkInterfaceRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DetachVolumeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DetachVolumeResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DetachVpnGatewayRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DisableVgwRoutePropagationRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DisableVpcClassicLinkDnsSupportRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DisableVpcClassicLinkDnsSupportResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DisableVpcClassicLinkRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DisableVpcClassicLinkResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DisassociateAddressRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DisassociateRouteTableRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DryRunResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|DryRunSupportedRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|EnableVgwRoutePropagationRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|EnableVolumeIORequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|EnableVpcClassicLinkDnsSupportRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|EnableVpcClassicLinkDnsSupportResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|EnableVpcClassicLinkRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|EnableVpcClassicLinkResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|GetConsoleOutputRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|GetConsoleOutputResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|GetPasswordDataRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|GetPasswordDataResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ImportImageRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ImportImageResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ImportInstanceRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ImportInstanceResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ImportKeyPairRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ImportKeyPairResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ImportSnapshotRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ImportSnapshotResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ImportVolumeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ImportVolumeResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|Instance
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|InstanceState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|InstanceStateName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyHostsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyHostsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyIdFormatRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyImageAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyInstanceAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyInstancePlacementRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyInstancePlacementResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyNetworkInterfaceAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyReservedInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyReservedInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifySnapshotAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifySpotFleetRequestRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifySpotFleetRequestResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifySubnetAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyVolumeAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyVpcAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyVpcEndpointRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ModifyVpcEndpointResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|MonitorInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|MonitorInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|MoveAddressToVpcRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|MoveAddressToVpcResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|PurchaseReservedInstancesOfferingRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|PurchaseReservedInstancesOfferingResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|PurchaseScheduledInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|PurchaseScheduledInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RebootInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RegisterImageRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RegisterImageResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RejectVpcPeeringConnectionRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RejectVpcPeeringConnectionResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ReleaseAddressRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ReleaseHostsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ReleaseHostsResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ReplaceNetworkAclAssociationRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ReplaceNetworkAclAssociationResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ReplaceNetworkAclEntryRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ReplaceRouteRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ReplaceRouteTableAssociationRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ReplaceRouteTableAssociationResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ReportInstanceStatusRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RequestSpotFleetRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RequestSpotFleetResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RequestSpotInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RequestSpotInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|Reservation
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ResetImageAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ResetInstanceAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ResetNetworkInterfaceAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|ResetSnapshotAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RestoreAddressToClassicRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RestoreAddressToClassicResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RevokeSecurityGroupEgressRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RevokeSecurityGroupIngressRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RunInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RunInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RunScheduledInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|RunScheduledInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|StartInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|StartInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|StopInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|StopInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|Tag
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|TerminateInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|TerminateInstancesResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|UnassignPrivateIpAddressesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|UnmonitorInstancesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|model
operator|.
name|UnmonitorInstancesResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
operator|.
name|ESLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
operator|.
name|ESLoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_class
DECL|class|AmazonEC2Mock
specifier|public
class|class
name|AmazonEC2Mock
implements|implements
name|AmazonEC2
block|{
DECL|field|logger
specifier|private
specifier|static
specifier|final
name|ESLogger
name|logger
init|=
name|ESLoggerFactory
operator|.
name|getLogger
argument_list|(
name|AmazonEC2Mock
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|PREFIX_PRIVATE_IP
specifier|public
specifier|static
specifier|final
name|String
name|PREFIX_PRIVATE_IP
init|=
literal|"10.0.0."
decl_stmt|;
DECL|field|PREFIX_PUBLIC_IP
specifier|public
specifier|static
specifier|final
name|String
name|PREFIX_PUBLIC_IP
init|=
literal|"8.8.8."
decl_stmt|;
DECL|field|PREFIX_PUBLIC_DNS
specifier|public
specifier|static
specifier|final
name|String
name|PREFIX_PUBLIC_DNS
init|=
literal|"mock-ec2-"
decl_stmt|;
DECL|field|SUFFIX_PUBLIC_DNS
specifier|public
specifier|static
specifier|final
name|String
name|SUFFIX_PUBLIC_DNS
init|=
literal|".amazon.com"
decl_stmt|;
DECL|field|PREFIX_PRIVATE_DNS
specifier|public
specifier|static
specifier|final
name|String
name|PREFIX_PRIVATE_DNS
init|=
literal|"mock-ip-"
decl_stmt|;
DECL|field|SUFFIX_PRIVATE_DNS
specifier|public
specifier|static
specifier|final
name|String
name|SUFFIX_PRIVATE_DNS
init|=
literal|".ec2.internal"
decl_stmt|;
DECL|field|instances
name|List
argument_list|<
name|Instance
argument_list|>
name|instances
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|AmazonEC2Mock
specifier|public
name|AmazonEC2Mock
parameter_list|(
name|int
name|nodes
parameter_list|,
name|List
argument_list|<
name|List
argument_list|<
name|Tag
argument_list|>
argument_list|>
name|tagsList
parameter_list|)
block|{
if|if
condition|(
name|tagsList
operator|!=
literal|null
condition|)
block|{
assert|assert
name|tagsList
operator|.
name|size
argument_list|()
operator|==
name|nodes
assert|;
block|}
for|for
control|(
name|int
name|node
init|=
literal|1
init|;
name|node
operator|<
name|nodes
operator|+
literal|1
condition|;
name|node
operator|++
control|)
block|{
name|String
name|instanceId
init|=
literal|"node"
operator|+
name|node
decl_stmt|;
name|Instance
name|instance
init|=
operator|new
name|Instance
argument_list|()
operator|.
name|withInstanceId
argument_list|(
name|instanceId
argument_list|)
operator|.
name|withState
argument_list|(
operator|new
name|InstanceState
argument_list|()
operator|.
name|withName
argument_list|(
name|InstanceStateName
operator|.
name|Running
argument_list|)
argument_list|)
operator|.
name|withPrivateDnsName
argument_list|(
name|PREFIX_PRIVATE_DNS
operator|+
name|instanceId
operator|+
name|SUFFIX_PRIVATE_DNS
argument_list|)
operator|.
name|withPublicDnsName
argument_list|(
name|PREFIX_PUBLIC_DNS
operator|+
name|instanceId
operator|+
name|SUFFIX_PUBLIC_DNS
argument_list|)
operator|.
name|withPrivateIpAddress
argument_list|(
name|PREFIX_PRIVATE_IP
operator|+
name|node
argument_list|)
operator|.
name|withPublicIpAddress
argument_list|(
name|PREFIX_PUBLIC_IP
operator|+
name|node
argument_list|)
decl_stmt|;
if|if
condition|(
name|tagsList
operator|!=
literal|null
condition|)
block|{
name|instance
operator|.
name|setTags
argument_list|(
name|tagsList
operator|.
name|get
argument_list|(
name|node
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|instances
operator|.
name|add
argument_list|(
name|instance
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|describeInstances
specifier|public
name|DescribeInstancesResult
name|describeInstances
parameter_list|(
name|DescribeInstancesRequest
name|describeInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
name|Collection
argument_list|<
name|Instance
argument_list|>
name|filteredInstances
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"--> mocking describeInstances"
argument_list|)
expr_stmt|;
for|for
control|(
name|Instance
name|instance
range|:
name|instances
control|)
block|{
name|boolean
name|tagFiltered
init|=
literal|false
decl_stmt|;
name|boolean
name|instanceFound
init|=
literal|false
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|expectedTags
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|instanceTags
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Tag
name|tag
range|:
name|instance
operator|.
name|getTags
argument_list|()
control|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|tags
init|=
name|instanceTags
operator|.
name|get
argument_list|(
name|tag
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|tags
operator|==
literal|null
condition|)
block|{
name|tags
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|instanceTags
operator|.
name|put
argument_list|(
name|tag
operator|.
name|getKey
argument_list|()
argument_list|,
name|tags
argument_list|)
expr_stmt|;
block|}
name|tags
operator|.
name|add
argument_list|(
name|tag
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Filter
name|filter
range|:
name|describeInstancesRequest
operator|.
name|getFilters
argument_list|()
control|)
block|{
comment|// If we have the same tag name and one of the values, we add the instance
if|if
condition|(
name|filter
operator|.
name|getName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"tag:"
argument_list|)
condition|)
block|{
name|tagFiltered
operator|=
literal|true
expr_stmt|;
name|String
name|tagName
init|=
name|filter
operator|.
name|getName
argument_list|()
operator|.
name|substring
argument_list|(
literal|4
argument_list|)
decl_stmt|;
comment|// if we have more than one value for the same key, then the key is appended with .x
name|Pattern
name|p
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"\\.\\d+"
argument_list|,
name|Pattern
operator|.
name|DOTALL
argument_list|)
decl_stmt|;
name|Matcher
name|m
init|=
name|p
operator|.
name|matcher
argument_list|(
name|tagName
argument_list|)
decl_stmt|;
if|if
condition|(
name|m
operator|.
name|find
argument_list|()
condition|)
block|{
name|int
name|i
init|=
name|tagName
operator|.
name|lastIndexOf
argument_list|(
literal|"."
argument_list|)
decl_stmt|;
name|tagName
operator|=
name|tagName
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|String
argument_list|>
name|tags
init|=
name|expectedTags
operator|.
name|get
argument_list|(
name|tagName
argument_list|)
decl_stmt|;
if|if
condition|(
name|tags
operator|==
literal|null
condition|)
block|{
name|tags
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|expectedTags
operator|.
name|put
argument_list|(
name|tagName
argument_list|,
name|tags
argument_list|)
expr_stmt|;
block|}
name|tags
operator|.
name|addAll
argument_list|(
name|filter
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|tagFiltered
condition|)
block|{
name|logger
operator|.
name|debug
argument_list|(
literal|"--> expected tags: [{}]"
argument_list|,
name|expectedTags
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"--> instance tags: [{}]"
argument_list|,
name|instanceTags
argument_list|)
expr_stmt|;
name|instanceFound
operator|=
literal|true
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|expectedTagsEntry
range|:
name|expectedTags
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|instanceTagValues
init|=
name|instanceTags
operator|.
name|get
argument_list|(
name|expectedTagsEntry
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|instanceTagValues
operator|==
literal|null
condition|)
block|{
name|instanceFound
operator|=
literal|false
expr_stmt|;
break|break;
block|}
for|for
control|(
name|String
name|expectedValue
range|:
name|expectedTagsEntry
operator|.
name|getValue
argument_list|()
control|)
block|{
name|boolean
name|valueFound
init|=
literal|false
decl_stmt|;
for|for
control|(
name|String
name|instanceTagValue
range|:
name|instanceTagValues
control|)
block|{
if|if
condition|(
name|instanceTagValue
operator|.
name|equals
argument_list|(
name|expectedValue
argument_list|)
condition|)
block|{
name|valueFound
operator|=
literal|true
expr_stmt|;
block|}
block|}
if|if
condition|(
name|valueFound
operator|==
literal|false
condition|)
block|{
name|instanceFound
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
block|}
if|if
condition|(
name|tagFiltered
operator|==
literal|false
operator|||
name|instanceFound
condition|)
block|{
name|logger
operator|.
name|debug
argument_list|(
literal|"--> instance added"
argument_list|)
expr_stmt|;
name|filteredInstances
operator|.
name|add
argument_list|(
name|instance
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|logger
operator|.
name|debug
argument_list|(
literal|"--> instance filtered"
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|DescribeInstancesResult
argument_list|()
operator|.
name|withReservations
argument_list|(
operator|new
name|Reservation
argument_list|()
operator|.
name|withInstances
argument_list|(
name|filteredInstances
argument_list|)
argument_list|)
return|;
block|}
comment|// Not implemented methods in Mock
annotation|@
name|Override
DECL|method|setEndpoint
specifier|public
name|void
name|setEndpoint
parameter_list|(
name|String
name|endpoint
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|setRegion
specifier|public
name|void
name|setRegion
parameter_list|(
name|Region
name|region
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|rebootInstances
specifier|public
name|void
name|rebootInstances
parameter_list|(
name|RebootInstancesRequest
name|rebootInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeReservedInstances
specifier|public
name|DescribeReservedInstancesResult
name|describeReservedInstances
parameter_list|(
name|DescribeReservedInstancesRequest
name|describeReservedInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createFlowLogs
specifier|public
name|CreateFlowLogsResult
name|createFlowLogs
parameter_list|(
name|CreateFlowLogsRequest
name|createFlowLogsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeAvailabilityZones
specifier|public
name|DescribeAvailabilityZonesResult
name|describeAvailabilityZones
parameter_list|(
name|DescribeAvailabilityZonesRequest
name|describeAvailabilityZonesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|restoreAddressToClassic
specifier|public
name|RestoreAddressToClassicResult
name|restoreAddressToClassic
parameter_list|(
name|RestoreAddressToClassicRequest
name|restoreAddressToClassicRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|detachVolume
specifier|public
name|DetachVolumeResult
name|detachVolume
parameter_list|(
name|DetachVolumeRequest
name|detachVolumeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteKeyPair
specifier|public
name|void
name|deleteKeyPair
parameter_list|(
name|DeleteKeyPairRequest
name|deleteKeyPairRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteNatGateway
specifier|public
name|DeleteNatGatewayResult
name|deleteNatGateway
parameter_list|(
name|DeleteNatGatewayRequest
name|deleteNatGatewayRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|unmonitorInstances
specifier|public
name|UnmonitorInstancesResult
name|unmonitorInstances
parameter_list|(
name|UnmonitorInstancesRequest
name|unmonitorInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|attachVpnGateway
specifier|public
name|AttachVpnGatewayResult
name|attachVpnGateway
parameter_list|(
name|AttachVpnGatewayRequest
name|attachVpnGatewayRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createImage
specifier|public
name|CreateImageResult
name|createImage
parameter_list|(
name|CreateImageRequest
name|createImageRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteSecurityGroup
specifier|public
name|void
name|deleteSecurityGroup
parameter_list|(
name|DeleteSecurityGroupRequest
name|deleteSecurityGroupRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createInstanceExportTask
specifier|public
name|CreateInstanceExportTaskResult
name|createInstanceExportTask
parameter_list|(
name|CreateInstanceExportTaskRequest
name|createInstanceExportTaskRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|authorizeSecurityGroupEgress
specifier|public
name|void
name|authorizeSecurityGroupEgress
parameter_list|(
name|AuthorizeSecurityGroupEgressRequest
name|authorizeSecurityGroupEgressRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|associateDhcpOptions
specifier|public
name|void
name|associateDhcpOptions
parameter_list|(
name|AssociateDhcpOptionsRequest
name|associateDhcpOptionsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|getPasswordData
specifier|public
name|GetPasswordDataResult
name|getPasswordData
parameter_list|(
name|GetPasswordDataRequest
name|getPasswordDataRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|stopInstances
specifier|public
name|StopInstancesResult
name|stopInstances
parameter_list|(
name|StopInstancesRequest
name|stopInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|importKeyPair
specifier|public
name|ImportKeyPairResult
name|importKeyPair
parameter_list|(
name|ImportKeyPairRequest
name|importKeyPairRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteNetworkInterface
specifier|public
name|void
name|deleteNetworkInterface
parameter_list|(
name|DeleteNetworkInterfaceRequest
name|deleteNetworkInterfaceRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|modifyVpcAttribute
specifier|public
name|void
name|modifyVpcAttribute
parameter_list|(
name|ModifyVpcAttributeRequest
name|modifyVpcAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSpotFleetInstances
specifier|public
name|DescribeSpotFleetInstancesResult
name|describeSpotFleetInstances
parameter_list|(
name|DescribeSpotFleetInstancesRequest
name|describeSpotFleetInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createSecurityGroup
specifier|public
name|CreateSecurityGroupResult
name|createSecurityGroup
parameter_list|(
name|CreateSecurityGroupRequest
name|createSecurityGroupRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSpotPriceHistory
specifier|public
name|DescribeSpotPriceHistoryResult
name|describeSpotPriceHistory
parameter_list|(
name|DescribeSpotPriceHistoryRequest
name|describeSpotPriceHistoryRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeNetworkInterfaces
specifier|public
name|DescribeNetworkInterfacesResult
name|describeNetworkInterfaces
parameter_list|(
name|DescribeNetworkInterfacesRequest
name|describeNetworkInterfacesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeRegions
specifier|public
name|DescribeRegionsResult
name|describeRegions
parameter_list|(
name|DescribeRegionsRequest
name|describeRegionsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createDhcpOptions
specifier|public
name|CreateDhcpOptionsResult
name|createDhcpOptions
parameter_list|(
name|CreateDhcpOptionsRequest
name|createDhcpOptionsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createReservedInstancesListing
specifier|public
name|CreateReservedInstancesListingResult
name|createReservedInstancesListing
parameter_list|(
name|CreateReservedInstancesListingRequest
name|createReservedInstancesListingRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteVpcEndpoints
specifier|public
name|DeleteVpcEndpointsResult
name|deleteVpcEndpoints
parameter_list|(
name|DeleteVpcEndpointsRequest
name|deleteVpcEndpointsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|resetSnapshotAttribute
specifier|public
name|void
name|resetSnapshotAttribute
parameter_list|(
name|ResetSnapshotAttributeRequest
name|resetSnapshotAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteRoute
specifier|public
name|void
name|deleteRoute
parameter_list|(
name|DeleteRouteRequest
name|deleteRouteRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeInternetGateways
specifier|public
name|DescribeInternetGatewaysResult
name|describeInternetGateways
parameter_list|(
name|DescribeInternetGatewaysRequest
name|describeInternetGatewaysRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|importVolume
specifier|public
name|ImportVolumeResult
name|importVolume
parameter_list|(
name|ImportVolumeRequest
name|importVolumeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|modifyHosts
specifier|public
name|ModifyHostsResult
name|modifyHosts
parameter_list|(
name|ModifyHostsRequest
name|modifyHostsRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|modifyIdFormat
specifier|public
name|void
name|modifyIdFormat
parameter_list|(
name|ModifyIdFormatRequest
name|modifyIdFormatRequest
parameter_list|)
block|{      }
annotation|@
name|Override
DECL|method|describeSecurityGroups
specifier|public
name|DescribeSecurityGroupsResult
name|describeSecurityGroups
parameter_list|(
name|DescribeSecurityGroupsRequest
name|describeSecurityGroupsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|rejectVpcPeeringConnection
specifier|public
name|RejectVpcPeeringConnectionResult
name|rejectVpcPeeringConnection
parameter_list|(
name|RejectVpcPeeringConnectionRequest
name|rejectVpcPeeringConnectionRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteFlowLogs
specifier|public
name|DeleteFlowLogsResult
name|deleteFlowLogs
parameter_list|(
name|DeleteFlowLogsRequest
name|deleteFlowLogsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|detachVpnGateway
specifier|public
name|void
name|detachVpnGateway
parameter_list|(
name|DetachVpnGatewayRequest
name|detachVpnGatewayRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deregisterImage
specifier|public
name|void
name|deregisterImage
parameter_list|(
name|DeregisterImageRequest
name|deregisterImageRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSpotDatafeedSubscription
specifier|public
name|DescribeSpotDatafeedSubscriptionResult
name|describeSpotDatafeedSubscription
parameter_list|(
name|DescribeSpotDatafeedSubscriptionRequest
name|describeSpotDatafeedSubscriptionRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteTags
specifier|public
name|void
name|deleteTags
parameter_list|(
name|DeleteTagsRequest
name|deleteTagsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteSubnet
specifier|public
name|void
name|deleteSubnet
parameter_list|(
name|DeleteSubnetRequest
name|deleteSubnetRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeAccountAttributes
specifier|public
name|DescribeAccountAttributesResult
name|describeAccountAttributes
parameter_list|(
name|DescribeAccountAttributesRequest
name|describeAccountAttributesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|attachClassicLinkVpc
specifier|public
name|AttachClassicLinkVpcResult
name|attachClassicLinkVpc
parameter_list|(
name|AttachClassicLinkVpcRequest
name|attachClassicLinkVpcRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createVpnGateway
specifier|public
name|CreateVpnGatewayResult
name|createVpnGateway
parameter_list|(
name|CreateVpnGatewayRequest
name|createVpnGatewayRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|enableVolumeIO
specifier|public
name|void
name|enableVolumeIO
parameter_list|(
name|EnableVolumeIORequest
name|enableVolumeIORequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|moveAddressToVpc
specifier|public
name|MoveAddressToVpcResult
name|moveAddressToVpc
parameter_list|(
name|MoveAddressToVpcRequest
name|moveAddressToVpcRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteVpnGateway
specifier|public
name|void
name|deleteVpnGateway
parameter_list|(
name|DeleteVpnGatewayRequest
name|deleteVpnGatewayRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|attachVolume
specifier|public
name|AttachVolumeResult
name|attachVolume
parameter_list|(
name|AttachVolumeRequest
name|attachVolumeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVolumeStatus
specifier|public
name|DescribeVolumeStatusResult
name|describeVolumeStatus
parameter_list|(
name|DescribeVolumeStatusRequest
name|describeVolumeStatusRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeImportSnapshotTasks
specifier|public
name|DescribeImportSnapshotTasksResult
name|describeImportSnapshotTasks
parameter_list|(
name|DescribeImportSnapshotTasksRequest
name|describeImportSnapshotTasksRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpnConnections
specifier|public
name|DescribeVpnConnectionsResult
name|describeVpnConnections
parameter_list|(
name|DescribeVpnConnectionsRequest
name|describeVpnConnectionsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|resetImageAttribute
specifier|public
name|void
name|resetImageAttribute
parameter_list|(
name|ResetImageAttributeRequest
name|resetImageAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|enableVgwRoutePropagation
specifier|public
name|void
name|enableVgwRoutePropagation
parameter_list|(
name|EnableVgwRoutePropagationRequest
name|enableVgwRoutePropagationRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createSnapshot
specifier|public
name|CreateSnapshotResult
name|createSnapshot
parameter_list|(
name|CreateSnapshotRequest
name|createSnapshotRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteVolume
specifier|public
name|void
name|deleteVolume
parameter_list|(
name|DeleteVolumeRequest
name|deleteVolumeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createNetworkInterface
specifier|public
name|CreateNetworkInterfaceResult
name|createNetworkInterface
parameter_list|(
name|CreateNetworkInterfaceRequest
name|createNetworkInterfaceRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|modifyReservedInstances
specifier|public
name|ModifyReservedInstancesResult
name|modifyReservedInstances
parameter_list|(
name|ModifyReservedInstancesRequest
name|modifyReservedInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|cancelSpotFleetRequests
specifier|public
name|CancelSpotFleetRequestsResult
name|cancelSpotFleetRequests
parameter_list|(
name|CancelSpotFleetRequestsRequest
name|cancelSpotFleetRequestsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|unassignPrivateIpAddresses
specifier|public
name|void
name|unassignPrivateIpAddresses
parameter_list|(
name|UnassignPrivateIpAddressesRequest
name|unassignPrivateIpAddressesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpcs
specifier|public
name|DescribeVpcsResult
name|describeVpcs
parameter_list|(
name|DescribeVpcsRequest
name|describeVpcsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|cancelConversionTask
specifier|public
name|void
name|cancelConversionTask
parameter_list|(
name|CancelConversionTaskRequest
name|cancelConversionTaskRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|associateAddress
specifier|public
name|AssociateAddressResult
name|associateAddress
parameter_list|(
name|AssociateAddressRequest
name|associateAddressRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteCustomerGateway
specifier|public
name|void
name|deleteCustomerGateway
parameter_list|(
name|DeleteCustomerGatewayRequest
name|deleteCustomerGatewayRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createNetworkAclEntry
specifier|public
name|void
name|createNetworkAclEntry
parameter_list|(
name|CreateNetworkAclEntryRequest
name|createNetworkAclEntryRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|acceptVpcPeeringConnection
specifier|public
name|AcceptVpcPeeringConnectionResult
name|acceptVpcPeeringConnection
parameter_list|(
name|AcceptVpcPeeringConnectionRequest
name|acceptVpcPeeringConnectionRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeExportTasks
specifier|public
name|DescribeExportTasksResult
name|describeExportTasks
parameter_list|(
name|DescribeExportTasksRequest
name|describeExportTasksRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|detachInternetGateway
specifier|public
name|void
name|detachInternetGateway
parameter_list|(
name|DetachInternetGatewayRequest
name|detachInternetGatewayRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createVpcPeeringConnection
specifier|public
name|CreateVpcPeeringConnectionResult
name|createVpcPeeringConnection
parameter_list|(
name|CreateVpcPeeringConnectionRequest
name|createVpcPeeringConnectionRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createRouteTable
specifier|public
name|CreateRouteTableResult
name|createRouteTable
parameter_list|(
name|CreateRouteTableRequest
name|createRouteTableRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|cancelImportTask
specifier|public
name|CancelImportTaskResult
name|cancelImportTask
parameter_list|(
name|CancelImportTaskRequest
name|cancelImportTaskRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVolumes
specifier|public
name|DescribeVolumesResult
name|describeVolumes
parameter_list|(
name|DescribeVolumesRequest
name|describeVolumesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeReservedInstancesListings
specifier|public
name|DescribeReservedInstancesListingsResult
name|describeReservedInstancesListings
parameter_list|(
name|DescribeReservedInstancesListingsRequest
name|describeReservedInstancesListingsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|reportInstanceStatus
specifier|public
name|void
name|reportInstanceStatus
parameter_list|(
name|ReportInstanceStatusRequest
name|reportInstanceStatusRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeRouteTables
specifier|public
name|DescribeRouteTablesResult
name|describeRouteTables
parameter_list|(
name|DescribeRouteTablesRequest
name|describeRouteTablesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeDhcpOptions
specifier|public
name|DescribeDhcpOptionsResult
name|describeDhcpOptions
parameter_list|(
name|DescribeDhcpOptionsRequest
name|describeDhcpOptionsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|monitorInstances
specifier|public
name|MonitorInstancesResult
name|monitorInstances
parameter_list|(
name|MonitorInstancesRequest
name|monitorInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describePrefixLists
specifier|public
name|DescribePrefixListsResult
name|describePrefixLists
parameter_list|(
name|DescribePrefixListsRequest
name|describePrefixListsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|requestSpotFleet
specifier|public
name|RequestSpotFleetResult
name|requestSpotFleet
parameter_list|(
name|RequestSpotFleetRequest
name|requestSpotFleetRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeImportImageTasks
specifier|public
name|DescribeImportImageTasksResult
name|describeImportImageTasks
parameter_list|(
name|DescribeImportImageTasksRequest
name|describeImportImageTasksRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeNetworkAcls
specifier|public
name|DescribeNetworkAclsResult
name|describeNetworkAcls
parameter_list|(
name|DescribeNetworkAclsRequest
name|describeNetworkAclsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeBundleTasks
specifier|public
name|DescribeBundleTasksResult
name|describeBundleTasks
parameter_list|(
name|DescribeBundleTasksRequest
name|describeBundleTasksRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|importInstance
specifier|public
name|ImportInstanceResult
name|importInstance
parameter_list|(
name|ImportInstanceRequest
name|importInstanceRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|revokeSecurityGroupIngress
specifier|public
name|void
name|revokeSecurityGroupIngress
parameter_list|(
name|RevokeSecurityGroupIngressRequest
name|revokeSecurityGroupIngressRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteVpcPeeringConnection
specifier|public
name|DeleteVpcPeeringConnectionResult
name|deleteVpcPeeringConnection
parameter_list|(
name|DeleteVpcPeeringConnectionRequest
name|deleteVpcPeeringConnectionRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|getConsoleOutput
specifier|public
name|GetConsoleOutputResult
name|getConsoleOutput
parameter_list|(
name|GetConsoleOutputRequest
name|getConsoleOutputRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createInternetGateway
specifier|public
name|CreateInternetGatewayResult
name|createInternetGateway
parameter_list|(
name|CreateInternetGatewayRequest
name|createInternetGatewayRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteVpnConnectionRoute
specifier|public
name|void
name|deleteVpnConnectionRoute
parameter_list|(
name|DeleteVpnConnectionRouteRequest
name|deleteVpnConnectionRouteRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|detachNetworkInterface
specifier|public
name|void
name|detachNetworkInterface
parameter_list|(
name|DetachNetworkInterfaceRequest
name|detachNetworkInterfaceRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|modifyImageAttribute
specifier|public
name|void
name|modifyImageAttribute
parameter_list|(
name|ModifyImageAttributeRequest
name|modifyImageAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createCustomerGateway
specifier|public
name|CreateCustomerGatewayResult
name|createCustomerGateway
parameter_list|(
name|CreateCustomerGatewayRequest
name|createCustomerGatewayRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createSpotDatafeedSubscription
specifier|public
name|CreateSpotDatafeedSubscriptionResult
name|createSpotDatafeedSubscription
parameter_list|(
name|CreateSpotDatafeedSubscriptionRequest
name|createSpotDatafeedSubscriptionRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|attachInternetGateway
specifier|public
name|void
name|attachInternetGateway
parameter_list|(
name|AttachInternetGatewayRequest
name|attachInternetGatewayRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteVpnConnection
specifier|public
name|void
name|deleteVpnConnection
parameter_list|(
name|DeleteVpnConnectionRequest
name|deleteVpnConnectionRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeMovingAddresses
specifier|public
name|DescribeMovingAddressesResult
name|describeMovingAddresses
parameter_list|(
name|DescribeMovingAddressesRequest
name|describeMovingAddressesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeConversionTasks
specifier|public
name|DescribeConversionTasksResult
name|describeConversionTasks
parameter_list|(
name|DescribeConversionTasksRequest
name|describeConversionTasksRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createVpnConnection
specifier|public
name|CreateVpnConnectionResult
name|createVpnConnection
parameter_list|(
name|CreateVpnConnectionRequest
name|createVpnConnectionRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|importImage
specifier|public
name|ImportImageResult
name|importImage
parameter_list|(
name|ImportImageRequest
name|importImageRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|disableVpcClassicLink
specifier|public
name|DisableVpcClassicLinkResult
name|disableVpcClassicLink
parameter_list|(
name|DisableVpcClassicLinkRequest
name|disableVpcClassicLinkRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|disableVpcClassicLinkDnsSupport
specifier|public
name|DisableVpcClassicLinkDnsSupportResult
name|disableVpcClassicLinkDnsSupport
parameter_list|(
name|DisableVpcClassicLinkDnsSupportRequest
name|disableVpcClassicLinkDnsSupportRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|describeInstanceAttribute
specifier|public
name|DescribeInstanceAttributeResult
name|describeInstanceAttribute
parameter_list|(
name|DescribeInstanceAttributeRequest
name|describeInstanceAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeFlowLogs
specifier|public
name|DescribeFlowLogsResult
name|describeFlowLogs
parameter_list|(
name|DescribeFlowLogsRequest
name|describeFlowLogsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpcPeeringConnections
specifier|public
name|DescribeVpcPeeringConnectionsResult
name|describeVpcPeeringConnections
parameter_list|(
name|DescribeVpcPeeringConnectionsRequest
name|describeVpcPeeringConnectionsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describePlacementGroups
specifier|public
name|DescribePlacementGroupsResult
name|describePlacementGroups
parameter_list|(
name|DescribePlacementGroupsRequest
name|describePlacementGroupsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|runInstances
specifier|public
name|RunInstancesResult
name|runInstances
parameter_list|(
name|RunInstancesRequest
name|runInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|runScheduledInstances
specifier|public
name|RunScheduledInstancesResult
name|runScheduledInstances
parameter_list|(
name|RunScheduledInstancesRequest
name|runScheduledInstancesRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|describeSubnets
specifier|public
name|DescribeSubnetsResult
name|describeSubnets
parameter_list|(
name|DescribeSubnetsRequest
name|describeSubnetsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|associateRouteTable
specifier|public
name|AssociateRouteTableResult
name|associateRouteTable
parameter_list|(
name|AssociateRouteTableRequest
name|associateRouteTableRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|modifyVolumeAttribute
specifier|public
name|void
name|modifyVolumeAttribute
parameter_list|(
name|ModifyVolumeAttributeRequest
name|modifyVolumeAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteNetworkAcl
specifier|public
name|void
name|deleteNetworkAcl
parameter_list|(
name|DeleteNetworkAclRequest
name|deleteNetworkAclRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeImages
specifier|public
name|DescribeImagesResult
name|describeImages
parameter_list|(
name|DescribeImagesRequest
name|describeImagesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|startInstances
specifier|public
name|StartInstancesResult
name|startInstances
parameter_list|(
name|StartInstancesRequest
name|startInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|modifyInstanceAttribute
specifier|public
name|void
name|modifyInstanceAttribute
parameter_list|(
name|ModifyInstanceAttributeRequest
name|modifyInstanceAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|modifyInstancePlacement
specifier|public
name|ModifyInstancePlacementResult
name|modifyInstancePlacement
parameter_list|(
name|ModifyInstancePlacementRequest
name|modifyInstancePlacementRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|cancelReservedInstancesListing
specifier|public
name|CancelReservedInstancesListingResult
name|cancelReservedInstancesListing
parameter_list|(
name|CancelReservedInstancesListingRequest
name|cancelReservedInstancesListingRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteDhcpOptions
specifier|public
name|void
name|deleteDhcpOptions
parameter_list|(
name|DeleteDhcpOptionsRequest
name|deleteDhcpOptionsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|authorizeSecurityGroupIngress
specifier|public
name|void
name|authorizeSecurityGroupIngress
parameter_list|(
name|AuthorizeSecurityGroupIngressRequest
name|authorizeSecurityGroupIngressRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSpotInstanceRequests
specifier|public
name|DescribeSpotInstanceRequestsResult
name|describeSpotInstanceRequests
parameter_list|(
name|DescribeSpotInstanceRequestsRequest
name|describeSpotInstanceRequestsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createVpc
specifier|public
name|CreateVpcResult
name|createVpc
parameter_list|(
name|CreateVpcRequest
name|createVpcRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeCustomerGateways
specifier|public
name|DescribeCustomerGatewaysResult
name|describeCustomerGateways
parameter_list|(
name|DescribeCustomerGatewaysRequest
name|describeCustomerGatewaysRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|cancelExportTask
specifier|public
name|void
name|cancelExportTask
parameter_list|(
name|CancelExportTaskRequest
name|cancelExportTaskRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createRoute
specifier|public
name|CreateRouteResult
name|createRoute
parameter_list|(
name|CreateRouteRequest
name|createRouteRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createVpcEndpoint
specifier|public
name|CreateVpcEndpointResult
name|createVpcEndpoint
parameter_list|(
name|CreateVpcEndpointRequest
name|createVpcEndpointRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|copyImage
specifier|public
name|CopyImageResult
name|copyImage
parameter_list|(
name|CopyImageRequest
name|copyImageRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpcClassicLink
specifier|public
name|DescribeVpcClassicLinkResult
name|describeVpcClassicLink
parameter_list|(
name|DescribeVpcClassicLinkRequest
name|describeVpcClassicLinkRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|modifyNetworkInterfaceAttribute
specifier|public
name|void
name|modifyNetworkInterfaceAttribute
parameter_list|(
name|ModifyNetworkInterfaceAttributeRequest
name|modifyNetworkInterfaceAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteRouteTable
specifier|public
name|void
name|deleteRouteTable
parameter_list|(
name|DeleteRouteTableRequest
name|deleteRouteTableRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeNetworkInterfaceAttribute
specifier|public
name|DescribeNetworkInterfaceAttributeResult
name|describeNetworkInterfaceAttribute
parameter_list|(
name|DescribeNetworkInterfaceAttributeRequest
name|describeNetworkInterfaceAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeClassicLinkInstances
specifier|public
name|DescribeClassicLinkInstancesResult
name|describeClassicLinkInstances
parameter_list|(
name|DescribeClassicLinkInstancesRequest
name|describeClassicLinkInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|requestSpotInstances
specifier|public
name|RequestSpotInstancesResult
name|requestSpotInstances
parameter_list|(
name|RequestSpotInstancesRequest
name|requestSpotInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createTags
specifier|public
name|void
name|createTags
parameter_list|(
name|CreateTagsRequest
name|createTagsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVolumeAttribute
specifier|public
name|DescribeVolumeAttributeResult
name|describeVolumeAttribute
parameter_list|(
name|DescribeVolumeAttributeRequest
name|describeVolumeAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|attachNetworkInterface
specifier|public
name|AttachNetworkInterfaceResult
name|attachNetworkInterface
parameter_list|(
name|AttachNetworkInterfaceRequest
name|attachNetworkInterfaceRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|replaceRoute
specifier|public
name|void
name|replaceRoute
parameter_list|(
name|ReplaceRouteRequest
name|replaceRouteRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeTags
specifier|public
name|DescribeTagsResult
name|describeTags
parameter_list|(
name|DescribeTagsRequest
name|describeTagsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|cancelBundleTask
specifier|public
name|CancelBundleTaskResult
name|cancelBundleTask
parameter_list|(
name|CancelBundleTaskRequest
name|cancelBundleTaskRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|disableVgwRoutePropagation
specifier|public
name|void
name|disableVgwRoutePropagation
parameter_list|(
name|DisableVgwRoutePropagationRequest
name|disableVgwRoutePropagationRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|importSnapshot
specifier|public
name|ImportSnapshotResult
name|importSnapshot
parameter_list|(
name|ImportSnapshotRequest
name|importSnapshotRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|cancelSpotInstanceRequests
specifier|public
name|CancelSpotInstanceRequestsResult
name|cancelSpotInstanceRequests
parameter_list|(
name|CancelSpotInstanceRequestsRequest
name|cancelSpotInstanceRequestsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSpotFleetRequests
specifier|public
name|DescribeSpotFleetRequestsResult
name|describeSpotFleetRequests
parameter_list|(
name|DescribeSpotFleetRequestsRequest
name|describeSpotFleetRequestsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|purchaseReservedInstancesOffering
specifier|public
name|PurchaseReservedInstancesOfferingResult
name|purchaseReservedInstancesOffering
parameter_list|(
name|PurchaseReservedInstancesOfferingRequest
name|purchaseReservedInstancesOfferingRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|purchaseScheduledInstances
specifier|public
name|PurchaseScheduledInstancesResult
name|purchaseScheduledInstances
parameter_list|(
name|PurchaseScheduledInstancesRequest
name|purchaseScheduledInstancesRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|modifySnapshotAttribute
specifier|public
name|void
name|modifySnapshotAttribute
parameter_list|(
name|ModifySnapshotAttributeRequest
name|modifySnapshotAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeReservedInstancesModifications
specifier|public
name|DescribeReservedInstancesModificationsResult
name|describeReservedInstancesModifications
parameter_list|(
name|DescribeReservedInstancesModificationsRequest
name|describeReservedInstancesModificationsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|terminateInstances
specifier|public
name|TerminateInstancesResult
name|terminateInstances
parameter_list|(
name|TerminateInstancesRequest
name|terminateInstancesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|modifyVpcEndpoint
specifier|public
name|ModifyVpcEndpointResult
name|modifyVpcEndpoint
parameter_list|(
name|ModifyVpcEndpointRequest
name|modifyVpcEndpointRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteSpotDatafeedSubscription
specifier|public
name|void
name|deleteSpotDatafeedSubscription
parameter_list|(
name|DeleteSpotDatafeedSubscriptionRequest
name|deleteSpotDatafeedSubscriptionRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteInternetGateway
specifier|public
name|void
name|deleteInternetGateway
parameter_list|(
name|DeleteInternetGatewayRequest
name|deleteInternetGatewayRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSnapshotAttribute
specifier|public
name|DescribeSnapshotAttributeResult
name|describeSnapshotAttribute
parameter_list|(
name|DescribeSnapshotAttributeRequest
name|describeSnapshotAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|replaceRouteTableAssociation
specifier|public
name|ReplaceRouteTableAssociationResult
name|replaceRouteTableAssociation
parameter_list|(
name|ReplaceRouteTableAssociationRequest
name|replaceRouteTableAssociationRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeAddresses
specifier|public
name|DescribeAddressesResult
name|describeAddresses
parameter_list|(
name|DescribeAddressesRequest
name|describeAddressesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeImageAttribute
specifier|public
name|DescribeImageAttributeResult
name|describeImageAttribute
parameter_list|(
name|DescribeImageAttributeRequest
name|describeImageAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeKeyPairs
specifier|public
name|DescribeKeyPairsResult
name|describeKeyPairs
parameter_list|(
name|DescribeKeyPairsRequest
name|describeKeyPairsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|confirmProductInstance
specifier|public
name|ConfirmProductInstanceResult
name|confirmProductInstance
parameter_list|(
name|ConfirmProductInstanceRequest
name|confirmProductInstanceRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|disassociateRouteTable
specifier|public
name|void
name|disassociateRouteTable
parameter_list|(
name|DisassociateRouteTableRequest
name|disassociateRouteTableRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpcAttribute
specifier|public
name|DescribeVpcAttributeResult
name|describeVpcAttribute
parameter_list|(
name|DescribeVpcAttributeRequest
name|describeVpcAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|revokeSecurityGroupEgress
specifier|public
name|void
name|revokeSecurityGroupEgress
parameter_list|(
name|RevokeSecurityGroupEgressRequest
name|revokeSecurityGroupEgressRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteNetworkAclEntry
specifier|public
name|void
name|deleteNetworkAclEntry
parameter_list|(
name|DeleteNetworkAclEntryRequest
name|deleteNetworkAclEntryRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createVolume
specifier|public
name|CreateVolumeResult
name|createVolume
parameter_list|(
name|CreateVolumeRequest
name|createVolumeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeInstanceStatus
specifier|public
name|DescribeInstanceStatusResult
name|describeInstanceStatus
parameter_list|(
name|DescribeInstanceStatusRequest
name|describeInstanceStatusRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpnGateways
specifier|public
name|DescribeVpnGatewaysResult
name|describeVpnGateways
parameter_list|(
name|DescribeVpnGatewaysRequest
name|describeVpnGatewaysRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createSubnet
specifier|public
name|CreateSubnetResult
name|createSubnet
parameter_list|(
name|CreateSubnetRequest
name|createSubnetRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeReservedInstancesOfferings
specifier|public
name|DescribeReservedInstancesOfferingsResult
name|describeReservedInstancesOfferings
parameter_list|(
name|DescribeReservedInstancesOfferingsRequest
name|describeReservedInstancesOfferingsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|assignPrivateIpAddresses
specifier|public
name|void
name|assignPrivateIpAddresses
parameter_list|(
name|AssignPrivateIpAddressesRequest
name|assignPrivateIpAddressesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSpotFleetRequestHistory
specifier|public
name|DescribeSpotFleetRequestHistoryResult
name|describeSpotFleetRequestHistory
parameter_list|(
name|DescribeSpotFleetRequestHistoryRequest
name|describeSpotFleetRequestHistoryRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteSnapshot
specifier|public
name|void
name|deleteSnapshot
parameter_list|(
name|DeleteSnapshotRequest
name|deleteSnapshotRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|replaceNetworkAclAssociation
specifier|public
name|ReplaceNetworkAclAssociationResult
name|replaceNetworkAclAssociation
parameter_list|(
name|ReplaceNetworkAclAssociationRequest
name|replaceNetworkAclAssociationRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|disassociateAddress
specifier|public
name|void
name|disassociateAddress
parameter_list|(
name|DisassociateAddressRequest
name|disassociateAddressRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createPlacementGroup
specifier|public
name|void
name|createPlacementGroup
parameter_list|(
name|CreatePlacementGroupRequest
name|createPlacementGroupRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|bundleInstance
specifier|public
name|BundleInstanceResult
name|bundleInstance
parameter_list|(
name|BundleInstanceRequest
name|bundleInstanceRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deletePlacementGroup
specifier|public
name|void
name|deletePlacementGroup
parameter_list|(
name|DeletePlacementGroupRequest
name|deletePlacementGroupRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|modifySubnetAttribute
specifier|public
name|void
name|modifySubnetAttribute
parameter_list|(
name|ModifySubnetAttributeRequest
name|modifySubnetAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteVpc
specifier|public
name|void
name|deleteVpc
parameter_list|(
name|DeleteVpcRequest
name|deleteVpcRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|copySnapshot
specifier|public
name|CopySnapshotResult
name|copySnapshot
parameter_list|(
name|CopySnapshotRequest
name|copySnapshotRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpcEndpointServices
specifier|public
name|DescribeVpcEndpointServicesResult
name|describeVpcEndpointServices
parameter_list|(
name|DescribeVpcEndpointServicesRequest
name|describeVpcEndpointServicesRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|allocateAddress
specifier|public
name|AllocateAddressResult
name|allocateAddress
parameter_list|(
name|AllocateAddressRequest
name|allocateAddressRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|releaseAddress
specifier|public
name|void
name|releaseAddress
parameter_list|(
name|ReleaseAddressRequest
name|releaseAddressRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|releaseHosts
specifier|public
name|ReleaseHostsResult
name|releaseHosts
parameter_list|(
name|ReleaseHostsRequest
name|releaseHostsRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|resetInstanceAttribute
specifier|public
name|void
name|resetInstanceAttribute
parameter_list|(
name|ResetInstanceAttributeRequest
name|resetInstanceAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createKeyPair
specifier|public
name|CreateKeyPairResult
name|createKeyPair
parameter_list|(
name|CreateKeyPairRequest
name|createKeyPairRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createNatGateway
specifier|public
name|CreateNatGatewayResult
name|createNatGateway
parameter_list|(
name|CreateNatGatewayRequest
name|createNatGatewayRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|replaceNetworkAclEntry
specifier|public
name|void
name|replaceNetworkAclEntry
parameter_list|(
name|ReplaceNetworkAclEntryRequest
name|replaceNetworkAclEntryRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSnapshots
specifier|public
name|DescribeSnapshotsResult
name|describeSnapshots
parameter_list|(
name|DescribeSnapshotsRequest
name|describeSnapshotsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createNetworkAcl
specifier|public
name|CreateNetworkAclResult
name|createNetworkAcl
parameter_list|(
name|CreateNetworkAclRequest
name|createNetworkAclRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|registerImage
specifier|public
name|RegisterImageResult
name|registerImage
parameter_list|(
name|RegisterImageRequest
name|registerImageRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|resetNetworkInterfaceAttribute
specifier|public
name|void
name|resetNetworkInterfaceAttribute
parameter_list|(
name|ResetNetworkInterfaceAttributeRequest
name|resetNetworkInterfaceAttributeRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|enableVpcClassicLink
specifier|public
name|EnableVpcClassicLinkResult
name|enableVpcClassicLink
parameter_list|(
name|EnableVpcClassicLinkRequest
name|enableVpcClassicLinkRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|enableVpcClassicLinkDnsSupport
specifier|public
name|EnableVpcClassicLinkDnsSupportResult
name|enableVpcClassicLinkDnsSupport
parameter_list|(
name|EnableVpcClassicLinkDnsSupportRequest
name|enableVpcClassicLinkDnsSupportRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|createVpnConnectionRoute
specifier|public
name|void
name|createVpnConnectionRoute
parameter_list|(
name|CreateVpnConnectionRouteRequest
name|createVpnConnectionRouteRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpcEndpoints
specifier|public
name|DescribeVpcEndpointsResult
name|describeVpcEndpoints
parameter_list|(
name|DescribeVpcEndpointsRequest
name|describeVpcEndpointsRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|detachClassicLinkVpc
specifier|public
name|DetachClassicLinkVpcResult
name|detachClassicLinkVpc
parameter_list|(
name|DetachClassicLinkVpcRequest
name|detachClassicLinkVpcRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeReservedInstances
specifier|public
name|DescribeReservedInstancesResult
name|describeReservedInstances
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeAvailabilityZones
specifier|public
name|DescribeAvailabilityZonesResult
name|describeAvailabilityZones
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSpotPriceHistory
specifier|public
name|DescribeSpotPriceHistoryResult
name|describeSpotPriceHistory
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeNetworkInterfaces
specifier|public
name|DescribeNetworkInterfacesResult
name|describeNetworkInterfaces
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeRegions
specifier|public
name|DescribeRegionsResult
name|describeRegions
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeInternetGateways
specifier|public
name|DescribeInternetGatewaysResult
name|describeInternetGateways
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSecurityGroups
specifier|public
name|DescribeSecurityGroupsResult
name|describeSecurityGroups
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSpotDatafeedSubscription
specifier|public
name|DescribeSpotDatafeedSubscriptionResult
name|describeSpotDatafeedSubscription
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeAccountAttributes
specifier|public
name|DescribeAccountAttributesResult
name|describeAccountAttributes
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVolumeStatus
specifier|public
name|DescribeVolumeStatusResult
name|describeVolumeStatus
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeImportSnapshotTasks
specifier|public
name|DescribeImportSnapshotTasksResult
name|describeImportSnapshotTasks
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpnConnections
specifier|public
name|DescribeVpnConnectionsResult
name|describeVpnConnections
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpcs
specifier|public
name|DescribeVpcsResult
name|describeVpcs
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|acceptVpcPeeringConnection
specifier|public
name|AcceptVpcPeeringConnectionResult
name|acceptVpcPeeringConnection
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeExportTasks
specifier|public
name|DescribeExportTasksResult
name|describeExportTasks
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createVpcPeeringConnection
specifier|public
name|CreateVpcPeeringConnectionResult
name|createVpcPeeringConnection
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|cancelImportTask
specifier|public
name|CancelImportTaskResult
name|cancelImportTask
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVolumes
specifier|public
name|DescribeVolumesResult
name|describeVolumes
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeReservedInstancesListings
specifier|public
name|DescribeReservedInstancesListingsResult
name|describeReservedInstancesListings
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeRouteTables
specifier|public
name|DescribeRouteTablesResult
name|describeRouteTables
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeScheduledInstanceAvailability
specifier|public
name|DescribeScheduledInstanceAvailabilityResult
name|describeScheduledInstanceAvailability
parameter_list|(
name|DescribeScheduledInstanceAvailabilityRequest
name|describeScheduledInstanceAvailabilityRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|describeScheduledInstances
specifier|public
name|DescribeScheduledInstancesResult
name|describeScheduledInstances
parameter_list|(
name|DescribeScheduledInstancesRequest
name|describeScheduledInstancesRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|describeDhcpOptions
specifier|public
name|DescribeDhcpOptionsResult
name|describeDhcpOptions
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describePrefixLists
specifier|public
name|DescribePrefixListsResult
name|describePrefixLists
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeImportImageTasks
specifier|public
name|DescribeImportImageTasksResult
name|describeImportImageTasks
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeNetworkAcls
specifier|public
name|DescribeNetworkAclsResult
name|describeNetworkAcls
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeBundleTasks
specifier|public
name|DescribeBundleTasksResult
name|describeBundleTasks
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|revokeSecurityGroupIngress
specifier|public
name|void
name|revokeSecurityGroupIngress
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createInternetGateway
specifier|public
name|CreateInternetGatewayResult
name|createInternetGateway
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeMovingAddresses
specifier|public
name|DescribeMovingAddressesResult
name|describeMovingAddresses
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeNatGateways
specifier|public
name|DescribeNatGatewaysResult
name|describeNatGateways
parameter_list|(
name|DescribeNatGatewaysRequest
name|describeNatGatewaysRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|describeConversionTasks
specifier|public
name|DescribeConversionTasksResult
name|describeConversionTasks
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|importImage
specifier|public
name|ImportImageResult
name|importImage
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeFlowLogs
specifier|public
name|DescribeFlowLogsResult
name|describeFlowLogs
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeHosts
specifier|public
name|DescribeHostsResult
name|describeHosts
parameter_list|(
name|DescribeHostsRequest
name|describeHostsRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|describeHosts
specifier|public
name|DescribeHostsResult
name|describeHosts
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|describeIdFormat
specifier|public
name|DescribeIdFormatResult
name|describeIdFormat
parameter_list|(
name|DescribeIdFormatRequest
name|describeIdFormatRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|describeIdFormat
specifier|public
name|DescribeIdFormatResult
name|describeIdFormat
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|describeVpcPeeringConnections
specifier|public
name|DescribeVpcPeeringConnectionsResult
name|describeVpcPeeringConnections
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describePlacementGroups
specifier|public
name|DescribePlacementGroupsResult
name|describePlacementGroups
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSubnets
specifier|public
name|DescribeSubnetsResult
name|describeSubnets
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeInstances
specifier|public
name|DescribeInstancesResult
name|describeInstances
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeImages
specifier|public
name|DescribeImagesResult
name|describeImages
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSpotInstanceRequests
specifier|public
name|DescribeSpotInstanceRequestsResult
name|describeSpotInstanceRequests
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeCustomerGateways
specifier|public
name|DescribeCustomerGatewaysResult
name|describeCustomerGateways
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpcClassicLink
specifier|public
name|DescribeVpcClassicLinkResult
name|describeVpcClassicLink
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpcClassicLinkDnsSupport
specifier|public
name|DescribeVpcClassicLinkDnsSupportResult
name|describeVpcClassicLinkDnsSupport
parameter_list|(
name|DescribeVpcClassicLinkDnsSupportRequest
name|describeVpcClassicLinkDnsSupportRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|describeClassicLinkInstances
specifier|public
name|DescribeClassicLinkInstancesResult
name|describeClassicLinkInstances
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeTags
specifier|public
name|DescribeTagsResult
name|describeTags
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|importSnapshot
specifier|public
name|ImportSnapshotResult
name|importSnapshot
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeSpotFleetRequests
specifier|public
name|DescribeSpotFleetRequestsResult
name|describeSpotFleetRequests
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeReservedInstancesModifications
specifier|public
name|DescribeReservedInstancesModificationsResult
name|describeReservedInstancesModifications
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteSpotDatafeedSubscription
specifier|public
name|void
name|deleteSpotDatafeedSubscription
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeAddresses
specifier|public
name|DescribeAddressesResult
name|describeAddresses
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeKeyPairs
specifier|public
name|DescribeKeyPairsResult
name|describeKeyPairs
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeInstanceStatus
specifier|public
name|DescribeInstanceStatusResult
name|describeInstanceStatus
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpnGateways
specifier|public
name|DescribeVpnGatewaysResult
name|describeVpnGateways
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeReservedInstancesOfferings
specifier|public
name|DescribeReservedInstancesOfferingsResult
name|describeReservedInstancesOfferings
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpcEndpointServices
specifier|public
name|DescribeVpcEndpointServicesResult
name|describeVpcEndpointServices
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|allocateAddress
specifier|public
name|AllocateAddressResult
name|allocateAddress
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|allocateHosts
specifier|public
name|AllocateHostsResult
name|allocateHosts
parameter_list|(
name|AllocateHostsRequest
name|allocateHostsRequest
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|describeSnapshots
specifier|public
name|DescribeSnapshotsResult
name|describeSnapshots
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|describeVpcEndpoints
specifier|public
name|DescribeVpcEndpointsResult
name|describeVpcEndpoints
parameter_list|()
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|dryRun
specifier|public
parameter_list|<
name|X
extends|extends
name|AmazonWebServiceRequest
parameter_list|>
name|DryRunResult
argument_list|<
name|X
argument_list|>
name|dryRun
parameter_list|(
name|DryRunSupportedRequest
argument_list|<
name|X
argument_list|>
name|request
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|shutdown
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|getCachedResponseMetadata
specifier|public
name|ResponseMetadata
name|getCachedResponseMetadata
parameter_list|(
name|AmazonWebServiceRequest
name|request
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|modifySpotFleetRequest
specifier|public
name|ModifySpotFleetRequestResult
name|modifySpotFleetRequest
parameter_list|(
name|ModifySpotFleetRequestRequest
name|modifySpotFleetRequestRequest
parameter_list|)
throws|throws
name|AmazonServiceException
throws|,
name|AmazonClientException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in mock"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

