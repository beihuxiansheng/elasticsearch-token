begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.repositories.azure
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|azure
package|;
end_package

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|LocationMode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|StorageException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlobClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|storage
operator|.
name|AzureStorageService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|storage
operator|.
name|AzureStorageServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|storage
operator|.
name|AzureStorageSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|RepositoryMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|Environment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|NodeEnvironment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|storage
operator|.
name|AzureStorageServiceImpl
operator|.
name|blobNameFromUri
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|nullValue
import|;
end_import

begin_class
DECL|class|AzureRepositorySettingsTests
specifier|public
class|class
name|AzureRepositorySettingsTests
extends|extends
name|ESTestCase
block|{
DECL|method|azureRepository
specifier|private
name|AzureRepository
name|azureRepository
parameter_list|(
name|Settings
name|settings
parameter_list|)
throws|throws
name|StorageException
throws|,
name|IOException
throws|,
name|URISyntaxException
block|{
name|Settings
name|internalSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toAbsolutePath
argument_list|()
argument_list|)
operator|.
name|putArray
argument_list|(
name|Environment
operator|.
name|PATH_DATA_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|tmpPaths
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|settings
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
operator|new
name|AzureRepository
argument_list|(
operator|new
name|RepositoryMetaData
argument_list|(
literal|"foo"
argument_list|,
literal|"azure"
argument_list|,
name|internalSettings
argument_list|)
argument_list|,
operator|new
name|Environment
argument_list|(
name|internalSettings
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|testReadonlyDefault
specifier|public
name|void
name|testReadonlyDefault
parameter_list|()
throws|throws
name|StorageException
throws|,
name|IOException
throws|,
name|URISyntaxException
block|{
name|assertThat
argument_list|(
name|azureRepository
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
operator|.
name|isReadOnly
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testReadonlyDefaultAndReadonlyOn
specifier|public
name|void
name|testReadonlyDefaultAndReadonlyOn
parameter_list|()
throws|throws
name|StorageException
throws|,
name|IOException
throws|,
name|URISyntaxException
block|{
name|assertThat
argument_list|(
name|azureRepository
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"readonly"
argument_list|,
literal|true
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|isReadOnly
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testReadonlyWithPrimaryOnly
specifier|public
name|void
name|testReadonlyWithPrimaryOnly
parameter_list|()
throws|throws
name|StorageException
throws|,
name|IOException
throws|,
name|URISyntaxException
block|{
name|assertThat
argument_list|(
name|azureRepository
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|AzureRepository
operator|.
name|Repository
operator|.
name|LOCATION_MODE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|isReadOnly
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testReadonlyWithPrimaryOnlyAndReadonlyOn
specifier|public
name|void
name|testReadonlyWithPrimaryOnlyAndReadonlyOn
parameter_list|()
throws|throws
name|StorageException
throws|,
name|IOException
throws|,
name|URISyntaxException
block|{
name|assertThat
argument_list|(
name|azureRepository
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|AzureRepository
operator|.
name|Repository
operator|.
name|LOCATION_MODE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"readonly"
argument_list|,
literal|true
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|isReadOnly
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testReadonlyWithSecondaryOnlyAndReadonlyOn
specifier|public
name|void
name|testReadonlyWithSecondaryOnlyAndReadonlyOn
parameter_list|()
throws|throws
name|StorageException
throws|,
name|IOException
throws|,
name|URISyntaxException
block|{
name|assertThat
argument_list|(
name|azureRepository
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|AzureRepository
operator|.
name|Repository
operator|.
name|LOCATION_MODE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|LocationMode
operator|.
name|SECONDARY_ONLY
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"readonly"
argument_list|,
literal|true
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|isReadOnly
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testReadonlyWithSecondaryOnlyAndReadonlyOff
specifier|public
name|void
name|testReadonlyWithSecondaryOnlyAndReadonlyOff
parameter_list|()
throws|throws
name|StorageException
throws|,
name|IOException
throws|,
name|URISyntaxException
block|{
name|assertThat
argument_list|(
name|azureRepository
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|AzureRepository
operator|.
name|Repository
operator|.
name|LOCATION_MODE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|LocationMode
operator|.
name|SECONDARY_ONLY
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"readonly"
argument_list|,
literal|false
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|isReadOnly
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testReadonlyWithPrimaryAndSecondaryOnlyAndReadonlyOn
specifier|public
name|void
name|testReadonlyWithPrimaryAndSecondaryOnlyAndReadonlyOn
parameter_list|()
throws|throws
name|StorageException
throws|,
name|IOException
throws|,
name|URISyntaxException
block|{
name|assertThat
argument_list|(
name|azureRepository
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|AzureRepository
operator|.
name|Repository
operator|.
name|LOCATION_MODE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_THEN_SECONDARY
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"readonly"
argument_list|,
literal|true
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|isReadOnly
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testReadonlyWithPrimaryAndSecondaryOnlyAndReadonlyOff
specifier|public
name|void
name|testReadonlyWithPrimaryAndSecondaryOnlyAndReadonlyOff
parameter_list|()
throws|throws
name|StorageException
throws|,
name|IOException
throws|,
name|URISyntaxException
block|{
name|assertThat
argument_list|(
name|azureRepository
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|AzureRepository
operator|.
name|Repository
operator|.
name|LOCATION_MODE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_THEN_SECONDARY
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"readonly"
argument_list|,
literal|false
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|isReadOnly
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

