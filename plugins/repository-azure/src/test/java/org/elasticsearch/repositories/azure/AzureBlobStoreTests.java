begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.repositories.azure
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|azure
package|;
end_package

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|StorageException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|blobstore
operator|.
name|AzureBlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|storage
operator|.
name|AzureStorageService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|storage
operator|.
name|AzureStorageServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|blobstore
operator|.
name|BlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|ESBlobStoreTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|RepositoryName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|RepositorySettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|AzureTestUtils
operator|.
name|readSettingsFromFile
import|;
end_import

begin_comment
comment|/**  * You must specify {@code -Dtests.thirdparty=true -Dtests.config=/path/to/elasticsearch.yml}  * in order to run these tests.  */
end_comment

begin_class
annotation|@
name|ESIntegTestCase
operator|.
name|ThirdParty
DECL|class|AzureBlobStoreTests
specifier|public
class|class
name|AzureBlobStoreTests
extends|extends
name|ESBlobStoreTestCase
block|{
annotation|@
name|Override
DECL|method|newBlobStore
specifier|protected
name|BlobStore
name|newBlobStore
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|RepositoryName
name|repositoryName
init|=
operator|new
name|RepositoryName
argument_list|(
literal|"azure"
argument_list|,
literal|"ittest"
argument_list|)
decl_stmt|;
name|Settings
name|settings
init|=
name|readSettingsFromFile
argument_list|()
decl_stmt|;
name|RepositorySettings
name|repositorySettings
init|=
operator|new
name|RepositorySettings
argument_list|(
name|settings
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|AzureStorageService
name|storageService
init|=
operator|new
name|AzureStorageServiceImpl
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|AzureBlobStore
name|blobStore
init|=
operator|new
name|AzureBlobStore
argument_list|(
name|repositoryName
argument_list|,
name|settings
argument_list|,
name|repositorySettings
argument_list|,
name|storageService
argument_list|)
decl_stmt|;
name|blobStore
operator|.
name|createContainer
argument_list|(
name|blobStore
operator|.
name|container
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|blobStore
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
decl||
name|StorageException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

