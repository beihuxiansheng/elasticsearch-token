begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cloud.azure.storage
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|LocationMode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlobClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_class
DECL|class|AzureStorageServiceTest
specifier|public
class|class
name|AzureStorageServiceTest
extends|extends
name|ESTestCase
block|{
DECL|field|settings
specifier|final
specifier|static
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure1.account"
argument_list|,
literal|"myaccount1"
argument_list|)
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure1.key"
argument_list|,
literal|"mykey1"
argument_list|)
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure1.default"
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure2.account"
argument_list|,
literal|"myaccount2"
argument_list|)
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure2.key"
argument_list|,
literal|"mykey2"
argument_list|)
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure3.account"
argument_list|,
literal|"myaccount3"
argument_list|)
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure3.key"
argument_list|,
literal|"mykey3"
argument_list|)
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure3.timeout"
argument_list|,
literal|"30s"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|method|testGetSelectedClientWithNoPrimaryAndSecondary
specifier|public
name|void
name|testGetSelectedClientWithNoPrimaryAndSecondary
parameter_list|()
block|{
name|AzureStorageServiceImpl
name|azureStorageService
init|=
operator|new
name|AzureStorageServiceMock
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|azureStorageService
operator|.
name|doStart
argument_list|()
expr_stmt|;
try|try
block|{
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|"whatever"
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"we should have raised an IllegalArgumentException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"No primary azure storage can be found. Check your elasticsearch.yml."
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testGetSelectedClientWithNoSecondary
specifier|public
name|void
name|testGetSelectedClientWithNoSecondary
parameter_list|()
block|{
name|AzureStorageServiceImpl
name|azureStorageService
init|=
operator|new
name|AzureStorageServiceMock
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure1.account"
argument_list|,
literal|"myaccount1"
argument_list|)
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure1.key"
argument_list|,
literal|"mykey1"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|azureStorageService
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|CloudBlobClient
name|client
init|=
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|"azure1"
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|getEndpoint
argument_list|()
argument_list|,
name|is
argument_list|(
name|URI
operator|.
name|create
argument_list|(
literal|"https://azure1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetDefaultClientWithNoSecondary
specifier|public
name|void
name|testGetDefaultClientWithNoSecondary
parameter_list|()
block|{
name|AzureStorageServiceImpl
name|azureStorageService
init|=
operator|new
name|AzureStorageServiceMock
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure1.account"
argument_list|,
literal|"myaccount1"
argument_list|)
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.azure1.key"
argument_list|,
literal|"mykey1"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|azureStorageService
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|CloudBlobClient
name|client
init|=
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|null
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|getEndpoint
argument_list|()
argument_list|,
name|is
argument_list|(
name|URI
operator|.
name|create
argument_list|(
literal|"https://azure1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetSelectedClientPrimary
specifier|public
name|void
name|testGetSelectedClientPrimary
parameter_list|()
block|{
name|AzureStorageServiceImpl
name|azureStorageService
init|=
operator|new
name|AzureStorageServiceMock
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|azureStorageService
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|CloudBlobClient
name|client
init|=
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|"azure1"
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|getEndpoint
argument_list|()
argument_list|,
name|is
argument_list|(
name|URI
operator|.
name|create
argument_list|(
literal|"https://azure1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetSelectedClientSecondary1
specifier|public
name|void
name|testGetSelectedClientSecondary1
parameter_list|()
block|{
name|AzureStorageServiceImpl
name|azureStorageService
init|=
operator|new
name|AzureStorageServiceMock
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|azureStorageService
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|CloudBlobClient
name|client
init|=
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|"azure2"
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|getEndpoint
argument_list|()
argument_list|,
name|is
argument_list|(
name|URI
operator|.
name|create
argument_list|(
literal|"https://azure2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetSelectedClientSecondary2
specifier|public
name|void
name|testGetSelectedClientSecondary2
parameter_list|()
block|{
name|AzureStorageServiceImpl
name|azureStorageService
init|=
operator|new
name|AzureStorageServiceMock
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|azureStorageService
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|CloudBlobClient
name|client
init|=
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|"azure3"
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|getEndpoint
argument_list|()
argument_list|,
name|is
argument_list|(
name|URI
operator|.
name|create
argument_list|(
literal|"https://azure3"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetDefaultClientWithPrimaryAndSecondaries
specifier|public
name|void
name|testGetDefaultClientWithPrimaryAndSecondaries
parameter_list|()
block|{
name|AzureStorageServiceImpl
name|azureStorageService
init|=
operator|new
name|AzureStorageServiceMock
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|azureStorageService
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|CloudBlobClient
name|client
init|=
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|null
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|getEndpoint
argument_list|()
argument_list|,
name|is
argument_list|(
name|URI
operator|.
name|create
argument_list|(
literal|"https://azure1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetSelectedClientNonExisting
specifier|public
name|void
name|testGetSelectedClientNonExisting
parameter_list|()
block|{
name|AzureStorageServiceImpl
name|azureStorageService
init|=
operator|new
name|AzureStorageServiceMock
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|azureStorageService
operator|.
name|doStart
argument_list|()
expr_stmt|;
try|try
block|{
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|"azure4"
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"we should have raised an IllegalArgumentException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"Can not find azure account [azure4]. Check your elasticsearch.yml."
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testGetSelectedClientDefault
specifier|public
name|void
name|testGetSelectedClientDefault
parameter_list|()
block|{
name|AzureStorageServiceImpl
name|azureStorageService
init|=
operator|new
name|AzureStorageServiceMock
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|azureStorageService
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|CloudBlobClient
name|client
init|=
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|null
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|getEndpoint
argument_list|()
argument_list|,
name|is
argument_list|(
name|URI
operator|.
name|create
argument_list|(
literal|"https://azure1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetSelectedClientGlobalTimeout
specifier|public
name|void
name|testGetSelectedClientGlobalTimeout
parameter_list|()
block|{
name|Settings
name|timeoutSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|settings
argument_list|)
operator|.
name|put
argument_list|(
literal|"cloud.azure.storage.timeout"
argument_list|,
literal|"10s"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|AzureStorageServiceImpl
name|azureStorageService
init|=
operator|new
name|AzureStorageServiceMock
argument_list|(
name|timeoutSettings
argument_list|)
decl_stmt|;
name|azureStorageService
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|CloudBlobClient
name|client1
init|=
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|"azure1"
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|client1
operator|.
name|getDefaultRequestOptions
argument_list|()
operator|.
name|getTimeoutIntervalInMs
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
operator|*
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|CloudBlobClient
name|client3
init|=
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|"azure3"
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|client3
operator|.
name|getDefaultRequestOptions
argument_list|()
operator|.
name|getTimeoutIntervalInMs
argument_list|()
argument_list|,
name|is
argument_list|(
literal|30
operator|*
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetSelectedClientDefaultTimeout
specifier|public
name|void
name|testGetSelectedClientDefaultTimeout
parameter_list|()
block|{
name|AzureStorageServiceImpl
name|azureStorageService
init|=
operator|new
name|AzureStorageServiceMock
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|azureStorageService
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|CloudBlobClient
name|client1
init|=
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|"azure1"
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|client1
operator|.
name|getDefaultRequestOptions
argument_list|()
operator|.
name|getTimeoutIntervalInMs
argument_list|()
argument_list|,
name|is
argument_list|(
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|CloudBlobClient
name|client3
init|=
name|azureStorageService
operator|.
name|getSelectedClient
argument_list|(
literal|"azure3"
argument_list|,
name|LocationMode
operator|.
name|PRIMARY_ONLY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|client3
operator|.
name|getDefaultRequestOptions
argument_list|()
operator|.
name|getTimeoutIntervalInMs
argument_list|()
argument_list|,
name|is
argument_list|(
literal|30
operator|*
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * This internal class just overload createClient method which is called by AzureStorageServiceImpl.doStart()      */
DECL|class|AzureStorageServiceMock
class|class
name|AzureStorageServiceMock
extends|extends
name|AzureStorageServiceImpl
block|{
DECL|method|AzureStorageServiceMock
specifier|public
name|AzureStorageServiceMock
parameter_list|(
name|Settings
name|settings
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|)
expr_stmt|;
block|}
comment|// We fake the client here
annotation|@
name|Override
DECL|method|createClient
name|void
name|createClient
parameter_list|(
name|AzureStorageSettings
name|azureStorageSettings
parameter_list|)
block|{
name|this
operator|.
name|clients
operator|.
name|put
argument_list|(
name|azureStorageSettings
operator|.
name|getAccount
argument_list|()
argument_list|,
operator|new
name|CloudBlobClient
argument_list|(
name|URI
operator|.
name|create
argument_list|(
literal|"https://"
operator|+
name|azureStorageSettings
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

