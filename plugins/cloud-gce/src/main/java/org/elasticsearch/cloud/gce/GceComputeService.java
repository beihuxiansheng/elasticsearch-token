begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cloud.gce
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|gce
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|compute
operator|.
name|model
operator|.
name|Instance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|component
operator|.
name|LifecycleComponent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_interface
DECL|interface|GceComputeService
specifier|public
interface|interface
name|GceComputeService
extends|extends
name|LifecycleComponent
argument_list|<
name|GceComputeService
argument_list|>
block|{
DECL|class|Fields
specifier|final
class|class
name|Fields
block|{
DECL|field|PROJECT
specifier|public
specifier|static
specifier|final
name|String
name|PROJECT
init|=
literal|"cloud.gce.project_id"
decl_stmt|;
DECL|field|ZONE
specifier|public
specifier|static
specifier|final
name|String
name|ZONE
init|=
literal|"cloud.gce.zone"
decl_stmt|;
DECL|field|REFRESH
specifier|public
specifier|static
specifier|final
name|String
name|REFRESH
init|=
literal|"cloud.gce.refresh_interval"
decl_stmt|;
DECL|field|TAGS
specifier|public
specifier|static
specifier|final
name|String
name|TAGS
init|=
literal|"discovery.gce.tags"
decl_stmt|;
DECL|field|VERSION
specifier|public
specifier|static
specifier|final
name|String
name|VERSION
init|=
literal|"Elasticsearch/GceCloud/1.0"
decl_stmt|;
block|}
comment|/**      * Return a collection of running instances within the same GCE project      * @return a collection of running instances within the same GCE project      */
DECL|method|instances
name|Collection
argument_list|<
name|Instance
argument_list|>
name|instances
parameter_list|()
function_decl|;
comment|/**      *<p>Gets metadata on the current running machine (call to      * http://metadata.google.internal/computeMetadata/v1/instance/xxx).</p>      *<p>For example, you can retrieve network information by replacing xxx with:</p>      *<ul>      *<li>`hostname` when we need to resolve the host name</li>      *<li>`network-interfaces/0/ip` when we need to resolve private IP</li>      *</ul>      * @see org.elasticsearch.cloud.gce.network.GceNameResolver for bindings      * @param metadataPath path to metadata information      * @return extracted information (for example a hostname or an IP address)      * @throws IOException in case metadata URL is not accessible      */
DECL|method|metadata
name|String
name|metadata
parameter_list|(
name|String
name|metadataPath
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
end_interface

end_unit

