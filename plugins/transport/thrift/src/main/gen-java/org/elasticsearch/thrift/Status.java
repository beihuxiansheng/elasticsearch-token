begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Autogenerated by Thrift  *  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING  */
end_comment

begin_package
DECL|package|org.elasticsearch.thrift
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|thrift
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TEnum
import|;
end_import

begin_enum
DECL|enum|Status
specifier|public
enum|enum
name|Status
implements|implements
name|TEnum
block|{
DECL|enum constant|CONT
name|CONT
argument_list|(
literal|100
argument_list|)
block|,
DECL|enum constant|SWITCHING_PROTOCOLS
name|SWITCHING_PROTOCOLS
argument_list|(
literal|101
argument_list|)
block|,
DECL|enum constant|OK
name|OK
argument_list|(
literal|200
argument_list|)
block|,
DECL|enum constant|CREATED
name|CREATED
argument_list|(
literal|201
argument_list|)
block|,
DECL|enum constant|ACCEPTED
name|ACCEPTED
argument_list|(
literal|202
argument_list|)
block|,
DECL|enum constant|NON_AUTHORITATIVE_INFORMATION
name|NON_AUTHORITATIVE_INFORMATION
argument_list|(
literal|203
argument_list|)
block|,
DECL|enum constant|NO_CONTENT
name|NO_CONTENT
argument_list|(
literal|204
argument_list|)
block|,
DECL|enum constant|RESET_CONTENT
name|RESET_CONTENT
argument_list|(
literal|205
argument_list|)
block|,
DECL|enum constant|PARTIAL_CONTENT
name|PARTIAL_CONTENT
argument_list|(
literal|206
argument_list|)
block|,
DECL|enum constant|MULTI_STATUS
name|MULTI_STATUS
argument_list|(
literal|207
argument_list|)
block|,
DECL|enum constant|MULTIPLE_CHOICES
name|MULTIPLE_CHOICES
argument_list|(
literal|300
argument_list|)
block|,
DECL|enum constant|MOVED_PERMANENTLY
name|MOVED_PERMANENTLY
argument_list|(
literal|301
argument_list|)
block|,
DECL|enum constant|FOUND
name|FOUND
argument_list|(
literal|302
argument_list|)
block|,
DECL|enum constant|SEE_OTHER
name|SEE_OTHER
argument_list|(
literal|303
argument_list|)
block|,
DECL|enum constant|NOT_MODIFIED
name|NOT_MODIFIED
argument_list|(
literal|304
argument_list|)
block|,
DECL|enum constant|USE_PROXY
name|USE_PROXY
argument_list|(
literal|305
argument_list|)
block|,
DECL|enum constant|TEMPORARY_REDIRECT
name|TEMPORARY_REDIRECT
argument_list|(
literal|307
argument_list|)
block|,
DECL|enum constant|BAD_REQUEST
name|BAD_REQUEST
argument_list|(
literal|400
argument_list|)
block|,
DECL|enum constant|UNAUTHORIZED
name|UNAUTHORIZED
argument_list|(
literal|401
argument_list|)
block|,
DECL|enum constant|PAYMENT_REQUIRED
name|PAYMENT_REQUIRED
argument_list|(
literal|402
argument_list|)
block|,
DECL|enum constant|FORBIDDEN
name|FORBIDDEN
argument_list|(
literal|403
argument_list|)
block|,
DECL|enum constant|NOT_FOUND
name|NOT_FOUND
argument_list|(
literal|404
argument_list|)
block|,
DECL|enum constant|METHOD_NOT_ALLOWED
name|METHOD_NOT_ALLOWED
argument_list|(
literal|405
argument_list|)
block|,
DECL|enum constant|NOT_ACCEPTABLE
name|NOT_ACCEPTABLE
argument_list|(
literal|406
argument_list|)
block|,
DECL|enum constant|PROXY_AUTHENTICATION
name|PROXY_AUTHENTICATION
argument_list|(
literal|407
argument_list|)
block|,
DECL|enum constant|REQUEST_TIMEOUT
name|REQUEST_TIMEOUT
argument_list|(
literal|408
argument_list|)
block|,
DECL|enum constant|CONFLICT
name|CONFLICT
argument_list|(
literal|409
argument_list|)
block|,
DECL|enum constant|GONE
name|GONE
argument_list|(
literal|410
argument_list|)
block|,
DECL|enum constant|LENGTH_REQUIRED
name|LENGTH_REQUIRED
argument_list|(
literal|411
argument_list|)
block|,
DECL|enum constant|PRECONDITION_FAILED
name|PRECONDITION_FAILED
argument_list|(
literal|412
argument_list|)
block|,
DECL|enum constant|REQUEST_ENTITY_TOO_LARGE
name|REQUEST_ENTITY_TOO_LARGE
argument_list|(
literal|413
argument_list|)
block|,
DECL|enum constant|REQUEST_URI_TOO_LONG
name|REQUEST_URI_TOO_LONG
argument_list|(
literal|414
argument_list|)
block|,
DECL|enum constant|UNSUPPORTED_MEDIA_TYPE
name|UNSUPPORTED_MEDIA_TYPE
argument_list|(
literal|415
argument_list|)
block|,
DECL|enum constant|REQUESTED_RANGE_NOT_SATISFIED
name|REQUESTED_RANGE_NOT_SATISFIED
argument_list|(
literal|416
argument_list|)
block|,
DECL|enum constant|EXPECTATION_FAILED
name|EXPECTATION_FAILED
argument_list|(
literal|417
argument_list|)
block|,
DECL|enum constant|UNPROCESSABLE_ENTITY
name|UNPROCESSABLE_ENTITY
argument_list|(
literal|422
argument_list|)
block|,
DECL|enum constant|LOCKED
name|LOCKED
argument_list|(
literal|423
argument_list|)
block|,
DECL|enum constant|FAILED_DEPENDENCY
name|FAILED_DEPENDENCY
argument_list|(
literal|424
argument_list|)
block|,
DECL|enum constant|INTERNAL_SERVER_ERROR
name|INTERNAL_SERVER_ERROR
argument_list|(
literal|500
argument_list|)
block|,
DECL|enum constant|NOT_IMPLEMENTED
name|NOT_IMPLEMENTED
argument_list|(
literal|501
argument_list|)
block|,
DECL|enum constant|BAD_GATEWAY
name|BAD_GATEWAY
argument_list|(
literal|502
argument_list|)
block|,
DECL|enum constant|SERVICE_UNAVAILABLE
name|SERVICE_UNAVAILABLE
argument_list|(
literal|503
argument_list|)
block|,
DECL|enum constant|GATEWAY_TIMEOUT
name|GATEWAY_TIMEOUT
argument_list|(
literal|504
argument_list|)
block|,
DECL|enum constant|INSUFFICIENT_STORAGE
name|INSUFFICIENT_STORAGE
argument_list|(
literal|506
argument_list|)
block|;
DECL|field|value
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
DECL|method|Status
specifier|private
name|Status
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|/**      * Get the integer value of this enum value, as defined in the Thrift IDL.      */
DECL|method|getValue
specifier|public
name|int
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**      * Find a the enum type by its integer value, as defined in the Thrift IDL.      *      * @return null if the value is not found.      */
DECL|method|findByValue
specifier|public
specifier|static
name|Status
name|findByValue
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|100
case|:
return|return
name|CONT
return|;
case|case
literal|101
case|:
return|return
name|SWITCHING_PROTOCOLS
return|;
case|case
literal|200
case|:
return|return
name|OK
return|;
case|case
literal|201
case|:
return|return
name|CREATED
return|;
case|case
literal|202
case|:
return|return
name|ACCEPTED
return|;
case|case
literal|203
case|:
return|return
name|NON_AUTHORITATIVE_INFORMATION
return|;
case|case
literal|204
case|:
return|return
name|NO_CONTENT
return|;
case|case
literal|205
case|:
return|return
name|RESET_CONTENT
return|;
case|case
literal|206
case|:
return|return
name|PARTIAL_CONTENT
return|;
case|case
literal|207
case|:
return|return
name|MULTI_STATUS
return|;
case|case
literal|300
case|:
return|return
name|MULTIPLE_CHOICES
return|;
case|case
literal|301
case|:
return|return
name|MOVED_PERMANENTLY
return|;
case|case
literal|302
case|:
return|return
name|FOUND
return|;
case|case
literal|303
case|:
return|return
name|SEE_OTHER
return|;
case|case
literal|304
case|:
return|return
name|NOT_MODIFIED
return|;
case|case
literal|305
case|:
return|return
name|USE_PROXY
return|;
case|case
literal|307
case|:
return|return
name|TEMPORARY_REDIRECT
return|;
case|case
literal|400
case|:
return|return
name|BAD_REQUEST
return|;
case|case
literal|401
case|:
return|return
name|UNAUTHORIZED
return|;
case|case
literal|402
case|:
return|return
name|PAYMENT_REQUIRED
return|;
case|case
literal|403
case|:
return|return
name|FORBIDDEN
return|;
case|case
literal|404
case|:
return|return
name|NOT_FOUND
return|;
case|case
literal|405
case|:
return|return
name|METHOD_NOT_ALLOWED
return|;
case|case
literal|406
case|:
return|return
name|NOT_ACCEPTABLE
return|;
case|case
literal|407
case|:
return|return
name|PROXY_AUTHENTICATION
return|;
case|case
literal|408
case|:
return|return
name|REQUEST_TIMEOUT
return|;
case|case
literal|409
case|:
return|return
name|CONFLICT
return|;
case|case
literal|410
case|:
return|return
name|GONE
return|;
case|case
literal|411
case|:
return|return
name|LENGTH_REQUIRED
return|;
case|case
literal|412
case|:
return|return
name|PRECONDITION_FAILED
return|;
case|case
literal|413
case|:
return|return
name|REQUEST_ENTITY_TOO_LARGE
return|;
case|case
literal|414
case|:
return|return
name|REQUEST_URI_TOO_LONG
return|;
case|case
literal|415
case|:
return|return
name|UNSUPPORTED_MEDIA_TYPE
return|;
case|case
literal|416
case|:
return|return
name|REQUESTED_RANGE_NOT_SATISFIED
return|;
case|case
literal|417
case|:
return|return
name|EXPECTATION_FAILED
return|;
case|case
literal|422
case|:
return|return
name|UNPROCESSABLE_ENTITY
return|;
case|case
literal|423
case|:
return|return
name|LOCKED
return|;
case|case
literal|424
case|:
return|return
name|FAILED_DEPENDENCY
return|;
case|case
literal|500
case|:
return|return
name|INTERNAL_SERVER_ERROR
return|;
case|case
literal|501
case|:
return|return
name|NOT_IMPLEMENTED
return|;
case|case
literal|502
case|:
return|return
name|BAD_GATEWAY
return|;
case|case
literal|503
case|:
return|return
name|SERVICE_UNAVAILABLE
return|;
case|case
literal|504
case|:
return|return
name|GATEWAY_TIMEOUT
return|;
case|case
literal|506
case|:
return|return
name|INSUFFICIENT_STORAGE
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
block|}
end_enum

end_unit

