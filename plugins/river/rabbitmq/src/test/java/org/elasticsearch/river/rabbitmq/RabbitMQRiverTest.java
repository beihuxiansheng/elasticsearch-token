begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.river.rabbitmq
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|river
operator|.
name|rabbitmq
package|;
end_package

begin_import
import|import
name|com
operator|.
name|rabbitmq
operator|.
name|client
operator|.
name|AMQP
import|;
end_import

begin_import
import|import
name|com
operator|.
name|rabbitmq
operator|.
name|client
operator|.
name|Channel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|rabbitmq
operator|.
name|client
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|rabbitmq
operator|.
name|client
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|ImmutableSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|node
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|node
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|RabbitMQRiverTest
specifier|public
class|class
name|RabbitMQRiverTest
block|{
DECL|method|main
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|Node
name|node
init|=
name|NodeBuilder
operator|.
name|nodeBuilder
argument_list|()
operator|.
name|settings
argument_list|(
name|ImmutableSettings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"gateway.type"
argument_list|,
literal|"none"
argument_list|)
argument_list|)
operator|.
name|node
argument_list|()
decl_stmt|;
name|node
operator|.
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"_river"
argument_list|,
literal|"test1"
argument_list|,
literal|"_meta"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"rabbitmq"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|ConnectionFactory
name|cfconn
init|=
operator|new
name|ConnectionFactory
argument_list|()
decl_stmt|;
name|cfconn
operator|.
name|setHost
argument_list|(
literal|"localhost"
argument_list|)
expr_stmt|;
name|cfconn
operator|.
name|setPort
argument_list|(
name|AMQP
operator|.
name|PROTOCOL
operator|.
name|PORT
argument_list|)
expr_stmt|;
name|Connection
name|conn
init|=
name|cfconn
operator|.
name|newConnection
argument_list|()
decl_stmt|;
name|Channel
name|ch
init|=
name|conn
operator|.
name|createChannel
argument_list|()
decl_stmt|;
name|ch
operator|.
name|exchangeDeclare
argument_list|(
literal|"elasticsearch"
argument_list|,
literal|"direct"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ch
operator|.
name|queueDeclare
argument_list|(
literal|"elasticsearch"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|String
name|message
init|=
literal|"{ \"index\" : { \"index\" : \"test\", \"type\" : \"type1\", \"id\" : \"1\" }\n"
operator|+
literal|"{ \"type1\" : { \"field1\" : \"value1\" } }\n"
operator|+
literal|"{ \"delete\" : { \"index\" : \"test\", \"type\" : \"type1\", \"id\" : \"2\" } }\n"
operator|+
literal|"{ \"create\" : { \"index\" : \"test\", \"type\" : \"type1\", \"id\" : \"1\" }\n"
operator|+
literal|"{ \"type1\" : { \"field1\" : \"value1\" } }"
decl_stmt|;
name|ch
operator|.
name|basicPublish
argument_list|(
literal|"elasticsearch"
argument_list|,
literal|"elasticsearch"
argument_list|,
literal|null
argument_list|,
name|message
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|ch
operator|.
name|close
argument_list|()
expr_stmt|;
name|conn
operator|.
name|close
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|100000
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

