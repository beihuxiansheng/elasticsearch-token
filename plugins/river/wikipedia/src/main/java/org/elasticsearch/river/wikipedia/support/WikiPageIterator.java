begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.river.wikipedia.support
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|river
operator|.
name|wikipedia
operator|.
name|support
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_comment
comment|/**  * A class to iterate the pages after the wikipedia XML file has been parsed with {@link WikiXMLDOMParser}.  *  * @author Delip Rao  * @see WikiXMLDOMParser  */
end_comment

begin_class
DECL|class|WikiPageIterator
specifier|public
class|class
name|WikiPageIterator
block|{
DECL|field|currentPage
specifier|private
name|int
name|currentPage
init|=
literal|0
decl_stmt|;
DECL|field|lastPage
specifier|private
name|int
name|lastPage
init|=
literal|0
decl_stmt|;
DECL|field|pageList
name|Vector
argument_list|<
name|WikiPage
argument_list|>
name|pageList
init|=
literal|null
decl_stmt|;
DECL|method|WikiPageIterator
specifier|public
name|WikiPageIterator
parameter_list|(
name|Vector
argument_list|<
name|WikiPage
argument_list|>
name|list
parameter_list|)
block|{
name|pageList
operator|=
name|list
expr_stmt|;
if|if
condition|(
name|pageList
operator|!=
literal|null
condition|)
name|lastPage
operator|=
name|pageList
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
comment|/**      * @return true if there are more pages to be read      */
DECL|method|hasMorePages
specifier|public
name|boolean
name|hasMorePages
parameter_list|()
block|{
return|return
operator|(
name|currentPage
operator|<
name|lastPage
operator|)
return|;
block|}
comment|/**      * Reset the iterator.      */
DECL|method|reset
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|currentPage
operator|=
literal|0
expr_stmt|;
block|}
comment|/**      * Advances the iterator by one position.      *      * @return a {@link WikiPage}      */
DECL|method|nextPage
specifier|public
name|WikiPage
name|nextPage
parameter_list|()
block|{
if|if
condition|(
name|hasMorePages
argument_list|()
condition|)
return|return
name|pageList
operator|.
name|elementAt
argument_list|(
name|currentPage
operator|++
argument_list|)
return|;
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

