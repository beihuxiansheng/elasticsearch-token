begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.river.wikipedia.support
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|river
operator|.
name|wikipedia
operator|.
name|support
package|;
end_package

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|DefaultHandler
import|;
end_import

begin_comment
comment|/**  * A Wrapper class for the PageCallbackHandler  *  * @author Jason Smith  */
end_comment

begin_class
DECL|class|SAXPageCallbackHandler
specifier|public
class|class
name|SAXPageCallbackHandler
extends|extends
name|DefaultHandler
block|{
DECL|field|pageHandler
specifier|private
name|PageCallbackHandler
name|pageHandler
decl_stmt|;
DECL|field|currentPage
specifier|private
name|WikiPage
name|currentPage
decl_stmt|;
DECL|field|currentTag
specifier|private
name|String
name|currentTag
decl_stmt|;
DECL|field|currentWikitext
specifier|private
name|String
name|currentWikitext
decl_stmt|;
DECL|field|currentTitle
specifier|private
name|String
name|currentTitle
decl_stmt|;
DECL|field|currentID
specifier|private
name|String
name|currentID
decl_stmt|;
DECL|method|SAXPageCallbackHandler
specifier|public
name|SAXPageCallbackHandler
parameter_list|(
name|PageCallbackHandler
name|ph
parameter_list|)
block|{
name|pageHandler
operator|=
name|ph
expr_stmt|;
block|}
DECL|method|startElement
specifier|public
name|void
name|startElement
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|qName
parameter_list|,
name|Attributes
name|attr
parameter_list|)
block|{
name|currentTag
operator|=
name|qName
expr_stmt|;
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"page"
argument_list|)
condition|)
block|{
name|currentPage
operator|=
operator|new
name|WikiPage
argument_list|()
expr_stmt|;
name|currentWikitext
operator|=
literal|""
expr_stmt|;
name|currentTitle
operator|=
literal|""
expr_stmt|;
name|currentID
operator|=
literal|""
expr_stmt|;
block|}
block|}
DECL|method|endElement
specifier|public
name|void
name|endElement
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|qName
parameter_list|)
block|{
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"page"
argument_list|)
condition|)
block|{
name|currentPage
operator|.
name|setTitle
argument_list|(
name|currentTitle
argument_list|)
expr_stmt|;
name|currentPage
operator|.
name|setID
argument_list|(
name|currentID
argument_list|)
expr_stmt|;
name|currentPage
operator|.
name|setWikiText
argument_list|(
name|currentWikitext
argument_list|)
expr_stmt|;
name|pageHandler
operator|.
name|process
argument_list|(
name|currentPage
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"mediawiki"
argument_list|)
condition|)
block|{
comment|// TODO hasMoreElements() should now return false
block|}
block|}
DECL|method|characters
specifier|public
name|void
name|characters
parameter_list|(
name|char
name|ch
index|[]
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
block|{
if|if
condition|(
name|currentTag
operator|.
name|equals
argument_list|(
literal|"title"
argument_list|)
condition|)
block|{
name|currentTitle
operator|=
name|currentTitle
operator|.
name|concat
argument_list|(
operator|new
name|String
argument_list|(
name|ch
argument_list|,
name|start
argument_list|,
name|length
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// TODO: To avoid looking at the revision ID, only the first ID is taken.
comment|// I'm not sure how big the block size is in each call to characters(),
comment|// so this may be unsafe.
elseif|else
if|if
condition|(
operator|(
name|currentTag
operator|.
name|equals
argument_list|(
literal|"id"
argument_list|)
operator|)
operator|&&
operator|(
name|currentID
operator|.
name|length
argument_list|()
operator|==
literal|0
operator|)
condition|)
block|{
name|currentID
operator|=
operator|new
name|String
argument_list|(
name|ch
argument_list|,
name|start
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|currentTag
operator|.
name|equals
argument_list|(
literal|"text"
argument_list|)
condition|)
block|{
name|currentWikitext
operator|=
name|currentWikitext
operator|.
name|concat
argument_list|(
operator|new
name|String
argument_list|(
name|ch
argument_list|,
name|start
argument_list|,
name|length
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

