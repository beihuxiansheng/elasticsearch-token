begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.river.wikipedia.support
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|river
operator|.
name|wikipedia
operator|.
name|support
package|;
end_package

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|XMLReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|XMLReaderFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_comment
comment|/**  * A SAX Parser for Wikipedia XML dumps.  *  * @author Jason Smith  */
end_comment

begin_class
DECL|class|WikiXMLSAXParser
specifier|public
class|class
name|WikiXMLSAXParser
extends|extends
name|WikiXMLParser
block|{
DECL|field|xmlReader
specifier|private
name|XMLReader
name|xmlReader
decl_stmt|;
DECL|field|pageHandler
specifier|private
name|PageCallbackHandler
name|pageHandler
init|=
literal|null
decl_stmt|;
DECL|method|WikiXMLSAXParser
specifier|public
name|WikiXMLSAXParser
parameter_list|(
name|URL
name|fileName
parameter_list|)
block|{
name|super
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
try|try
block|{
name|xmlReader
operator|=
name|XMLReaderFactory
operator|.
name|createXMLReader
argument_list|()
expr_stmt|;
name|pageHandler
operator|=
operator|new
name|IteratorHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SAXException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Set a callback handler. The callback is executed every time a      * page instance is detected in the stream. Custom handlers are      * implementations of {@link PageCallbackHandler}      *      * @param handler      * @throws Exception      */
DECL|method|setPageCallback
specifier|public
name|void
name|setPageCallback
parameter_list|(
name|PageCallbackHandler
name|handler
parameter_list|)
throws|throws
name|Exception
block|{
name|pageHandler
operator|=
name|handler
expr_stmt|;
block|}
comment|/**      * The main parse method.      *      * @throws Exception      */
DECL|method|parse
specifier|public
name|void
name|parse
parameter_list|()
throws|throws
name|Exception
block|{
name|xmlReader
operator|.
name|setContentHandler
argument_list|(
operator|new
name|SAXPageCallbackHandler
argument_list|(
name|pageHandler
argument_list|)
argument_list|)
expr_stmt|;
name|xmlReader
operator|.
name|parse
argument_list|(
name|getInputSource
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * This parser is event driven, so it      * can't provide a page iterator.      */
annotation|@
name|Override
DECL|method|getIterator
specifier|public
name|WikiPageIterator
name|getIterator
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
operator|(
name|pageHandler
operator|instanceof
name|IteratorHandler
operator|)
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Custom page callback found. Will not iterate."
argument_list|)
throw|;
block|}
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
comment|/**      * A convenience method for the Wikipedia SAX interface      *      * @param dumpFile - path to the Wikipedia dump      * @param handler  - callback handler used for parsing      * @throws Exception      */
DECL|method|parseWikipediaDump
specifier|public
specifier|static
name|void
name|parseWikipediaDump
parameter_list|(
name|URL
name|dumpFile
parameter_list|,
name|PageCallbackHandler
name|handler
parameter_list|)
throws|throws
name|Exception
block|{
name|WikiXMLParser
name|wxsp
init|=
name|WikiXMLParserFactory
operator|.
name|getSAXParser
argument_list|(
name|dumpFile
argument_list|)
decl_stmt|;
name|wxsp
operator|.
name|setPageCallback
argument_list|(
name|handler
argument_list|)
expr_stmt|;
name|wxsp
operator|.
name|parse
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

