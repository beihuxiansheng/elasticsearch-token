begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.river.wikipedia.support
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|river
operator|.
name|wikipedia
operator|.
name|support
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Data structures for a wikipedia page.  *  * @author Delip Rao  */
end_comment

begin_class
DECL|class|WikiPage
specifier|public
class|class
name|WikiPage
block|{
DECL|field|title
specifier|private
name|String
name|title
init|=
literal|null
decl_stmt|;
DECL|field|wikiTextParser
specifier|private
name|WikiTextParser
name|wikiTextParser
init|=
literal|null
decl_stmt|;
DECL|field|id
specifier|private
name|String
name|id
init|=
literal|null
decl_stmt|;
comment|/**      * Set the page title. This is not intended for direct use.      *      * @param title      */
DECL|method|setTitle
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|this
operator|.
name|title
operator|=
name|title
expr_stmt|;
block|}
comment|/**      * Set the wiki text associated with this page.      * This setter also introduces side effects. This is not intended for direct use.      *      * @param wtext wiki-formatted text      */
DECL|method|setWikiText
specifier|public
name|void
name|setWikiText
parameter_list|(
name|String
name|wtext
parameter_list|)
block|{
name|wikiTextParser
operator|=
operator|new
name|WikiTextParser
argument_list|(
name|wtext
argument_list|)
expr_stmt|;
block|}
comment|/**      * @return a string containing the page title.      */
DECL|method|getTitle
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|title
return|;
block|}
comment|/**      * @param languageCode      * @return a string containing the title translated      *         in the given languageCode.      */
DECL|method|getTranslatedTitle
specifier|public
name|String
name|getTranslatedTitle
parameter_list|(
name|String
name|languageCode
parameter_list|)
block|{
return|return
name|wikiTextParser
operator|.
name|getTranslatedTitle
argument_list|(
name|languageCode
argument_list|)
return|;
block|}
comment|/**      * @return true if this a disambiguation page.      */
DECL|method|isDisambiguationPage
specifier|public
name|boolean
name|isDisambiguationPage
parameter_list|()
block|{
if|if
condition|(
name|title
operator|.
name|contains
argument_list|(
literal|"(disambiguation)"
argument_list|)
operator|||
name|wikiTextParser
operator|.
name|isDisambiguationPage
argument_list|()
condition|)
return|return
literal|true
return|;
else|else
return|return
literal|false
return|;
block|}
comment|/**      * @return true for "special pages" -- like Category:, Wikipedia:, etc      */
DECL|method|isSpecialPage
specifier|public
name|boolean
name|isSpecialPage
parameter_list|()
block|{
return|return
name|title
operator|.
name|contains
argument_list|(
literal|":"
argument_list|)
return|;
block|}
comment|/**      * Use this method to get the wiki text associated with this page.      * Useful for custom processing the wiki text.      *      * @return a string containing the wiki text.      */
DECL|method|getWikiText
specifier|public
name|String
name|getWikiText
parameter_list|()
block|{
return|return
name|wikiTextParser
operator|.
name|getText
argument_list|()
return|;
block|}
comment|/**      * @return true if this is a redirection page      */
DECL|method|isRedirect
specifier|public
name|boolean
name|isRedirect
parameter_list|()
block|{
return|return
name|wikiTextParser
operator|.
name|isRedirect
argument_list|()
return|;
block|}
comment|/**      * @return true if this is a stub page      */
DECL|method|isStub
specifier|public
name|boolean
name|isStub
parameter_list|()
block|{
return|return
name|wikiTextParser
operator|.
name|isStub
argument_list|()
return|;
block|}
comment|/**      * @return the title of the page being redirected to.      */
DECL|method|getRedirectPage
specifier|public
name|String
name|getRedirectPage
parameter_list|()
block|{
return|return
name|wikiTextParser
operator|.
name|getRedirectText
argument_list|()
return|;
block|}
comment|/**      * @return plain text stripped of all wiki formatting.      */
DECL|method|getText
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|wikiTextParser
operator|.
name|getPlainText
argument_list|()
return|;
block|}
comment|/**      * @return a list of categories the page belongs to, null if this a redirection/disambiguation page      */
DECL|method|getCategories
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getCategories
parameter_list|()
block|{
return|return
name|wikiTextParser
operator|.
name|getCategories
argument_list|()
return|;
block|}
comment|/**      * @return a list of links contained in the page      */
DECL|method|getLinks
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getLinks
parameter_list|()
block|{
return|return
name|wikiTextParser
operator|.
name|getLinks
argument_list|()
return|;
block|}
DECL|method|setID
specifier|public
name|void
name|setID
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
DECL|method|getInfoBox
specifier|public
name|InfoBox
name|getInfoBox
parameter_list|()
block|{
return|return
name|wikiTextParser
operator|.
name|getInfoBox
argument_list|()
return|;
block|}
DECL|method|getID
specifier|public
name|String
name|getID
parameter_list|()
block|{
return|return
name|id
return|;
block|}
block|}
end_class

end_unit

