begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.groovy.client.action
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|groovy
operator|.
name|client
operator|.
name|action
package|;
end_package

begin_import
import|import
name|groovy
operator|.
name|lang
operator|.
name|Closure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticSearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ListenableActionFuture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|PlainListenableActionFuture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeoutException
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|GActionFuture
specifier|public
class|class
name|GActionFuture
parameter_list|<
name|T
parameter_list|>
implements|implements
name|ListenableActionFuture
argument_list|<
name|T
argument_list|>
implements|,
name|ActionListener
argument_list|<
name|T
argument_list|>
block|{
DECL|field|future
specifier|private
specifier|final
name|PlainListenableActionFuture
argument_list|<
name|T
argument_list|>
name|future
decl_stmt|;
DECL|method|GActionFuture
specifier|public
name|GActionFuture
parameter_list|(
name|ListenableActionFuture
argument_list|<
name|T
argument_list|>
name|future
parameter_list|)
block|{
name|this
operator|.
name|future
operator|=
operator|(
name|PlainListenableActionFuture
argument_list|<
name|T
argument_list|>
operator|)
name|future
expr_stmt|;
block|}
DECL|method|GActionFuture
specifier|public
name|GActionFuture
parameter_list|(
name|ThreadPool
name|threadPool
parameter_list|,
name|ActionRequest
name|request
parameter_list|)
block|{
name|this
operator|.
name|future
operator|=
operator|new
name|PlainListenableActionFuture
argument_list|<
name|T
argument_list|>
argument_list|(
name|request
operator|.
name|listenerThreaded
argument_list|()
argument_list|,
name|threadPool
argument_list|)
expr_stmt|;
block|}
DECL|method|setListener
specifier|public
name|void
name|setListener
parameter_list|(
specifier|final
name|Closure
name|listener
parameter_list|)
block|{
name|addListener
argument_list|(
operator|new
name|ActionListener
argument_list|<
name|T
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|T
name|t
parameter_list|)
block|{
name|listener
operator|.
name|call
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|listener
operator|.
name|call
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|setSuccess
specifier|public
name|void
name|setSuccess
parameter_list|(
specifier|final
name|Closure
name|success
parameter_list|)
block|{
name|addListener
argument_list|(
operator|new
name|ActionListener
argument_list|<
name|T
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|T
name|t
parameter_list|)
block|{
name|success
operator|.
name|call
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|setFailure
specifier|public
name|void
name|setFailure
parameter_list|(
specifier|final
name|Closure
name|failure
parameter_list|)
block|{
name|addListener
argument_list|(
operator|new
name|ActionListener
argument_list|<
name|T
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|T
name|t
parameter_list|)
block|{
comment|// nothing
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|failure
operator|.
name|call
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|getResponse
specifier|public
name|T
name|getResponse
parameter_list|()
block|{
return|return
name|actionGet
argument_list|()
return|;
block|}
DECL|method|response
specifier|public
name|T
name|response
parameter_list|(
name|String
name|timeout
parameter_list|)
throws|throws
name|ElasticSearchException
block|{
return|return
name|actionGet
argument_list|(
name|timeout
argument_list|)
return|;
block|}
DECL|method|response
specifier|public
name|T
name|response
parameter_list|(
name|long
name|timeoutMillis
parameter_list|)
throws|throws
name|ElasticSearchException
block|{
return|return
name|actionGet
argument_list|(
name|timeoutMillis
argument_list|)
return|;
block|}
DECL|method|response
specifier|public
name|T
name|response
parameter_list|(
name|TimeValue
name|timeout
parameter_list|)
throws|throws
name|ElasticSearchException
block|{
return|return
name|actionGet
argument_list|(
name|timeout
argument_list|)
return|;
block|}
DECL|method|response
specifier|public
name|T
name|response
parameter_list|(
name|long
name|timeout
parameter_list|,
name|TimeUnit
name|unit
parameter_list|)
throws|throws
name|ElasticSearchException
block|{
return|return
name|actionGet
argument_list|(
name|timeout
argument_list|,
name|unit
argument_list|)
return|;
block|}
DECL|method|onResponse
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|T
name|t
parameter_list|)
block|{
name|future
operator|.
name|onResponse
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
DECL|method|onFailure
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|future
operator|.
name|onFailure
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
comment|// delegate methods
DECL|method|addListener
specifier|public
name|void
name|addListener
parameter_list|(
name|ActionListener
argument_list|<
name|T
argument_list|>
name|tActionListener
parameter_list|)
block|{
name|future
operator|.
name|addListener
argument_list|(
name|tActionListener
argument_list|)
expr_stmt|;
block|}
DECL|method|addListener
annotation|@
name|Override
specifier|public
name|void
name|addListener
parameter_list|(
name|Runnable
name|listener
parameter_list|)
block|{
name|future
operator|.
name|addListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
DECL|method|actionGet
annotation|@
name|Override
specifier|public
name|T
name|actionGet
parameter_list|()
throws|throws
name|ElasticSearchException
block|{
return|return
name|future
operator|.
name|actionGet
argument_list|()
return|;
block|}
DECL|method|actionGet
annotation|@
name|Override
specifier|public
name|T
name|actionGet
parameter_list|(
name|String
name|timeout
parameter_list|)
throws|throws
name|ElasticSearchException
block|{
return|return
name|future
operator|.
name|actionGet
argument_list|(
name|timeout
argument_list|)
return|;
block|}
DECL|method|actionGet
annotation|@
name|Override
specifier|public
name|T
name|actionGet
parameter_list|(
name|long
name|timeoutMillis
parameter_list|)
throws|throws
name|ElasticSearchException
block|{
return|return
name|future
operator|.
name|actionGet
argument_list|(
name|timeoutMillis
argument_list|)
return|;
block|}
DECL|method|actionGet
annotation|@
name|Override
specifier|public
name|T
name|actionGet
parameter_list|(
name|long
name|timeout
parameter_list|,
name|TimeUnit
name|unit
parameter_list|)
throws|throws
name|ElasticSearchException
block|{
return|return
name|future
operator|.
name|actionGet
argument_list|(
name|timeout
argument_list|,
name|unit
argument_list|)
return|;
block|}
DECL|method|actionGet
annotation|@
name|Override
specifier|public
name|T
name|actionGet
parameter_list|(
name|TimeValue
name|timeout
parameter_list|)
throws|throws
name|ElasticSearchException
block|{
return|return
name|future
operator|.
name|actionGet
argument_list|(
name|timeout
argument_list|)
return|;
block|}
DECL|method|cancel
annotation|@
name|Override
specifier|public
name|boolean
name|cancel
parameter_list|(
name|boolean
name|mayInterruptIfRunning
parameter_list|)
block|{
return|return
name|future
operator|.
name|cancel
argument_list|(
name|mayInterruptIfRunning
argument_list|)
return|;
block|}
DECL|method|isCancelled
annotation|@
name|Override
specifier|public
name|boolean
name|isCancelled
parameter_list|()
block|{
return|return
name|future
operator|.
name|isCancelled
argument_list|()
return|;
block|}
DECL|method|isDone
annotation|@
name|Override
specifier|public
name|boolean
name|isDone
parameter_list|()
block|{
return|return
name|future
operator|.
name|isDone
argument_list|()
return|;
block|}
DECL|method|get
annotation|@
name|Override
specifier|public
name|T
name|get
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|ExecutionException
block|{
return|return
name|future
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|get
annotation|@
name|Override
specifier|public
name|T
name|get
parameter_list|(
name|long
name|timeout
parameter_list|,
name|TimeUnit
name|unit
parameter_list|)
throws|throws
name|InterruptedException
throws|,
name|ExecutionException
throws|,
name|TimeoutException
block|{
return|return
name|future
operator|.
name|get
argument_list|(
name|timeout
argument_list|,
name|unit
argument_list|)
return|;
block|}
block|}
end_class

end_unit

