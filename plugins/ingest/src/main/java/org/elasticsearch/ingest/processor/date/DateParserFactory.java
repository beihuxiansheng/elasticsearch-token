begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to ElasticSearch and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. ElasticSearch licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.ingest.processor.date
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|date
package|;
end_package

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTimeZone
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_class
DECL|class|DateParserFactory
specifier|public
class|class
name|DateParserFactory
block|{
DECL|field|ISO8601
specifier|public
specifier|static
specifier|final
name|String
name|ISO8601
init|=
literal|"ISO8601"
decl_stmt|;
DECL|field|UNIX
specifier|public
specifier|static
specifier|final
name|String
name|UNIX
init|=
literal|"UNIX"
decl_stmt|;
DECL|field|UNIX_MS
specifier|public
specifier|static
specifier|final
name|String
name|UNIX_MS
init|=
literal|"UNIX_MS"
decl_stmt|;
DECL|field|TAI64N
specifier|public
specifier|static
specifier|final
name|String
name|TAI64N
init|=
literal|"TAI64N"
decl_stmt|;
DECL|method|createDateParser
specifier|public
specifier|static
name|DateParser
name|createDateParser
parameter_list|(
name|String
name|format
parameter_list|,
name|DateTimeZone
name|timezone
parameter_list|,
name|Locale
name|locale
parameter_list|)
block|{
switch|switch
condition|(
name|format
condition|)
block|{
case|case
name|ISO8601
case|:
comment|// TODO(talevy): fallback solution for almost ISO8601
return|return
operator|new
name|ISO8601DateParser
argument_list|(
name|timezone
argument_list|)
return|;
case|case
name|UNIX
case|:
return|return
operator|new
name|UnixDateParser
argument_list|(
name|timezone
argument_list|)
return|;
case|case
name|UNIX_MS
case|:
return|return
operator|new
name|UnixMsDateParser
argument_list|(
name|timezone
argument_list|)
return|;
case|case
name|TAI64N
case|:
return|return
operator|new
name|TAI64NDateParser
argument_list|(
name|timezone
argument_list|)
return|;
default|default:
return|return
operator|new
name|JodaPatternDateParser
argument_list|(
name|format
argument_list|,
name|timezone
argument_list|,
name|locale
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

