begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.plugin.ingest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|SpecialPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|transport
operator|.
name|TransportClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|component
operator|.
name|LifecycleComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|rest
operator|.
name|RestDeletePipelineAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|rest
operator|.
name|RestGetPipelineAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|rest
operator|.
name|RestPutPipelineAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|transport
operator|.
name|IngestActionFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|transport
operator|.
name|delete
operator|.
name|DeletePipelineAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|transport
operator|.
name|delete
operator|.
name|DeletePipelineTransportAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|transport
operator|.
name|get
operator|.
name|GetPipelineAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|transport
operator|.
name|get
operator|.
name|GetPipelineTransportAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|transport
operator|.
name|put
operator|.
name|PutPipelineAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|transport
operator|.
name|put
operator|.
name|PutPipelineTransportAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestModule
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|AccessController
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
operator|.
name|settingsBuilder
import|;
end_import

begin_class
DECL|class|IngestPlugin
specifier|public
class|class
name|IngestPlugin
extends|extends
name|Plugin
block|{
DECL|field|INGEST_PARAM_CONTEXT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|INGEST_PARAM_CONTEXT_KEY
init|=
literal|"__ingest__"
decl_stmt|;
DECL|field|INGEST_PARAM
specifier|public
specifier|static
specifier|final
name|String
name|INGEST_PARAM
init|=
literal|"ingest"
decl_stmt|;
DECL|field|INGEST_ALREADY_PROCESSED
specifier|public
specifier|static
specifier|final
name|String
name|INGEST_ALREADY_PROCESSED
init|=
literal|"ingest_already_processed"
decl_stmt|;
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
literal|"ingest"
decl_stmt|;
DECL|field|nodeSettings
specifier|private
specifier|final
name|Settings
name|nodeSettings
decl_stmt|;
DECL|field|transportClient
specifier|private
specifier|final
name|boolean
name|transportClient
decl_stmt|;
DECL|method|IngestPlugin
specifier|public
name|IngestPlugin
parameter_list|(
name|Settings
name|nodeSettings
parameter_list|)
block|{
name|this
operator|.
name|nodeSettings
operator|=
name|nodeSettings
expr_stmt|;
name|transportClient
operator|=
name|TransportClient
operator|.
name|CLIENT_TYPE
operator|.
name|equals
argument_list|(
name|nodeSettings
operator|.
name|get
argument_list|(
name|Client
operator|.
name|CLIENT_TYPE_SETTING
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|name
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
name|NAME
return|;
block|}
annotation|@
name|Override
DECL|method|description
specifier|public
name|String
name|description
parameter_list|()
block|{
return|return
literal|"Plugin that allows to configure pipelines to preprocess documents before indexing"
return|;
block|}
annotation|@
name|Override
DECL|method|nodeModules
specifier|public
name|Collection
argument_list|<
name|Module
argument_list|>
name|nodeModules
parameter_list|()
block|{
if|if
condition|(
name|transportClient
condition|)
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|IngestModule
argument_list|()
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|nodeServices
specifier|public
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|LifecycleComponent
argument_list|>
argument_list|>
name|nodeServices
parameter_list|()
block|{
if|if
condition|(
name|transportClient
condition|)
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|PipelineStore
operator|.
name|class
argument_list|,
name|PipelineStoreClient
operator|.
name|class
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|additionalSettings
specifier|public
name|Settings
name|additionalSettings
parameter_list|()
block|{
return|return
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|PipelineExecutionService
operator|.
name|additionalSettings
argument_list|(
name|nodeSettings
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|onModule
specifier|public
name|void
name|onModule
parameter_list|(
name|ActionModule
name|module
parameter_list|)
block|{
if|if
condition|(
name|transportClient
operator|==
literal|false
condition|)
block|{
name|module
operator|.
name|registerFilter
argument_list|(
name|IngestActionFilter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
name|module
operator|.
name|registerAction
argument_list|(
name|PutPipelineAction
operator|.
name|INSTANCE
argument_list|,
name|PutPipelineTransportAction
operator|.
name|class
argument_list|)
expr_stmt|;
name|module
operator|.
name|registerAction
argument_list|(
name|GetPipelineAction
operator|.
name|INSTANCE
argument_list|,
name|GetPipelineTransportAction
operator|.
name|class
argument_list|)
expr_stmt|;
name|module
operator|.
name|registerAction
argument_list|(
name|DeletePipelineAction
operator|.
name|INSTANCE
argument_list|,
name|DeletePipelineTransportAction
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|onModule
specifier|public
name|void
name|onModule
parameter_list|(
name|RestModule
name|restModule
parameter_list|)
block|{
name|restModule
operator|.
name|addRestAction
argument_list|(
name|RestPutPipelineAction
operator|.
name|class
argument_list|)
expr_stmt|;
name|restModule
operator|.
name|addRestAction
argument_list|(
name|RestGetPipelineAction
operator|.
name|class
argument_list|)
expr_stmt|;
name|restModule
operator|.
name|addRestAction
argument_list|(
name|RestDeletePipelineAction
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

