begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.plugin.ingest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|IngestModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|AppendProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|ConvertProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|DateProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|FailProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|GeoIpProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|GrokProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|GsubProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|JoinProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|LowercaseProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|RemoveProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|RenameProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|SetProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|SplitProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|TrimProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|UppercaseProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_class
DECL|class|IngestPlugin
specifier|public
class|class
name|IngestPlugin
extends|extends
name|Plugin
block|{
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
literal|"ingest"
decl_stmt|;
DECL|field|ingestEnabled
specifier|private
specifier|final
name|boolean
name|ingestEnabled
decl_stmt|;
DECL|method|IngestPlugin
specifier|public
name|IngestPlugin
parameter_list|(
name|Settings
name|nodeSettings
parameter_list|)
block|{
name|this
operator|.
name|ingestEnabled
operator|=
name|nodeSettings
operator|.
name|getAsBoolean
argument_list|(
literal|"node.ingest"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|name
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
name|NAME
return|;
block|}
annotation|@
name|Override
DECL|method|description
specifier|public
name|String
name|description
parameter_list|()
block|{
return|return
literal|"Plugin that allows to plug in ingest processors"
return|;
block|}
DECL|method|onModule
specifier|public
name|void
name|onModule
parameter_list|(
name|IngestModule
name|ingestModule
parameter_list|)
block|{
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|GeoIpProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|GeoIpProcessor
operator|.
name|Factory
argument_list|(
name|environment
operator|.
name|configFile
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|GrokProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|GrokProcessor
operator|.
name|Factory
argument_list|(
name|environment
operator|.
name|configFile
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|DateProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|DateProcessor
operator|.
name|Factory
argument_list|()
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|SetProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|SetProcessor
operator|.
name|Factory
argument_list|(
name|templateService
argument_list|)
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|AppendProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|AppendProcessor
operator|.
name|Factory
argument_list|(
name|templateService
argument_list|)
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|RenameProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|RenameProcessor
operator|.
name|Factory
argument_list|()
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|RemoveProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|RemoveProcessor
operator|.
name|Factory
argument_list|(
name|templateService
argument_list|)
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|SplitProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|SplitProcessor
operator|.
name|Factory
argument_list|()
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|JoinProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|JoinProcessor
operator|.
name|Factory
argument_list|()
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|UppercaseProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|UppercaseProcessor
operator|.
name|Factory
argument_list|()
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|LowercaseProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|LowercaseProcessor
operator|.
name|Factory
argument_list|()
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|TrimProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|TrimProcessor
operator|.
name|Factory
argument_list|()
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|ConvertProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|ConvertProcessor
operator|.
name|Factory
argument_list|()
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|GsubProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|GsubProcessor
operator|.
name|Factory
argument_list|()
argument_list|)
expr_stmt|;
name|ingestModule
operator|.
name|registerProcessor
argument_list|(
name|FailProcessor
operator|.
name|TYPE
argument_list|,
parameter_list|(
name|environment
parameter_list|,
name|templateService
parameter_list|)
lambda|->
operator|new
name|FailProcessor
operator|.
name|Factory
argument_list|(
name|templateService
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

