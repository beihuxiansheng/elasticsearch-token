begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.plugin.ingest.transport
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|ActionFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|ActionFilterChain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
operator|.
name|IngestPlugin
import|;
end_import

begin_class
DECL|class|IngestDisabledActionFilter
specifier|public
specifier|final
class|class
name|IngestDisabledActionFilter
implements|implements
name|ActionFilter
block|{
annotation|@
name|Override
DECL|method|apply
specifier|public
name|void
name|apply
parameter_list|(
name|String
name|action
parameter_list|,
name|ActionRequest
name|request
parameter_list|,
name|ActionListener
name|listener
parameter_list|,
name|ActionFilterChain
name|chain
parameter_list|)
block|{
name|String
name|pipelineId
init|=
name|request
operator|.
name|getFromContext
argument_list|(
name|IngestPlugin
operator|.
name|PIPELINE_ID_PARAM_CONTEXT_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|pipelineId
operator|!=
literal|null
condition|)
block|{
name|failRequest
argument_list|(
name|pipelineId
argument_list|)
expr_stmt|;
block|}
name|pipelineId
operator|=
name|request
operator|.
name|getHeader
argument_list|(
name|IngestPlugin
operator|.
name|PIPELINE_ID_PARAM
argument_list|)
expr_stmt|;
if|if
condition|(
name|pipelineId
operator|!=
literal|null
condition|)
block|{
name|failRequest
argument_list|(
name|pipelineId
argument_list|)
expr_stmt|;
block|}
name|chain
operator|.
name|proceed
argument_list|(
name|action
argument_list|,
name|request
argument_list|,
name|listener
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|apply
specifier|public
name|void
name|apply
parameter_list|(
name|String
name|action
parameter_list|,
name|ActionResponse
name|response
parameter_list|,
name|ActionListener
name|listener
parameter_list|,
name|ActionFilterChain
name|chain
parameter_list|)
block|{
name|chain
operator|.
name|proceed
argument_list|(
name|action
argument_list|,
name|response
argument_list|,
name|listener
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|order
specifier|public
name|int
name|order
parameter_list|()
block|{
return|return
name|Integer
operator|.
name|MAX_VALUE
return|;
block|}
DECL|method|failRequest
specifier|private
specifier|static
name|void
name|failRequest
parameter_list|(
name|String
name|pipelineId
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"ingest plugin is disabled, cannot execute pipeline with id ["
operator|+
name|pipelineId
operator|+
literal|"]"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

