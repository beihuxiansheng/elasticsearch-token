begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.ingest.processor.geoip
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|geoip
package|;
end_package

begin_import
import|import
name|com
operator|.
name|maxmind
operator|.
name|geoip2
operator|.
name|DatabaseReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_class
DECL|class|DatabaseReaderServiceTests
specifier|public
class|class
name|DatabaseReaderServiceTests
extends|extends
name|ESTestCase
block|{
DECL|method|testLookup
specifier|public
name|void
name|testLookup
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|database
init|=
name|DatabaseReaderServiceTests
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/GeoLite2-City.mmdb"
argument_list|)
decl_stmt|;
name|DatabaseReaderService
name|service
init|=
operator|new
name|DatabaseReaderService
argument_list|()
decl_stmt|;
name|DatabaseReader
name|instance
init|=
name|service
operator|.
name|getOrCreateDatabaseReader
argument_list|(
literal|"key1"
argument_list|,
name|database
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|service
operator|.
name|getOrCreateDatabaseReader
argument_list|(
literal|"key1"
argument_list|,
name|database
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|instance
argument_list|)
argument_list|)
expr_stmt|;
name|database
operator|=
name|DatabaseReaderServiceTests
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/GeoLite2-City.mmdb"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|service
operator|.
name|getOrCreateDatabaseReader
argument_list|(
literal|"key2"
argument_list|,
name|database
argument_list|)
argument_list|,
name|not
argument_list|(
name|equalTo
argument_list|(
name|instance
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

