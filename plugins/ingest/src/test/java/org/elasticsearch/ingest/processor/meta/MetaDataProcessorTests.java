begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.ingest.processor.meta
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|meta
package|;
end_package

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|mustachejava
operator|.
name|DefaultMustacheFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|mustachejava
operator|.
name|Mustache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|FastStringReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|IngestDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|RandomDocumentPicks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|IngestDocument
operator|.
name|*
import|;
end_import

begin_class
DECL|class|MetaDataProcessorTests
specifier|public
class|class
name|MetaDataProcessorTests
extends|extends
name|ESTestCase
block|{
DECL|method|testExecute
specifier|public
name|void
name|testExecute
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|IngestDocument
operator|.
name|MetaData
argument_list|,
name|Mustache
argument_list|>
name|templates
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|MetaData
name|metaData
range|:
name|MetaData
operator|.
name|values
argument_list|()
control|)
block|{
name|templates
operator|.
name|put
argument_list|(
name|metaData
argument_list|,
operator|new
name|DefaultMustacheFactory
argument_list|()
operator|.
name|compile
argument_list|(
operator|new
name|FastStringReader
argument_list|(
literal|"some {{field}}"
argument_list|)
argument_list|,
literal|"noname"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|MetaDataProcessor
name|processor
init|=
operator|new
name|MetaDataProcessor
argument_list|(
name|templates
argument_list|)
decl_stmt|;
name|IngestDocument
name|ingestDocument
init|=
name|RandomDocumentPicks
operator|.
name|randomIngestDocument
argument_list|(
name|random
argument_list|()
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
argument_list|)
decl_stmt|;
name|processor
operator|.
name|execute
argument_list|(
name|ingestDocument
argument_list|)
expr_stmt|;
for|for
control|(
name|MetaData
name|metaData
range|:
name|MetaData
operator|.
name|values
argument_list|()
control|)
block|{
name|assertThat
argument_list|(
name|ingestDocument
operator|.
name|getEsMetadata
argument_list|(
name|metaData
argument_list|)
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
literal|"some value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

