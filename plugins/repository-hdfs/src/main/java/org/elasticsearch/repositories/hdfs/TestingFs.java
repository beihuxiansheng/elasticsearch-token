begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.repositories.hdfs
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|hdfs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|LocalFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|RawLocalFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|SuppressForbidden
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Extends LFS to improve some operations to keep the security permissions at  * bay. In particular mkdir is smarter and doesn't have to walk all the file  * hierarchy but rather only limits itself to the parent/working dir and creates  * a file only when necessary.  */
end_comment

begin_class
DECL|class|TestingFs
specifier|public
class|class
name|TestingFs
extends|extends
name|LocalFileSystem
block|{
DECL|class|ImprovedRawLocalFileSystem
specifier|private
specifier|static
class|class
name|ImprovedRawLocalFileSystem
extends|extends
name|RawLocalFileSystem
block|{
annotation|@
name|Override
annotation|@
name|SuppressForbidden
argument_list|(
name|reason
operator|=
literal|"the Hadoop API depends on java.io.File"
argument_list|)
DECL|method|mkdirs
specifier|public
name|boolean
name|mkdirs
parameter_list|(
name|Path
name|f
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|wd
init|=
name|pathToFile
argument_list|(
name|getWorkingDirectory
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|local
init|=
name|pathToFile
argument_list|(
name|f
argument_list|)
decl_stmt|;
if|if
condition|(
name|wd
operator|.
name|equals
argument_list|(
name|local
argument_list|)
operator|||
name|local
operator|.
name|exists
argument_list|()
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
name|mkdirs
argument_list|(
name|f
operator|.
name|getParent
argument_list|()
argument_list|)
operator|&&
name|local
operator|.
name|mkdir
argument_list|()
return|;
block|}
block|}
DECL|method|TestingFs
specifier|public
name|TestingFs
parameter_list|()
block|{
name|super
argument_list|(
operator|new
name|ImprovedRawLocalFileSystem
argument_list|()
argument_list|)
expr_stmt|;
comment|// use the build path instead of the starting dir as that one has read permissions
comment|//setWorkingDirectory(new Path(getClass().getProtectionDomain().getCodeSource().getLocation().toString()));
name|setWorkingDirectory
argument_list|(
operator|new
name|Path
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

