begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.discovery.jgroups
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|discovery
operator|.
name|jgroups
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|ChannelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|JChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|AfterMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|BeforeMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * @author kimchy (Shay Banon)  */
end_comment

begin_class
DECL|class|SimpleJgroupsTests
specifier|public
class|class
name|SimpleJgroupsTests
block|{
static|static
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"jgroups.logging.log_factory_class"
argument_list|,
name|JgroupsCustomLogFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|field|channel1
specifier|private
name|JChannel
name|channel1
decl_stmt|;
DECL|field|channel2
specifier|private
name|JChannel
name|channel2
decl_stmt|;
DECL|method|setupChannels
annotation|@
name|BeforeMethod
specifier|public
name|void
name|setupChannels
parameter_list|()
throws|throws
name|ChannelException
block|{
name|channel1
operator|=
operator|new
name|JChannel
argument_list|(
literal|"udp.xml"
argument_list|)
expr_stmt|;
name|channel1
operator|.
name|connect
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|channel2
operator|=
operator|new
name|JChannel
argument_list|(
literal|"udp.xml"
argument_list|)
expr_stmt|;
name|channel2
operator|.
name|connect
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
block|}
DECL|method|closeChannels
annotation|@
name|AfterMethod
specifier|public
name|void
name|closeChannels
parameter_list|()
block|{
name|channel1
operator|.
name|close
argument_list|()
expr_stmt|;
name|channel2
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testUdpJgroups
annotation|@
name|Test
specifier|public
name|void
name|testUdpJgroups
parameter_list|()
throws|throws
name|Exception
block|{
name|channel1
operator|.
name|send
argument_list|(
operator|new
name|Message
argument_list|(
literal|null
argument_list|,
name|channel1
operator|.
name|getAddress
argument_list|()
argument_list|,
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

