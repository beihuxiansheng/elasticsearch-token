begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cloud.gce
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|gce
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|compute
operator|.
name|model
operator|.
name|Instance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|component
operator|.
name|LifecycleComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_interface
DECL|interface|GceComputeService
specifier|public
interface|interface
name|GceComputeService
extends|extends
name|LifecycleComponent
argument_list|<
name|GceComputeService
argument_list|>
block|{
comment|/**      * GCE API Version: Elasticsearch/GceCloud/1.0      */
DECL|field|VERSION
name|String
name|VERSION
init|=
literal|"Elasticsearch/GceCloud/1.0"
decl_stmt|;
comment|// cloud.gce settings
comment|/**      * cloud.gce.project_id: Google project id      */
DECL|field|PROJECT_SETTING
name|Setting
argument_list|<
name|String
argument_list|>
name|PROJECT_SETTING
init|=
name|Setting
operator|.
name|simpleString
argument_list|(
literal|"cloud.gce.project_id"
argument_list|,
name|Property
operator|.
name|NodeScope
argument_list|)
decl_stmt|;
comment|/**      * cloud.gce.zone: Google Compute Engine zones      */
DECL|field|ZONE_SETTING
name|Setting
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|ZONE_SETTING
init|=
name|Setting
operator|.
name|listSetting
argument_list|(
literal|"cloud.gce.zone"
argument_list|,
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|,
name|Function
operator|.
name|identity
argument_list|()
argument_list|,
name|Property
operator|.
name|NodeScope
argument_list|)
decl_stmt|;
comment|/**      * cloud.gce.refresh_interval: How long the list of hosts is cached to prevent further requests to the AWS API. 0 disables caching.      * A negative value will cause infinite caching. Defaults to 0s.      */
DECL|field|REFRESH_SETTING
name|Setting
argument_list|<
name|TimeValue
argument_list|>
name|REFRESH_SETTING
init|=
name|Setting
operator|.
name|timeSetting
argument_list|(
literal|"cloud.gce.refresh_interval"
argument_list|,
name|TimeValue
operator|.
name|timeValueSeconds
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Property
operator|.
name|NodeScope
argument_list|)
decl_stmt|;
comment|/**      * cloud.gce.retry: Should we retry calling GCE API in case of error? Defaults to true.      */
DECL|field|RETRY_SETTING
name|Setting
argument_list|<
name|Boolean
argument_list|>
name|RETRY_SETTING
init|=
name|Setting
operator|.
name|boolSetting
argument_list|(
literal|"cloud.gce.retry"
argument_list|,
literal|true
argument_list|,
name|Property
operator|.
name|NodeScope
argument_list|)
decl_stmt|;
comment|/**      * cloud.gce.max_wait: How long exponential backoff should retry before definitely failing.      * It's a total time since the the initial call is made.      * A negative value will retry indefinitely. Defaults to `-1s` (retry indefinitely).      */
DECL|field|MAX_WAIT_SETTING
name|Setting
argument_list|<
name|TimeValue
argument_list|>
name|MAX_WAIT_SETTING
init|=
name|Setting
operator|.
name|timeSetting
argument_list|(
literal|"cloud.gce.max_wait"
argument_list|,
name|TimeValue
operator|.
name|timeValueSeconds
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
name|Property
operator|.
name|NodeScope
argument_list|)
decl_stmt|;
comment|/**      * Return a collection of running instances within the same GCE project      * @return a collection of running instances within the same GCE project      */
DECL|method|instances
name|Collection
argument_list|<
name|Instance
argument_list|>
name|instances
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

