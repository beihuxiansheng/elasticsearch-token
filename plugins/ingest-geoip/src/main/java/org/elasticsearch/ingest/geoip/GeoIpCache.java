begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.ingest.geoip
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|geoip
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|JsonNode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|maxmind
operator|.
name|db
operator|.
name|NodeCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|cache
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_class
DECL|class|GeoIpCache
specifier|final
class|class
name|GeoIpCache
implements|implements
name|NodeCache
block|{
DECL|field|cache
specifier|private
specifier|final
name|Cache
argument_list|<
name|Integer
argument_list|,
name|JsonNode
argument_list|>
name|cache
decl_stmt|;
DECL|method|GeoIpCache
name|GeoIpCache
parameter_list|(
name|long
name|maxSize
parameter_list|)
block|{
name|this
operator|.
name|cache
operator|=
name|CacheBuilder
operator|.
expr|<
name|Integer
operator|,
name|JsonNode
operator|>
name|builder
argument_list|()
operator|.
name|setMaximumWeight
argument_list|(
name|maxSize
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|JsonNode
name|get
parameter_list|(
name|int
name|key
parameter_list|,
name|Loader
name|loader
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|cache
operator|.
name|computeIfAbsent
argument_list|(
name|key
argument_list|,
name|loader
operator|::
name|load
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ExecutionException
name|e
parameter_list|)
block|{
name|Throwable
name|cause
init|=
name|e
operator|.
name|getCause
argument_list|()
operator|!=
literal|null
condition|?
name|e
operator|.
name|getCause
argument_list|()
else|:
name|e
decl_stmt|;
throw|throw
operator|new
name|ElasticsearchException
argument_list|(
name|cause
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

