begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cloud.azure.classic
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|classic
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|management
operator|.
name|compute
operator|.
name|models
operator|.
name|DeploymentSlot
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|management
operator|.
name|compute
operator|.
name|models
operator|.
name|DeploymentStatus
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|management
operator|.
name|compute
operator|.
name|models
operator|.
name|HostedServiceGetDetailedResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|management
operator|.
name|compute
operator|.
name|models
operator|.
name|InstanceEndpoint
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|management
operator|.
name|compute
operator|.
name|models
operator|.
name|RoleInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|classic
operator|.
name|management
operator|.
name|AzureComputeService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|classic
operator|.
name|management
operator|.
name|AzureComputeServiceAbstractMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|CollectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|discovery
operator|.
name|azure
operator|.
name|classic
operator|.
name|AzureDiscoveryPlugin
import|;
end_import

begin_comment
comment|/**  * Mock Azure API with a single started node  */
end_comment

begin_class
DECL|class|AzureComputeServiceSimpleMock
specifier|public
class|class
name|AzureComputeServiceSimpleMock
extends|extends
name|AzureComputeServiceAbstractMock
block|{
DECL|class|TestPlugin
specifier|public
specifier|static
class|class
name|TestPlugin
extends|extends
name|AzureDiscoveryPlugin
block|{
DECL|method|TestPlugin
specifier|public
name|TestPlugin
parameter_list|(
name|Settings
name|settings
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createComputeService
specifier|protected
name|AzureComputeService
name|createComputeService
parameter_list|()
block|{
return|return
operator|new
name|AzureComputeServiceSimpleMock
argument_list|(
name|settings
argument_list|)
return|;
block|}
block|}
DECL|method|AzureComputeServiceSimpleMock
specifier|private
name|AzureComputeServiceSimpleMock
parameter_list|(
name|Settings
name|settings
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getServiceDetails
specifier|public
name|HostedServiceGetDetailedResponse
name|getServiceDetails
parameter_list|()
block|{
name|HostedServiceGetDetailedResponse
name|response
init|=
operator|new
name|HostedServiceGetDetailedResponse
argument_list|()
decl_stmt|;
name|HostedServiceGetDetailedResponse
operator|.
name|Deployment
name|deployment
init|=
operator|new
name|HostedServiceGetDetailedResponse
operator|.
name|Deployment
argument_list|()
decl_stmt|;
comment|// Fake the deployment
name|deployment
operator|.
name|setName
argument_list|(
literal|"dummy"
argument_list|)
expr_stmt|;
name|deployment
operator|.
name|setDeploymentSlot
argument_list|(
name|DeploymentSlot
operator|.
name|Production
argument_list|)
expr_stmt|;
name|deployment
operator|.
name|setStatus
argument_list|(
name|DeploymentStatus
operator|.
name|Running
argument_list|)
expr_stmt|;
comment|// Fake an instance
name|RoleInstance
name|instance
init|=
operator|new
name|RoleInstance
argument_list|()
decl_stmt|;
name|instance
operator|.
name|setInstanceName
argument_list|(
literal|"dummy1"
argument_list|)
expr_stmt|;
comment|// Fake the private IP
name|instance
operator|.
name|setIPAddress
argument_list|(
name|InetAddress
operator|.
name|getLoopbackAddress
argument_list|()
argument_list|)
expr_stmt|;
comment|// Fake the public IP
name|InstanceEndpoint
name|endpoint
init|=
operator|new
name|InstanceEndpoint
argument_list|()
decl_stmt|;
name|endpoint
operator|.
name|setName
argument_list|(
literal|"elasticsearch"
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setVirtualIPAddress
argument_list|(
name|InetAddress
operator|.
name|getLoopbackAddress
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setPort
argument_list|(
literal|9400
argument_list|)
expr_stmt|;
name|instance
operator|.
name|setInstanceEndpoints
argument_list|(
name|CollectionUtils
operator|.
name|newSingletonArrayList
argument_list|(
name|endpoint
argument_list|)
argument_list|)
expr_stmt|;
name|deployment
operator|.
name|setRoleInstances
argument_list|(
name|CollectionUtils
operator|.
name|newSingletonArrayList
argument_list|(
name|instance
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setDeployments
argument_list|(
name|CollectionUtils
operator|.
name|newSingletonArrayList
argument_list|(
name|deployment
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
block|}
end_class

end_unit

