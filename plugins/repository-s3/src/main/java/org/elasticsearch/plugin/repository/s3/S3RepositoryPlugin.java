begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.plugin.repository.s3
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|repository
operator|.
name|s3
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|SpecialPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|aws
operator|.
name|AwsS3Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|aws
operator|.
name|S3Module
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|component
operator|.
name|LifecycleComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|SettingsModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|snapshots
operator|.
name|blobstore
operator|.
name|BlobStoreIndexShardRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|RepositoriesModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|s3
operator|.
name|S3Repository
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|AccessController
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|S3RepositoryPlugin
specifier|public
class|class
name|S3RepositoryPlugin
extends|extends
name|Plugin
block|{
comment|// ClientConfiguration clinit has some classloader problems
comment|// TODO: fix that
static|static
block|{
name|SecurityManager
name|sm
init|=
name|System
operator|.
name|getSecurityManager
argument_list|()
decl_stmt|;
if|if
condition|(
name|sm
operator|!=
literal|null
condition|)
block|{
name|sm
operator|.
name|checkPermission
argument_list|(
operator|new
name|SpecialPermission
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|AccessController
operator|.
name|doPrivileged
argument_list|(
operator|new
name|PrivilegedAction
argument_list|<
name|Void
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Void
name|run
parameter_list|()
block|{
try|try
block|{
name|Class
operator|.
name|forName
argument_list|(
literal|"com.amazonaws.ClientConfiguration"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|name
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
literal|"repository-s3"
return|;
block|}
annotation|@
name|Override
DECL|method|description
specifier|public
name|String
name|description
parameter_list|()
block|{
return|return
literal|"S3 Repository Plugin"
return|;
block|}
annotation|@
name|Override
DECL|method|nodeModules
specifier|public
name|Collection
argument_list|<
name|Module
argument_list|>
name|nodeModules
parameter_list|()
block|{
name|Collection
argument_list|<
name|Module
argument_list|>
name|modules
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|modules
operator|.
name|add
argument_list|(
operator|new
name|S3Module
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|modules
return|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
comment|// Supertype declaration has raw types
DECL|method|nodeServices
specifier|public
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|LifecycleComponent
argument_list|>
argument_list|>
name|nodeServices
parameter_list|()
block|{
return|return
name|Collections
operator|.
expr|<
name|Class
argument_list|<
name|?
extends|extends
name|LifecycleComponent
argument_list|>
operator|>
name|singleton
argument_list|(
name|S3Module
operator|.
name|getS3ServiceImpl
argument_list|()
argument_list|)
return|;
block|}
DECL|method|onModule
specifier|public
name|void
name|onModule
parameter_list|(
name|RepositoriesModule
name|repositoriesModule
parameter_list|)
block|{
name|repositoriesModule
operator|.
name|registerRepository
argument_list|(
name|S3Repository
operator|.
name|TYPE
argument_list|,
name|S3Repository
operator|.
name|class
argument_list|,
name|BlobStoreIndexShardRepository
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getSettings
specifier|public
name|List
argument_list|<
name|Setting
argument_list|<
name|?
argument_list|>
argument_list|>
name|getSettings
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
comment|// Register global cloud aws settings: cloud.aws (might have been registered in ec2 plugin)
name|AwsS3Service
operator|.
name|KEY_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|SECRET_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|PROTOCOL_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|PROXY_HOST_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|PROXY_PORT_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|PROXY_USERNAME_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|PROXY_PASSWORD_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|SIGNER_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|REGION_SETTING
argument_list|,
comment|// Register S3 specific settings: cloud.aws.s3
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|KEY_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|SECRET_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROTOCOL_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_HOST_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PORT_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_USERNAME_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PASSWORD_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|SIGNER_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|REGION_SETTING
argument_list|,
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|ENDPOINT_SETTING
argument_list|,
comment|// Register S3 repositories settings: repositories.s3
name|S3Repository
operator|.
name|Repositories
operator|.
name|KEY_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|SECRET_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|BUCKET_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|REGION_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|ENDPOINT_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|PROTOCOL_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|BUFFER_SIZE_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|MAX_RETRIES_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|CHUNK_SIZE_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|COMPRESS_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|STORAGE_CLASS_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|CANNED_ACL_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|BASE_PATH_SETTING
argument_list|,
comment|// Register S3 single repository settings
name|S3Repository
operator|.
name|Repository
operator|.
name|KEY_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|SECRET_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|BUCKET_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|ENDPOINT_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|PROTOCOL_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|REGION_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|BUFFER_SIZE_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|MAX_RETRIES_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|COMPRESS_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|STORAGE_CLASS_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|CANNED_ACL_SETTING
argument_list|,
name|S3Repository
operator|.
name|Repository
operator|.
name|BASE_PATH_SETTING
argument_list|)
return|;
block|}
block|}
end_class

end_unit

