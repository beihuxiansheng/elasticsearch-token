begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.repositories.s3
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|s3
package|;
end_package

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|Protocol
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|s3
operator|.
name|AmazonS3
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|s3
operator|.
name|model
operator|.
name|DeleteObjectsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|s3
operator|.
name|model
operator|.
name|ObjectListing
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|s3
operator|.
name|model
operator|.
name|S3ObjectSummary
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|util
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|repositories
operator|.
name|put
operator|.
name|PutRepositoryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|snapshots
operator|.
name|create
operator|.
name|CreateSnapshotResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|snapshots
operator|.
name|restore
operator|.
name|RestoreSnapshotResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|ClusterAdminClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|aws
operator|.
name|AbstractAwsTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|aws
operator|.
name|AwsS3Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|RepositoryMissingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|RepositoryVerificationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|snapshots
operator|.
name|SnapshotMissingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|snapshots
operator|.
name|SnapshotState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
operator|.
name|ClusterScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|crypto
operator|.
name|KeyGenerator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyPair
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyPairGenerator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|SecureRandom
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThan
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
annotation|@
name|ClusterScope
argument_list|(
name|scope
operator|=
name|Scope
operator|.
name|SUITE
argument_list|,
name|numDataNodes
operator|=
literal|2
argument_list|,
name|numClientNodes
operator|=
literal|0
argument_list|,
name|transportClientRatio
operator|=
literal|0.0
argument_list|)
DECL|class|AbstractS3SnapshotRestoreTest
specifier|abstract
specifier|public
class|class
name|AbstractS3SnapshotRestoreTest
extends|extends
name|AbstractAwsTestCase
block|{
annotation|@
name|Override
DECL|method|nodeSettings
specifier|public
name|Settings
name|nodeSettings
parameter_list|(
name|int
name|nodeOrdinal
parameter_list|)
block|{
comment|// nodeSettings is called before `wipeBefore()` so we need to define basePath here
name|globalBasePath
operator|=
literal|"repo-"
operator|+
name|randomInt
argument_list|()
expr_stmt|;
return|return
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|super
operator|.
name|nodeSettings
argument_list|(
name|nodeOrdinal
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repositories
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|globalBasePath
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|field|basePath
specifier|private
name|String
name|basePath
decl_stmt|;
DECL|field|globalBasePath
specifier|private
name|String
name|globalBasePath
decl_stmt|;
annotation|@
name|Before
DECL|method|wipeBefore
specifier|public
specifier|final
name|void
name|wipeBefore
parameter_list|()
block|{
name|wipeRepositories
argument_list|()
expr_stmt|;
name|basePath
operator|=
literal|"repo-"
operator|+
name|randomInt
argument_list|()
expr_stmt|;
name|cleanRepositoryFiles
argument_list|(
name|basePath
argument_list|)
expr_stmt|;
name|cleanRepositoryFiles
argument_list|(
name|globalBasePath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|wipeAfter
specifier|public
specifier|final
name|void
name|wipeAfter
parameter_list|()
block|{
name|wipeRepositories
argument_list|()
expr_stmt|;
name|cleanRepositoryFiles
argument_list|(
name|basePath
argument_list|)
expr_stmt|;
name|cleanRepositoryFiles
argument_list|(
name|globalBasePath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"https://github.com/elastic/elasticsearch-cloud-aws/issues/211"
argument_list|)
DECL|method|testSimpleWorkflow
specifier|public
name|void
name|testSimpleWorkflow
parameter_list|()
block|{
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|Settings
operator|.
name|Builder
name|settings
init|=
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|randomIntBetween
argument_list|(
literal|1000
argument_list|,
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
comment|// We sometime test getting the base_path from node settings using repositories.s3.base_path
if|if
condition|(
name|usually
argument_list|()
condition|)
block|{
name|settings
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|basePath
argument_list|)
expr_stmt|;
block|}
name|logger
operator|.
name|info
argument_list|(
literal|"-->  creating s3 repository with bucket[{}] and path [{}]"
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|Settings
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"repositories.s3.bucket"
argument_list|)
argument_list|,
name|basePath
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|createIndex
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"test-idx-2"
argument_list|,
literal|"test-idx-3"
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> indexing some data"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|index
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
operator|+
name|i
argument_list|)
expr_stmt|;
name|index
argument_list|(
literal|"test-idx-2"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"baz"
operator|+
name|i
argument_list|)
expr_stmt|;
name|index
argument_list|(
literal|"test-idx-3"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"baz"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-2"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-3"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> snapshot"
argument_list|)
expr_stmt|;
name|CreateSnapshotResponse
name|createSnapshotResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-*"
argument_list|,
literal|"-test-idx-3"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getSnapshots
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|state
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|SnapshotState
operator|.
name|SUCCESS
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> delete some data"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|50
condition|;
name|i
operator|++
control|)
block|{
name|client
operator|.
name|prepareDelete
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|50
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|client
operator|.
name|prepareDelete
argument_list|(
literal|"test-idx-2"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|client
operator|.
name|prepareDelete
argument_list|(
literal|"test-idx-3"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|50L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-2"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|50L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-3"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|50L
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> close indices"
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"test-idx-2"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore all indices from the snapshot"
argument_list|)
expr_stmt|;
name|RestoreSnapshotResponse
name|restoreSnapshotResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-2"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-3"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|50L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test restore after index deletion
name|logger
operator|.
name|info
argument_list|(
literal|"--> delete indices"
argument_list|)
expr_stmt|;
name|cluster
argument_list|()
operator|.
name|wipeIndices
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"test-idx-2"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore one index after deletion"
argument_list|)
expr_stmt|;
name|restoreSnapshotResponse
operator|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-*"
argument_list|,
literal|"-test-idx-2"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|ClusterState
name|clusterState
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|clusterState
operator|.
name|getMetaData
argument_list|()
operator|.
name|hasIndex
argument_list|(
literal|"test-idx-1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterState
operator|.
name|getMetaData
argument_list|()
operator|.
name|hasIndex
argument_list|(
literal|"test-idx-2"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"https://github.com/elastic/elasticsearch-cloud-aws/issues/211"
argument_list|)
DECL|method|testEncryption
specifier|public
name|void
name|testEncryption
parameter_list|()
block|{
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  creating s3 repository with bucket[{}] and path [{}]"
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|Settings
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"repositories.s3.bucket"
argument_list|)
argument_list|,
name|basePath
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|basePath
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|randomIntBetween
argument_list|(
literal|1000
argument_list|,
literal|10000
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|createIndex
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"test-idx-2"
argument_list|,
literal|"test-idx-3"
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> indexing some data"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|index
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
operator|+
name|i
argument_list|)
expr_stmt|;
name|index
argument_list|(
literal|"test-idx-2"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"baz"
operator|+
name|i
argument_list|)
expr_stmt|;
name|index
argument_list|(
literal|"test-idx-3"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"baz"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-2"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-3"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> snapshot"
argument_list|)
expr_stmt|;
name|CreateSnapshotResponse
name|createSnapshotResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-*"
argument_list|,
literal|"-test-idx-3"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getSnapshots
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|state
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|SnapshotState
operator|.
name|SUCCESS
argument_list|)
argument_list|)
expr_stmt|;
name|Settings
name|settings
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|Settings
operator|.
name|class
argument_list|)
decl_stmt|;
name|Settings
name|bucket
init|=
name|settings
operator|.
name|getByPrefix
argument_list|(
literal|"repositories.s3."
argument_list|)
decl_stmt|;
name|AmazonS3
name|s3Client
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|AwsS3Service
operator|.
name|class
argument_list|)
operator|.
name|client
argument_list|(
literal|null
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|PROTOCOL_SETTING
operator|.
name|get
argument_list|(
name|settings
argument_list|)
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|REGION_SETTING
operator|.
name|get
argument_list|(
name|settings
argument_list|)
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|KEY_SETTING
operator|.
name|get
argument_list|(
name|settings
argument_list|)
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|SECRET_SETTING
operator|.
name|get
argument_list|(
name|settings
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|String
name|bucketName
init|=
name|bucket
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> verify encryption for bucket [{}], prefix [{}]"
argument_list|,
name|bucketName
argument_list|,
name|basePath
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|S3ObjectSummary
argument_list|>
name|summaries
init|=
name|s3Client
operator|.
name|listObjects
argument_list|(
name|bucketName
argument_list|,
name|basePath
argument_list|)
operator|.
name|getObjectSummaries
argument_list|()
decl_stmt|;
for|for
control|(
name|S3ObjectSummary
name|summary
range|:
name|summaries
control|)
block|{
name|assertThat
argument_list|(
name|s3Client
operator|.
name|getObjectMetadata
argument_list|(
name|bucketName
argument_list|,
name|summary
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|getSSEAlgorithm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"AES256"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|logger
operator|.
name|info
argument_list|(
literal|"--> delete some data"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|50
condition|;
name|i
operator|++
control|)
block|{
name|client
operator|.
name|prepareDelete
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|50
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|client
operator|.
name|prepareDelete
argument_list|(
literal|"test-idx-2"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|client
operator|.
name|prepareDelete
argument_list|(
literal|"test-idx-3"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|50L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-2"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|50L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-3"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|50L
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> close indices"
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"test-idx-2"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore all indices from the snapshot"
argument_list|)
expr_stmt|;
name|RestoreSnapshotResponse
name|restoreSnapshotResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-2"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-3"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|50L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test restore after index deletion
name|logger
operator|.
name|info
argument_list|(
literal|"--> delete indices"
argument_list|)
expr_stmt|;
name|cluster
argument_list|()
operator|.
name|wipeIndices
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"test-idx-2"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore one index after deletion"
argument_list|)
expr_stmt|;
name|restoreSnapshotResponse
operator|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-*"
argument_list|,
literal|"-test-idx-2"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|ClusterState
name|clusterState
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|clusterState
operator|.
name|getMetaData
argument_list|()
operator|.
name|hasIndex
argument_list|(
literal|"test-idx-1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterState
operator|.
name|getMetaData
argument_list|()
operator|.
name|hasIndex
argument_list|(
literal|"test-idx-2"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * This test verifies that the test configuration is set up in a manner that      * does not make the test {@link #testRepositoryWithCustomCredentials()} pointless.      */
DECL|method|testRepositoryWithCustomCredentialsIsNotAccessibleByDefaultCredentials
specifier|public
name|void
name|testRepositoryWithCustomCredentialsIsNotAccessibleByDefaultCredentials
parameter_list|()
block|{
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|Settings
name|bucketSettings
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|Settings
operator|.
name|class
argument_list|)
operator|.
name|getByPrefix
argument_list|(
literal|"repositories.s3.private-bucket."
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  creating s3 repository with bucket[{}] and path [{}]"
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
argument_list|,
name|basePath
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|basePath
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BUCKET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"repository verification should have raise an exception!"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryVerificationException
name|e
parameter_list|)
block|{         }
block|}
DECL|method|testRepositoryWithBasePath
specifier|public
name|void
name|testRepositoryWithBasePath
parameter_list|()
block|{
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|basePath
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertRepositoryIsOperational
argument_list|(
name|client
argument_list|,
literal|"test-repo"
argument_list|)
expr_stmt|;
block|}
DECL|method|testRepositoryWithCustomCredentials
specifier|public
name|void
name|testRepositoryWithCustomCredentials
parameter_list|()
block|{
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|Settings
name|bucketSettings
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|Settings
operator|.
name|class
argument_list|)
operator|.
name|getByPrefix
argument_list|(
literal|"repositories.s3.private-bucket."
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  creating s3 repository with bucket[{}] and path [{}]"
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
argument_list|,
name|basePath
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|basePath
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|REGION_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"region"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|KEY_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"access_key"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|SECRET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"secret_key"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BUCKET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertRepositoryIsOperational
argument_list|(
name|client
argument_list|,
literal|"test-repo"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"https://github.com/elastic/elasticsearch-cloud-aws/issues/211"
argument_list|)
DECL|method|testRepositoryWithCustomEndpointProtocol
specifier|public
name|void
name|testRepositoryWithCustomEndpointProtocol
parameter_list|()
block|{
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|Settings
name|bucketSettings
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|Settings
operator|.
name|class
argument_list|)
operator|.
name|getByPrefix
argument_list|(
literal|"repositories.s3.external-bucket."
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> creating s3 repostoriy with endpoint [{}], bucket[{}] and path [{}]"
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"endpoint"
argument_list|)
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
argument_list|,
name|basePath
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BUCKET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|ENDPOINT_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"endpoint"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|KEY_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"access_key"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|SECRET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"secret_key"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|basePath
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertRepositoryIsOperational
argument_list|(
name|client
argument_list|,
literal|"test-repo"
argument_list|)
expr_stmt|;
block|}
comment|/**      * This test verifies that the test configuration is set up in a manner that      * does not make the test {@link #testRepositoryInRemoteRegion()} pointless.      */
DECL|method|testRepositoryInRemoteRegionIsRemote
specifier|public
name|void
name|testRepositoryInRemoteRegionIsRemote
parameter_list|()
block|{
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|Settings
name|bucketSettings
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|Settings
operator|.
name|class
argument_list|)
operator|.
name|getByPrefix
argument_list|(
literal|"repositories.s3.remote-bucket."
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  creating s3 repository with bucket[{}] and path [{}]"
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
argument_list|,
name|basePath
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|basePath
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BUCKET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
argument_list|)
comment|// Below setting intentionally omitted to assert bucket is not available in default region.
comment|//                        .put("region", privateBucketSettings.get("region"))
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"repository verification should have raise an exception!"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryVerificationException
name|e
parameter_list|)
block|{         }
block|}
annotation|@
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"https://github.com/elastic/elasticsearch-cloud-aws/issues/211"
argument_list|)
DECL|method|testRepositoryInRemoteRegion
specifier|public
name|void
name|testRepositoryInRemoteRegion
parameter_list|()
block|{
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|Settings
name|settings
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|Settings
operator|.
name|class
argument_list|)
decl_stmt|;
name|Settings
name|bucketSettings
init|=
name|settings
operator|.
name|getByPrefix
argument_list|(
literal|"repositories.s3.remote-bucket."
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  creating s3 repository with bucket[{}] and path [{}]"
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
argument_list|,
name|basePath
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|basePath
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BUCKET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|REGION_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|bucketSettings
operator|.
name|get
argument_list|(
literal|"region"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertRepositoryIsOperational
argument_list|(
name|client
argument_list|,
literal|"test-repo"
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test case for issue #86: https://github.com/elastic/elasticsearch-cloud-aws/issues/86      */
DECL|method|testNonExistingRepo86
specifier|public
name|void
name|testNonExistingRepo86
parameter_list|()
block|{
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  creating s3 repository with bucket[{}] and path [{}]"
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|Settings
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"repositories.s3.bucket"
argument_list|)
argument_list|,
name|basePath
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|basePath
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore non existing snapshot"
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"no-existing-snapshot"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Shouldn't be here"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SnapshotMissingException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
block|}
comment|/**      * For issue #86: https://github.com/elastic/elasticsearch-cloud-aws/issues/86      */
DECL|method|testGetDeleteNonExistingSnapshot86
specifier|public
name|void
name|testGetDeleteNonExistingSnapshot86
parameter_list|()
block|{
name|ClusterAdminClient
name|client
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  creating s3 repository without any path"
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|S3Repository
operator|.
name|Repository
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|basePath
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|addSnapshots
argument_list|(
literal|"no-existing-snapshot"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Shouldn't be here"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SnapshotMissingException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
try|try
block|{
name|client
operator|.
name|prepareDeleteSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"no-existing-snapshot"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Shouldn't be here"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SnapshotMissingException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
block|}
annotation|@
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"https://github.com/elastic/elasticsearch-cloud-aws/issues/211"
argument_list|)
DECL|method|testClientSideEncryption
specifier|public
name|void
name|testClientSideEncryption
parameter_list|()
throws|throws
name|NoSuchAlgorithmException
block|{
name|KeyGenerator
name|keyGenerator1
init|=
name|KeyGenerator
operator|.
name|getInstance
argument_list|(
literal|"AES"
argument_list|)
decl_stmt|;
name|keyGenerator1
operator|.
name|init
argument_list|(
literal|128
argument_list|)
expr_stmt|;
name|String
name|symmetricEncryptionKeyBase64
init|=
name|Base64
operator|.
name|encodeAsString
argument_list|(
name|keyGenerator1
operator|.
name|generateKey
argument_list|()
operator|.
name|getEncoded
argument_list|()
argument_list|)
decl_stmt|;
name|KeyPairGenerator
name|keyGenerator2
init|=
name|KeyPairGenerator
operator|.
name|getInstance
argument_list|(
literal|"RSA"
argument_list|)
decl_stmt|;
name|keyGenerator2
operator|.
name|initialize
argument_list|(
literal|512
argument_list|,
operator|new
name|SecureRandom
argument_list|()
argument_list|)
expr_stmt|;
name|KeyPair
name|keyPair
init|=
name|keyGenerator2
operator|.
name|generateKeyPair
argument_list|()
decl_stmt|;
name|String
name|publicEncryptionKeyBase64
init|=
name|Base64
operator|.
name|encodeAsString
argument_list|(
name|keyPair
operator|.
name|getPublic
argument_list|()
operator|.
name|getEncoded
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|privateEncryptionKeyBase64
init|=
name|Base64
operator|.
name|encodeAsString
argument_list|(
name|keyPair
operator|.
name|getPrivate
argument_list|()
operator|.
name|getEncoded
argument_list|()
argument_list|)
decl_stmt|;
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
try|try
block|{
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"base_path"
argument_list|,
name|basePath
argument_list|)
operator|.
name|put
argument_list|(
literal|"client_side_encryption_key.symmetric"
argument_list|,
name|symmetricEncryptionKeyBase64
argument_list|)
operator|.
name|put
argument_list|(
literal|"client_side_encryption_key.public"
argument_list|,
name|publicEncryptionKeyBase64
argument_list|)
operator|.
name|put
argument_list|(
literal|"client_side_encryption_key.private"
argument_list|,
name|privateEncryptionKeyBase64
argument_list|)
operator|.
name|put
argument_list|(
literal|"chunk_size"
argument_list|,
name|randomIntBetween
argument_list|(
literal|1000
argument_list|,
literal|10000
argument_list|)
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|fail
argument_list|(
literal|"Symmetric and public/private key pairs are exclusive options. An exception should be thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{         }
name|List
argument_list|<
name|Settings
operator|.
name|Builder
argument_list|>
name|allSettings
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"base_path"
argument_list|,
name|basePath
argument_list|)
operator|.
name|put
argument_list|(
literal|"client_side_encryption_key.symmetric"
argument_list|,
name|symmetricEncryptionKeyBase64
argument_list|)
operator|.
name|put
argument_list|(
literal|"chunk_size"
argument_list|,
name|randomIntBetween
argument_list|(
literal|1000
argument_list|,
literal|10000
argument_list|)
argument_list|)
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"base_path"
argument_list|,
name|basePath
argument_list|)
operator|.
name|put
argument_list|(
literal|"client_side_encryption_key.public"
argument_list|,
name|publicEncryptionKeyBase64
argument_list|)
operator|.
name|put
argument_list|(
literal|"client_side_encryption_key.private"
argument_list|,
name|privateEncryptionKeyBase64
argument_list|)
operator|.
name|put
argument_list|(
literal|"chunk_size"
argument_list|,
name|randomIntBetween
argument_list|(
literal|1000
argument_list|,
literal|10000
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|Settings
operator|.
name|Builder
name|settings
range|:
name|allSettings
control|)
block|{
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"s3"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
comment|// Create the index and index some data
name|createIndex
argument_list|(
literal|"test-idx-1"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|index
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
comment|// Take the snapshot
name|CreateSnapshotResponse
name|createSnapshotResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Restore
name|cluster
argument_list|()
operator|.
name|wipeIndices
argument_list|(
literal|"test-idx-1"
argument_list|)
expr_stmt|;
name|RestoreSnapshotResponse
name|restoreSnapshotResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|ClusterState
name|clusterState
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|clusterState
operator|.
name|getMetaData
argument_list|()
operator|.
name|hasIndex
argument_list|(
literal|"test-idx-1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
comment|// Clean, the test will bbe run with different settings
name|cluster
argument_list|()
operator|.
name|wipeIndices
argument_list|(
literal|"test-idx-1"
argument_list|)
expr_stmt|;
name|wipeRepositories
argument_list|()
expr_stmt|;
name|cleanRepositoryFiles
argument_list|(
name|basePath
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|assertRepositoryIsOperational
specifier|private
name|void
name|assertRepositoryIsOperational
parameter_list|(
name|Client
name|client
parameter_list|,
name|String
name|repository
parameter_list|)
block|{
name|createIndex
argument_list|(
literal|"test-idx-1"
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> indexing some data"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|index
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> snapshot"
argument_list|)
expr_stmt|;
name|CreateSnapshotResponse
name|createSnapshotResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
name|repository
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-*"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
name|repository
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getSnapshots
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|state
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|SnapshotState
operator|.
name|SUCCESS
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> delete some data"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|50
condition|;
name|i
operator|++
control|)
block|{
name|client
operator|.
name|prepareDelete
argument_list|(
literal|"test-idx-1"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|50L
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> close indices"
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore all indices from the snapshot"
argument_list|)
expr_stmt|;
name|RestoreSnapshotResponse
name|restoreSnapshotResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
name|repository
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-1"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Deletes repositories, supports wildcard notation.      */
DECL|method|wipeRepositories
specifier|public
specifier|static
name|void
name|wipeRepositories
parameter_list|(
name|String
modifier|...
name|repositories
parameter_list|)
block|{
comment|// if nothing is provided, delete all
if|if
condition|(
name|repositories
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|repositories
operator|=
operator|new
name|String
index|[]
block|{
literal|"*"
block|}
expr_stmt|;
block|}
for|for
control|(
name|String
name|repository
range|:
name|repositories
control|)
block|{
try|try
block|{
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareDeleteRepository
argument_list|(
name|repository
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryMissingException
name|ex
parameter_list|)
block|{
comment|// ignore
block|}
block|}
block|}
comment|/**      * Deletes content of the repository files in the bucket      */
DECL|method|cleanRepositoryFiles
specifier|public
name|void
name|cleanRepositoryFiles
parameter_list|(
name|String
name|basePath
parameter_list|)
block|{
name|Settings
name|settings
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|Settings
operator|.
name|class
argument_list|)
decl_stmt|;
name|Settings
index|[]
name|buckets
init|=
block|{
name|settings
operator|.
name|getByPrefix
argument_list|(
literal|"repositories.s3."
argument_list|)
block|,
name|settings
operator|.
name|getByPrefix
argument_list|(
literal|"repositories.s3.private-bucket."
argument_list|)
block|,
name|settings
operator|.
name|getByPrefix
argument_list|(
literal|"repositories.s3.remote-bucket."
argument_list|)
block|,
name|settings
operator|.
name|getByPrefix
argument_list|(
literal|"repositories.s3.external-bucket."
argument_list|)
block|}
decl_stmt|;
for|for
control|(
name|Settings
name|bucket
range|:
name|buckets
control|)
block|{
name|String
name|endpoint
init|=
name|bucket
operator|.
name|get
argument_list|(
literal|"endpoint"
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|ENDPOINT_SETTING
operator|.
name|get
argument_list|(
name|settings
argument_list|)
argument_list|)
decl_stmt|;
name|Protocol
name|protocol
init|=
name|S3Repository
operator|.
name|Repositories
operator|.
name|PROTOCOL_SETTING
operator|.
name|get
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|String
name|region
init|=
name|bucket
operator|.
name|get
argument_list|(
literal|"region"
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|REGION_SETTING
operator|.
name|get
argument_list|(
name|settings
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|accessKey
init|=
name|bucket
operator|.
name|get
argument_list|(
literal|"access_key"
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|KEY_SETTING
operator|.
name|get
argument_list|(
name|settings
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|secretKey
init|=
name|bucket
operator|.
name|get
argument_list|(
literal|"secret_key"
argument_list|,
name|S3Repository
operator|.
name|Repositories
operator|.
name|SECRET_SETTING
operator|.
name|get
argument_list|(
name|settings
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|bucketName
init|=
name|bucket
operator|.
name|get
argument_list|(
literal|"bucket"
argument_list|)
decl_stmt|;
comment|// We check that settings has been set in elasticsearch.yml integration test file
comment|// as described in README
name|assertThat
argument_list|(
literal|"Your settings in elasticsearch.yml are incorrects. Check README file."
argument_list|,
name|bucketName
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|AmazonS3
name|client
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|AwsS3Service
operator|.
name|class
argument_list|)
operator|.
name|client
argument_list|(
name|endpoint
argument_list|,
name|protocol
argument_list|,
name|region
argument_list|,
name|accessKey
argument_list|,
name|secretKey
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
try|try
block|{
name|ObjectListing
name|prevListing
init|=
literal|null
decl_stmt|;
comment|//From http://docs.amazonwebservices.com/AmazonS3/latest/dev/DeletingMultipleObjectsUsingJava.html
comment|//we can do at most 1K objects per delete
comment|//We don't know the bucket name until first object listing
name|DeleteObjectsRequest
name|multiObjectDeleteRequest
init|=
literal|null
decl_stmt|;
name|ArrayList
argument_list|<
name|DeleteObjectsRequest
operator|.
name|KeyVersion
argument_list|>
name|keys
init|=
operator|new
name|ArrayList
argument_list|<
name|DeleteObjectsRequest
operator|.
name|KeyVersion
argument_list|>
argument_list|()
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|ObjectListing
name|list
decl_stmt|;
if|if
condition|(
name|prevListing
operator|!=
literal|null
condition|)
block|{
name|list
operator|=
name|client
operator|.
name|listNextBatchOfObjects
argument_list|(
name|prevListing
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|list
operator|=
name|client
operator|.
name|listObjects
argument_list|(
name|bucketName
argument_list|,
name|basePath
argument_list|)
expr_stmt|;
name|multiObjectDeleteRequest
operator|=
operator|new
name|DeleteObjectsRequest
argument_list|(
name|list
operator|.
name|getBucketName
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|S3ObjectSummary
name|summary
range|:
name|list
operator|.
name|getObjectSummaries
argument_list|()
control|)
block|{
name|keys
operator|.
name|add
argument_list|(
operator|new
name|DeleteObjectsRequest
operator|.
name|KeyVersion
argument_list|(
name|summary
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//Every 500 objects batch the delete request
if|if
condition|(
name|keys
operator|.
name|size
argument_list|()
operator|>
literal|500
condition|)
block|{
name|multiObjectDeleteRequest
operator|.
name|setKeys
argument_list|(
name|keys
argument_list|)
expr_stmt|;
name|client
operator|.
name|deleteObjects
argument_list|(
name|multiObjectDeleteRequest
argument_list|)
expr_stmt|;
name|multiObjectDeleteRequest
operator|=
operator|new
name|DeleteObjectsRequest
argument_list|(
name|list
operator|.
name|getBucketName
argument_list|()
argument_list|)
expr_stmt|;
name|keys
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|list
operator|.
name|isTruncated
argument_list|()
condition|)
block|{
name|prevListing
operator|=
name|list
expr_stmt|;
block|}
else|else
block|{
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|keys
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|multiObjectDeleteRequest
operator|.
name|setKeys
argument_list|(
name|keys
argument_list|)
expr_stmt|;
name|client
operator|.
name|deleteObjects
argument_list|(
name|multiObjectDeleteRequest
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"Failed to delete S3 repository [{}] in [{}]"
argument_list|,
name|ex
argument_list|,
name|bucketName
argument_list|,
name|region
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

