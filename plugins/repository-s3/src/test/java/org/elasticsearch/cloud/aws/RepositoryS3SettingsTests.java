begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cloud.aws
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|aws
package|;
end_package

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|Protocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|RepositoryName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|RepositorySettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|s3
operator|.
name|S3Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|s3
operator|.
name|S3Repository
operator|.
name|Repositories
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|s3
operator|.
name|S3Repository
operator|.
name|Repository
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|s3
operator|.
name|S3Repository
operator|.
name|getValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|containsString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|isEmptyString
import|;
end_import

begin_class
DECL|class|RepositoryS3SettingsTests
specifier|public
class|class
name|RepositoryS3SettingsTests
extends|extends
name|ESTestCase
block|{
DECL|field|AWS
specifier|private
specifier|static
specifier|final
name|Settings
name|AWS
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|KEY_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"global-key"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|SECRET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"global-secret"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|PROTOCOL_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"https"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|PROXY_HOST_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"global-proxy-host"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|PROXY_PORT_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|10000
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|PROXY_USERNAME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"global-proxy-username"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|PROXY_PASSWORD_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"global-proxy-password"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|SIGNER_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"global-signer"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|REGION_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"global-region"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|S3
specifier|private
specifier|static
specifier|final
name|Settings
name|S3
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|KEY_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"s3-key"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|SECRET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"s3-secret"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROTOCOL_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"http"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_HOST_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"s3-proxy-host"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PORT_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|20000
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_USERNAME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"s3-proxy-username"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PASSWORD_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"s3-proxy-password"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|SIGNER_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"s3-signer"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|REGION_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"s3-region"
argument_list|)
operator|.
name|put
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|ENDPOINT_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"s3-endpoint"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|REPOSITORIES
specifier|private
specifier|static
specifier|final
name|Settings
name|REPOSITORIES
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|KEY_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repositories-key"
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|SECRET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repositories-secret"
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|BUCKET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repositories-bucket"
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|PROTOCOL_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"https"
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|REGION_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repositories-region"
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|ENDPOINT_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repositories-endpoint"
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|BUFFER_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"6mb"
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|MAX_RETRIES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|4
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|CHUNK_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"110mb"
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|COMPRESS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|STORAGE_CLASS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repositories-class"
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|CANNED_ACL_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repositories-acl"
argument_list|)
operator|.
name|put
argument_list|(
name|Repositories
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repositories-basepath"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|REPOSITORY
specifier|private
specifier|static
specifier|final
name|Settings
name|REPOSITORY
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|KEY_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repository-key"
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|SECRET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repository-secret"
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|BUCKET_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repository-bucket"
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|PROTOCOL_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"https"
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|REGION_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repository-region"
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|ENDPOINT_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repository-endpoint"
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|BUFFER_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"7mb"
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|MAX_RETRIES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|5
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"120mb"
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|COMPRESS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|STORAGE_CLASS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repository-class"
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|CANNED_ACL_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repository-acl"
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|BASE_PATH_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"repository-basepath"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * We test when only cloud.aws settings are set      */
DECL|method|testRepositorySettingsGlobalOnly
specifier|public
name|void
name|testRepositorySettingsGlobalOnly
parameter_list|()
block|{
name|Settings
name|nodeSettings
init|=
name|buildSettings
argument_list|(
name|AWS
argument_list|)
decl_stmt|;
name|RepositorySettings
name|repositorySettings
init|=
operator|new
name|RepositorySettings
argument_list|(
name|nodeSettings
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|KEY_SETTING
argument_list|,
name|Repositories
operator|.
name|KEY_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-key"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SECRET_SETTING
argument_list|,
name|Repositories
operator|.
name|SECRET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-secret"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUCKET_SETTING
argument_list|,
name|Repositories
operator|.
name|BUCKET_SETTING
argument_list|)
argument_list|,
name|isEmptyString
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|PROTOCOL_SETTING
argument_list|,
name|Repositories
operator|.
name|PROTOCOL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
name|Protocol
operator|.
name|HTTPS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|REGION_SETTING
argument_list|,
name|Repositories
operator|.
name|REGION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-region"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|ENDPOINT_SETTING
argument_list|,
name|Repositories
operator|.
name|ENDPOINT_SETTING
argument_list|)
argument_list|,
name|isEmptyString
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_HOST_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-proxy-host"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PORT_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_USERNAME_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-proxy-username"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PASSWORD_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-proxy-password"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|SIGNER_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-signer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|,
name|Repositories
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUFFER_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|BUFFER_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|MAX_RETRIES_SETTING
argument_list|,
name|Repositories
operator|.
name|MAX_RETRIES_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|CHUNK_SIZE_SETTING
argument_list|)
operator|.
name|getGb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|COMPRESS_SETTING
argument_list|,
name|Repositories
operator|.
name|COMPRESS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|STORAGE_CLASS_SETTING
argument_list|,
name|Repositories
operator|.
name|STORAGE_CLASS_SETTING
argument_list|)
argument_list|,
name|isEmptyString
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CANNED_ACL_SETTING
argument_list|,
name|Repositories
operator|.
name|CANNED_ACL_SETTING
argument_list|)
argument_list|,
name|isEmptyString
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BASE_PATH_SETTING
argument_list|,
name|Repositories
operator|.
name|BASE_PATH_SETTING
argument_list|)
argument_list|,
name|isEmptyString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * We test when cloud.aws settings are overloaded by cloud.aws.s3 settings      */
DECL|method|testRepositorySettingsGlobalOverloadedByS3
specifier|public
name|void
name|testRepositorySettingsGlobalOverloadedByS3
parameter_list|()
block|{
name|Settings
name|nodeSettings
init|=
name|buildSettings
argument_list|(
name|AWS
argument_list|,
name|S3
argument_list|)
decl_stmt|;
name|RepositorySettings
name|repositorySettings
init|=
operator|new
name|RepositorySettings
argument_list|(
name|nodeSettings
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|KEY_SETTING
argument_list|,
name|Repositories
operator|.
name|KEY_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-key"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SECRET_SETTING
argument_list|,
name|Repositories
operator|.
name|SECRET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-secret"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUCKET_SETTING
argument_list|,
name|Repositories
operator|.
name|BUCKET_SETTING
argument_list|)
argument_list|,
name|isEmptyString
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|PROTOCOL_SETTING
argument_list|,
name|Repositories
operator|.
name|PROTOCOL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
name|Protocol
operator|.
name|HTTP
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|REGION_SETTING
argument_list|,
name|Repositories
operator|.
name|REGION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-region"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|ENDPOINT_SETTING
argument_list|,
name|Repositories
operator|.
name|ENDPOINT_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-endpoint"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_HOST_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-host"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PORT_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|20000
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_USERNAME_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-username"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PASSWORD_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-password"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|SIGNER_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-signer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|,
name|Repositories
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUFFER_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|BUFFER_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|MAX_RETRIES_SETTING
argument_list|,
name|Repositories
operator|.
name|MAX_RETRIES_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|CHUNK_SIZE_SETTING
argument_list|)
operator|.
name|getGb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|COMPRESS_SETTING
argument_list|,
name|Repositories
operator|.
name|COMPRESS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|STORAGE_CLASS_SETTING
argument_list|,
name|Repositories
operator|.
name|STORAGE_CLASS_SETTING
argument_list|)
argument_list|,
name|isEmptyString
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CANNED_ACL_SETTING
argument_list|,
name|Repositories
operator|.
name|CANNED_ACL_SETTING
argument_list|)
argument_list|,
name|isEmptyString
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BASE_PATH_SETTING
argument_list|,
name|Repositories
operator|.
name|BASE_PATH_SETTING
argument_list|)
argument_list|,
name|isEmptyString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * We test when cloud.aws settings are overloaded by repositories.s3 settings      */
DECL|method|testRepositorySettingsGlobalOverloadedByRepositories
specifier|public
name|void
name|testRepositorySettingsGlobalOverloadedByRepositories
parameter_list|()
block|{
name|Settings
name|nodeSettings
init|=
name|buildSettings
argument_list|(
name|AWS
argument_list|,
name|REPOSITORIES
argument_list|)
decl_stmt|;
name|RepositorySettings
name|repositorySettings
init|=
operator|new
name|RepositorySettings
argument_list|(
name|nodeSettings
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|KEY_SETTING
argument_list|,
name|Repositories
operator|.
name|KEY_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-key"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SECRET_SETTING
argument_list|,
name|Repositories
operator|.
name|SECRET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-secret"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUCKET_SETTING
argument_list|,
name|Repositories
operator|.
name|BUCKET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-bucket"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|PROTOCOL_SETTING
argument_list|,
name|Repositories
operator|.
name|PROTOCOL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
name|Protocol
operator|.
name|HTTPS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|REGION_SETTING
argument_list|,
name|Repositories
operator|.
name|REGION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-region"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|ENDPOINT_SETTING
argument_list|,
name|Repositories
operator|.
name|ENDPOINT_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-endpoint"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_HOST_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-proxy-host"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PORT_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_USERNAME_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-proxy-username"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PASSWORD_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-proxy-password"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|SIGNER_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-signer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|,
name|Repositories
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUFFER_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|BUFFER_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|6L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|MAX_RETRIES_SETTING
argument_list|,
name|Repositories
operator|.
name|MAX_RETRIES_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|CHUNK_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|110L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|COMPRESS_SETTING
argument_list|,
name|Repositories
operator|.
name|COMPRESS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|STORAGE_CLASS_SETTING
argument_list|,
name|Repositories
operator|.
name|STORAGE_CLASS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CANNED_ACL_SETTING
argument_list|,
name|Repositories
operator|.
name|CANNED_ACL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-acl"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BASE_PATH_SETTING
argument_list|,
name|Repositories
operator|.
name|BASE_PATH_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-basepath"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * We test when cloud.aws.s3 settings are overloaded by repositories.s3 settings      */
DECL|method|testRepositorySettingsS3OverloadedByRepositories
specifier|public
name|void
name|testRepositorySettingsS3OverloadedByRepositories
parameter_list|()
block|{
name|Settings
name|nodeSettings
init|=
name|buildSettings
argument_list|(
name|AWS
argument_list|,
name|S3
argument_list|,
name|REPOSITORIES
argument_list|)
decl_stmt|;
name|RepositorySettings
name|repositorySettings
init|=
operator|new
name|RepositorySettings
argument_list|(
name|nodeSettings
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|KEY_SETTING
argument_list|,
name|Repositories
operator|.
name|KEY_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-key"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SECRET_SETTING
argument_list|,
name|Repositories
operator|.
name|SECRET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-secret"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUCKET_SETTING
argument_list|,
name|Repositories
operator|.
name|BUCKET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-bucket"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|PROTOCOL_SETTING
argument_list|,
name|Repositories
operator|.
name|PROTOCOL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
name|Protocol
operator|.
name|HTTPS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|REGION_SETTING
argument_list|,
name|Repositories
operator|.
name|REGION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-region"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|ENDPOINT_SETTING
argument_list|,
name|Repositories
operator|.
name|ENDPOINT_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-endpoint"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_HOST_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-host"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PORT_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|20000
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_USERNAME_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-username"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PASSWORD_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-password"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|SIGNER_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-signer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|,
name|Repositories
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUFFER_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|BUFFER_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|6L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|MAX_RETRIES_SETTING
argument_list|,
name|Repositories
operator|.
name|MAX_RETRIES_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|CHUNK_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|110L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|COMPRESS_SETTING
argument_list|,
name|Repositories
operator|.
name|COMPRESS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|STORAGE_CLASS_SETTING
argument_list|,
name|Repositories
operator|.
name|STORAGE_CLASS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CANNED_ACL_SETTING
argument_list|,
name|Repositories
operator|.
name|CANNED_ACL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-acl"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BASE_PATH_SETTING
argument_list|,
name|Repositories
operator|.
name|BASE_PATH_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repositories-basepath"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * We test when cloud.aws settings are overloaded by single repository settings      */
DECL|method|testRepositorySettingsGlobalOverloadedByRepository
specifier|public
name|void
name|testRepositorySettingsGlobalOverloadedByRepository
parameter_list|()
block|{
name|Settings
name|nodeSettings
init|=
name|buildSettings
argument_list|(
name|AWS
argument_list|)
decl_stmt|;
name|RepositorySettings
name|repositorySettings
init|=
operator|new
name|RepositorySettings
argument_list|(
name|nodeSettings
argument_list|,
name|REPOSITORY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|KEY_SETTING
argument_list|,
name|Repositories
operator|.
name|KEY_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-key"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SECRET_SETTING
argument_list|,
name|Repositories
operator|.
name|SECRET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-secret"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUCKET_SETTING
argument_list|,
name|Repositories
operator|.
name|BUCKET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-bucket"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|PROTOCOL_SETTING
argument_list|,
name|Repositories
operator|.
name|PROTOCOL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
name|Protocol
operator|.
name|HTTPS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|REGION_SETTING
argument_list|,
name|Repositories
operator|.
name|REGION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-region"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|ENDPOINT_SETTING
argument_list|,
name|Repositories
operator|.
name|ENDPOINT_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-endpoint"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_HOST_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-proxy-host"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PORT_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_USERNAME_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-proxy-username"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PASSWORD_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-proxy-password"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|SIGNER_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"global-signer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|,
name|Repositories
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUFFER_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|BUFFER_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|7L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|MAX_RETRIES_SETTING
argument_list|,
name|Repositories
operator|.
name|MAX_RETRIES_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|CHUNK_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|120L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|COMPRESS_SETTING
argument_list|,
name|Repositories
operator|.
name|COMPRESS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|STORAGE_CLASS_SETTING
argument_list|,
name|Repositories
operator|.
name|STORAGE_CLASS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CANNED_ACL_SETTING
argument_list|,
name|Repositories
operator|.
name|CANNED_ACL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-acl"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BASE_PATH_SETTING
argument_list|,
name|Repositories
operator|.
name|BASE_PATH_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-basepath"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * We test when cloud.aws.s3 settings are overloaded by single repository settings      */
DECL|method|testRepositorySettingsS3OverloadedByRepository
specifier|public
name|void
name|testRepositorySettingsS3OverloadedByRepository
parameter_list|()
block|{
name|Settings
name|nodeSettings
init|=
name|buildSettings
argument_list|(
name|AWS
argument_list|,
name|S3
argument_list|)
decl_stmt|;
name|RepositorySettings
name|repositorySettings
init|=
operator|new
name|RepositorySettings
argument_list|(
name|nodeSettings
argument_list|,
name|REPOSITORY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|KEY_SETTING
argument_list|,
name|Repositories
operator|.
name|KEY_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-key"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SECRET_SETTING
argument_list|,
name|Repositories
operator|.
name|SECRET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-secret"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUCKET_SETTING
argument_list|,
name|Repositories
operator|.
name|BUCKET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-bucket"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|PROTOCOL_SETTING
argument_list|,
name|Repositories
operator|.
name|PROTOCOL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
name|Protocol
operator|.
name|HTTPS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|REGION_SETTING
argument_list|,
name|Repositories
operator|.
name|REGION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-region"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|ENDPOINT_SETTING
argument_list|,
name|Repositories
operator|.
name|ENDPOINT_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-endpoint"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_HOST_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-host"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PORT_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|20000
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_USERNAME_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-username"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PASSWORD_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-password"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|SIGNER_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-signer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|,
name|Repositories
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUFFER_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|BUFFER_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|7L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|MAX_RETRIES_SETTING
argument_list|,
name|Repositories
operator|.
name|MAX_RETRIES_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|CHUNK_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|120L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|COMPRESS_SETTING
argument_list|,
name|Repositories
operator|.
name|COMPRESS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|STORAGE_CLASS_SETTING
argument_list|,
name|Repositories
operator|.
name|STORAGE_CLASS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CANNED_ACL_SETTING
argument_list|,
name|Repositories
operator|.
name|CANNED_ACL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-acl"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BASE_PATH_SETTING
argument_list|,
name|Repositories
operator|.
name|BASE_PATH_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-basepath"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * We test when repositories settings are overloaded by single repository settings      */
DECL|method|testRepositorySettingsRepositoriesOverloadedByRepository
specifier|public
name|void
name|testRepositorySettingsRepositoriesOverloadedByRepository
parameter_list|()
block|{
name|Settings
name|nodeSettings
init|=
name|buildSettings
argument_list|(
name|AWS
argument_list|,
name|S3
argument_list|,
name|REPOSITORIES
argument_list|)
decl_stmt|;
name|RepositorySettings
name|repositorySettings
init|=
operator|new
name|RepositorySettings
argument_list|(
name|nodeSettings
argument_list|,
name|REPOSITORY
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|KEY_SETTING
argument_list|,
name|Repositories
operator|.
name|KEY_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-key"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SECRET_SETTING
argument_list|,
name|Repositories
operator|.
name|SECRET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-secret"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUCKET_SETTING
argument_list|,
name|Repositories
operator|.
name|BUCKET_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-bucket"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|PROTOCOL_SETTING
argument_list|,
name|Repositories
operator|.
name|PROTOCOL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
name|Protocol
operator|.
name|HTTPS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|REGION_SETTING
argument_list|,
name|Repositories
operator|.
name|REGION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-region"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|ENDPOINT_SETTING
argument_list|,
name|Repositories
operator|.
name|ENDPOINT_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-endpoint"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_HOST_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-host"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PORT_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|20000
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_USERNAME_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-username"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|PROXY_PASSWORD_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-proxy-password"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|AwsS3Service
operator|.
name|CLOUD_S3
operator|.
name|SIGNER_SETTING
operator|.
name|get
argument_list|(
name|nodeSettings
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"s3-signer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|,
name|Repositories
operator|.
name|SERVER_SIDE_ENCRYPTION_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BUFFER_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|BUFFER_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|7L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|MAX_RETRIES_SETTING
argument_list|,
name|Repositories
operator|.
name|MAX_RETRIES_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
argument_list|,
name|Repositories
operator|.
name|CHUNK_SIZE_SETTING
argument_list|)
operator|.
name|getMb
argument_list|()
argument_list|,
name|is
argument_list|(
literal|120L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|COMPRESS_SETTING
argument_list|,
name|Repositories
operator|.
name|COMPRESS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|STORAGE_CLASS_SETTING
argument_list|,
name|Repositories
operator|.
name|STORAGE_CLASS_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|CANNED_ACL_SETTING
argument_list|,
name|Repositories
operator|.
name|CANNED_ACL_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-acl"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getValue
argument_list|(
name|repositorySettings
argument_list|,
name|Repository
operator|.
name|BASE_PATH_SETTING
argument_list|,
name|Repositories
operator|.
name|BASE_PATH_SETTING
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"repository-basepath"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * We test wrong Chunk and Buffer settings      */
DECL|method|testInvalidChunkBufferSizeRepositorySettings
specifier|public
name|void
name|testInvalidChunkBufferSizeRepositorySettings
parameter_list|()
throws|throws
name|IOException
block|{
comment|// chunk< buffer should fail
name|internalTestInvalidChunkBufferSizeSettings
argument_list|(
operator|new
name|ByteSizeValue
argument_list|(
literal|10
argument_list|,
name|ByteSizeUnit
operator|.
name|MB
argument_list|)
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
literal|5
argument_list|,
name|ByteSizeUnit
operator|.
name|MB
argument_list|)
argument_list|,
literal|"chunk_size (5mb) can't be lower than buffer_size (10mb)."
argument_list|)
expr_stmt|;
comment|// chunk> buffer should pass
name|internalTestInvalidChunkBufferSizeSettings
argument_list|(
operator|new
name|ByteSizeValue
argument_list|(
literal|5
argument_list|,
name|ByteSizeUnit
operator|.
name|MB
argument_list|)
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
literal|10
argument_list|,
name|ByteSizeUnit
operator|.
name|MB
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// chunk = buffer should pass
name|internalTestInvalidChunkBufferSizeSettings
argument_list|(
operator|new
name|ByteSizeValue
argument_list|(
literal|5
argument_list|,
name|ByteSizeUnit
operator|.
name|MB
argument_list|)
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
literal|5
argument_list|,
name|ByteSizeUnit
operator|.
name|MB
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// buffer< 5mb should fail
name|internalTestInvalidChunkBufferSizeSettings
argument_list|(
operator|new
name|ByteSizeValue
argument_list|(
literal|4
argument_list|,
name|ByteSizeUnit
operator|.
name|MB
argument_list|)
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
literal|10
argument_list|,
name|ByteSizeUnit
operator|.
name|MB
argument_list|)
argument_list|,
literal|"Failed to parse value [4mb] for setting [buffer_size] must be>= 5mb"
argument_list|)
expr_stmt|;
comment|// chunk> 5tb should fail
name|internalTestInvalidChunkBufferSizeSettings
argument_list|(
operator|new
name|ByteSizeValue
argument_list|(
literal|5
argument_list|,
name|ByteSizeUnit
operator|.
name|MB
argument_list|)
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
literal|6
argument_list|,
name|ByteSizeUnit
operator|.
name|TB
argument_list|)
argument_list|,
literal|"Failed to parse value [6tb] for setting [chunk_size] must be<= 5tb"
argument_list|)
expr_stmt|;
block|}
DECL|method|buildSettings
specifier|private
name|Settings
name|buildSettings
parameter_list|(
name|Settings
modifier|...
name|global
parameter_list|)
block|{
name|Settings
operator|.
name|Builder
name|builder
init|=
name|Settings
operator|.
name|builder
argument_list|()
decl_stmt|;
for|for
control|(
name|Settings
name|settings
range|:
name|global
control|)
block|{
name|builder
operator|.
name|put
argument_list|(
name|settings
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|internalTestInvalidChunkBufferSizeSettings
specifier|private
name|void
name|internalTestInvalidChunkBufferSizeSettings
parameter_list|(
name|ByteSizeValue
name|buffer
parameter_list|,
name|ByteSizeValue
name|chunk
parameter_list|,
name|String
name|expectedMessage
parameter_list|)
throws|throws
name|IOException
block|{
name|Settings
name|nodeSettings
init|=
name|buildSettings
argument_list|(
name|AWS
argument_list|,
name|S3
argument_list|,
name|REPOSITORIES
argument_list|)
decl_stmt|;
name|RepositorySettings
name|s3RepositorySettings
init|=
operator|new
name|RepositorySettings
argument_list|(
name|nodeSettings
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|BUFFER_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|buffer
argument_list|)
operator|.
name|put
argument_list|(
name|Repository
operator|.
name|CHUNK_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|chunk
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
operator|new
name|S3Repository
argument_list|(
operator|new
name|RepositoryName
argument_list|(
literal|"s3"
argument_list|,
literal|"s3repo"
argument_list|)
argument_list|,
name|s3RepositorySettings
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"We should either raise a NPE or a RepositoryException or a IllegalArgumentException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
operator|.
name|getDetailedMessage
argument_list|()
argument_list|,
name|containsString
argument_list|(
name|expectedMessage
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|containsString
argument_list|(
name|expectedMessage
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
name|e
parameter_list|)
block|{
comment|// Because we passed to the CTOR a Null AwsS3Service, we get a NPE which is expected
comment|// in the context of this test
if|if
condition|(
name|expectedMessage
operator|!=
literal|null
condition|)
block|{
name|fail
argument_list|(
literal|"We should have raised a RepositoryException"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

