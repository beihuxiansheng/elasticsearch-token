begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cloud.azure.management
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|management
package|;
end_package

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|core
operator|.
name|utils
operator|.
name|KeyStoreType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|management
operator|.
name|compute
operator|.
name|ComputeManagementClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|management
operator|.
name|compute
operator|.
name|ComputeManagementService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|management
operator|.
name|compute
operator|.
name|models
operator|.
name|HostedServiceGetDetailedResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|management
operator|.
name|configuration
operator|.
name|ManagementConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|AzureServiceDisableException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|AzureServiceRemoteException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|component
operator|.
name|AbstractLifecycleComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cloud
operator|.
name|azure
operator|.
name|management
operator|.
name|AzureComputeService
operator|.
name|Management
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|AzureComputeServiceImpl
specifier|public
class|class
name|AzureComputeServiceImpl
extends|extends
name|AbstractLifecycleComponent
argument_list|<
name|AzureComputeServiceImpl
argument_list|>
implements|implements
name|AzureComputeService
block|{
DECL|class|Azure
specifier|static
specifier|final
class|class
name|Azure
block|{
DECL|field|ENDPOINT
specifier|private
specifier|static
specifier|final
name|String
name|ENDPOINT
init|=
literal|"https://management.core.windows.net/"
decl_stmt|;
block|}
DECL|field|computeManagementClient
specifier|private
specifier|final
name|ComputeManagementClient
name|computeManagementClient
decl_stmt|;
DECL|field|serviceName
specifier|private
specifier|final
name|String
name|serviceName
decl_stmt|;
annotation|@
name|Inject
DECL|method|AzureComputeServiceImpl
specifier|public
name|AzureComputeServiceImpl
parameter_list|(
name|Settings
name|settings
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|String
name|subscriptionId
init|=
name|settings
operator|.
name|get
argument_list|(
name|SUBSCRIPTION_ID
argument_list|)
decl_stmt|;
name|serviceName
operator|=
name|settings
operator|.
name|get
argument_list|(
name|Management
operator|.
name|SERVICE_NAME
argument_list|)
expr_stmt|;
name|String
name|keystorePath
init|=
name|settings
operator|.
name|get
argument_list|(
name|KEYSTORE_PATH
argument_list|)
decl_stmt|;
name|String
name|keystorePassword
init|=
name|settings
operator|.
name|get
argument_list|(
name|KEYSTORE_PASSWORD
argument_list|)
decl_stmt|;
name|String
name|strKeyStoreType
init|=
name|settings
operator|.
name|get
argument_list|(
name|KEYSTORE_TYPE
argument_list|,
name|KeyStoreType
operator|.
name|pkcs12
operator|.
name|name
argument_list|()
argument_list|)
decl_stmt|;
name|KeyStoreType
name|tmpKeyStoreType
init|=
name|KeyStoreType
operator|.
name|pkcs12
decl_stmt|;
try|try
block|{
name|tmpKeyStoreType
operator|=
name|KeyStoreType
operator|.
name|fromString
argument_list|(
name|strKeyStoreType
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"wrong value for [{}]: [{}]. falling back to [{}]..."
argument_list|,
name|KEYSTORE_TYPE
argument_list|,
name|strKeyStoreType
argument_list|,
name|KeyStoreType
operator|.
name|pkcs12
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|KeyStoreType
name|keystoreType
init|=
name|tmpKeyStoreType
decl_stmt|;
comment|// Check that we have all needed properties
name|Configuration
name|configuration
decl_stmt|;
try|try
block|{
name|configuration
operator|=
name|ManagementConfiguration
operator|.
name|configure
argument_list|(
operator|new
name|URI
argument_list|(
name|Azure
operator|.
name|ENDPOINT
argument_list|)
argument_list|,
name|subscriptionId
argument_list|,
name|keystorePath
argument_list|,
name|keystorePassword
argument_list|,
name|keystoreType
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
decl||
name|URISyntaxException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"can not start azure client: {}"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|computeManagementClient
operator|=
literal|null
expr_stmt|;
return|return;
block|}
name|logger
operator|.
name|trace
argument_list|(
literal|"creating new Azure client for [{}], [{}]"
argument_list|,
name|subscriptionId
argument_list|,
name|serviceName
argument_list|)
expr_stmt|;
name|computeManagementClient
operator|=
name|ComputeManagementService
operator|.
name|create
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getServiceDetails
specifier|public
name|HostedServiceGetDetailedResponse
name|getServiceDetails
parameter_list|()
block|{
if|if
condition|(
name|computeManagementClient
operator|==
literal|null
condition|)
block|{
comment|// Azure plugin is disabled
throw|throw
operator|new
name|AzureServiceDisableException
argument_list|(
literal|"azure plugin is disabled."
argument_list|)
throw|;
block|}
try|try
block|{
return|return
name|computeManagementClient
operator|.
name|getHostedServicesOperations
argument_list|()
operator|.
name|getDetailed
argument_list|(
name|serviceName
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|AzureServiceRemoteException
argument_list|(
literal|"can not get list of azure nodes"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|doStart
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|ElasticsearchException
block|{     }
annotation|@
name|Override
DECL|method|doStop
specifier|protected
name|void
name|doStop
parameter_list|()
throws|throws
name|ElasticsearchException
block|{     }
annotation|@
name|Override
DECL|method|doClose
specifier|protected
name|void
name|doClose
parameter_list|()
throws|throws
name|ElasticsearchException
block|{
if|if
condition|(
name|computeManagementClient
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|computeManagementClient
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"error while closing Azure client"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

