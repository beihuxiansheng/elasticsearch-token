begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.validate
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|validate
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|validate
operator|.
name|template
operator|.
name|RenderSearchTemplateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptService
operator|.
name|ScriptType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|Template
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|mustache
operator|.
name|MustacheScriptEngineService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
operator|.
name|settingsBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_class
annotation|@
name|ESIntegTestCase
operator|.
name|SuiteScopeTestCase
DECL|class|RenderSearchTemplateIT
specifier|public
class|class
name|RenderSearchTemplateIT
extends|extends
name|ESIntegTestCase
block|{
DECL|field|TEMPLATE_CONTENTS
specifier|private
specifier|static
specifier|final
name|String
name|TEMPLATE_CONTENTS
init|=
literal|"{\"size\":\"{{size}}\",\"query\":{\"match\":{\"foo\":\"{{value}}\"}},\"aggs\":{\"objects\":{\"terms\":{\"field\":\"{{value}}\",\"size\":\"{{size}}\"}}}}"
decl_stmt|;
annotation|@
name|Override
DECL|method|setupSuiteScopeCluster
specifier|protected
name|void
name|setupSuiteScopeCluster
parameter_list|()
throws|throws
name|Exception
block|{
name|client
argument_list|()
operator|.
name|preparePutIndexedScript
argument_list|(
name|MustacheScriptEngineService
operator|.
name|NAME
argument_list|,
literal|"index_template_1"
argument_list|,
literal|"{ \"template\": "
operator|+
name|TEMPLATE_CONTENTS
operator|+
literal|" }"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|nodeSettings
specifier|public
name|Settings
name|nodeSettings
parameter_list|(
name|int
name|nodeOrdinal
parameter_list|)
block|{
comment|//Set path so ScriptService will pick up the test scripts
return|return
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|super
operator|.
name|nodeSettings
argument_list|(
name|nodeOrdinal
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"path.conf"
argument_list|,
name|this
operator|.
name|getDataPath
argument_list|(
literal|"config"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|testInlineTemplate
specifier|public
name|void
name|testInlineTemplate
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"value"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"size"
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Template
name|template
init|=
operator|new
name|Template
argument_list|(
name|TEMPLATE_CONTENTS
argument_list|,
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|MustacheScriptEngineService
operator|.
name|NAME
argument_list|,
name|XContentType
operator|.
name|JSON
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|RenderSearchTemplateResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRenderSearchTemplate
argument_list|()
operator|.
name|template
argument_list|(
name|template
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|BytesReference
name|source
init|=
name|response
operator|.
name|source
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|source
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sourceAsMap
init|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
name|source
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|sourceAsMap
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
name|TEMPLATE_CONTENTS
operator|.
name|replace
argument_list|(
literal|"{{value}}"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"{{size}}"
argument_list|,
literal|"20"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|expectedMap
init|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|expected
argument_list|)
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|sourceAsMap
argument_list|,
name|equalTo
argument_list|(
name|expectedMap
argument_list|)
argument_list|)
expr_stmt|;
name|params
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"value"
argument_list|,
literal|"baz"
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"size"
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|template
operator|=
operator|new
name|Template
argument_list|(
name|TEMPLATE_CONTENTS
argument_list|,
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|MustacheScriptEngineService
operator|.
name|NAME
argument_list|,
name|XContentType
operator|.
name|JSON
argument_list|,
name|params
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRenderSearchTemplate
argument_list|()
operator|.
name|template
argument_list|(
name|template
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|source
operator|=
name|response
operator|.
name|source
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|source
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|sourceAsMap
operator|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
name|source
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
expr_stmt|;
name|expected
operator|=
name|TEMPLATE_CONTENTS
operator|.
name|replace
argument_list|(
literal|"{{value}}"
argument_list|,
literal|"baz"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"{{size}}"
argument_list|,
literal|"100"
argument_list|)
expr_stmt|;
name|expectedMap
operator|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|expected
argument_list|)
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sourceAsMap
argument_list|,
name|equalTo
argument_list|(
name|expectedMap
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testIndexedTemplate
specifier|public
name|void
name|testIndexedTemplate
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"value"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"size"
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Template
name|template
init|=
operator|new
name|Template
argument_list|(
literal|"index_template_1"
argument_list|,
name|ScriptType
operator|.
name|INDEXED
argument_list|,
name|MustacheScriptEngineService
operator|.
name|NAME
argument_list|,
name|XContentType
operator|.
name|JSON
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|RenderSearchTemplateResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRenderSearchTemplate
argument_list|()
operator|.
name|template
argument_list|(
name|template
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|BytesReference
name|source
init|=
name|response
operator|.
name|source
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|source
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sourceAsMap
init|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
name|source
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|sourceAsMap
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
name|TEMPLATE_CONTENTS
operator|.
name|replace
argument_list|(
literal|"{{value}}"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"{{size}}"
argument_list|,
literal|"20"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|expectedMap
init|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|expected
argument_list|)
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|sourceAsMap
argument_list|,
name|equalTo
argument_list|(
name|expectedMap
argument_list|)
argument_list|)
expr_stmt|;
name|params
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"value"
argument_list|,
literal|"baz"
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"size"
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|template
operator|=
operator|new
name|Template
argument_list|(
literal|"index_template_1"
argument_list|,
name|ScriptType
operator|.
name|INDEXED
argument_list|,
name|MustacheScriptEngineService
operator|.
name|NAME
argument_list|,
name|XContentType
operator|.
name|JSON
argument_list|,
name|params
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRenderSearchTemplate
argument_list|()
operator|.
name|template
argument_list|(
name|template
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|source
operator|=
name|response
operator|.
name|source
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|source
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|sourceAsMap
operator|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
name|source
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
expr_stmt|;
name|expected
operator|=
name|TEMPLATE_CONTENTS
operator|.
name|replace
argument_list|(
literal|"{{value}}"
argument_list|,
literal|"baz"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"{{size}}"
argument_list|,
literal|"100"
argument_list|)
expr_stmt|;
name|expectedMap
operator|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|expected
argument_list|)
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sourceAsMap
argument_list|,
name|equalTo
argument_list|(
name|expectedMap
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testFileTemplate
specifier|public
name|void
name|testFileTemplate
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"value"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"size"
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Template
name|template
init|=
operator|new
name|Template
argument_list|(
literal|"file_template_1"
argument_list|,
name|ScriptType
operator|.
name|FILE
argument_list|,
name|MustacheScriptEngineService
operator|.
name|NAME
argument_list|,
name|XContentType
operator|.
name|JSON
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|RenderSearchTemplateResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRenderSearchTemplate
argument_list|()
operator|.
name|template
argument_list|(
name|template
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|BytesReference
name|source
init|=
name|response
operator|.
name|source
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|source
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sourceAsMap
init|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
name|source
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|sourceAsMap
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
name|TEMPLATE_CONTENTS
operator|.
name|replace
argument_list|(
literal|"{{value}}"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"{{size}}"
argument_list|,
literal|"20"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|expectedMap
init|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|expected
argument_list|)
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|sourceAsMap
argument_list|,
name|equalTo
argument_list|(
name|expectedMap
argument_list|)
argument_list|)
expr_stmt|;
name|params
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"value"
argument_list|,
literal|"baz"
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"size"
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|template
operator|=
operator|new
name|Template
argument_list|(
literal|"file_template_1"
argument_list|,
name|ScriptType
operator|.
name|FILE
argument_list|,
name|MustacheScriptEngineService
operator|.
name|NAME
argument_list|,
name|XContentType
operator|.
name|JSON
argument_list|,
name|params
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRenderSearchTemplate
argument_list|()
operator|.
name|template
argument_list|(
name|template
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|source
operator|=
name|response
operator|.
name|source
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|source
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|sourceAsMap
operator|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
name|source
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
expr_stmt|;
name|expected
operator|=
name|TEMPLATE_CONTENTS
operator|.
name|replace
argument_list|(
literal|"{{value}}"
argument_list|,
literal|"baz"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"{{size}}"
argument_list|,
literal|"100"
argument_list|)
expr_stmt|;
name|expectedMap
operator|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
operator|new
name|BytesArray
argument_list|(
name|expected
argument_list|)
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sourceAsMap
argument_list|,
name|equalTo
argument_list|(
name|expectedMap
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

