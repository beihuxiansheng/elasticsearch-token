begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.rest.action
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|BytesRestResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|FakeRestChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|FakeRestRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportResponse
operator|.
name|Empty
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicReference
import|;
end_import

begin_class
DECL|class|RestBuilderListenerTests
specifier|public
class|class
name|RestBuilderListenerTests
extends|extends
name|ESTestCase
block|{
DECL|method|testXContentBuilderClosedInBuildResponse
specifier|public
name|void
name|testXContentBuilderClosedInBuildResponse
parameter_list|()
throws|throws
name|Exception
block|{
name|AtomicReference
argument_list|<
name|XContentBuilder
argument_list|>
name|builderAtomicReference
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|RestBuilderListener
argument_list|<
name|TransportResponse
operator|.
name|Empty
argument_list|>
name|builderListener
init|=
operator|new
name|RestBuilderListener
argument_list|<
name|Empty
argument_list|>
argument_list|(
operator|new
name|FakeRestChannel
argument_list|(
operator|new
name|FakeRestRequest
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|RestResponse
name|buildResponse
parameter_list|(
name|Empty
name|empty
parameter_list|,
name|XContentBuilder
name|builder
parameter_list|)
throws|throws
name|Exception
block|{
name|builderAtomicReference
operator|.
name|set
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|builder
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
operator|new
name|BytesRestResponse
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|BytesRestResponse
operator|.
name|TEXT_CONTENT_TYPE
argument_list|,
name|BytesArray
operator|.
name|EMPTY
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|builderListener
operator|.
name|buildResponse
argument_list|(
name|Empty
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|builderAtomicReference
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|builderAtomicReference
operator|.
name|get
argument_list|()
operator|.
name|generator
argument_list|()
operator|.
name|isClosed
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testXContentBuilderNotClosedInBuildResponseAssertionsDisabled
specifier|public
name|void
name|testXContentBuilderNotClosedInBuildResponseAssertionsDisabled
parameter_list|()
throws|throws
name|Exception
block|{
name|AtomicReference
argument_list|<
name|XContentBuilder
argument_list|>
name|builderAtomicReference
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|RestBuilderListener
argument_list|<
name|TransportResponse
operator|.
name|Empty
argument_list|>
name|builderListener
init|=
operator|new
name|RestBuilderListener
argument_list|<
name|Empty
argument_list|>
argument_list|(
operator|new
name|FakeRestChannel
argument_list|(
operator|new
name|FakeRestRequest
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|RestResponse
name|buildResponse
parameter_list|(
name|Empty
name|empty
parameter_list|,
name|XContentBuilder
name|builder
parameter_list|)
throws|throws
name|Exception
block|{
name|builderAtomicReference
operator|.
name|set
argument_list|(
name|builder
argument_list|)
expr_stmt|;
return|return
operator|new
name|BytesRestResponse
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|BytesRestResponse
operator|.
name|TEXT_CONTENT_TYPE
argument_list|,
name|BytesArray
operator|.
name|EMPTY
argument_list|)
return|;
block|}
annotation|@
name|Override
name|boolean
name|assertBuilderClosed
parameter_list|(
name|XContentBuilder
name|xContentBuilder
parameter_list|)
block|{
comment|// don't check the actual builder being closed so we can test auto close
return|return
literal|true
return|;
block|}
block|}
decl_stmt|;
name|builderListener
operator|.
name|buildResponse
argument_list|(
name|Empty
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|builderAtomicReference
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|builderAtomicReference
operator|.
name|get
argument_list|()
operator|.
name|generator
argument_list|()
operator|.
name|isClosed
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testXContentBuilderNotClosedInBuildResponseAssertionsEnabled
specifier|public
name|void
name|testXContentBuilderNotClosedInBuildResponseAssertionsEnabled
parameter_list|()
throws|throws
name|Exception
block|{
name|assumeTrue
argument_list|(
literal|"tests are not being run with assertions"
argument_list|,
name|RestBuilderListener
operator|.
name|class
operator|.
name|desiredAssertionStatus
argument_list|()
argument_list|)
expr_stmt|;
name|RestBuilderListener
argument_list|<
name|TransportResponse
operator|.
name|Empty
argument_list|>
name|builderListener
init|=
operator|new
name|RestBuilderListener
argument_list|<
name|Empty
argument_list|>
argument_list|(
operator|new
name|FakeRestChannel
argument_list|(
operator|new
name|FakeRestRequest
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|RestResponse
name|buildResponse
parameter_list|(
name|Empty
name|empty
parameter_list|,
name|XContentBuilder
name|builder
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|BytesRestResponse
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|BytesRestResponse
operator|.
name|TEXT_CONTENT_TYPE
argument_list|,
name|BytesArray
operator|.
name|EMPTY
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|AssertionError
name|error
init|=
name|expectThrows
argument_list|(
name|AssertionError
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|builderListener
operator|.
name|buildResponse
argument_list|(
name|Empty
operator|.
name|INSTANCE
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"callers should ensure the XContentBuilder is closed themselves"
argument_list|,
name|error
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

