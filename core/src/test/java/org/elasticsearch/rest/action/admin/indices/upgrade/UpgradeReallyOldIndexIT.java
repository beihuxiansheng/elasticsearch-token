begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.rest.action.admin.indices.upgrade
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|upgrade
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|bwcompat
operator|.
name|StaticIndexBackwardCompatibilityIT
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|IndicesService
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertNoFailures
import|;
end_import

begin_class
DECL|class|UpgradeReallyOldIndexIT
specifier|public
class|class
name|UpgradeReallyOldIndexIT
extends|extends
name|StaticIndexBackwardCompatibilityIT
block|{
DECL|method|testUpgrade_0_90_6
specifier|public
name|void
name|testUpgrade_0_90_6
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|indexName
init|=
literal|"index-0.90.6"
decl_stmt|;
name|loadIndex
argument_list|(
name|indexName
argument_list|)
expr_stmt|;
name|assertMinVersion
argument_list|(
name|indexName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|parse
argument_list|(
literal|"4.5.1"
argument_list|)
argument_list|)
expr_stmt|;
name|UpgradeIT
operator|.
name|assertNotUpgraded
argument_list|(
name|client
argument_list|()
argument_list|,
name|indexName
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|UpgradeIT
operator|.
name|hasAncientSegments
argument_list|(
name|client
argument_list|()
argument_list|,
name|indexName
argument_list|)
argument_list|)
expr_stmt|;
name|assertNoFailures
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareUpgrade
argument_list|(
name|indexName
argument_list|)
operator|.
name|setUpgradeOnlyAncientSegments
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|UpgradeIT
operator|.
name|hasAncientSegments
argument_list|(
name|client
argument_list|()
argument_list|,
literal|"index-0.90.6"
argument_list|)
argument_list|)
expr_stmt|;
comment|// This index has only ancient segments, so it should now be fully upgraded:
name|UpgradeIT
operator|.
name|assertUpgraded
argument_list|(
name|client
argument_list|()
argument_list|,
name|indexName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Version
operator|.
name|CURRENT
operator|.
name|luceneVersion
operator|.
name|toString
argument_list|()
argument_list|,
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareGetSettings
argument_list|(
name|indexName
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getSetting
argument_list|(
name|indexName
argument_list|,
name|IndexMetaData
operator|.
name|SETTING_VERSION_MINIMUM_COMPATIBLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertMinVersion
argument_list|(
name|indexName
argument_list|,
name|Version
operator|.
name|CURRENT
operator|.
name|luceneVersion
argument_list|)
expr_stmt|;
block|}
DECL|method|assertMinVersion
specifier|private
name|void
name|assertMinVersion
parameter_list|(
name|String
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
name|version
parameter_list|)
block|{
for|for
control|(
name|IndicesService
name|services
range|:
name|internalCluster
argument_list|()
operator|.
name|getInstances
argument_list|(
name|IndicesService
operator|.
name|class
argument_list|)
control|)
block|{
name|IndexService
name|indexService
init|=
name|services
operator|.
name|indexService
argument_list|(
name|index
argument_list|)
decl_stmt|;
if|if
condition|(
name|indexService
operator|!=
literal|null
condition|)
block|{
name|assertEquals
argument_list|(
name|version
argument_list|,
name|indexService
operator|.
name|shard
argument_list|(
literal|0
argument_list|)
operator|.
name|minimumCompatibleVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

