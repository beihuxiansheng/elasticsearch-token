begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.monitor.jvm
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|jvm
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verifyNoMoreInteractions
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|JvmGcMonitorServiceTests
specifier|public
class|class
name|JvmGcMonitorServiceTests
extends|extends
name|ESTestCase
block|{
DECL|method|testSlowGcLogging
specifier|public
name|void
name|testSlowGcLogging
parameter_list|()
block|{
specifier|final
name|Logger
name|logger
init|=
name|mock
argument_list|(
name|Logger
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|logger
operator|.
name|isWarnEnabled
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|logger
operator|.
name|isInfoEnabled
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|logger
operator|.
name|isDebugEnabled
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|JvmGcMonitorService
operator|.
name|JvmMonitor
operator|.
name|Threshold
name|threshold
init|=
name|randomFrom
argument_list|(
name|JvmGcMonitorService
operator|.
name|JvmMonitor
operator|.
name|Threshold
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
name|name
init|=
name|randomAlphaOfLength
argument_list|(
literal|16
argument_list|)
decl_stmt|;
specifier|final
name|long
name|seq
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1
operator|<<
literal|30
argument_list|)
decl_stmt|;
specifier|final
name|int
name|elapsedValue
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1
operator|<<
literal|10
argument_list|)
decl_stmt|;
specifier|final
name|long
name|totalCollectionCount
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|16
argument_list|)
decl_stmt|;
specifier|final
name|long
name|currentCollectionCount
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|16
argument_list|)
decl_stmt|;
specifier|final
name|TimeValue
name|totalCollectionTime
init|=
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
name|elapsedValue
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|TimeValue
name|currentCollectionTime
init|=
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
name|elapsedValue
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|ByteSizeValue
name|lastHeapUsed
init|=
operator|new
name|ByteSizeValue
argument_list|(
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1
operator|<<
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|JvmStats
name|lastJvmStats
init|=
name|mock
argument_list|(
name|JvmStats
operator|.
name|class
argument_list|)
decl_stmt|;
name|JvmStats
operator|.
name|Mem
name|lastMem
init|=
name|mock
argument_list|(
name|JvmStats
operator|.
name|Mem
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|lastMem
operator|.
name|getHeapUsed
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|lastHeapUsed
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|lastJvmStats
operator|.
name|getMem
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|lastMem
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|lastJvmStats
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"last"
argument_list|)
expr_stmt|;
specifier|final
name|ByteSizeValue
name|currentHeapUsed
init|=
operator|new
name|ByteSizeValue
argument_list|(
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1
operator|<<
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|JvmStats
name|currentJvmStats
init|=
name|mock
argument_list|(
name|JvmStats
operator|.
name|class
argument_list|)
decl_stmt|;
name|JvmStats
operator|.
name|Mem
name|currentMem
init|=
name|mock
argument_list|(
name|JvmStats
operator|.
name|Mem
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|currentMem
operator|.
name|getHeapUsed
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|currentHeapUsed
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|currentJvmStats
operator|.
name|getMem
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|currentMem
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|currentJvmStats
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"current"
argument_list|)
expr_stmt|;
name|JvmStats
operator|.
name|GarbageCollector
name|gc
init|=
name|mock
argument_list|(
name|JvmStats
operator|.
name|GarbageCollector
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|gc
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|gc
operator|.
name|getCollectionCount
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|totalCollectionCount
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|gc
operator|.
name|getCollectionTime
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|totalCollectionTime
argument_list|)
expr_stmt|;
specifier|final
name|ByteSizeValue
name|maxHeapUsed
init|=
operator|new
name|ByteSizeValue
argument_list|(
name|Math
operator|.
name|max
argument_list|(
name|lastHeapUsed
operator|.
name|getBytes
argument_list|()
argument_list|,
name|currentHeapUsed
operator|.
name|getBytes
argument_list|()
argument_list|)
operator|+
literal|1
operator|<<
literal|10
argument_list|)
decl_stmt|;
name|JvmGcMonitorService
operator|.
name|JvmMonitor
operator|.
name|SlowGcEvent
name|slowGcEvent
init|=
operator|new
name|JvmGcMonitorService
operator|.
name|JvmMonitor
operator|.
name|SlowGcEvent
argument_list|(
name|gc
argument_list|,
name|currentCollectionCount
argument_list|,
name|currentCollectionTime
argument_list|,
name|elapsedValue
argument_list|,
name|lastJvmStats
argument_list|,
name|currentJvmStats
argument_list|,
name|maxHeapUsed
argument_list|)
decl_stmt|;
name|JvmGcMonitorService
operator|.
name|logSlowGc
argument_list|(
name|logger
argument_list|,
name|threshold
argument_list|,
name|seq
argument_list|,
name|slowGcEvent
argument_list|,
parameter_list|(
name|l
parameter_list|,
name|c
parameter_list|)
lambda|->
name|l
operator|.
name|toString
argument_list|()
operator|+
literal|", "
operator|+
name|c
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|threshold
condition|)
block|{
case|case
name|WARN
case|:
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|isWarnEnabled
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|warn
argument_list|(
literal|"[gc][{}][{}][{}] duration [{}], collections [{}]/[{}], total [{}]/[{}], memory [{}]->[{}]/[{}], all_pools {}"
argument_list|,
name|name
argument_list|,
name|seq
argument_list|,
name|totalCollectionCount
argument_list|,
name|currentCollectionTime
argument_list|,
name|currentCollectionCount
argument_list|,
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|elapsedValue
argument_list|)
argument_list|,
name|currentCollectionTime
argument_list|,
name|totalCollectionTime
argument_list|,
name|lastHeapUsed
argument_list|,
name|currentHeapUsed
argument_list|,
name|maxHeapUsed
argument_list|,
literal|"last, current"
argument_list|)
expr_stmt|;
break|break;
case|case
name|INFO
case|:
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|isInfoEnabled
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|info
argument_list|(
literal|"[gc][{}][{}][{}] duration [{}], collections [{}]/[{}], total [{}]/[{}], memory [{}]->[{}]/[{}], all_pools {}"
argument_list|,
name|name
argument_list|,
name|seq
argument_list|,
name|totalCollectionCount
argument_list|,
name|currentCollectionTime
argument_list|,
name|currentCollectionCount
argument_list|,
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|elapsedValue
argument_list|)
argument_list|,
name|currentCollectionTime
argument_list|,
name|totalCollectionTime
argument_list|,
name|lastHeapUsed
argument_list|,
name|currentHeapUsed
argument_list|,
name|maxHeapUsed
argument_list|,
literal|"last, current"
argument_list|)
expr_stmt|;
break|break;
case|case
name|DEBUG
case|:
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|isDebugEnabled
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|debug
argument_list|(
literal|"[gc][{}][{}][{}] duration [{}], collections [{}]/[{}], total [{}]/[{}], memory [{}]->[{}]/[{}], all_pools {}"
argument_list|,
name|name
argument_list|,
name|seq
argument_list|,
name|totalCollectionCount
argument_list|,
name|currentCollectionTime
argument_list|,
name|currentCollectionCount
argument_list|,
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|elapsedValue
argument_list|)
argument_list|,
name|currentCollectionTime
argument_list|,
name|totalCollectionTime
argument_list|,
name|lastHeapUsed
argument_list|,
name|currentHeapUsed
argument_list|,
name|maxHeapUsed
argument_list|,
literal|"last, current"
argument_list|)
expr_stmt|;
break|break;
block|}
name|verifyNoMoreInteractions
argument_list|(
name|logger
argument_list|)
expr_stmt|;
block|}
DECL|method|testGcOverheadLogging
specifier|public
name|void
name|testGcOverheadLogging
parameter_list|()
block|{
specifier|final
name|JvmGcMonitorService
operator|.
name|JvmMonitor
operator|.
name|Threshold
name|threshold
init|=
name|randomFrom
argument_list|(
name|JvmGcMonitorService
operator|.
name|JvmMonitor
operator|.
name|Threshold
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|int
name|current
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
specifier|final
name|long
name|elapsed
init|=
name|randomIntBetween
argument_list|(
name|current
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
specifier|final
name|long
name|seq
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
specifier|final
name|Logger
name|logger
init|=
name|mock
argument_list|(
name|Logger
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|logger
operator|.
name|isWarnEnabled
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|logger
operator|.
name|isInfoEnabled
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|logger
operator|.
name|isDebugEnabled
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|JvmGcMonitorService
operator|.
name|logGcOverhead
argument_list|(
name|logger
argument_list|,
name|threshold
argument_list|,
name|current
argument_list|,
name|elapsed
argument_list|,
name|seq
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|threshold
condition|)
block|{
case|case
name|WARN
case|:
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|isWarnEnabled
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|warn
argument_list|(
literal|"[gc][{}] overhead, spent [{}] collecting in the last [{}]"
argument_list|,
name|seq
argument_list|,
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|current
argument_list|)
argument_list|,
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|elapsed
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|INFO
case|:
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|isInfoEnabled
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|info
argument_list|(
literal|"[gc][{}] overhead, spent [{}] collecting in the last [{}]"
argument_list|,
name|seq
argument_list|,
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|current
argument_list|)
argument_list|,
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|elapsed
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|DEBUG
case|:
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|isDebugEnabled
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|logger
argument_list|)
operator|.
name|debug
argument_list|(
literal|"[gc][{}] overhead, spent [{}] collecting in the last [{}]"
argument_list|,
name|seq
argument_list|,
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|current
argument_list|)
argument_list|,
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|elapsed
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
name|verifyNoMoreInteractions
argument_list|(
name|logger
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

