begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.monitor.fs
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|fs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|equalTo
import|;
end_import

begin_class
DECL|class|DeviceStatsTests
specifier|public
class|class
name|DeviceStatsTests
extends|extends
name|ESTestCase
block|{
DECL|method|testDeviceStats
specifier|public
name|void
name|testDeviceStats
parameter_list|()
block|{
specifier|final
name|int
name|majorDeviceNumber
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1
operator|<<
literal|8
argument_list|)
decl_stmt|;
specifier|final
name|int
name|minorDeviceNumber
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|1
operator|<<
literal|5
argument_list|)
decl_stmt|;
specifier|final
name|String
name|deviceName
init|=
name|randomAsciiOfLength
argument_list|(
literal|3
argument_list|)
decl_stmt|;
specifier|final
name|int
name|readsCompleted
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1
operator|<<
literal|16
argument_list|)
decl_stmt|;
specifier|final
name|int
name|sectorsRead
init|=
name|randomIntBetween
argument_list|(
literal|8
operator|*
name|readsCompleted
argument_list|,
literal|16
operator|*
name|readsCompleted
argument_list|)
decl_stmt|;
specifier|final
name|int
name|writesCompleted
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1
operator|<<
literal|16
argument_list|)
decl_stmt|;
specifier|final
name|int
name|sectorsWritten
init|=
name|randomIntBetween
argument_list|(
literal|8
operator|*
name|writesCompleted
argument_list|,
literal|16
operator|*
name|writesCompleted
argument_list|)
decl_stmt|;
name|FsInfo
operator|.
name|DeviceStats
name|previous
init|=
operator|new
name|FsInfo
operator|.
name|DeviceStats
argument_list|(
name|majorDeviceNumber
argument_list|,
name|minorDeviceNumber
argument_list|,
name|deviceName
argument_list|,
name|readsCompleted
argument_list|,
name|sectorsRead
argument_list|,
name|writesCompleted
argument_list|,
name|sectorsWritten
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|FsInfo
operator|.
name|DeviceStats
name|current
init|=
operator|new
name|FsInfo
operator|.
name|DeviceStats
argument_list|(
name|majorDeviceNumber
argument_list|,
name|minorDeviceNumber
argument_list|,
name|deviceName
argument_list|,
name|readsCompleted
operator|+
literal|1024
argument_list|,
name|sectorsRead
operator|+
literal|16384
argument_list|,
name|writesCompleted
operator|+
literal|2048
argument_list|,
name|sectorsWritten
operator|+
literal|32768
argument_list|,
name|previous
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|current
operator|.
name|operations
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1024L
operator|+
literal|2048L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|current
operator|.
name|readOperations
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1024L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|current
operator|.
name|writeOperations
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2048L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|current
operator|.
name|readKilobytes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|16384L
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|current
operator|.
name|writeKilobytes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|32768L
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

