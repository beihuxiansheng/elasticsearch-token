begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.bwcompat
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|bwcompat
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|info
operator|.
name|NodeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|info
operator|.
name|NodesInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|state
operator|.
name|ClusterStateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|transport
operator|.
name|TransportClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|block
operator|.
name|ClusterBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|block
operator|.
name|ClusterBlockLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|block
operator|.
name|ClusterBlocks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESBackcompatTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|MockTransportClient
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
operator|.
name|SETTING_BLOCKS_METADATA
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
operator|.
name|SETTING_BLOCKS_READ
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
operator|.
name|SETTING_BLOCKS_WRITE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_class
DECL|class|ClusterStateBackwardsCompatIT
specifier|public
class|class
name|ClusterStateBackwardsCompatIT
extends|extends
name|ESBackcompatTestCase
block|{
DECL|method|testClusterState
specifier|public
name|void
name|testClusterState
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
comment|// connect to each node with a custom TransportClient, issue a ClusterStateRequest to test serialization
for|for
control|(
name|NodeInfo
name|n
range|:
name|clusterNodes
argument_list|()
operator|.
name|getNodes
argument_list|()
control|)
block|{
try|try
init|(
name|TransportClient
name|tc
init|=
name|newTransportClient
argument_list|()
init|)
block|{
name|tc
operator|.
name|addTransportAddress
argument_list|(
name|n
operator|.
name|getNode
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
expr_stmt|;
name|ClusterStateResponse
name|response
init|=
name|tc
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getState
argument_list|()
operator|.
name|status
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|ClusterState
operator|.
name|ClusterStateStatus
operator|.
name|UNKNOWN
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|response
operator|.
name|getClusterName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|response
operator|.
name|getState
argument_list|()
operator|.
name|getMetaData
argument_list|()
operator|.
name|hasIndex
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testClusterStateWithBlocks
specifier|public
name|void
name|testClusterStateWithBlocks
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test-blocks"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|ClusterBlock
argument_list|>
name|blocks
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|blocks
operator|.
name|put
argument_list|(
name|SETTING_BLOCKS_READ
argument_list|,
name|IndexMetaData
operator|.
name|INDEX_READ_BLOCK
argument_list|)
expr_stmt|;
name|blocks
operator|.
name|put
argument_list|(
name|SETTING_BLOCKS_WRITE
argument_list|,
name|IndexMetaData
operator|.
name|INDEX_WRITE_BLOCK
argument_list|)
expr_stmt|;
name|blocks
operator|.
name|put
argument_list|(
name|SETTING_BLOCKS_METADATA
argument_list|,
name|IndexMetaData
operator|.
name|INDEX_METADATA_BLOCK
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|ClusterBlock
argument_list|>
name|block
range|:
name|blocks
operator|.
name|entrySet
argument_list|()
control|)
block|{
try|try
block|{
name|enableIndexBlock
argument_list|(
literal|"test-blocks"
argument_list|,
name|block
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|NodeInfo
name|n
range|:
name|clusterNodes
argument_list|()
operator|.
name|getNodes
argument_list|()
control|)
block|{
try|try
init|(
name|TransportClient
name|tc
init|=
name|newTransportClient
argument_list|()
init|)
block|{
name|tc
operator|.
name|addTransportAddress
argument_list|(
name|n
operator|.
name|getNode
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
expr_stmt|;
name|ClusterStateResponse
name|response
init|=
name|tc
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|setIndices
argument_list|(
literal|"test-blocks"
argument_list|)
operator|.
name|setBlocks
argument_list|(
literal|true
argument_list|)
operator|.
name|setNodes
argument_list|(
literal|false
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|ClusterBlocks
name|clusterBlocks
init|=
name|response
operator|.
name|getState
argument_list|()
operator|.
name|blocks
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|clusterBlocks
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|clusterBlocks
operator|.
name|hasIndexBlock
argument_list|(
literal|"test-blocks"
argument_list|,
name|block
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|ClusterBlockLevel
name|level
range|:
name|block
operator|.
name|getValue
argument_list|()
operator|.
name|levels
argument_list|()
control|)
block|{
name|assertTrue
argument_list|(
name|clusterBlocks
operator|.
name|indexBlocked
argument_list|(
name|level
argument_list|,
literal|"test-blocks"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|IndexMetaData
name|indexMetaData
init|=
name|response
operator|.
name|getState
argument_list|()
operator|.
name|getMetaData
argument_list|()
operator|.
name|getIndices
argument_list|()
operator|.
name|get
argument_list|(
literal|"test-blocks"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|indexMetaData
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|indexMetaData
operator|.
name|getSettings
argument_list|()
operator|.
name|getAsBoolean
argument_list|(
name|block
operator|.
name|getKey
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
finally|finally
block|{
name|disableIndexBlock
argument_list|(
literal|"test-blocks"
argument_list|,
name|block
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|clusterNodes
specifier|private
name|NodesInfoResponse
name|clusterNodes
parameter_list|()
block|{
return|return
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareNodesInfo
argument_list|()
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
return|;
block|}
DECL|method|newTransportClient
specifier|private
name|TransportClient
name|newTransportClient
parameter_list|()
block|{
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"client.transport.ignore_cluster_name"
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
literal|"node.name"
argument_list|,
literal|"transport_client_"
operator|+
name|getTestName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
operator|new
name|MockTransportClient
argument_list|(
name|settings
argument_list|)
return|;
block|}
block|}
end_class

end_unit

