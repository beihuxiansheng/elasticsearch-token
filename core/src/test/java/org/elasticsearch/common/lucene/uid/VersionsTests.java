begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.lucene.uid
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|uid
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|NumericDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriterConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|Lucene
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|index
operator|.
name|ElasticsearchDirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|UidFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|VersionFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|nullValue
import|;
end_import

begin_class
DECL|class|VersionsTests
specifier|public
class|class
name|VersionsTests
extends|extends
name|ESTestCase
block|{
DECL|method|reopen
specifier|public
specifier|static
name|DirectoryReader
name|reopen
parameter_list|(
name|DirectoryReader
name|reader
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|reopen
argument_list|(
name|reader
argument_list|,
literal|true
argument_list|)
return|;
block|}
DECL|method|reopen
specifier|public
specifier|static
name|DirectoryReader
name|reopen
parameter_list|(
name|DirectoryReader
name|reader
parameter_list|,
name|boolean
name|newReaderExpected
parameter_list|)
throws|throws
name|IOException
block|{
name|DirectoryReader
name|newReader
init|=
name|DirectoryReader
operator|.
name|openIfChanged
argument_list|(
name|reader
argument_list|)
decl_stmt|;
if|if
condition|(
name|newReader
operator|!=
literal|null
condition|)
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|assertFalse
argument_list|(
name|newReaderExpected
argument_list|)
expr_stmt|;
block|}
return|return
name|newReader
return|;
block|}
DECL|method|testVersions
specifier|public
name|void
name|testVersions
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
operator|new
name|IndexWriterConfig
argument_list|(
name|Lucene
operator|.
name|STANDARD_ANALYZER
argument_list|)
argument_list|)
decl_stmt|;
name|DirectoryReader
name|directoryReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"_na_"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Versions
operator|.
name|NOT_FOUND
argument_list|)
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
name|VersionFieldMapper
operator|.
name|NAME
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
expr_stmt|;
name|directoryReader
operator|=
name|reopen
argument_list|(
name|directoryReader
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadDocIdAndVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
operator|.
name|version
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|Field
name|uid
init|=
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
decl_stmt|;
name|Field
name|version
init|=
operator|new
name|NumericDocValuesField
argument_list|(
name|VersionFieldMapper
operator|.
name|NAME
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|uid
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
expr_stmt|;
name|directoryReader
operator|=
name|reopen
argument_list|(
name|directoryReader
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadDocIdAndVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
operator|.
name|version
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
comment|// test reuse of uid field
name|doc
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|version
operator|.
name|setLongValue
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|uid
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
expr_stmt|;
name|directoryReader
operator|=
name|reopen
argument_list|(
name|directoryReader
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadDocIdAndVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
operator|.
name|version
argument_list|,
name|equalTo
argument_list|(
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|directoryReader
operator|=
name|reopen
argument_list|(
name|directoryReader
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Versions
operator|.
name|NOT_FOUND
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadDocIdAndVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|directoryReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testNestedDocuments
specifier|public
name|void
name|testNestedDocuments
parameter_list|()
throws|throws
name|IOException
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
operator|new
name|IndexWriterConfig
argument_list|(
name|Lucene
operator|.
name|STANDARD_ANALYZER
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Document
argument_list|>
name|docs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
comment|// Nested
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|NESTED_FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|docs
operator|.
name|add
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
comment|// Root
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|NumericDocValuesField
name|version
init|=
operator|new
name|NumericDocValuesField
argument_list|(
name|VersionFieldMapper
operator|.
name|NAME
argument_list|,
literal|5L
argument_list|)
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|docs
operator|.
name|add
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateDocuments
argument_list|(
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|docs
argument_list|)
expr_stmt|;
name|DirectoryReader
name|directoryReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"_na_"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|5L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadDocIdAndVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
operator|.
name|version
argument_list|,
name|equalTo
argument_list|(
literal|5L
argument_list|)
argument_list|)
expr_stmt|;
name|version
operator|.
name|setLongValue
argument_list|(
literal|6L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateDocuments
argument_list|(
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|docs
argument_list|)
expr_stmt|;
name|version
operator|.
name|setLongValue
argument_list|(
literal|7L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateDocuments
argument_list|(
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|docs
argument_list|)
expr_stmt|;
name|directoryReader
operator|=
name|reopen
argument_list|(
name|directoryReader
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|7L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadDocIdAndVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
operator|.
name|version
argument_list|,
name|equalTo
argument_list|(
literal|7L
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|directoryReader
operator|=
name|reopen
argument_list|(
name|directoryReader
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Versions
operator|.
name|NOT_FOUND
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Versions
operator|.
name|loadDocIdAndVersion
argument_list|(
name|directoryReader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|directoryReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/** Test that version map cache works, is evicted on close, etc */
DECL|method|testCache
specifier|public
name|void
name|testCache
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|size
init|=
name|Versions
operator|.
name|lookupStates
operator|.
name|size
argument_list|()
decl_stmt|;
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
operator|new
name|IndexWriterConfig
argument_list|(
name|Lucene
operator|.
name|STANDARD_ANALYZER
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"6"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
name|VersionFieldMapper
operator|.
name|NAME
argument_list|,
literal|87
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
decl_stmt|;
comment|// should increase cache size by 1
name|assertEquals
argument_list|(
literal|87
argument_list|,
name|Versions
operator|.
name|loadVersion
argument_list|(
name|reader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"6"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|size
operator|+
literal|1
argument_list|,
name|Versions
operator|.
name|lookupStates
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// should be cache hit
name|assertEquals
argument_list|(
literal|87
argument_list|,
name|Versions
operator|.
name|loadVersion
argument_list|(
name|reader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"6"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|size
operator|+
literal|1
argument_list|,
name|Versions
operator|.
name|lookupStates
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// core should be evicted from the map
name|assertEquals
argument_list|(
name|size
argument_list|,
name|Versions
operator|.
name|lookupStates
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/** Test that version map cache behaves properly with a filtered reader */
DECL|method|testCacheFilterReader
specifier|public
name|void
name|testCacheFilterReader
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|size
init|=
name|Versions
operator|.
name|lookupStates
operator|.
name|size
argument_list|()
decl_stmt|;
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
operator|new
name|IndexWriterConfig
argument_list|(
name|Lucene
operator|.
name|STANDARD_ANALYZER
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"6"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
name|VersionFieldMapper
operator|.
name|NAME
argument_list|,
literal|87
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|87
argument_list|,
name|Versions
operator|.
name|loadVersion
argument_list|(
name|reader
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"6"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|size
operator|+
literal|1
argument_list|,
name|Versions
operator|.
name|lookupStates
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// now wrap the reader
name|DirectoryReader
name|wrapped
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|reader
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"bogus"
argument_list|,
literal|"_na_"
argument_list|,
literal|5
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|87
argument_list|,
name|Versions
operator|.
name|loadVersion
argument_list|(
name|wrapped
argument_list|,
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"6"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// same size map: core cache key is shared
name|assertEquals
argument_list|(
name|size
operator|+
literal|1
argument_list|,
name|Versions
operator|.
name|lookupStates
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// core should be evicted from the map
name|assertEquals
argument_list|(
name|size
argument_list|,
name|Versions
operator|.
name|lookupStates
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

