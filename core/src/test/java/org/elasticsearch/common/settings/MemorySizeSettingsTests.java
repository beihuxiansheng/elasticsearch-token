begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.settings
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|PageCacheRecycler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|IndexingMemoryController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|IndicesQueryCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|IndicesRequestCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|breaker
operator|.
name|HierarchyCircuitBreakerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|fielddata
operator|.
name|cache
operator|.
name|IndicesFieldDataCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|jvm
operator|.
name|JvmInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|hasItem
import|;
end_import

begin_class
DECL|class|MemorySizeSettingsTests
specifier|public
class|class
name|MemorySizeSettingsTests
extends|extends
name|ESTestCase
block|{
DECL|method|testPageCacheLimitHeapSetting
specifier|public
name|void
name|testPageCacheLimitHeapSetting
parameter_list|()
block|{
name|assertMemorySizeSetting
argument_list|(
name|PageCacheRecycler
operator|.
name|LIMIT_HEAP_SETTING
argument_list|,
literal|"cache.recycler.page.limit.heap"
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
call|(
name|long
call|)
argument_list|(
name|JvmInfo
operator|.
name|jvmInfo
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapMax
argument_list|()
operator|.
name|getBytes
argument_list|()
operator|*
literal|0.1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testIndexBufferSizeSetting
specifier|public
name|void
name|testIndexBufferSizeSetting
parameter_list|()
block|{
name|assertMemorySizeSetting
argument_list|(
name|IndexingMemoryController
operator|.
name|INDEX_BUFFER_SIZE_SETTING
argument_list|,
literal|"indices.memory.index_buffer_size"
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
call|(
name|long
call|)
argument_list|(
name|JvmInfo
operator|.
name|jvmInfo
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapMax
argument_list|()
operator|.
name|getBytes
argument_list|()
operator|*
literal|0.1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testQueryCacheSizeSetting
specifier|public
name|void
name|testQueryCacheSizeSetting
parameter_list|()
block|{
name|assertMemorySizeSetting
argument_list|(
name|IndicesQueryCache
operator|.
name|INDICES_CACHE_QUERY_SIZE_SETTING
argument_list|,
literal|"indices.queries.cache.size"
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
call|(
name|long
call|)
argument_list|(
name|JvmInfo
operator|.
name|jvmInfo
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapMax
argument_list|()
operator|.
name|getBytes
argument_list|()
operator|*
literal|0.1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testIndicesRequestCacheSetting
specifier|public
name|void
name|testIndicesRequestCacheSetting
parameter_list|()
block|{
name|assertMemorySizeSetting
argument_list|(
name|IndicesRequestCache
operator|.
name|INDICES_CACHE_QUERY_SIZE
argument_list|,
literal|"indices.requests.cache.size"
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
call|(
name|long
call|)
argument_list|(
name|JvmInfo
operator|.
name|jvmInfo
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapMax
argument_list|()
operator|.
name|getBytes
argument_list|()
operator|*
literal|0.01
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testCircuitBreakerSettings
specifier|public
name|void
name|testCircuitBreakerSettings
parameter_list|()
block|{
name|assertMemorySizeSetting
argument_list|(
name|HierarchyCircuitBreakerService
operator|.
name|TOTAL_CIRCUIT_BREAKER_LIMIT_SETTING
argument_list|,
literal|"indices.breaker.total.limit"
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
call|(
name|long
call|)
argument_list|(
name|JvmInfo
operator|.
name|jvmInfo
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapMax
argument_list|()
operator|.
name|getBytes
argument_list|()
operator|*
literal|0.7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertMemorySizeSetting
argument_list|(
name|HierarchyCircuitBreakerService
operator|.
name|FIELDDATA_CIRCUIT_BREAKER_LIMIT_SETTING
argument_list|,
literal|"indices.breaker.fielddata.limit"
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
call|(
name|long
call|)
argument_list|(
name|JvmInfo
operator|.
name|jvmInfo
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapMax
argument_list|()
operator|.
name|getBytes
argument_list|()
operator|*
literal|0.6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertMemorySizeSetting
argument_list|(
name|HierarchyCircuitBreakerService
operator|.
name|REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING
argument_list|,
literal|"indices.breaker.request.limit"
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
call|(
name|long
call|)
argument_list|(
name|JvmInfo
operator|.
name|jvmInfo
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapMax
argument_list|()
operator|.
name|getBytes
argument_list|()
operator|*
literal|0.6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertMemorySizeSetting
argument_list|(
name|HierarchyCircuitBreakerService
operator|.
name|IN_FLIGHT_REQUESTS_CIRCUIT_BREAKER_LIMIT_SETTING
argument_list|,
literal|"network.breaker.inflight_requests.limit"
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
operator|(
name|JvmInfo
operator|.
name|jvmInfo
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapMax
argument_list|()
operator|.
name|getBytes
argument_list|()
operator|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testIndicesFieldDataCacheSetting
specifier|public
name|void
name|testIndicesFieldDataCacheSetting
parameter_list|()
block|{
name|assertMemorySizeSetting
argument_list|(
name|IndicesFieldDataCache
operator|.
name|INDICES_FIELDDATA_CACHE_SIZE_KEY
argument_list|,
literal|"indices.fielddata.cache.size"
argument_list|,
operator|new
name|ByteSizeValue
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|assertMemorySizeSetting
specifier|private
name|void
name|assertMemorySizeSetting
parameter_list|(
name|Setting
argument_list|<
name|ByteSizeValue
argument_list|>
name|setting
parameter_list|,
name|String
name|settingKey
parameter_list|,
name|ByteSizeValue
name|defaultValue
parameter_list|)
block|{
name|assertThat
argument_list|(
name|setting
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|setting
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|settingKey
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|setting
operator|.
name|getProperties
argument_list|()
argument_list|,
name|hasItem
argument_list|(
name|Property
operator|.
name|NodeScope
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|setting
operator|.
name|getDefault
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|defaultValue
argument_list|)
argument_list|)
expr_stmt|;
name|Settings
name|settingWithPercentage
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|settingKey
argument_list|,
literal|"25%"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|setting
operator|.
name|get
argument_list|(
name|settingWithPercentage
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|ByteSizeValue
argument_list|(
call|(
name|long
call|)
argument_list|(
name|JvmInfo
operator|.
name|jvmInfo
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapMax
argument_list|()
operator|.
name|getBytes
argument_list|()
operator|*
literal|0.25
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Settings
name|settingWithBytesValue
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|settingKey
argument_list|,
literal|"1024b"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|setting
operator|.
name|get
argument_list|(
name|settingWithBytesValue
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|ByteSizeValue
argument_list|(
literal|1024
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

