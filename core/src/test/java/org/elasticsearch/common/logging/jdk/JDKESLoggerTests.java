begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.logging.jdk
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
operator|.
name|jdk
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
operator|.
name|ESLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|LogRecord
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_class
DECL|class|JDKESLoggerTests
specifier|public
class|class
name|JDKESLoggerTests
extends|extends
name|ElasticsearchTestCase
block|{
DECL|field|esTestLogger
specifier|private
name|ESLogger
name|esTestLogger
decl_stmt|;
DECL|field|testHandler
specifier|private
name|TestHandler
name|testHandler
decl_stmt|;
annotation|@
name|Override
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|JdkESLoggerFactory
name|esTestLoggerFactory
init|=
operator|new
name|JdkESLoggerFactory
argument_list|()
decl_stmt|;
name|esTestLogger
operator|=
name|esTestLoggerFactory
operator|.
name|newInstance
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|Logger
name|testLogger
init|=
operator|(
operator|(
name|JdkESLogger
operator|)
name|esTestLogger
operator|)
operator|.
name|logger
argument_list|()
decl_stmt|;
name|testLogger
operator|.
name|setLevel
argument_list|(
name|Level
operator|.
name|FINEST
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|testLogger
operator|.
name|getLevel
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Level
operator|.
name|FINEST
argument_list|)
argument_list|)
expr_stmt|;
name|testHandler
operator|=
operator|new
name|TestHandler
argument_list|()
expr_stmt|;
name|testLogger
operator|.
name|addHandler
argument_list|(
name|testHandler
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|locationInfoTest
specifier|public
name|void
name|locationInfoTest
parameter_list|()
block|{
name|esTestLogger
operator|.
name|error
argument_list|(
literal|"This is an error"
argument_list|)
expr_stmt|;
name|esTestLogger
operator|.
name|warn
argument_list|(
literal|"This is a warning"
argument_list|)
expr_stmt|;
name|esTestLogger
operator|.
name|info
argument_list|(
literal|"This is an info"
argument_list|)
expr_stmt|;
name|esTestLogger
operator|.
name|debug
argument_list|(
literal|"This is a debug"
argument_list|)
expr_stmt|;
name|esTestLogger
operator|.
name|trace
argument_list|(
literal|"This is a trace"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LogRecord
argument_list|>
name|records
init|=
name|testHandler
operator|.
name|getEvents
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|records
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|records
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|LogRecord
name|record
init|=
name|records
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|record
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getLevel
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getMessage
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"This is an error"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getSourceClassName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|JDKESLoggerTests
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getSourceMethodName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"locationInfoTest"
argument_list|)
argument_list|)
expr_stmt|;
name|record
operator|=
name|records
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getLevel
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getMessage
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"This is a warning"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getSourceClassName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|JDKESLoggerTests
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getSourceMethodName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"locationInfoTest"
argument_list|)
argument_list|)
expr_stmt|;
name|record
operator|=
name|records
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getLevel
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Level
operator|.
name|INFO
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getMessage
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"This is an info"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getSourceClassName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|JDKESLoggerTests
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getSourceMethodName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"locationInfoTest"
argument_list|)
argument_list|)
expr_stmt|;
name|record
operator|=
name|records
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getLevel
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Level
operator|.
name|FINE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getMessage
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"This is a debug"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getSourceClassName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|JDKESLoggerTests
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getSourceMethodName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"locationInfoTest"
argument_list|)
argument_list|)
expr_stmt|;
name|record
operator|=
name|records
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getLevel
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Level
operator|.
name|FINEST
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getMessage
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"This is a trace"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getSourceClassName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|JDKESLoggerTests
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|getSourceMethodName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"locationInfoTest"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|class|TestHandler
specifier|private
specifier|static
class|class
name|TestHandler
extends|extends
name|Handler
block|{
DECL|field|records
specifier|private
name|List
argument_list|<
name|LogRecord
argument_list|>
name|records
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
block|{         }
DECL|method|getEvents
specifier|public
name|List
argument_list|<
name|LogRecord
argument_list|>
name|getEvents
parameter_list|()
block|{
return|return
name|records
return|;
block|}
annotation|@
name|Override
DECL|method|publish
specifier|public
name|void
name|publish
parameter_list|(
name|LogRecord
name|record
parameter_list|)
block|{
comment|// Forces it to generate the location information
name|record
operator|.
name|getSourceClassName
argument_list|()
expr_stmt|;
name|records
operator|.
name|add
argument_list|(
name|record
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|flush
specifier|public
name|void
name|flush
parameter_list|()
block|{         }
block|}
block|}
end_class

end_unit

