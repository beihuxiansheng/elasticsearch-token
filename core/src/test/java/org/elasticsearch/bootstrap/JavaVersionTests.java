begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.bootstrap
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|bootstrap
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_class
DECL|class|JavaVersionTests
specifier|public
class|class
name|JavaVersionTests
extends|extends
name|ESTestCase
block|{
DECL|method|testParse
specifier|public
name|void
name|testParse
parameter_list|()
block|{
name|JavaVersion
name|javaVersion
init|=
name|JavaVersion
operator|.
name|parse
argument_list|(
literal|"1.7.0"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|version
init|=
name|javaVersion
operator|.
name|getVersion
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
literal|3
argument_list|,
name|is
argument_list|(
name|version
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|1
argument_list|,
name|is
argument_list|(
name|version
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|7
argument_list|,
name|is
argument_list|(
name|version
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|0
argument_list|,
name|is
argument_list|(
name|version
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testToString
specifier|public
name|void
name|testToString
parameter_list|()
block|{
name|JavaVersion
name|javaVersion170
init|=
name|JavaVersion
operator|.
name|parse
argument_list|(
literal|"1.7.0"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|javaVersion170
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"1.7.0"
argument_list|)
argument_list|)
expr_stmt|;
name|JavaVersion
name|javaVersion9
init|=
name|JavaVersion
operator|.
name|parse
argument_list|(
literal|"9"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|javaVersion9
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"9"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testCompare
specifier|public
name|void
name|testCompare
parameter_list|()
block|{
name|JavaVersion
name|onePointSix
init|=
name|JavaVersion
operator|.
name|parse
argument_list|(
literal|"1.6"
argument_list|)
decl_stmt|;
name|JavaVersion
name|onePointSeven
init|=
name|JavaVersion
operator|.
name|parse
argument_list|(
literal|"1.7"
argument_list|)
decl_stmt|;
name|JavaVersion
name|onePointSevenPointZero
init|=
name|JavaVersion
operator|.
name|parse
argument_list|(
literal|"1.7.0"
argument_list|)
decl_stmt|;
name|JavaVersion
name|onePointSevenPointOne
init|=
name|JavaVersion
operator|.
name|parse
argument_list|(
literal|"1.7.1"
argument_list|)
decl_stmt|;
name|JavaVersion
name|onePointSevenPointTwo
init|=
name|JavaVersion
operator|.
name|parse
argument_list|(
literal|"1.7.2"
argument_list|)
decl_stmt|;
name|JavaVersion
name|onePointSevenPointOnePointOne
init|=
name|JavaVersion
operator|.
name|parse
argument_list|(
literal|"1.7.1.1"
argument_list|)
decl_stmt|;
name|JavaVersion
name|onePointSevenPointTwoPointOne
init|=
name|JavaVersion
operator|.
name|parse
argument_list|(
literal|"1.7.2.1"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|onePointSix
operator|.
name|compareTo
argument_list|(
name|onePointSeven
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|onePointSeven
operator|.
name|compareTo
argument_list|(
name|onePointSix
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|onePointSix
operator|.
name|compareTo
argument_list|(
name|onePointSix
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|onePointSeven
operator|.
name|compareTo
argument_list|(
name|onePointSevenPointZero
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|onePointSevenPointOnePointOne
operator|.
name|compareTo
argument_list|(
name|onePointSevenPointOne
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|onePointSevenPointTwo
operator|.
name|compareTo
argument_list|(
name|onePointSevenPointTwoPointOne
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|testValidVersions
specifier|public
name|void
name|testValidVersions
parameter_list|()
block|{
name|String
index|[]
name|versions
init|=
operator|new
name|String
index|[]
block|{
literal|"1.7"
block|,
literal|"1.7.0"
block|,
literal|"0.1.7"
block|,
literal|"1.7.0.80"
block|}
decl_stmt|;
for|for
control|(
name|String
name|version
range|:
name|versions
control|)
block|{
name|assertTrue
argument_list|(
name|JavaVersion
operator|.
name|isValid
argument_list|(
name|version
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testInvalidVersions
specifier|public
name|void
name|testInvalidVersions
parameter_list|()
block|{
name|String
index|[]
name|versions
init|=
operator|new
name|String
index|[]
block|{
literal|""
block|,
literal|"1.7.0_80"
block|,
literal|"1.7."
block|}
decl_stmt|;
for|for
control|(
name|String
name|version
range|:
name|versions
control|)
block|{
name|assertFalse
argument_list|(
name|JavaVersion
operator|.
name|isValid
argument_list|(
name|version
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

