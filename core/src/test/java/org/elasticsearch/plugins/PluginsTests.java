begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.plugins
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_class
DECL|class|PluginsTests
specifier|public
class|class
name|PluginsTests
extends|extends
name|ESTestCase
block|{
DECL|method|testMakePlatformName
specifier|public
name|void
name|testMakePlatformName
parameter_list|()
block|{
specifier|final
name|String
name|platformName
init|=
name|Platforms
operator|.
name|platformName
argument_list|(
name|Constants
operator|.
name|OS_NAME
argument_list|,
name|Constants
operator|.
name|OS_ARCH
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|platformName
argument_list|,
name|platformName
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|platformName
argument_list|,
name|platformName
operator|.
name|equals
argument_list|(
name|platformName
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|platformName
argument_list|,
name|platformName
operator|.
name|indexOf
argument_list|(
literal|"-"
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|platformName
argument_list|,
name|platformName
operator|.
name|indexOf
argument_list|(
literal|"-"
argument_list|)
operator|<
name|platformName
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|platformName
argument_list|,
name|platformName
operator|.
name|contains
argument_list|(
literal|" "
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testMakeSpecificPlatformNames
specifier|public
name|void
name|testMakeSpecificPlatformNames
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"darwin-x86_64"
argument_list|,
name|Platforms
operator|.
name|platformName
argument_list|(
literal|"Mac OS X"
argument_list|,
literal|"x86_64"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"linux-x86_64"
argument_list|,
name|Platforms
operator|.
name|platformName
argument_list|(
literal|"Linux"
argument_list|,
literal|"amd64"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"linux-x86"
argument_list|,
name|Platforms
operator|.
name|platformName
argument_list|(
literal|"Linux"
argument_list|,
literal|"i386"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"windows-x86_64"
argument_list|,
name|Platforms
operator|.
name|platformName
argument_list|(
literal|"Windows Server 2008 R2"
argument_list|,
literal|"amd64"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"windows-x86"
argument_list|,
name|Platforms
operator|.
name|platformName
argument_list|(
literal|"Windows Server 2008"
argument_list|,
literal|"x86"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"windows-x86_64"
argument_list|,
name|Platforms
operator|.
name|platformName
argument_list|(
literal|"Windows 8.1"
argument_list|,
literal|"amd64"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sunos-x86_64"
argument_list|,
name|Platforms
operator|.
name|platformName
argument_list|(
literal|"SunOS"
argument_list|,
literal|"amd64"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

