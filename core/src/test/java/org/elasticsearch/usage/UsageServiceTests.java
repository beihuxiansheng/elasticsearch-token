begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.usage
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|usage
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|usage
operator|.
name|NodeUsage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|node
operator|.
name|NodeClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|transport
operator|.
name|TransportAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|BaseRestHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|FakeRestRequest
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|nullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|sameInstance
import|;
end_import

begin_class
DECL|class|UsageServiceTests
specifier|public
class|class
name|UsageServiceTests
extends|extends
name|ESTestCase
block|{
DECL|method|testRestUsage
specifier|public
name|void
name|testRestUsage
parameter_list|()
throws|throws
name|Exception
block|{
name|DiscoveryNode
name|discoveryNode
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"foo"
argument_list|,
operator|new
name|TransportAddress
argument_list|(
name|InetAddress
operator|.
name|getByName
argument_list|(
literal|"localhost"
argument_list|)
argument_list|,
literal|12345
argument_list|)
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|Settings
name|settings
init|=
name|Settings
operator|.
name|EMPTY
decl_stmt|;
name|RestRequest
name|restRequest
init|=
operator|new
name|FakeRestRequest
argument_list|()
decl_stmt|;
name|BaseRestHandler
name|handlerA
init|=
operator|new
name|MockRestHandler
argument_list|(
literal|"a"
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|BaseRestHandler
name|handlerB
init|=
operator|new
name|MockRestHandler
argument_list|(
literal|"b"
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|BaseRestHandler
name|handlerC
init|=
operator|new
name|MockRestHandler
argument_list|(
literal|"c"
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|BaseRestHandler
name|handlerD
init|=
operator|new
name|MockRestHandler
argument_list|(
literal|"d"
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|BaseRestHandler
name|handlerE
init|=
operator|new
name|MockRestHandler
argument_list|(
literal|"e"
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|BaseRestHandler
name|handlerF
init|=
operator|new
name|MockRestHandler
argument_list|(
literal|"f"
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|UsageService
name|usageService
init|=
operator|new
name|UsageService
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|usageService
operator|.
name|addRestHandler
argument_list|(
name|handlerA
argument_list|)
expr_stmt|;
name|usageService
operator|.
name|addRestHandler
argument_list|(
name|handlerB
argument_list|)
expr_stmt|;
name|usageService
operator|.
name|addRestHandler
argument_list|(
name|handlerC
argument_list|)
expr_stmt|;
name|usageService
operator|.
name|addRestHandler
argument_list|(
name|handlerD
argument_list|)
expr_stmt|;
name|usageService
operator|.
name|addRestHandler
argument_list|(
name|handlerE
argument_list|)
expr_stmt|;
name|usageService
operator|.
name|addRestHandler
argument_list|(
name|handlerF
argument_list|)
expr_stmt|;
name|handlerA
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerB
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerA
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerA
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerB
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerC
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerC
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerD
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerA
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerB
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerE
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerF
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerC
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|handlerD
operator|.
name|handleRequest
argument_list|(
name|restRequest
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|NodeUsage
name|usage
init|=
name|usageService
operator|.
name|getUsageStats
argument_list|(
name|discoveryNode
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|usage
operator|.
name|getNode
argument_list|()
argument_list|,
name|sameInstance
argument_list|(
name|discoveryNode
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|restUsage
init|=
name|usage
operator|.
name|getRestUsage
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|restUsage
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restUsage
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restUsage
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restUsage
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restUsage
operator|.
name|get
argument_list|(
literal|"c"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restUsage
operator|.
name|get
argument_list|(
literal|"d"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restUsage
operator|.
name|get
argument_list|(
literal|"e"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restUsage
operator|.
name|get
argument_list|(
literal|"f"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|usage
operator|=
name|usageService
operator|.
name|getUsageStats
argument_list|(
name|discoveryNode
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|usage
operator|.
name|getNode
argument_list|()
argument_list|,
name|sameInstance
argument_list|(
name|discoveryNode
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|usage
operator|.
name|getRestUsage
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|MockRestHandler
specifier|private
class|class
name|MockRestHandler
extends|extends
name|BaseRestHandler
block|{
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
DECL|method|MockRestHandler
specifier|protected
name|MockRestHandler
parameter_list|(
name|String
name|name
parameter_list|,
name|Settings
name|settings
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getName
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
annotation|@
name|Override
DECL|method|prepareRequest
specifier|protected
name|RestChannelConsumer
name|prepareRequest
parameter_list|(
name|RestRequest
name|request
parameter_list|,
name|NodeClient
name|client
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|channel
lambda|->
block|{             }
return|;
block|}
block|}
block|}
end_class

end_unit

