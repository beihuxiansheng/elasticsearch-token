begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cluster.routing
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_class
DECL|class|OperationRoutingTests
specifier|public
class|class
name|OperationRoutingTests
extends|extends
name|ESTestCase
block|{
DECL|method|testGenerateShardId
specifier|public
name|void
name|testGenerateShardId
parameter_list|()
block|{
name|int
index|[]
index|[]
name|possibleValues
init|=
operator|new
name|int
index|[]
index|[]
block|{
block|{
literal|8
block|,
literal|4
block|,
literal|2
block|}
block|,
block|{
literal|20
block|,
literal|10
block|,
literal|2
block|}
block|,
block|{
literal|36
block|,
literal|12
block|,
literal|3
block|}
block|,
block|{
literal|15
block|,
literal|5
block|,
literal|1
block|}
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|int
index|[]
name|shardSplits
init|=
name|randomFrom
argument_list|(
name|possibleValues
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|shardSplits
index|[
literal|0
index|]
argument_list|,
operator|(
name|shardSplits
index|[
literal|0
index|]
operator|/
name|shardSplits
index|[
literal|1
index|]
operator|)
operator|*
name|shardSplits
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|shardSplits
index|[
literal|1
index|]
argument_list|,
operator|(
name|shardSplits
index|[
literal|1
index|]
operator|/
name|shardSplits
index|[
literal|2
index|]
operator|)
operator|*
name|shardSplits
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|IndexMetaData
name|metaData
init|=
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"test"
argument_list|)
operator|.
name|settings
argument_list|(
name|settings
argument_list|(
name|Version
operator|.
name|CURRENT
argument_list|)
argument_list|)
operator|.
name|numberOfShards
argument_list|(
name|shardSplits
index|[
literal|0
index|]
argument_list|)
operator|.
name|numberOfReplicas
argument_list|(
literal|1
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|String
name|term
init|=
name|randomAsciiOfLength
argument_list|(
literal|10
argument_list|)
decl_stmt|;
specifier|final
name|int
name|shard
init|=
name|OperationRouting
operator|.
name|generateShardId
argument_list|(
name|metaData
argument_list|,
name|term
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|IndexMetaData
name|shrunk
init|=
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"test"
argument_list|)
operator|.
name|settings
argument_list|(
name|settings
argument_list|(
name|Version
operator|.
name|CURRENT
argument_list|)
argument_list|)
operator|.
name|numberOfShards
argument_list|(
name|shardSplits
index|[
literal|1
index|]
argument_list|)
operator|.
name|numberOfReplicas
argument_list|(
literal|1
argument_list|)
operator|.
name|setRoutingNumShards
argument_list|(
name|shardSplits
index|[
literal|0
index|]
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|int
name|shrunkShard
init|=
name|OperationRouting
operator|.
name|generateShardId
argument_list|(
name|shrunk
argument_list|,
name|term
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|ShardId
argument_list|>
name|shardIds
init|=
name|IndexMetaData
operator|.
name|selectShrinkShards
argument_list|(
name|shrunkShard
argument_list|,
name|metaData
argument_list|,
name|shrunk
operator|.
name|getNumberOfShards
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|shardIds
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
parameter_list|(
name|sid
parameter_list|)
lambda|->
name|sid
operator|.
name|id
argument_list|()
operator|==
name|shard
argument_list|)
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|shrunk
operator|=
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"test"
argument_list|)
operator|.
name|settings
argument_list|(
name|settings
argument_list|(
name|Version
operator|.
name|CURRENT
argument_list|)
argument_list|)
operator|.
name|numberOfShards
argument_list|(
name|shardSplits
index|[
literal|2
index|]
argument_list|)
operator|.
name|numberOfReplicas
argument_list|(
literal|1
argument_list|)
operator|.
name|setRoutingNumShards
argument_list|(
name|shardSplits
index|[
literal|0
index|]
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|shrunkShard
operator|=
name|OperationRouting
operator|.
name|generateShardId
argument_list|(
name|shrunk
argument_list|,
name|term
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|shardIds
operator|=
name|IndexMetaData
operator|.
name|selectShrinkShards
argument_list|(
name|shrunkShard
argument_list|,
name|metaData
argument_list|,
name|shrunk
operator|.
name|getNumberOfShards
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|toString
argument_list|(
name|shardSplits
argument_list|)
argument_list|,
literal|1
argument_list|,
name|shardIds
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
parameter_list|(
name|sid
parameter_list|)
lambda|->
name|sid
operator|.
name|id
argument_list|()
operator|==
name|shard
argument_list|)
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Ensures that all changes to the hash-function / shard selection are BWC      */
DECL|method|testBWC
specifier|public
name|void
name|testBWC
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|termToShard
init|=
operator|new
name|TreeMap
argument_list|<>
argument_list|()
decl_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"sEERfFzPSI"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"cNRiIrjzYd"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"BgfLBXUyWT"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"cnepjZhQnb"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"OKCmuYkeCK"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"OutXGRQUja"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"yCdyocKWou"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"KXuNWWNgVj"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"DGJOYrpESx"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"upLDybdTGs"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"yhZhzCPQby"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"EyCVeiCouA"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"tFyVdQauWR"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"nyeRYDnDQr"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"hswhrppvDH"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"BSiWvDOsNE"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"YHicpFBSaY"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"EquPtdKaBZ"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"rSjLZHCDfT"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"qoZALVcite"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"yDCCPVBiCm"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"ngizYtQgGK"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"FYQRIBcNqz"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"EBzEDAPODe"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"YePigbXgKb"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"PeGJjomyik"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"cyQIvDmyYD"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"yIEfZrYfRk"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"kblouyFUbu"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"xvIGbRiGJF"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"KWimwsREPf"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"wsNavvIcdk"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"xkWaPcCmpT"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"FKKTOnJMDy"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"RuLzobYixn"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"mFohLeFRvF"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"aAMXnamRJg"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"zKBMYJDmBI"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"ElSVuJQQuw"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"pezPtTQAAm"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"zBjjNEjAex"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"PGgHcLNPYX"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"hOkpeQqTDF"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"chZXraUPBH"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"FAIcSmmNXq"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"EZmDicyayC"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"GRIueBeIyL"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"qCChjGZYLp"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"IsSZQwwnUT"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"MGlxLFyyCK"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"YmscwrKSpB"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"czSljcjMop"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"XhfGWwNlng"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"cWpKJjlzgj"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"eDzIfMKbvk"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"WFFWYBfnTb"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"oDdHJxGxja"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"PDOQQqgIKE"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"bGEIEBLATe"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"xpRkJPWVpu"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"kTwZnPEeIi"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"DifcuqSsKk"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"CEmLmljpXe"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"cuNKtLtyJQ"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"yNjiAnxAmt"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"bVDJDCeaFm"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"vdnUhGLFtl"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"LnqSYezXbr"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"EzHgydDCSR"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"ZSKjhJlcpn"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"WRjUoZwtUz"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"RiBbcCdIgk"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"yizTqyjuDn"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"QnFjcpcZUT"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"agYhXYUUpl"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"UOjiTugjNC"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"nICGuWTdfV"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"NrnSmcnUVF"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"ZSzFcbpDqP"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"YOhahLSzzE"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"iWswCilUaT"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"zXAamKsRwj"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"aqGsrUPHFq"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"eDItImYWTS"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"JAYDZMRcpW"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"lmvAaEPflK"
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"IKuOwPjKCx"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"schsINzlYB"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"OqbFNxrKrF"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"QrklDfvEJU"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"VLxKRKdLbx"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"imoydNTZhV"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"uFZyTyOMRO"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"nVAZVMPNNx"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"rPIdESYaAO"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"nbZWPWJsIM"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"wRZXPSoEgd"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"nGzpgwsSBc"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|termToShard
operator|.
name|put
argument_list|(
literal|"AITyyoyLLs"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|IndexMetaData
name|metaData
init|=
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"test"
argument_list|)
operator|.
name|settings
argument_list|(
name|settings
argument_list|(
name|Version
operator|.
name|CURRENT
argument_list|)
argument_list|)
operator|.
name|numberOfShards
argument_list|(
literal|8
argument_list|)
operator|.
name|numberOfReplicas
argument_list|(
literal|1
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|entry
range|:
name|termToShard
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|key
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|int
name|shard
init|=
name|randomBoolean
argument_list|()
condition|?
name|OperationRouting
operator|.
name|generateShardId
argument_list|(
name|metaData
argument_list|,
name|key
argument_list|,
literal|null
argument_list|)
else|:
name|OperationRouting
operator|.
name|generateShardId
argument_list|(
name|metaData
argument_list|,
literal|"foobar"
argument_list|,
name|key
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|shard
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

