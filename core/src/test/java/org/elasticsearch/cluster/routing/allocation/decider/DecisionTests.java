begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cluster.routing.allocation.decider
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|decider
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|decider
operator|.
name|Decision
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|decider
operator|.
name|Decision
operator|.
name|Type
operator|.
name|NO
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|decider
operator|.
name|Decision
operator|.
name|Type
operator|.
name|THROTTLE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|decider
operator|.
name|Decision
operator|.
name|Type
operator|.
name|YES
import|;
end_import

begin_comment
comment|/**  * A class for unit testing the {@link Decision} class.  */
end_comment

begin_class
DECL|class|DecisionTests
specifier|public
class|class
name|DecisionTests
extends|extends
name|ESTestCase
block|{
comment|/**      * Tests {@link Type#higherThan(Type)}      */
DECL|method|testHigherThan
specifier|public
name|void
name|testHigherThan
parameter_list|()
block|{
comment|// test YES type
name|assertTrue
argument_list|(
name|YES
operator|.
name|higherThan
argument_list|(
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|YES
operator|.
name|higherThan
argument_list|(
name|THROTTLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|YES
operator|.
name|higherThan
argument_list|(
name|YES
argument_list|)
argument_list|)
expr_stmt|;
comment|// test THROTTLE type
name|assertTrue
argument_list|(
name|THROTTLE
operator|.
name|higherThan
argument_list|(
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|THROTTLE
operator|.
name|higherThan
argument_list|(
name|THROTTLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|THROTTLE
operator|.
name|higherThan
argument_list|(
name|YES
argument_list|)
argument_list|)
expr_stmt|;
comment|// test NO type
name|assertFalse
argument_list|(
name|NO
operator|.
name|higherThan
argument_list|(
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|NO
operator|.
name|higherThan
argument_list|(
name|THROTTLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|NO
operator|.
name|higherThan
argument_list|(
name|YES
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

