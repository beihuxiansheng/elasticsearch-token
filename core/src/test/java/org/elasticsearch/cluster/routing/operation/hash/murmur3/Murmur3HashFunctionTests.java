begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cluster.routing.operation.hash.murmur3
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|operation
operator|.
name|hash
operator|.
name|murmur3
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|Murmur3HashFunction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_class
DECL|class|Murmur3HashFunctionTests
specifier|public
class|class
name|Murmur3HashFunctionTests
extends|extends
name|ESTestCase
block|{
DECL|method|testKnownValues
specifier|public
name|void
name|testKnownValues
parameter_list|()
block|{
name|assertHash
argument_list|(
literal|0x5a0cb7c3
argument_list|,
literal|"hell"
argument_list|)
expr_stmt|;
name|assertHash
argument_list|(
literal|0xd7c31989
argument_list|,
literal|"hello"
argument_list|)
expr_stmt|;
name|assertHash
argument_list|(
literal|0x22ab2984
argument_list|,
literal|"hello w"
argument_list|)
expr_stmt|;
name|assertHash
argument_list|(
literal|0xdf0ca123
argument_list|,
literal|"hello wo"
argument_list|)
expr_stmt|;
name|assertHash
argument_list|(
literal|0xe7744d61
argument_list|,
literal|"hello wor"
argument_list|)
expr_stmt|;
name|assertHash
argument_list|(
literal|0xe07db09c
argument_list|,
literal|"The quick brown fox jumps over the lazy dog"
argument_list|)
expr_stmt|;
name|assertHash
argument_list|(
literal|0x4e63d2ad
argument_list|,
literal|"The quick brown fox jumps over the lazy cog"
argument_list|)
expr_stmt|;
block|}
DECL|method|assertHash
specifier|private
specifier|static
name|void
name|assertHash
parameter_list|(
name|int
name|expected
parameter_list|,
name|String
name|stringInput
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|Murmur3HashFunction
operator|.
name|hash
argument_list|(
name|stringInput
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

