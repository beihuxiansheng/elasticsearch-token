begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cluster.node
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|transport
operator|.
name|TransportAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyMap
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptySet
import|;
end_import

begin_class
DECL|class|DiscoveryNodeTests
specifier|public
class|class
name|DiscoveryNodeTests
extends|extends
name|ESTestCase
block|{
DECL|method|testDiscoveryNodeIsCreatedWithHostFromInetAddress
specifier|public
name|void
name|testDiscoveryNodeIsCreatedWithHostFromInetAddress
parameter_list|()
throws|throws
name|Exception
block|{
name|InetAddress
name|inetAddress
init|=
name|randomBoolean
argument_list|()
condition|?
name|InetAddress
operator|.
name|getByName
argument_list|(
literal|"192.0.2.1"
argument_list|)
else|:
name|InetAddress
operator|.
name|getByAddress
argument_list|(
literal|"name1"
argument_list|,
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|192
block|,
operator|(
name|byte
operator|)
literal|168
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|1
block|}
argument_list|)
decl_stmt|;
name|TransportAddress
name|transportAddress
init|=
operator|new
name|TransportAddress
argument_list|(
name|inetAddress
argument_list|,
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|65535
argument_list|)
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"name1"
argument_list|,
literal|"id1"
argument_list|,
name|transportAddress
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
name|emptySet
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|transportAddress
operator|.
name|address
argument_list|()
operator|.
name|getHostString
argument_list|()
argument_list|,
name|node
operator|.
name|getHostName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|transportAddress
operator|.
name|getAddress
argument_list|()
argument_list|,
name|node
operator|.
name|getHostAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testDiscoveryNodeSerializationKeepsHost
specifier|public
name|void
name|testDiscoveryNodeSerializationKeepsHost
parameter_list|()
throws|throws
name|Exception
block|{
name|InetAddress
name|inetAddress
init|=
name|InetAddress
operator|.
name|getByAddress
argument_list|(
literal|"name1"
argument_list|,
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|192
block|,
operator|(
name|byte
operator|)
literal|168
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|1
block|}
argument_list|)
decl_stmt|;
name|TransportAddress
name|transportAddress
init|=
operator|new
name|TransportAddress
argument_list|(
name|inetAddress
argument_list|,
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|65535
argument_list|)
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"name1"
argument_list|,
literal|"id1"
argument_list|,
name|transportAddress
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
name|emptySet
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|BytesStreamOutput
name|streamOutput
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|streamOutput
operator|.
name|setVersion
argument_list|(
name|Version
operator|.
name|CURRENT
argument_list|)
expr_stmt|;
name|node
operator|.
name|writeTo
argument_list|(
name|streamOutput
argument_list|)
expr_stmt|;
name|StreamInput
name|in
init|=
name|StreamInput
operator|.
name|wrap
argument_list|(
name|streamOutput
operator|.
name|bytes
argument_list|()
operator|.
name|toBytesRef
argument_list|()
operator|.
name|bytes
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|serialized
init|=
operator|new
name|DiscoveryNode
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|transportAddress
operator|.
name|address
argument_list|()
operator|.
name|getHostString
argument_list|()
argument_list|,
name|serialized
operator|.
name|getHostName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|transportAddress
operator|.
name|address
argument_list|()
operator|.
name|getHostString
argument_list|()
argument_list|,
name|serialized
operator|.
name|getAddress
argument_list|()
operator|.
name|address
argument_list|()
operator|.
name|getHostString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|transportAddress
operator|.
name|getAddress
argument_list|()
argument_list|,
name|serialized
operator|.
name|getHostAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|transportAddress
operator|.
name|getAddress
argument_list|()
argument_list|,
name|serialized
operator|.
name|getAddress
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|transportAddress
operator|.
name|getPort
argument_list|()
argument_list|,
name|serialized
operator|.
name|getAddress
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testDiscoveryNodeSerializationToOldVersion
specifier|public
name|void
name|testDiscoveryNodeSerializationToOldVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|InetAddress
name|inetAddress
init|=
name|InetAddress
operator|.
name|getByAddress
argument_list|(
literal|"name1"
argument_list|,
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|192
block|,
operator|(
name|byte
operator|)
literal|168
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|1
block|}
argument_list|)
decl_stmt|;
name|TransportAddress
name|transportAddress
init|=
operator|new
name|TransportAddress
argument_list|(
name|inetAddress
argument_list|,
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|65535
argument_list|)
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"name1"
argument_list|,
literal|"id1"
argument_list|,
name|transportAddress
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
name|emptySet
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|BytesStreamOutput
name|streamOutput
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|streamOutput
operator|.
name|setVersion
argument_list|(
name|Version
operator|.
name|V_5_0_0
argument_list|)
expr_stmt|;
name|node
operator|.
name|writeTo
argument_list|(
name|streamOutput
argument_list|)
expr_stmt|;
name|StreamInput
name|in
init|=
name|StreamInput
operator|.
name|wrap
argument_list|(
name|streamOutput
operator|.
name|bytes
argument_list|()
operator|.
name|toBytesRef
argument_list|()
operator|.
name|bytes
argument_list|)
decl_stmt|;
name|in
operator|.
name|setVersion
argument_list|(
name|Version
operator|.
name|V_5_0_0
argument_list|)
expr_stmt|;
name|DiscoveryNode
name|serialized
init|=
operator|new
name|DiscoveryNode
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|transportAddress
operator|.
name|address
argument_list|()
operator|.
name|getHostString
argument_list|()
argument_list|,
name|serialized
operator|.
name|getHostName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|transportAddress
operator|.
name|address
argument_list|()
operator|.
name|getHostString
argument_list|()
argument_list|,
name|serialized
operator|.
name|getAddress
argument_list|()
operator|.
name|address
argument_list|()
operator|.
name|getHostString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|transportAddress
operator|.
name|getAddress
argument_list|()
argument_list|,
name|serialized
operator|.
name|getHostAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|transportAddress
operator|.
name|getAddress
argument_list|()
argument_list|,
name|serialized
operator|.
name|getAddress
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|transportAddress
operator|.
name|getPort
argument_list|()
argument_list|,
name|serialized
operator|.
name|getAddress
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

