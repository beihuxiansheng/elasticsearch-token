begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.engine
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|Codec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|NumericDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|TextField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriterConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|KeepOnlyLastCommitDeletionPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|LiveIndexWriterConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|MergePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|NoMergePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SnapshotDeletionPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|MockDirectoryWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|Lucene
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|BigArrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|codec
operator|.
name|CodecService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|indexing
operator|.
name|ShardIndexingService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|Mapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|ParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|ParsedDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|SourceFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|UidFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|MergeSchedulerConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|store
operator|.
name|DirectoryService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|store
operator|.
name|DirectoryUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|store
operator|.
name|Store
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
operator|.
name|Translog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
operator|.
name|TranslogConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|DummyShardLock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|IndexSettingsModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThan
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|hasKey
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|not
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|nullValue
import|;
end_import

begin_comment
comment|/**  * TODO: document me!  */
end_comment

begin_class
DECL|class|ShadowEngineTests
specifier|public
class|class
name|ShadowEngineTests
extends|extends
name|ESTestCase
block|{
DECL|field|INDEX_SETTINGS
specifier|private
specifier|static
specifier|final
name|IndexSettings
name|INDEX_SETTINGS
init|=
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
operator|new
name|Index
argument_list|(
literal|"index"
argument_list|)
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|shardId
specifier|protected
specifier|final
name|ShardId
name|shardId
init|=
operator|new
name|ShardId
argument_list|(
operator|new
name|Index
argument_list|(
literal|"index"
argument_list|)
argument_list|,
literal|1
argument_list|)
decl_stmt|;
DECL|field|threadPool
specifier|protected
name|ThreadPool
name|threadPool
decl_stmt|;
DECL|field|store
specifier|private
name|Store
name|store
decl_stmt|;
DECL|field|storeReplica
specifier|private
name|Store
name|storeReplica
decl_stmt|;
DECL|field|primaryEngine
specifier|protected
name|Engine
name|primaryEngine
decl_stmt|;
DECL|field|replicaEngine
specifier|protected
name|Engine
name|replicaEngine
decl_stmt|;
DECL|field|defaultSettings
specifier|private
name|Settings
name|defaultSettings
decl_stmt|;
DECL|field|codecName
specifier|private
name|String
name|codecName
decl_stmt|;
DECL|field|dirPath
specifier|private
name|Path
name|dirPath
decl_stmt|;
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|CodecService
name|codecService
init|=
operator|new
name|CodecService
argument_list|(
literal|null
argument_list|,
name|logger
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|Codec
operator|.
name|getDefault
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|Arrays
operator|.
name|asList
argument_list|(
name|codecService
operator|.
name|availableCodecs
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
name|name
argument_list|)
condition|)
block|{
comment|// some codecs are read only so we only take the ones that we have in the service and randomly
comment|// selected by lucene test case.
name|codecName
operator|=
name|name
expr_stmt|;
block|}
else|else
block|{
name|codecName
operator|=
literal|"default"
expr_stmt|;
block|}
name|defaultSettings
operator|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|EngineConfig
operator|.
name|INDEX_COMPOUND_ON_FLUSH
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|EngineConfig
operator|.
name|INDEX_GC_DELETES_SETTING
argument_list|,
literal|"1h"
argument_list|)
comment|// make sure this doesn't kick in on us
operator|.
name|put
argument_list|(
name|EngineConfig
operator|.
name|INDEX_CODEC_SETTING
argument_list|,
name|codecName
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
comment|// TODO randomize more settings
name|threadPool
operator|=
operator|new
name|ThreadPool
argument_list|(
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|dirPath
operator|=
name|createTempDir
argument_list|()
expr_stmt|;
name|store
operator|=
name|createStore
argument_list|(
name|dirPath
argument_list|)
expr_stmt|;
name|storeReplica
operator|=
name|createStore
argument_list|(
name|dirPath
argument_list|)
expr_stmt|;
name|Lucene
operator|.
name|cleanLuceneIndex
argument_list|(
name|store
operator|.
name|directory
argument_list|()
argument_list|)
expr_stmt|;
name|Lucene
operator|.
name|cleanLuceneIndex
argument_list|(
name|storeReplica
operator|.
name|directory
argument_list|()
argument_list|)
expr_stmt|;
name|primaryEngine
operator|=
name|createInternalEngine
argument_list|(
name|store
argument_list|,
name|createTempDir
argument_list|(
literal|"translog-primary"
argument_list|)
argument_list|)
expr_stmt|;
name|LiveIndexWriterConfig
name|currentIndexWriterConfig
init|=
operator|(
operator|(
name|InternalEngine
operator|)
name|primaryEngine
operator|)
operator|.
name|getCurrentIndexWriterConfig
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|primaryEngine
operator|.
name|config
argument_list|()
operator|.
name|getCodec
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|codecService
operator|.
name|codec
argument_list|(
name|codecName
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|currentIndexWriterConfig
operator|.
name|getCodec
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|codecService
operator|.
name|codec
argument_list|(
name|codecName
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|primaryEngine
operator|.
name|config
argument_list|()
operator|.
name|setEnableGcDeletes
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|replicaEngine
operator|=
name|createShadowEngine
argument_list|(
name|storeReplica
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|replicaEngine
operator|.
name|config
argument_list|()
operator|.
name|getCodec
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|codecService
operator|.
name|codec
argument_list|(
name|codecName
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|replicaEngine
operator|.
name|config
argument_list|()
operator|.
name|setEnableGcDeletes
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
annotation|@
name|After
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|replicaEngine
operator|.
name|close
argument_list|()
expr_stmt|;
name|storeReplica
operator|.
name|close
argument_list|()
expr_stmt|;
name|primaryEngine
operator|.
name|close
argument_list|()
expr_stmt|;
name|store
operator|.
name|close
argument_list|()
expr_stmt|;
name|terminate
argument_list|(
name|threadPool
argument_list|)
expr_stmt|;
block|}
DECL|method|testDocumentWithTextField
specifier|private
name|ParseContext
operator|.
name|Document
name|testDocumentWithTextField
parameter_list|()
block|{
name|ParseContext
operator|.
name|Document
name|document
init|=
name|testDocument
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|TextField
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|document
return|;
block|}
DECL|method|testDocument
specifier|private
name|ParseContext
operator|.
name|Document
name|testDocument
parameter_list|()
block|{
return|return
operator|new
name|ParseContext
operator|.
name|Document
argument_list|()
return|;
block|}
DECL|method|testParsedDocument
specifier|private
name|ParsedDocument
name|testParsedDocument
parameter_list|(
name|String
name|uid
parameter_list|,
name|String
name|id
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|routing
parameter_list|,
name|long
name|timestamp
parameter_list|,
name|long
name|ttl
parameter_list|,
name|ParseContext
operator|.
name|Document
name|document
parameter_list|,
name|BytesReference
name|source
parameter_list|,
name|Mapping
name|mappingsUpdate
parameter_list|)
block|{
name|Field
name|uidField
init|=
operator|new
name|Field
argument_list|(
literal|"_uid"
argument_list|,
name|uid
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
decl_stmt|;
name|Field
name|versionField
init|=
operator|new
name|NumericDocValuesField
argument_list|(
literal|"_version"
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
name|uidField
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|versionField
argument_list|)
expr_stmt|;
return|return
operator|new
name|ParsedDocument
argument_list|(
name|uidField
argument_list|,
name|versionField
argument_list|,
name|id
argument_list|,
name|type
argument_list|,
name|routing
argument_list|,
name|timestamp
argument_list|,
name|ttl
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|document
argument_list|)
argument_list|,
name|source
argument_list|,
name|mappingsUpdate
argument_list|)
return|;
block|}
DECL|method|createStore
specifier|protected
name|Store
name|createStore
parameter_list|(
name|Path
name|p
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|createStore
argument_list|(
name|newMockFSDirectory
argument_list|(
name|p
argument_list|)
argument_list|)
return|;
block|}
DECL|method|createStore
specifier|protected
name|Store
name|createStore
parameter_list|(
specifier|final
name|Directory
name|directory
parameter_list|)
throws|throws
name|IOException
block|{
name|IndexSettings
name|indexSettings
init|=
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
name|shardId
operator|.
name|index
argument_list|()
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|DirectoryService
name|directoryService
init|=
operator|new
name|DirectoryService
argument_list|(
name|shardId
argument_list|,
name|indexSettings
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|Directory
name|newDirectory
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|directory
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|throttleTimeInNanos
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
block|}
decl_stmt|;
return|return
operator|new
name|Store
argument_list|(
name|shardId
argument_list|,
name|indexSettings
argument_list|,
name|directoryService
argument_list|,
operator|new
name|DummyShardLock
argument_list|(
name|shardId
argument_list|)
argument_list|)
return|;
block|}
DECL|method|createSnapshotDeletionPolicy
specifier|protected
name|SnapshotDeletionPolicy
name|createSnapshotDeletionPolicy
parameter_list|()
block|{
return|return
operator|new
name|SnapshotDeletionPolicy
argument_list|(
operator|new
name|KeepOnlyLastCommitDeletionPolicy
argument_list|()
argument_list|)
return|;
block|}
DECL|method|createShadowEngine
specifier|protected
name|ShadowEngine
name|createShadowEngine
parameter_list|(
name|Store
name|store
parameter_list|)
block|{
return|return
name|createShadowEngine
argument_list|(
name|defaultSettings
argument_list|,
name|store
argument_list|)
return|;
block|}
DECL|method|createInternalEngine
specifier|protected
name|InternalEngine
name|createInternalEngine
parameter_list|(
name|Store
name|store
parameter_list|,
name|Path
name|translogPath
parameter_list|)
block|{
return|return
name|createInternalEngine
argument_list|(
name|defaultSettings
argument_list|,
name|store
argument_list|,
name|translogPath
argument_list|)
return|;
block|}
DECL|method|createShadowEngine
specifier|protected
name|ShadowEngine
name|createShadowEngine
parameter_list|(
name|Settings
name|indexSettings
parameter_list|,
name|Store
name|store
parameter_list|)
block|{
return|return
operator|new
name|ShadowEngine
argument_list|(
name|config
argument_list|(
name|indexSettings
argument_list|,
name|store
argument_list|,
literal|null
argument_list|,
operator|new
name|MergeSchedulerConfig
argument_list|(
name|indexSettings
argument_list|)
argument_list|,
literal|null
argument_list|)
argument_list|)
return|;
block|}
DECL|method|createInternalEngine
specifier|protected
name|InternalEngine
name|createInternalEngine
parameter_list|(
name|Settings
name|indexSettings
parameter_list|,
name|Store
name|store
parameter_list|,
name|Path
name|translogPath
parameter_list|)
block|{
return|return
name|createInternalEngine
argument_list|(
name|indexSettings
argument_list|,
name|store
argument_list|,
name|translogPath
argument_list|,
name|newMergePolicy
argument_list|()
argument_list|)
return|;
block|}
DECL|method|createInternalEngine
specifier|protected
name|InternalEngine
name|createInternalEngine
parameter_list|(
name|Settings
name|indexSettings
parameter_list|,
name|Store
name|store
parameter_list|,
name|Path
name|translogPath
parameter_list|,
name|MergePolicy
name|mergePolicy
parameter_list|)
block|{
return|return
operator|new
name|InternalEngine
argument_list|(
name|config
argument_list|(
name|indexSettings
argument_list|,
name|store
argument_list|,
name|translogPath
argument_list|,
operator|new
name|MergeSchedulerConfig
argument_list|(
name|indexSettings
argument_list|)
argument_list|,
name|mergePolicy
argument_list|)
argument_list|,
literal|true
argument_list|)
return|;
block|}
DECL|method|config
specifier|public
name|EngineConfig
name|config
parameter_list|(
name|Settings
name|indexSettings
parameter_list|,
name|Store
name|store
parameter_list|,
name|Path
name|translogPath
parameter_list|,
name|MergeSchedulerConfig
name|mergeSchedulerConfig
parameter_list|,
name|MergePolicy
name|mergePolicy
parameter_list|)
block|{
name|IndexWriterConfig
name|iwc
init|=
name|newIndexWriterConfig
argument_list|()
decl_stmt|;
name|TranslogConfig
name|translogConfig
init|=
operator|new
name|TranslogConfig
argument_list|(
name|shardId
argument_list|,
name|translogPath
argument_list|,
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
name|shardId
operator|.
name|index
argument_list|()
argument_list|,
name|indexSettings
argument_list|,
name|Collections
operator|.
name|EMPTY_LIST
argument_list|)
argument_list|,
name|Translog
operator|.
name|Durabilty
operator|.
name|REQUEST
argument_list|,
name|BigArrays
operator|.
name|NON_RECYCLING_INSTANCE
argument_list|,
name|threadPool
argument_list|)
decl_stmt|;
name|EngineConfig
name|config
init|=
operator|new
name|EngineConfig
argument_list|(
name|shardId
argument_list|,
name|threadPool
argument_list|,
operator|new
name|ShardIndexingService
argument_list|(
name|shardId
argument_list|,
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
name|shardId
operator|.
name|index
argument_list|()
argument_list|,
name|indexSettings
argument_list|,
name|Collections
operator|.
name|EMPTY_LIST
argument_list|)
argument_list|)
argument_list|,
name|indexSettings
argument_list|,
literal|null
argument_list|,
name|store
argument_list|,
name|createSnapshotDeletionPolicy
argument_list|()
argument_list|,
name|mergePolicy
argument_list|,
name|mergeSchedulerConfig
argument_list|,
name|iwc
operator|.
name|getAnalyzer
argument_list|()
argument_list|,
name|iwc
operator|.
name|getSimilarity
argument_list|()
argument_list|,
operator|new
name|CodecService
argument_list|(
literal|null
argument_list|,
name|logger
argument_list|)
argument_list|,
operator|new
name|Engine
operator|.
name|EventListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailedEngine
parameter_list|(
name|String
name|reason
parameter_list|,
annotation|@
name|Nullable
name|Throwable
name|t
parameter_list|)
block|{
comment|// we don't need to notify anybody in this test
block|}
block|}
argument_list|,
literal|null
argument_list|,
name|IndexSearcher
operator|.
name|getDefaultQueryCache
argument_list|()
argument_list|,
name|IndexSearcher
operator|.
name|getDefaultQueryCachingPolicy
argument_list|()
argument_list|,
name|translogConfig
argument_list|,
name|TimeValue
operator|.
name|timeValueMinutes
argument_list|(
literal|5
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|config
operator|.
name|setCreate
argument_list|(
name|Lucene
operator|.
name|indexExists
argument_list|(
name|store
operator|.
name|directory
argument_list|()
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ElasticsearchException
argument_list|(
literal|"can't find index?"
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
name|config
return|;
block|}
DECL|method|newUid
specifier|protected
name|Term
name|newUid
parameter_list|(
name|String
name|id
parameter_list|)
block|{
return|return
operator|new
name|Term
argument_list|(
literal|"_uid"
argument_list|,
name|id
argument_list|)
return|;
block|}
DECL|field|B_1
specifier|protected
specifier|static
specifier|final
name|BytesReference
name|B_1
init|=
operator|new
name|BytesArray
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|1
block|}
argument_list|)
decl_stmt|;
DECL|field|B_2
specifier|protected
specifier|static
specifier|final
name|BytesReference
name|B_2
init|=
operator|new
name|BytesArray
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|2
block|}
argument_list|)
decl_stmt|;
DECL|field|B_3
specifier|protected
specifier|static
specifier|final
name|BytesReference
name|B_3
init|=
operator|new
name|BytesArray
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|3
block|}
argument_list|)
decl_stmt|;
DECL|method|testCommitStats
specifier|public
name|void
name|testCommitStats
parameter_list|()
block|{
comment|// create a doc and refresh
name|ParsedDocument
name|doc
init|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|testDocumentWithTextField
argument_list|()
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
name|CommitStats
name|stats1
init|=
name|replicaEngine
operator|.
name|commitStats
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|stats1
operator|.
name|getGeneration
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats1
operator|.
name|getId
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats1
operator|.
name|getUserData
argument_list|()
argument_list|,
name|hasKey
argument_list|(
name|Translog
operator|.
name|TRANSLOG_GENERATION_KEY
argument_list|)
argument_list|)
expr_stmt|;
comment|// flush the primary engine
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
comment|// flush on replica to make flush visible
name|replicaEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
name|CommitStats
name|stats2
init|=
name|replicaEngine
operator|.
name|commitStats
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|stats2
operator|.
name|getGeneration
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
name|stats1
operator|.
name|getGeneration
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats2
operator|.
name|getId
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats2
operator|.
name|getId
argument_list|()
argument_list|,
name|not
argument_list|(
name|equalTo
argument_list|(
name|stats1
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats2
operator|.
name|getUserData
argument_list|()
argument_list|,
name|hasKey
argument_list|(
name|Translog
operator|.
name|TRANSLOG_GENERATION_KEY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats2
operator|.
name|getUserData
argument_list|()
argument_list|,
name|hasKey
argument_list|(
name|Translog
operator|.
name|TRANSLOG_UUID_KEY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats2
operator|.
name|getUserData
argument_list|()
operator|.
name|get
argument_list|(
name|Translog
operator|.
name|TRANSLOG_GENERATION_KEY
argument_list|)
argument_list|,
name|not
argument_list|(
name|equalTo
argument_list|(
name|stats1
operator|.
name|getUserData
argument_list|()
operator|.
name|get
argument_list|(
name|Translog
operator|.
name|TRANSLOG_GENERATION_KEY
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats2
operator|.
name|getUserData
argument_list|()
operator|.
name|get
argument_list|(
name|Translog
operator|.
name|TRANSLOG_UUID_KEY
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|stats1
operator|.
name|getUserData
argument_list|()
operator|.
name|get
argument_list|(
name|Translog
operator|.
name|TRANSLOG_UUID_KEY
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSegments
specifier|public
name|void
name|testSegments
parameter_list|()
throws|throws
name|Exception
block|{
name|primaryEngine
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// recreate without merging
name|primaryEngine
operator|=
name|createInternalEngine
argument_list|(
name|defaultSettings
argument_list|,
name|store
argument_list|,
name|createTempDir
argument_list|()
argument_list|,
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Segment
argument_list|>
name|segments
init|=
name|primaryEngine
operator|.
name|segments
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getMemoryInBytes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|boolean
name|defaultCompound
init|=
name|defaultSettings
operator|.
name|getAsBoolean
argument_list|(
name|EngineConfig
operator|.
name|INDEX_COMPOUND_ON_FLUSH
argument_list|,
literal|true
argument_list|)
decl_stmt|;
comment|// create a doc and refresh
name|ParsedDocument
name|doc
init|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|testDocumentWithTextField
argument_list|()
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
name|ParsedDocument
name|doc2
init|=
name|testParsedDocument
argument_list|(
literal|"2"
argument_list|,
literal|"2"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|testDocumentWithTextField
argument_list|()
argument_list|,
name|B_2
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"2"
argument_list|)
argument_list|,
name|doc2
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|segments
operator|=
name|primaryEngine
operator|.
name|segments
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|SegmentsStats
name|stats
init|=
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getTermsMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStoredFieldsMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getTermVectorsMemoryInBytes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getNormsMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getDocValuesMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|defaultCompound
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|ramTree
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check that the replica sees nothing
name|segments
operator|=
name|replicaEngine
operator|.
name|segments
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|=
name|replicaEngine
operator|.
name|segmentsStats
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getTermsMemoryInBytes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStoredFieldsMemoryInBytes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getTermVectorsMemoryInBytes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getNormsMemoryInBytes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getDocValuesMemoryInBytes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// flush the primary engine
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
comment|// refresh the replica
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"tests"
argument_list|)
expr_stmt|;
comment|// Check that the primary AND replica sees segments now
name|segments
operator|=
name|primaryEngine
operator|.
name|segments
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|defaultCompound
argument_list|)
argument_list|)
expr_stmt|;
name|segments
operator|=
name|replicaEngine
operator|.
name|segments
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|replicaEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|defaultCompound
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|config
argument_list|()
operator|.
name|setCompoundOnFlush
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|onSettingsChanged
argument_list|()
expr_stmt|;
name|ParsedDocument
name|doc3
init|=
name|testParsedDocument
argument_list|(
literal|"3"
argument_list|,
literal|"3"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|testDocumentWithTextField
argument_list|()
argument_list|,
name|B_3
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"3"
argument_list|)
argument_list|,
name|doc3
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|segments
operator|=
name|primaryEngine
operator|.
name|segments
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getTermsMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
name|stats
operator|.
name|getTermsMemoryInBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getStoredFieldsMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
name|stats
operator|.
name|getStoredFieldsMemoryInBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getTermVectorsMemoryInBytes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getNormsMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
name|stats
operator|.
name|getNormsMemoryInBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getDocValuesMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
name|stats
operator|.
name|getDocValuesMemoryInBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getGeneration
argument_list|()
operator|<
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getGeneration
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|defaultCompound
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make visible to shadow replica
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|segments
operator|=
name|replicaEngine
operator|.
name|segments
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|replicaEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|replicaEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getTermsMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
name|stats
operator|.
name|getTermsMemoryInBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|replicaEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getStoredFieldsMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
name|stats
operator|.
name|getStoredFieldsMemoryInBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|replicaEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getTermVectorsMemoryInBytes
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|replicaEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getNormsMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
name|stats
operator|.
name|getNormsMemoryInBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|replicaEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getDocValuesMemoryInBytes
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
name|stats
operator|.
name|getDocValuesMemoryInBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getGeneration
argument_list|()
operator|<
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getGeneration
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|defaultCompound
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|delete
argument_list|(
operator|new
name|Engine
operator|.
name|Delete
argument_list|(
literal|"test"
argument_list|,
literal|"1"
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|segments
operator|=
name|primaryEngine
operator|.
name|segments
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getGeneration
argument_list|()
operator|<
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getGeneration
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|defaultCompound
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make visible to shadow replica
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|config
argument_list|()
operator|.
name|setCompoundOnFlush
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|onSettingsChanged
argument_list|()
expr_stmt|;
name|ParsedDocument
name|doc4
init|=
name|testParsedDocument
argument_list|(
literal|"4"
argument_list|,
literal|"4"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|testDocumentWithTextField
argument_list|()
argument_list|,
name|B_3
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"4"
argument_list|)
argument_list|,
name|doc4
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|segments
operator|=
name|primaryEngine
operator|.
name|segments
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|primaryEngine
operator|.
name|segmentsStats
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getGeneration
argument_list|()
operator|<
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getGeneration
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|defaultCompound
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|isCommitted
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|isSearch
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getNumDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|isCompound
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testVerboseSegments
specifier|public
name|void
name|testVerboseSegments
parameter_list|()
throws|throws
name|Exception
block|{
name|primaryEngine
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// recreate without merging
name|primaryEngine
operator|=
name|createInternalEngine
argument_list|(
name|defaultSettings
argument_list|,
name|store
argument_list|,
name|createTempDir
argument_list|()
argument_list|,
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Segment
argument_list|>
name|segments
init|=
name|primaryEngine
operator|.
name|segments
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|ParsedDocument
name|doc
init|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|testDocumentWithTextField
argument_list|()
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|segments
operator|=
name|primaryEngine
operator|.
name|segments
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|ramTree
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|ParsedDocument
name|doc2
init|=
name|testParsedDocument
argument_list|(
literal|"2"
argument_list|,
literal|"2"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|testDocumentWithTextField
argument_list|()
argument_list|,
name|B_2
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"2"
argument_list|)
argument_list|,
name|doc2
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|ParsedDocument
name|doc3
init|=
name|testParsedDocument
argument_list|(
literal|"3"
argument_list|,
literal|"3"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|testDocumentWithTextField
argument_list|()
argument_list|,
name|B_3
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"3"
argument_list|)
argument_list|,
name|doc3
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|segments
operator|=
name|primaryEngine
operator|.
name|segments
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|ramTree
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|ramTree
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|ramTree
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// Now make the changes visible to the replica
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|segments
operator|=
name|replicaEngine
operator|.
name|segments
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|ramTree
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|ramTree
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|segments
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|ramTree
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testShadowEngineIgnoresWriteOperations
specifier|public
name|void
name|testShadowEngineIgnoresWriteOperations
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create a document
name|ParseContext
operator|.
name|Document
name|document
init|=
name|testDocumentWithTextField
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|SourceFieldMapper
operator|.
name|NAME
argument_list|,
name|B_1
operator|.
name|toBytes
argument_list|()
argument_list|,
name|SourceFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|ParsedDocument
name|doc
init|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|document
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
try|try
block|{
name|replicaEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"should have thrown an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|e
parameter_list|)
block|{}
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
comment|// its not there...
name|Engine
operator|.
name|Searcher
name|searchResult
init|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
name|Engine
operator|.
name|GetResult
name|getResult
init|=
name|replicaEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|true
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// index a document
name|document
operator|=
name|testDocument
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|TextField
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|document
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
try|try
block|{
name|replicaEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"should have thrown an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|e
parameter_list|)
block|{}
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
comment|// its still not there...
name|searchResult
operator|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
name|getResult
operator|=
name|replicaEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|true
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// Now, add a document to the primary so we can test shadow engine deletes
name|document
operator|=
name|testDocumentWithTextField
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|SourceFieldMapper
operator|.
name|NAME
argument_list|,
name|B_1
operator|.
name|toBytes
argument_list|()
argument_list|,
name|SourceFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|document
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
comment|// Now the replica can see it
name|searchResult
operator|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// And the replica can retrieve it
name|getResult
operator|=
name|replicaEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|false
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|docIdAndVersion
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// try to delete it on the replica
try|try
block|{
name|replicaEngine
operator|.
name|delete
argument_list|(
operator|new
name|Engine
operator|.
name|Delete
argument_list|(
literal|"test"
argument_list|,
literal|"1"
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"should have thrown an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|e
parameter_list|)
block|{}
name|replicaEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
comment|// it's still there!
name|searchResult
operator|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
name|getResult
operator|=
name|replicaEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|false
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|docIdAndVersion
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// it's still there on the primary also!
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
name|getResult
operator|=
name|primaryEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|false
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|docIdAndVersion
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
block|}
DECL|method|testSimpleOperations
specifier|public
name|void
name|testSimpleOperations
parameter_list|()
throws|throws
name|Exception
block|{
name|Engine
operator|.
name|Searcher
name|searchResult
init|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// create a document
name|ParseContext
operator|.
name|Document
name|document
init|=
name|testDocumentWithTextField
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|SourceFieldMapper
operator|.
name|NAME
argument_list|,
name|B_1
operator|.
name|toBytes
argument_list|()
argument_list|,
name|SourceFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|ParsedDocument
name|doc
init|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|document
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
comment|// its not there...
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// not on the replica either...
name|searchResult
operator|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// but, we can still get it (in realtime)
name|Engine
operator|.
name|GetResult
name|getResult
init|=
name|primaryEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|true
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|source
argument_list|()
operator|.
name|source
operator|.
name|toBytesArray
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|B_1
operator|.
name|toBytesArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|docIdAndVersion
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// can't get it from the replica, because it's not in the translog for a shadow replica
name|getResult
operator|=
name|replicaEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|true
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// but, not there non realtime
name|getResult
operator|=
name|primaryEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|false
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// refresh and it should be there
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
comment|// now its there...
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// also in non realtime
name|getResult
operator|=
name|primaryEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|false
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|docIdAndVersion
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// still not in the replica because no flush
name|searchResult
operator|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// now do an update
name|document
operator|=
name|testDocument
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|TextField
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|SourceFieldMapper
operator|.
name|NAME
argument_list|,
name|B_2
operator|.
name|toBytes
argument_list|()
argument_list|,
name|SourceFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|document
argument_list|,
name|B_2
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
comment|// its not updated yet...
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// but, we can still get it (in realtime)
name|getResult
operator|=
name|primaryEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|true
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|source
argument_list|()
operator|.
name|source
operator|.
name|toBytesArray
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|B_2
operator|.
name|toBytesArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|docIdAndVersion
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// refresh and it should be updated
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// flush, now shadow replica should have the files
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
comment|// still not in the replica because the replica hasn't refreshed
name|searchResult
operator|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
comment|// the replica finally sees it because primary has flushed and replica refreshed
name|searchResult
operator|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// now delete
name|primaryEngine
operator|.
name|delete
argument_list|(
operator|new
name|Engine
operator|.
name|Delete
argument_list|(
literal|"test"
argument_list|,
literal|"1"
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// its not deleted yet
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// but, get should not see it (in realtime)
name|getResult
operator|=
name|primaryEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|true
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// refresh and it should be deleted
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// add it back
name|document
operator|=
name|testDocumentWithTextField
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|SourceFieldMapper
operator|.
name|NAME
argument_list|,
name|B_1
operator|.
name|toBytes
argument_list|()
argument_list|,
name|SourceFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|document
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
comment|// its not there...
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// refresh and it should be there
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
comment|// now its there...
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// now flush
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
comment|// and, verify get (in real time)
name|getResult
operator|=
name|primaryEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|true
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|source
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|docIdAndVersion
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// the replica should see it if we refresh too!
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|searchResult
operator|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
name|getResult
operator|=
name|replicaEngine
operator|.
name|get
argument_list|(
operator|new
name|Engine
operator|.
name|Get
argument_list|(
literal|true
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|exists
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|source
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getResult
operator|.
name|docIdAndVersion
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|getResult
operator|.
name|release
argument_list|()
expr_stmt|;
comment|// make sure we can still work with the engine
comment|// now do an update
name|document
operator|=
name|testDocument
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|TextField
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|document
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
comment|// its not updated yet...
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// refresh and it should be updated
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// Make visible to shadow replica
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|searchResult
operator|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test1"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testSearchResultRelease
specifier|public
name|void
name|testSearchResultRelease
parameter_list|()
throws|throws
name|Exception
block|{
name|Engine
operator|.
name|Searcher
name|searchResult
init|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// create a document
name|ParsedDocument
name|doc
init|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|testDocumentWithTextField
argument_list|()
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
comment|// its not there...
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
name|searchResult
operator|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// flush& refresh and it should everywhere
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
comment|// now its there...
name|searchResult
operator|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
name|searchResult
operator|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// don't release the replica search result yet...
comment|// delete, refresh and do a new search, it should not be there
name|primaryEngine
operator|.
name|delete
argument_list|(
operator|new
name|Engine
operator|.
name|Delete
argument_list|(
literal|"test"
argument_list|,
literal|"1"
argument_list|,
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
name|primaryEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|Engine
operator|.
name|Searcher
name|updateSearchResult
init|=
name|primaryEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|updateSearchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|updateSearchResult
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// the non released replica search result should not see the deleted yet...
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testFailEngineOnCorruption
specifier|public
name|void
name|testFailEngineOnCorruption
parameter_list|()
block|{
name|ParsedDocument
name|doc
init|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|testDocumentWithTextField
argument_list|()
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
name|MockDirectoryWrapper
name|leaf
init|=
name|DirectoryUtils
operator|.
name|getLeaf
argument_list|(
name|replicaEngine
operator|.
name|config
argument_list|()
operator|.
name|getStore
argument_list|()
operator|.
name|directory
argument_list|()
argument_list|,
name|MockDirectoryWrapper
operator|.
name|class
argument_list|)
decl_stmt|;
name|leaf
operator|.
name|setRandomIOExceptionRate
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
name|leaf
operator|.
name|setRandomIOExceptionRateOnOpen
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
try|try
block|{
name|replicaEngine
operator|.
name|refresh
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"exception expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{          }
try|try
block|{
name|Engine
operator|.
name|Searcher
name|searchResult
init|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|MatcherAssert
operator|.
name|assertThat
argument_list|(
name|searchResult
argument_list|,
name|EngineSearcherTotalHitsMatcher
operator|.
name|engineSearcherTotalHits
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"value"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|searchResult
operator|.
name|close
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"exception expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EngineClosedException
name|ex
parameter_list|)
block|{
comment|// all is well
block|}
block|}
DECL|method|testExtractShardId
specifier|public
name|void
name|testExtractShardId
parameter_list|()
block|{
try|try
init|(
name|Engine
operator|.
name|Searcher
name|test
init|=
name|replicaEngine
operator|.
name|acquireSearcher
argument_list|(
literal|"test"
argument_list|)
init|)
block|{
name|ShardId
name|shardId
init|=
name|ShardUtils
operator|.
name|extractShardId
argument_list|(
name|test
operator|.
name|getDirectoryReader
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|shardId
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|shardId
argument_list|,
name|replicaEngine
operator|.
name|config
argument_list|()
operator|.
name|getShardId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Random test that throws random exception and ensures all references are      * counted down / released and resources are closed.      */
DECL|method|testFailStart
specifier|public
name|void
name|testFailStart
parameter_list|()
throws|throws
name|IOException
block|{
comment|// Need a commit point for this
name|ParsedDocument
name|doc
init|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|testDocumentWithTextField
argument_list|()
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|primaryEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
name|primaryEngine
operator|.
name|flush
argument_list|()
expr_stmt|;
comment|// this test fails if any reader, searcher or directory is not closed - MDW FTW
specifier|final
name|int
name|iters
init|=
name|scaledRandomIntBetween
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iters
condition|;
name|i
operator|++
control|)
block|{
name|MockDirectoryWrapper
name|wrapper
init|=
name|newMockFSDirectory
argument_list|(
name|dirPath
argument_list|)
decl_stmt|;
name|wrapper
operator|.
name|setFailOnOpenInput
argument_list|(
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|wrapper
operator|.
name|setAllowRandomFileNotFoundException
argument_list|(
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|wrapper
operator|.
name|setRandomIOExceptionRate
argument_list|(
name|randomDouble
argument_list|()
argument_list|)
expr_stmt|;
name|wrapper
operator|.
name|setRandomIOExceptionRateOnOpen
argument_list|(
name|randomDouble
argument_list|()
argument_list|)
expr_stmt|;
try|try
init|(
name|Store
name|store
init|=
name|createStore
argument_list|(
name|wrapper
argument_list|)
init|)
block|{
name|int
name|refCount
init|=
name|store
operator|.
name|refCount
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"refCount: "
operator|+
name|store
operator|.
name|refCount
argument_list|()
argument_list|,
name|store
operator|.
name|refCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|ShadowEngine
name|holder
decl_stmt|;
try|try
block|{
name|holder
operator|=
name|createShadowEngine
argument_list|(
name|store
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EngineCreationFailureException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|store
operator|.
name|refCount
argument_list|()
argument_list|,
name|refCount
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|assertEquals
argument_list|(
name|store
operator|.
name|refCount
argument_list|()
argument_list|,
name|refCount
operator|+
literal|1
argument_list|)
expr_stmt|;
specifier|final
name|int
name|numStarts
init|=
name|scaledRandomIntBetween
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|numStarts
condition|;
name|j
operator|++
control|)
block|{
try|try
block|{
name|assertEquals
argument_list|(
name|store
operator|.
name|refCount
argument_list|()
argument_list|,
name|refCount
operator|+
literal|1
argument_list|)
expr_stmt|;
name|holder
operator|.
name|close
argument_list|()
expr_stmt|;
name|holder
operator|=
name|createShadowEngine
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|store
operator|.
name|refCount
argument_list|()
argument_list|,
name|refCount
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EngineCreationFailureException
name|ex
parameter_list|)
block|{
comment|// all is fine
name|assertEquals
argument_list|(
name|store
operator|.
name|refCount
argument_list|()
argument_list|,
name|refCount
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
name|holder
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|store
operator|.
name|refCount
argument_list|()
argument_list|,
name|refCount
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testSettings
specifier|public
name|void
name|testSettings
parameter_list|()
block|{
name|CodecService
name|codecService
init|=
operator|new
name|CodecService
argument_list|(
literal|null
argument_list|,
name|logger
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|replicaEngine
operator|.
name|config
argument_list|()
operator|.
name|getCodec
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|codecService
operator|.
name|codec
argument_list|(
name|codecName
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testShadowEngineCreationRetry
specifier|public
name|void
name|testShadowEngineCreationRetry
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Path
name|srDir
init|=
name|createTempDir
argument_list|()
decl_stmt|;
specifier|final
name|Store
name|srStore
init|=
name|createStore
argument_list|(
name|srDir
argument_list|)
decl_stmt|;
name|Lucene
operator|.
name|cleanLuceneIndex
argument_list|(
name|srStore
operator|.
name|directory
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|AtomicBoolean
name|succeeded
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|false
argument_list|)
decl_stmt|;
specifier|final
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
comment|// Create a shadow Engine, which will freak out because there is no
comment|// index yet
name|Thread
name|t
init|=
operator|new
name|Thread
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|latch
operator|.
name|await
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
comment|// ignore interruptions
block|}
try|try
init|(
name|ShadowEngine
name|srEngine
init|=
name|createShadowEngine
argument_list|(
name|srStore
argument_list|)
init|)
block|{
name|succeeded
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"should have been able to create the engine!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
decl_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// count down latch
comment|// now shadow engine should try to be created
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
comment|// Create an InternalEngine, which creates the index so the shadow
comment|// replica will handle it correctly
name|Store
name|pStore
init|=
name|createStore
argument_list|(
name|srDir
argument_list|)
decl_stmt|;
name|InternalEngine
name|pEngine
init|=
name|createInternalEngine
argument_list|(
name|pStore
argument_list|,
name|createTempDir
argument_list|(
literal|"translog-primary"
argument_list|)
argument_list|)
decl_stmt|;
comment|// create a document
name|ParseContext
operator|.
name|Document
name|document
init|=
name|testDocumentWithTextField
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|SourceFieldMapper
operator|.
name|NAME
argument_list|,
name|B_1
operator|.
name|toBytes
argument_list|()
argument_list|,
name|SourceFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|ParsedDocument
name|doc
init|=
name|testParsedDocument
argument_list|(
literal|"1"
argument_list|,
literal|"1"
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|document
argument_list|,
name|B_1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|pEngine
operator|.
name|index
argument_list|(
operator|new
name|Engine
operator|.
name|Index
argument_list|(
name|newUid
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|doc
argument_list|)
argument_list|)
expr_stmt|;
name|pEngine
operator|.
name|flush
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|t
operator|.
name|join
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"ShadowEngine should have been able to be created"
argument_list|,
name|succeeded
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// (shadow engine is already shut down in the try-with-resources)
name|IOUtils
operator|.
name|close
argument_list|(
name|srStore
argument_list|,
name|pEngine
argument_list|,
name|pStore
argument_list|)
expr_stmt|;
block|}
DECL|method|testNoTranslog
specifier|public
name|void
name|testNoTranslog
parameter_list|()
block|{
try|try
block|{
name|replicaEngine
operator|.
name|getTranslog
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"shadow engine has no translog"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|ex
parameter_list|)
block|{
comment|// all good
block|}
block|}
block|}
end_class

end_unit

