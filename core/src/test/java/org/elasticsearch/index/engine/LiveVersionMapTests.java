begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.engine
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRefBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|RamUsageTester
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|TestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_class
DECL|class|LiveVersionMapTests
specifier|public
class|class
name|LiveVersionMapTests
extends|extends
name|ESTestCase
block|{
DECL|method|testRamBytesUsed
specifier|public
name|void
name|testRamBytesUsed
parameter_list|()
throws|throws
name|Exception
block|{
name|LiveVersionMap
name|map
init|=
operator|new
name|LiveVersionMap
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100000
condition|;
operator|++
name|i
control|)
block|{
name|BytesRefBuilder
name|uid
init|=
operator|new
name|BytesRefBuilder
argument_list|()
decl_stmt|;
name|uid
operator|.
name|copyChars
argument_list|(
name|TestUtil
operator|.
name|randomSimpleString
argument_list|(
name|random
argument_list|()
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|VersionValue
name|version
init|=
operator|new
name|VersionValue
argument_list|(
name|randomLong
argument_list|()
argument_list|)
decl_stmt|;
name|map
operator|.
name|putUnderLock
argument_list|(
name|uid
operator|.
name|toBytesRef
argument_list|()
argument_list|,
name|version
argument_list|)
expr_stmt|;
block|}
name|long
name|actualRamBytesUsed
init|=
name|RamUsageTester
operator|.
name|sizeOf
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|long
name|estimatedRamBytesUsed
init|=
name|map
operator|.
name|ramBytesUsed
argument_list|()
decl_stmt|;
comment|// less than 25% off
name|assertEquals
argument_list|(
name|actualRamBytesUsed
argument_list|,
name|estimatedRamBytesUsed
argument_list|,
name|actualRamBytesUsed
operator|/
literal|4
argument_list|)
expr_stmt|;
comment|// now refresh
name|map
operator|.
name|beforeRefresh
argument_list|()
expr_stmt|;
name|map
operator|.
name|afterRefresh
argument_list|(
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100000
condition|;
operator|++
name|i
control|)
block|{
name|BytesRefBuilder
name|uid
init|=
operator|new
name|BytesRefBuilder
argument_list|()
decl_stmt|;
name|uid
operator|.
name|copyChars
argument_list|(
name|TestUtil
operator|.
name|randomSimpleString
argument_list|(
name|random
argument_list|()
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|VersionValue
name|version
init|=
operator|new
name|VersionValue
argument_list|(
name|randomLong
argument_list|()
argument_list|)
decl_stmt|;
name|map
operator|.
name|putUnderLock
argument_list|(
name|uid
operator|.
name|toBytesRef
argument_list|()
argument_list|,
name|version
argument_list|)
expr_stmt|;
block|}
name|actualRamBytesUsed
operator|=
name|RamUsageTester
operator|.
name|sizeOf
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|estimatedRamBytesUsed
operator|=
name|map
operator|.
name|ramBytesUsed
argument_list|()
expr_stmt|;
comment|// less than 25% off
name|assertEquals
argument_list|(
name|actualRamBytesUsed
argument_list|,
name|estimatedRamBytesUsed
argument_list|,
name|actualRamBytesUsed
operator|/
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

