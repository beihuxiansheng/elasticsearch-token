begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.engine
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexCommit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SnapshotDeletionPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
operator|.
name|Translog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
operator|.
name|TranslogDeletionPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
operator|.
name|TranslogDeletionPolicyTests
operator|.
name|createTranslogDeletionPolicy
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|CombinedDeletionPolicyTests
specifier|public
class|class
name|CombinedDeletionPolicyTests
extends|extends
name|ESTestCase
block|{
DECL|method|testPassThrough
specifier|public
name|void
name|testPassThrough
parameter_list|()
throws|throws
name|IOException
block|{
name|SnapshotDeletionPolicy
name|indexDeletionPolicy
init|=
name|mock
argument_list|(
name|SnapshotDeletionPolicy
operator|.
name|class
argument_list|)
decl_stmt|;
name|CombinedDeletionPolicy
name|combinedDeletionPolicy
init|=
operator|new
name|CombinedDeletionPolicy
argument_list|(
name|indexDeletionPolicy
argument_list|,
name|createTranslogDeletionPolicy
argument_list|()
argument_list|,
name|EngineConfig
operator|.
name|OpenMode
operator|.
name|OPEN_INDEX_AND_TRANSLOG
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|IndexCommit
argument_list|>
name|commitList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|long
name|count
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
name|i
operator|++
control|)
block|{
name|commitList
operator|.
name|add
argument_list|(
name|mockIndexCommitWithTranslogGen
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|combinedDeletionPolicy
operator|.
name|onInit
argument_list|(
name|commitList
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|indexDeletionPolicy
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|onInit
argument_list|(
name|commitList
argument_list|)
expr_stmt|;
name|combinedDeletionPolicy
operator|.
name|onCommit
argument_list|(
name|commitList
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|indexDeletionPolicy
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|onCommit
argument_list|(
name|commitList
argument_list|)
expr_stmt|;
block|}
DECL|method|testSettingMinTranslogGen
specifier|public
name|void
name|testSettingMinTranslogGen
parameter_list|()
throws|throws
name|IOException
block|{
name|SnapshotDeletionPolicy
name|indexDeletionPolicy
init|=
name|mock
argument_list|(
name|SnapshotDeletionPolicy
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|TranslogDeletionPolicy
name|translogDeletionPolicy
init|=
name|mock
argument_list|(
name|TranslogDeletionPolicy
operator|.
name|class
argument_list|)
decl_stmt|;
name|CombinedDeletionPolicy
name|combinedDeletionPolicy
init|=
operator|new
name|CombinedDeletionPolicy
argument_list|(
name|indexDeletionPolicy
argument_list|,
name|translogDeletionPolicy
argument_list|,
name|EngineConfig
operator|.
name|OpenMode
operator|.
name|OPEN_INDEX_AND_TRANSLOG
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|IndexCommit
argument_list|>
name|commitList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|long
name|count
init|=
name|randomIntBetween
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|long
name|lastGen
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
name|i
operator|++
control|)
block|{
name|lastGen
operator|+=
name|randomIntBetween
argument_list|(
literal|10
argument_list|,
literal|20000
argument_list|)
expr_stmt|;
name|commitList
operator|.
name|add
argument_list|(
name|mockIndexCommitWithTranslogGen
argument_list|(
name|lastGen
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|combinedDeletionPolicy
operator|.
name|onInit
argument_list|(
name|commitList
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|translogDeletionPolicy
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|setMinTranslogGenerationForRecovery
argument_list|(
name|lastGen
argument_list|)
expr_stmt|;
name|commitList
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
name|i
operator|++
control|)
block|{
name|lastGen
operator|+=
name|randomIntBetween
argument_list|(
literal|10
argument_list|,
literal|20000
argument_list|)
expr_stmt|;
name|commitList
operator|.
name|add
argument_list|(
name|mockIndexCommitWithTranslogGen
argument_list|(
name|lastGen
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|combinedDeletionPolicy
operator|.
name|onCommit
argument_list|(
name|commitList
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|translogDeletionPolicy
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|setMinTranslogGenerationForRecovery
argument_list|(
name|lastGen
argument_list|)
expr_stmt|;
block|}
DECL|method|mockIndexCommitWithTranslogGen
name|IndexCommit
name|mockIndexCommitWithTranslogGen
parameter_list|(
name|long
name|gen
parameter_list|)
throws|throws
name|IOException
block|{
name|IndexCommit
name|commit
init|=
name|mock
argument_list|(
name|IndexCommit
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|commit
operator|.
name|getUserData
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
name|Translog
operator|.
name|TRANSLOG_GENERATION_KEY
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|gen
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|commit
return|;
block|}
block|}
end_class

end_unit

