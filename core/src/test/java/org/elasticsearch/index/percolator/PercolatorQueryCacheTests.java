begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.percolator
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|percolator
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|BinaryDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StoredField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|NoMergePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|TieredMergePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanClause
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|WildcardQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|put
operator|.
name|PutMappingRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|compress
operator|.
name|CompressedXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|index
operator|.
name|ElasticsearchDirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|Environment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexWarmer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
operator|.
name|AnalysisRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
operator|.
name|AnalysisService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|Engine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MapperService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|SourceFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|TypeFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|BoolQueryParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|PercolatorQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryShardContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|TermQueryParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|WildcardQueryParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|IndexShard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|similarity
operator|.
name|SimilarityService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|warmer
operator|.
name|ShardIndexWarmerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|IndicesModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|mapper
operator|.
name|MapperRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|query
operator|.
name|IndicesQueriesRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|IndexSettingsModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|boolQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|termQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|wildcardQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|PercolatorQueryCacheTests
specifier|public
class|class
name|PercolatorQueryCacheTests
extends|extends
name|ESTestCase
block|{
DECL|field|queryShardContext
specifier|private
name|QueryShardContext
name|queryShardContext
decl_stmt|;
DECL|field|cache
specifier|private
name|PercolatorQueryCache
name|cache
decl_stmt|;
DECL|method|initialize
name|void
name|initialize
parameter_list|(
name|Object
modifier|...
name|fields
parameter_list|)
throws|throws
name|IOException
block|{
name|Settings
name|settings
init|=
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"node.name"
argument_list|,
name|PercolatorQueryCacheTests
operator|.
name|class
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|QueryParser
argument_list|<
name|?
argument_list|>
argument_list|>
name|queryParsers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|queryParsers
operator|.
name|put
argument_list|(
literal|"term"
argument_list|,
operator|new
name|TermQueryParser
argument_list|()
argument_list|)
expr_stmt|;
name|queryParsers
operator|.
name|put
argument_list|(
literal|"wildcard"
argument_list|,
operator|new
name|WildcardQueryParser
argument_list|()
argument_list|)
expr_stmt|;
name|queryParsers
operator|.
name|put
argument_list|(
literal|"bool"
argument_list|,
operator|new
name|BoolQueryParser
argument_list|()
argument_list|)
expr_stmt|;
name|IndicesQueriesRegistry
name|indicesQueriesRegistry
init|=
operator|new
name|IndicesQueriesRegistry
argument_list|(
name|settings
argument_list|,
name|queryParsers
argument_list|)
decl_stmt|;
name|Settings
name|indexSettings
init|=
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexSettings
name|idxSettings
init|=
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
operator|new
name|Index
argument_list|(
literal|"_index"
argument_list|,
name|ClusterState
operator|.
name|UNKNOWN_UUID
argument_list|)
argument_list|,
name|indexSettings
argument_list|)
decl_stmt|;
name|SimilarityService
name|similarityService
init|=
operator|new
name|SimilarityService
argument_list|(
name|idxSettings
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
decl_stmt|;
name|AnalysisService
name|analysisService
init|=
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
operator|new
name|Environment
argument_list|(
name|settings
argument_list|)
argument_list|)
operator|.
name|build
argument_list|(
name|idxSettings
argument_list|)
decl_stmt|;
name|MapperRegistry
name|mapperRegistry
init|=
operator|new
name|IndicesModule
argument_list|()
operator|.
name|getMapperRegistry
argument_list|()
decl_stmt|;
name|MapperService
name|mapperService
init|=
operator|new
name|MapperService
argument_list|(
name|idxSettings
argument_list|,
name|analysisService
argument_list|,
name|similarityService
argument_list|,
name|mapperRegistry
argument_list|,
parameter_list|()
lambda|->
name|queryShardContext
argument_list|)
decl_stmt|;
name|mapperService
operator|.
name|merge
argument_list|(
literal|"type"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|PutMappingRequest
operator|.
name|buildFromSimplifiedDef
argument_list|(
literal|"type"
argument_list|,
name|fields
argument_list|)
operator|.
name|string
argument_list|()
argument_list|)
argument_list|,
name|MapperService
operator|.
name|MergeReason
operator|.
name|MAPPING_UPDATE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|cache
operator|=
operator|new
name|PercolatorQueryCache
argument_list|(
name|idxSettings
argument_list|,
parameter_list|()
lambda|->
name|queryShardContext
argument_list|)
expr_stmt|;
name|queryShardContext
operator|=
operator|new
name|QueryShardContext
argument_list|(
name|idxSettings
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|mapperService
argument_list|,
name|similarityService
argument_list|,
literal|null
argument_list|,
name|indicesQueriesRegistry
argument_list|,
name|cache
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|testLoadQueries
specifier|public
name|void
name|testLoadQueries
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|indexWriter
init|=
operator|new
name|IndexWriter
argument_list|(
name|directory
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|16
argument_list|)
argument_list|)
decl_stmt|;
name|boolean
name|legacyFormat
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
name|Version
name|version
init|=
name|legacyFormat
condition|?
name|Version
operator|.
name|V_2_0_0
else|:
name|Version
operator|.
name|CURRENT
decl_stmt|;
name|storeQuery
argument_list|(
literal|"0"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
argument_list|,
literal|true
argument_list|,
name|legacyFormat
argument_list|)
expr_stmt|;
name|storeQuery
argument_list|(
literal|"1"
argument_list|,
name|indexWriter
argument_list|,
name|wildcardQuery
argument_list|(
literal|"field1"
argument_list|,
literal|"v*"
argument_list|)
argument_list|,
literal|true
argument_list|,
name|legacyFormat
argument_list|)
expr_stmt|;
name|storeQuery
argument_list|(
literal|"2"
argument_list|,
name|indexWriter
argument_list|,
name|boolQuery
argument_list|()
operator|.
name|must
argument_list|(
name|termQuery
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
argument_list|)
operator|.
name|must
argument_list|(
name|termQuery
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|,
name|legacyFormat
argument_list|)
expr_stmt|;
comment|// dymmy docs should be skipped during loading:
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"dummy"
argument_list|,
literal|"value"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|storeQuery
argument_list|(
literal|"4"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
argument_list|,
literal|true
argument_list|,
name|legacyFormat
argument_list|)
expr_stmt|;
comment|// only documents that .percolator type should be loaded:
name|storeQuery
argument_list|(
literal|"5"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
argument_list|,
literal|false
argument_list|,
name|legacyFormat
argument_list|)
expr_stmt|;
name|storeQuery
argument_list|(
literal|"6"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"field3"
argument_list|,
literal|"value3"
argument_list|)
argument_list|,
literal|true
argument_list|,
name|legacyFormat
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|forceMerge
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// also include queries for percolator docs marked as deleted:
name|indexWriter
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"6"
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|ShardId
name|shardId
init|=
operator|new
name|ShardId
argument_list|(
literal|"_index"
argument_list|,
name|ClusterState
operator|.
name|UNKNOWN_UUID
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|IndexReader
name|indexReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
argument_list|,
name|shardId
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexReader
operator|.
name|numDeletedDocs
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexReader
operator|.
name|maxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|initialize
argument_list|(
literal|"field1"
argument_list|,
literal|"type=keyword"
argument_list|,
literal|"field2"
argument_list|,
literal|"type=keyword"
argument_list|,
literal|"field3"
argument_list|,
literal|"type=keyword"
argument_list|)
expr_stmt|;
name|PercolatorQueryCache
operator|.
name|QueriesLeaf
name|leaf
init|=
name|cache
operator|.
name|loadQueries
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|version
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|queries
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|WildcardQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"field1"
argument_list|,
literal|"v*"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
argument_list|)
argument_list|,
name|BooleanClause
operator|.
name|Occur
operator|.
name|MUST
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
argument_list|)
argument_list|,
name|BooleanClause
operator|.
name|Occur
operator|.
name|MUST
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|4
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|6
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"field3"
argument_list|,
literal|"value3"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|directory
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetQueries
specifier|public
name|void
name|testGetQueries
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|indexWriter
init|=
operator|new
name|IndexWriter
argument_list|(
name|directory
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
argument_list|)
decl_stmt|;
name|storeQuery
argument_list|(
literal|"0"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"0"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|storeQuery
argument_list|(
literal|"1"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"1"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|storeQuery
argument_list|(
literal|"2"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"2"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|flush
argument_list|()
expr_stmt|;
name|storeQuery
argument_list|(
literal|"3"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"3"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|storeQuery
argument_list|(
literal|"4"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"4"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|storeQuery
argument_list|(
literal|"5"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"5"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|flush
argument_list|()
expr_stmt|;
name|storeQuery
argument_list|(
literal|"6"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"6"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|storeQuery
argument_list|(
literal|"7"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"7"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|storeQuery
argument_list|(
literal|"8"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"8"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|flush
argument_list|()
expr_stmt|;
name|indexWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|ShardId
name|shardId
init|=
operator|new
name|ShardId
argument_list|(
literal|"_index"
argument_list|,
name|ClusterState
operator|.
name|UNKNOWN_UUID
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|IndexReader
name|indexReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
argument_list|,
name|shardId
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexReader
operator|.
name|maxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|initialize
argument_list|(
literal|"a"
argument_list|,
literal|"type=keyword"
argument_list|)
expr_stmt|;
try|try
block|{
name|cache
operator|.
name|getQueries
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"IllegalStateException expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"queries not loaded, queries should be have been preloaded during index warming..."
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|IndexShard
name|indexShard
init|=
name|mockIndexShard
argument_list|()
decl_stmt|;
name|ThreadPool
name|threadPool
init|=
name|mockThreadPool
argument_list|()
decl_stmt|;
name|IndexWarmer
operator|.
name|Listener
name|listener
init|=
name|cache
operator|.
name|createListener
argument_list|(
name|threadPool
argument_list|)
decl_stmt|;
name|listener
operator|.
name|warmReader
argument_list|(
name|indexShard
argument_list|,
operator|new
name|Engine
operator|.
name|Searcher
argument_list|(
literal|"test"
argument_list|,
operator|new
name|IndexSearcher
argument_list|(
name|indexReader
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|PercolatorQueryCacheStats
name|stats
init|=
name|cache
operator|.
name|getStats
argument_list|(
name|shardId
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getNumQueries
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|9L
argument_list|)
argument_list|)
expr_stmt|;
name|PercolatorQuery
operator|.
name|QueryRegistry
operator|.
name|Leaf
name|leaf
init|=
name|cache
operator|.
name|getQueries
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"2"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|leaf
operator|=
name|cache
operator|.
name|getQueries
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"3"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"4"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"5"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|leaf
operator|=
name|cache
operator|.
name|getQueries
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"6"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"7"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|2
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"8"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|directory
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testInvalidateEntries
specifier|public
name|void
name|testInvalidateEntries
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|indexWriter
init|=
operator|new
name|IndexWriter
argument_list|(
name|directory
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
argument_list|)
decl_stmt|;
name|storeQuery
argument_list|(
literal|"0"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"0"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|flush
argument_list|()
expr_stmt|;
name|storeQuery
argument_list|(
literal|"1"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"1"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|flush
argument_list|()
expr_stmt|;
name|storeQuery
argument_list|(
literal|"2"
argument_list|,
name|indexWriter
argument_list|,
name|termQuery
argument_list|(
literal|"a"
argument_list|,
literal|"2"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|flush
argument_list|()
expr_stmt|;
name|ShardId
name|shardId
init|=
operator|new
name|ShardId
argument_list|(
literal|"_index"
argument_list|,
name|ClusterState
operator|.
name|UNKNOWN_UUID
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|IndexReader
name|indexReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|indexWriter
argument_list|)
argument_list|,
name|shardId
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexReader
operator|.
name|maxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|initialize
argument_list|(
literal|"a"
argument_list|,
literal|"type=keyword"
argument_list|)
expr_stmt|;
name|IndexShard
name|indexShard
init|=
name|mockIndexShard
argument_list|()
decl_stmt|;
name|ThreadPool
name|threadPool
init|=
name|mockThreadPool
argument_list|()
decl_stmt|;
name|IndexWarmer
operator|.
name|Listener
name|listener
init|=
name|cache
operator|.
name|createListener
argument_list|(
name|threadPool
argument_list|)
decl_stmt|;
name|listener
operator|.
name|warmReader
argument_list|(
name|indexShard
argument_list|,
operator|new
name|Engine
operator|.
name|Searcher
argument_list|(
literal|"test"
argument_list|,
operator|new
name|IndexSearcher
argument_list|(
name|indexReader
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|cache
operator|.
name|getStats
argument_list|(
name|shardId
argument_list|)
operator|.
name|getNumQueries
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|PercolatorQuery
operator|.
name|QueryRegistry
operator|.
name|Leaf
name|leaf
init|=
name|cache
operator|.
name|getQueries
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|leaf
operator|=
name|cache
operator|.
name|getQueries
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|leaf
operator|=
name|cache
operator|.
name|getQueries
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"2"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// change merge policy, so that merges will actually happen:
name|indexWriter
operator|.
name|getConfig
argument_list|()
operator|.
name|setMergePolicy
argument_list|(
operator|new
name|TieredMergePolicy
argument_list|()
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|forceMergeDeletes
argument_list|()
expr_stmt|;
name|indexReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|indexReader
operator|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|indexWriter
argument_list|)
argument_list|,
name|shardId
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexReader
operator|.
name|maxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|listener
operator|.
name|warmReader
argument_list|(
name|indexShard
argument_list|,
operator|new
name|Engine
operator|.
name|Searcher
argument_list|(
literal|"test"
argument_list|,
operator|new
name|IndexSearcher
argument_list|(
name|indexReader
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|cache
operator|.
name|getStats
argument_list|(
name|shardId
argument_list|)
operator|.
name|getNumQueries
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|leaf
operator|=
name|cache
operator|.
name|getQueries
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|leaf
operator|=
name|cache
operator|.
name|getQueries
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"2"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|forceMerge
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|indexReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|indexReader
operator|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|indexWriter
argument_list|)
argument_list|,
name|shardId
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexReader
operator|.
name|maxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|listener
operator|.
name|warmReader
argument_list|(
name|indexShard
argument_list|,
operator|new
name|Engine
operator|.
name|Searcher
argument_list|(
literal|"test"
argument_list|,
operator|new
name|IndexSearcher
argument_list|(
name|indexReader
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|cache
operator|.
name|getStats
argument_list|(
name|shardId
argument_list|)
operator|.
name|getNumQueries
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|leaf
operator|=
name|cache
operator|.
name|getQueries
argument_list|(
name|indexReader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|0
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|leaf
operator|.
name|getQuery
argument_list|(
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"a"
argument_list|,
literal|"2"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|indexReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|directory
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|storeQuery
name|void
name|storeQuery
parameter_list|(
name|String
name|id
parameter_list|,
name|IndexWriter
name|indexWriter
parameter_list|,
name|QueryBuilder
name|queryBuilder
parameter_list|,
name|boolean
name|typeField
parameter_list|,
name|boolean
name|legacy
parameter_list|)
throws|throws
name|IOException
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
name|id
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|typeField
condition|)
block|{
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
name|PercolatorFieldMapper
operator|.
name|TYPE_NAME
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|legacy
condition|)
block|{
name|BytesReference
name|percolatorQuery
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"query"
argument_list|,
name|queryBuilder
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StoredField
argument_list|(
name|SourceFieldMapper
operator|.
name|NAME
argument_list|,
name|percolatorQuery
operator|.
name|array
argument_list|()
argument_list|,
name|percolatorQuery
operator|.
name|arrayOffset
argument_list|()
argument_list|,
name|percolatorQuery
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|BytesRef
name|queryBuilderAsBytes
init|=
operator|new
name|BytesRef
argument_list|(
name|XContentFactory
operator|.
name|contentBuilder
argument_list|(
name|PercolatorQueryCache
operator|.
name|QUERY_BUILDER_CONTENT_TYPE
argument_list|)
operator|.
name|value
argument_list|(
name|queryBuilder
argument_list|)
operator|.
name|bytes
argument_list|()
operator|.
name|toBytes
argument_list|()
argument_list|)
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|BinaryDocValuesField
argument_list|(
name|PercolatorFieldMapper
operator|.
name|QUERY_BUILDER_FULL_FIELD_NAME
argument_list|,
name|queryBuilderAsBytes
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
DECL|method|mockIndexShard
name|IndexShard
name|mockIndexShard
parameter_list|()
block|{
name|IndexShard
name|indexShard
init|=
name|mock
argument_list|(
name|IndexShard
operator|.
name|class
argument_list|)
decl_stmt|;
name|ShardIndexWarmerService
name|shardIndexWarmerService
init|=
name|mock
argument_list|(
name|ShardIndexWarmerService
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|shardIndexWarmerService
operator|.
name|logger
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|logger
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|indexShard
operator|.
name|warmerService
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|shardIndexWarmerService
argument_list|)
expr_stmt|;
name|IndexSettings
name|indexSettings
init|=
operator|new
name|IndexSettings
argument_list|(
name|IndexMetaData
operator|.
name|builder
argument_list|(
literal|"_index"
argument_list|)
operator|.
name|settings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
literal|1
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
literal|0
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|indexShard
operator|.
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|indexSettings
argument_list|)
expr_stmt|;
return|return
name|indexShard
return|;
block|}
DECL|method|mockThreadPool
name|ThreadPool
name|mockThreadPool
parameter_list|()
block|{
name|ThreadPool
name|threadPool
init|=
name|mock
argument_list|(
name|ThreadPool
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Runnable
operator|::
name|run
argument_list|)
expr_stmt|;
return|return
name|threadPool
return|;
block|}
block|}
end_class

end_unit

