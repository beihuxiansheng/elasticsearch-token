begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.mapper.completion
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|completion
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexableField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|document
operator|.
name|CompletionAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|document
operator|.
name|FuzzyCompletionQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|document
operator|.
name|PrefixCompletionQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|document
operator|.
name|RegexCompletionQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|document
operator|.
name|SuggestField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|CharsRefBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|automaton
operator|.
name|Operations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|automaton
operator|.
name|RegExp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|compress
operator|.
name|CompressedXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|Fuzziness
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|json
operator|.
name|JsonXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
operator|.
name|NamedAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|DocumentMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|FieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MappedFieldType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MapperParsingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|ParsedDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|core
operator|.
name|CompletionFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESSingleNodeTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|containsString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|instanceOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_class
DECL|class|CompletionFieldMapperTests
specifier|public
class|class
name|CompletionFieldMapperTests
extends|extends
name|ESSingleNodeTestCase
block|{
DECL|method|testDefaultConfiguration
specifier|public
name|void
name|testDefaultConfiguration
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|fieldMapper
argument_list|,
name|instanceOf
argument_list|(
name|CompletionFieldMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|MappedFieldType
name|completionFieldType
init|=
name|fieldMapper
operator|.
name|fieldType
argument_list|()
decl_stmt|;
name|NamedAnalyzer
name|indexAnalyzer
init|=
name|completionFieldType
operator|.
name|indexAnalyzer
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|indexAnalyzer
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexAnalyzer
operator|.
name|analyzer
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|CompletionAnalyzer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|CompletionAnalyzer
name|analyzer
init|=
operator|(
name|CompletionAnalyzer
operator|)
name|indexAnalyzer
operator|.
name|analyzer
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzer
operator|.
name|preservePositionIncrements
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzer
operator|.
name|preserveSep
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|NamedAnalyzer
name|searchAnalyzer
init|=
name|completionFieldType
operator|.
name|searchAnalyzer
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|searchAnalyzer
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchAnalyzer
operator|.
name|analyzer
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|CompletionAnalyzer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|analyzer
operator|=
operator|(
name|CompletionAnalyzer
operator|)
name|searchAnalyzer
operator|.
name|analyzer
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|analyzer
operator|.
name|preservePositionIncrements
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzer
operator|.
name|preserveSep
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testCompletionAnalyzerSettings
specifier|public
name|void
name|testCompletionAnalyzerSettings
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"analyzer"
argument_list|,
literal|"simple"
argument_list|)
operator|.
name|field
argument_list|(
literal|"search_analyzer"
argument_list|,
literal|"standard"
argument_list|)
operator|.
name|field
argument_list|(
literal|"preserve_separators"
argument_list|,
literal|false
argument_list|)
operator|.
name|field
argument_list|(
literal|"preserve_position_increments"
argument_list|,
literal|true
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|fieldMapper
argument_list|,
name|instanceOf
argument_list|(
name|CompletionFieldMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|MappedFieldType
name|completionFieldType
init|=
name|fieldMapper
operator|.
name|fieldType
argument_list|()
decl_stmt|;
name|NamedAnalyzer
name|indexAnalyzer
init|=
name|completionFieldType
operator|.
name|indexAnalyzer
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|indexAnalyzer
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexAnalyzer
operator|.
name|analyzer
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|CompletionAnalyzer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|CompletionAnalyzer
name|analyzer
init|=
operator|(
name|CompletionAnalyzer
operator|)
name|indexAnalyzer
operator|.
name|analyzer
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzer
operator|.
name|preservePositionIncrements
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzer
operator|.
name|preserveSep
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|NamedAnalyzer
name|searchAnalyzer
init|=
name|completionFieldType
operator|.
name|searchAnalyzer
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|searchAnalyzer
operator|.
name|name
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"standard"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchAnalyzer
operator|.
name|analyzer
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|CompletionAnalyzer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|analyzer
operator|=
operator|(
name|CompletionAnalyzer
operator|)
name|searchAnalyzer
operator|.
name|analyzer
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|analyzer
operator|.
name|preservePositionIncrements
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzer
operator|.
name|preserveSep
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testTypeParsing
specifier|public
name|void
name|testTypeParsing
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"analyzer"
argument_list|,
literal|"simple"
argument_list|)
operator|.
name|field
argument_list|(
literal|"search_analyzer"
argument_list|,
literal|"standard"
argument_list|)
operator|.
name|field
argument_list|(
literal|"preserve_separators"
argument_list|,
literal|false
argument_list|)
operator|.
name|field
argument_list|(
literal|"preserve_position_increments"
argument_list|,
literal|true
argument_list|)
operator|.
name|field
argument_list|(
literal|"max_input_length"
argument_list|,
literal|14
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|fieldMapper
argument_list|,
name|instanceOf
argument_list|(
name|CompletionFieldMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|CompletionFieldMapper
name|completionFieldMapper
init|=
operator|(
name|CompletionFieldMapper
operator|)
name|fieldMapper
decl_stmt|;
name|XContentBuilder
name|builder
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
decl_stmt|;
name|completionFieldMapper
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|ToXContent
operator|.
name|EMPTY_PARAMS
argument_list|)
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|builder
operator|.
name|close
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|serializedMap
init|=
name|JsonXContent
operator|.
name|jsonXContent
operator|.
name|createParser
argument_list|(
name|builder
operator|.
name|bytes
argument_list|()
argument_list|)
operator|.
name|map
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|configMap
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|serializedMap
operator|.
name|get
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|configMap
operator|.
name|get
argument_list|(
literal|"analyzer"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configMap
operator|.
name|get
argument_list|(
literal|"search_analyzer"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"standard"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|configMap
operator|.
name|get
argument_list|(
literal|"preserve_separators"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|configMap
operator|.
name|get
argument_list|(
literal|"preserve_position_increments"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|configMap
operator|.
name|get
argument_list|(
literal|"max_input_length"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
literal|14
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testParsingMinimal
specifier|public
name|void
name|testParsingMinimal
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|MappedFieldType
name|completionFieldType
init|=
name|fieldMapper
operator|.
name|fieldType
argument_list|()
decl_stmt|;
name|ParsedDocument
name|parsedDocument
init|=
name|defaultMapper
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|,
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"completion"
argument_list|,
literal|"suggestion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
argument_list|)
decl_stmt|;
name|IndexableField
index|[]
name|fields
init|=
name|parsedDocument
operator|.
name|rootDoc
argument_list|()
operator|.
name|getFields
argument_list|(
name|completionFieldType
operator|.
name|names
argument_list|()
operator|.
name|indexName
argument_list|()
argument_list|)
decl_stmt|;
name|assertSuggestFields
argument_list|(
name|fields
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
DECL|method|testParsingMultiValued
specifier|public
name|void
name|testParsingMultiValued
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|MappedFieldType
name|completionFieldType
init|=
name|fieldMapper
operator|.
name|fieldType
argument_list|()
decl_stmt|;
name|ParsedDocument
name|parsedDocument
init|=
name|defaultMapper
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|,
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|array
argument_list|(
literal|"completion"
argument_list|,
literal|"suggestion1"
argument_list|,
literal|"suggestion2"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
argument_list|)
decl_stmt|;
name|IndexableField
index|[]
name|fields
init|=
name|parsedDocument
operator|.
name|rootDoc
argument_list|()
operator|.
name|getFields
argument_list|(
name|completionFieldType
operator|.
name|names
argument_list|()
operator|.
name|indexName
argument_list|()
argument_list|)
decl_stmt|;
name|assertSuggestFields
argument_list|(
name|fields
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
DECL|method|testParsingWithWeight
specifier|public
name|void
name|testParsingWithWeight
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|MappedFieldType
name|completionFieldType
init|=
name|fieldMapper
operator|.
name|fieldType
argument_list|()
decl_stmt|;
name|ParsedDocument
name|parsedDocument
init|=
name|defaultMapper
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|,
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|2
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
argument_list|)
decl_stmt|;
name|IndexableField
index|[]
name|fields
init|=
name|parsedDocument
operator|.
name|rootDoc
argument_list|()
operator|.
name|getFields
argument_list|(
name|completionFieldType
operator|.
name|names
argument_list|()
operator|.
name|indexName
argument_list|()
argument_list|)
decl_stmt|;
name|assertSuggestFields
argument_list|(
name|fields
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
DECL|method|testParsingMultiValueWithWeight
specifier|public
name|void
name|testParsingMultiValueWithWeight
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|MappedFieldType
name|completionFieldType
init|=
name|fieldMapper
operator|.
name|fieldType
argument_list|()
decl_stmt|;
name|ParsedDocument
name|parsedDocument
init|=
name|defaultMapper
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|,
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|array
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion1"
argument_list|,
literal|"suggestion2"
argument_list|,
literal|"suggestion3"
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|2
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
argument_list|)
decl_stmt|;
name|IndexableField
index|[]
name|fields
init|=
name|parsedDocument
operator|.
name|rootDoc
argument_list|()
operator|.
name|getFields
argument_list|(
name|completionFieldType
operator|.
name|names
argument_list|()
operator|.
name|indexName
argument_list|()
argument_list|)
decl_stmt|;
name|assertSuggestFields
argument_list|(
name|fields
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
DECL|method|testParsingFull
specifier|public
name|void
name|testParsingFull
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|MappedFieldType
name|completionFieldType
init|=
name|fieldMapper
operator|.
name|fieldType
argument_list|()
decl_stmt|;
name|ParsedDocument
name|parsedDocument
init|=
name|defaultMapper
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|,
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startArray
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|3
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|4
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion3"
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|5
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
argument_list|)
decl_stmt|;
name|IndexableField
index|[]
name|fields
init|=
name|parsedDocument
operator|.
name|rootDoc
argument_list|()
operator|.
name|getFields
argument_list|(
name|completionFieldType
operator|.
name|names
argument_list|()
operator|.
name|indexName
argument_list|()
argument_list|)
decl_stmt|;
name|assertSuggestFields
argument_list|(
name|fields
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
DECL|method|testParsingMixed
specifier|public
name|void
name|testParsingMixed
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|MappedFieldType
name|completionFieldType
init|=
name|fieldMapper
operator|.
name|fieldType
argument_list|()
decl_stmt|;
name|ParsedDocument
name|parsedDocument
init|=
name|defaultMapper
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|,
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startArray
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|array
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion1"
argument_list|,
literal|"suggestion2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|3
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion3"
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|4
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion4"
argument_list|,
literal|"suggestion5"
argument_list|,
literal|"suggestion6"
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|5
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
argument_list|)
decl_stmt|;
name|IndexableField
index|[]
name|fields
init|=
name|parsedDocument
operator|.
name|rootDoc
argument_list|()
operator|.
name|getFields
argument_list|(
name|completionFieldType
operator|.
name|names
argument_list|()
operator|.
name|indexName
argument_list|()
argument_list|)
decl_stmt|;
name|assertSuggestFields
argument_list|(
name|fields
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
DECL|method|testNonContextEnabledParsingWithContexts
specifier|public
name|void
name|testNonContextEnabledParsingWithContexts
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|defaultMapper
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|,
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"contexts"
argument_list|)
operator|.
name|field
argument_list|(
literal|"ctx"
argument_list|,
literal|"ctx2"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
literal|3
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Supplying contexts to a non context-enabled field should error"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MapperParsingException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
operator|.
name|getRootCause
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"field1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testFieldValueValidation
specifier|public
name|void
name|testFieldValueValidation
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|CharsRefBuilder
name|charsRefBuilder
init|=
operator|new
name|CharsRefBuilder
argument_list|()
decl_stmt|;
name|charsRefBuilder
operator|.
name|append
argument_list|(
literal|"sugg"
argument_list|)
expr_stmt|;
name|charsRefBuilder
operator|.
name|setCharAt
argument_list|(
literal|2
argument_list|,
literal|'\u001F'
argument_list|)
expr_stmt|;
try|try
block|{
name|defaultMapper
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|,
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"completion"
argument_list|,
name|charsRefBuilder
operator|.
name|get
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"No error indexing value with reserved character [0x1F]"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MapperParsingException
name|e
parameter_list|)
block|{
name|Throwable
name|cause
init|=
name|e
operator|.
name|unwrapCause
argument_list|()
operator|.
name|getCause
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|cause
argument_list|,
name|instanceOf
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|cause
operator|.
name|getMessage
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"[0x1f]"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|charsRefBuilder
operator|.
name|setCharAt
argument_list|(
literal|2
argument_list|,
literal|'\u0000'
argument_list|)
expr_stmt|;
try|try
block|{
name|defaultMapper
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|,
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"completion"
argument_list|,
name|charsRefBuilder
operator|.
name|get
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"No error indexing value with reserved character [0x0]"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MapperParsingException
name|e
parameter_list|)
block|{
name|Throwable
name|cause
init|=
name|e
operator|.
name|unwrapCause
argument_list|()
operator|.
name|getCause
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|cause
argument_list|,
name|instanceOf
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|cause
operator|.
name|getMessage
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"[0x0]"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|charsRefBuilder
operator|.
name|setCharAt
argument_list|(
literal|2
argument_list|,
literal|'\u001E'
argument_list|)
expr_stmt|;
try|try
block|{
name|defaultMapper
operator|.
name|parse
argument_list|(
literal|"test"
argument_list|,
literal|"type1"
argument_list|,
literal|"1"
argument_list|,
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"completion"
argument_list|,
name|charsRefBuilder
operator|.
name|get
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"No error indexing value with reserved character [0x1E]"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MapperParsingException
name|e
parameter_list|)
block|{
name|Throwable
name|cause
init|=
name|e
operator|.
name|unwrapCause
argument_list|()
operator|.
name|getCause
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|cause
argument_list|,
name|instanceOf
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|cause
operator|.
name|getMessage
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"[0x1e]"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testPrefixQueryType
specifier|public
name|void
name|testPrefixQueryType
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|CompletionFieldMapper
name|completionFieldMapper
init|=
operator|(
name|CompletionFieldMapper
operator|)
name|fieldMapper
decl_stmt|;
name|Query
name|prefixQuery
init|=
name|completionFieldMapper
operator|.
name|fieldType
argument_list|()
operator|.
name|prefixQuery
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"co"
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|prefixQuery
argument_list|,
name|instanceOf
argument_list|(
name|PrefixCompletionQuery
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testFuzzyQueryType
specifier|public
name|void
name|testFuzzyQueryType
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|CompletionFieldMapper
name|completionFieldMapper
init|=
operator|(
name|CompletionFieldMapper
operator|)
name|fieldMapper
decl_stmt|;
name|Query
name|prefixQuery
init|=
name|completionFieldMapper
operator|.
name|fieldType
argument_list|()
operator|.
name|fuzzyQuery
argument_list|(
literal|"co"
argument_list|,
name|Fuzziness
operator|.
name|fromEdits
argument_list|(
name|FuzzyCompletionQuery
operator|.
name|DEFAULT_MAX_EDITS
argument_list|)
argument_list|,
name|FuzzyCompletionQuery
operator|.
name|DEFAULT_NON_FUZZY_PREFIX
argument_list|,
name|FuzzyCompletionQuery
operator|.
name|DEFAULT_MIN_FUZZY_LENGTH
argument_list|,
name|Operations
operator|.
name|DEFAULT_MAX_DETERMINIZED_STATES
argument_list|,
name|FuzzyCompletionQuery
operator|.
name|DEFAULT_TRANSPOSITIONS
argument_list|,
name|FuzzyCompletionQuery
operator|.
name|DEFAULT_UNICODE_AWARE
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|prefixQuery
argument_list|,
name|instanceOf
argument_list|(
name|FuzzyCompletionQuery
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testRegexQueryType
specifier|public
name|void
name|testRegexQueryType
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|DocumentMapper
name|defaultMapper
init|=
name|createIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|mapperService
argument_list|()
operator|.
name|documentMapperParser
argument_list|()
operator|.
name|parse
argument_list|(
literal|"type1"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mapping
argument_list|)
argument_list|)
decl_stmt|;
name|FieldMapper
name|fieldMapper
init|=
name|defaultMapper
operator|.
name|mappers
argument_list|()
operator|.
name|getMapper
argument_list|(
literal|"completion"
argument_list|)
decl_stmt|;
name|CompletionFieldMapper
name|completionFieldMapper
init|=
operator|(
name|CompletionFieldMapper
operator|)
name|fieldMapper
decl_stmt|;
name|Query
name|prefixQuery
init|=
name|completionFieldMapper
operator|.
name|fieldType
argument_list|()
operator|.
name|regexpQuery
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"co"
argument_list|)
argument_list|,
name|RegExp
operator|.
name|ALL
argument_list|,
name|Operations
operator|.
name|DEFAULT_MAX_DETERMINIZED_STATES
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|prefixQuery
argument_list|,
name|instanceOf
argument_list|(
name|RegexCompletionQuery
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|assertSuggestFields
specifier|private
specifier|static
name|void
name|assertSuggestFields
parameter_list|(
name|IndexableField
index|[]
name|fields
parameter_list|,
name|int
name|expected
parameter_list|)
block|{
name|int
name|actualFieldCount
init|=
literal|0
decl_stmt|;
for|for
control|(
name|IndexableField
name|field
range|:
name|fields
control|)
block|{
if|if
condition|(
name|field
operator|instanceof
name|SuggestField
condition|)
block|{
name|actualFieldCount
operator|++
expr_stmt|;
block|}
block|}
name|assertThat
argument_list|(
name|actualFieldCount
argument_list|,
name|equalTo
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

