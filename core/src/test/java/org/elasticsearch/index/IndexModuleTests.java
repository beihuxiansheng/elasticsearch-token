begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|AssertingDirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|FieldInvertState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|LeafReaderContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|CollectionStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|QueryCachingPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Weight
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|similarities
operator|.
name|BM25Similarity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|similarities
operator|.
name|Similarity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|SetOnce
operator|.
name|AlreadySetException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|service
operator|.
name|ClusterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ClusterServiceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|BigArrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|Environment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|NodeEnvironment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|ShardLock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
operator|.
name|AnalysisRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|query
operator|.
name|DisabledQueryCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|query
operator|.
name|IndexQueryCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|query
operator|.
name|QueryCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|Engine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|EngineException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|IndexFieldDataCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|IndexEventListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|IndexSearcherWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|IndexingOperationListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|SearchOperationListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|similarity
operator|.
name|SimilarityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|similarity
operator|.
name|SimilarityService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|store
operator|.
name|IndexStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|store
operator|.
name|IndexStoreConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|IndicesModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|IndicesQueryCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|breaker
operator|.
name|CircuitBreakerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|breaker
operator|.
name|NoneCircuitBreakerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|fielddata
operator|.
name|cache
operator|.
name|IndicesFieldDataCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|mapper
operator|.
name|MapperRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|query
operator|.
name|IndicesQueriesRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptContextRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptEngineRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptEngineService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|SearchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|IndexSettingsModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|TestSearchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|engine
operator|.
name|MockEngineFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|TestThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|watcher
operator|.
name|ResourceWatcherService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Consumer
import|;
end_import

begin_class
DECL|class|IndexModuleTests
specifier|public
class|class
name|IndexModuleTests
extends|extends
name|ESTestCase
block|{
DECL|field|index
specifier|private
name|Index
name|index
decl_stmt|;
DECL|field|settings
specifier|private
name|Settings
name|settings
decl_stmt|;
DECL|field|indexSettings
specifier|private
name|IndexSettings
name|indexSettings
decl_stmt|;
DECL|field|environment
specifier|private
name|Environment
name|environment
decl_stmt|;
DECL|field|nodeEnvironment
specifier|private
name|NodeEnvironment
name|nodeEnvironment
decl_stmt|;
DECL|field|nodeServicesProvider
specifier|private
name|NodeServicesProvider
name|nodeServicesProvider
decl_stmt|;
DECL|field|indicesQueryCache
specifier|private
name|IndicesQueryCache
name|indicesQueryCache
decl_stmt|;
DECL|field|deleter
specifier|private
name|IndexService
operator|.
name|ShardStoreDeleter
name|deleter
init|=
operator|new
name|IndexService
operator|.
name|ShardStoreDeleter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|deleteShardStore
parameter_list|(
name|String
name|reason
parameter_list|,
name|ShardLock
name|lock
parameter_list|,
name|IndexSettings
name|indexSettings
parameter_list|)
throws|throws
name|IOException
block|{         }
annotation|@
name|Override
specifier|public
name|void
name|addPendingDelete
parameter_list|(
name|ShardId
name|shardId
parameter_list|,
name|IndexSettings
name|indexSettings
parameter_list|)
block|{         }
block|}
decl_stmt|;
DECL|field|listener
specifier|private
specifier|final
name|IndexFieldDataCache
operator|.
name|Listener
name|listener
init|=
operator|new
name|IndexFieldDataCache
operator|.
name|Listener
argument_list|()
block|{}
decl_stmt|;
DECL|field|mapperRegistry
specifier|private
name|MapperRegistry
name|mapperRegistry
decl_stmt|;
DECL|method|newNodeServiceProvider
specifier|static
name|NodeServicesProvider
name|newNodeServiceProvider
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|Environment
name|environment
parameter_list|,
name|Client
name|client
parameter_list|,
name|ScriptEngineService
modifier|...
name|scriptEngineServices
parameter_list|)
throws|throws
name|IOException
block|{
comment|// TODO this can be used in other place too - lets first refactor the IndicesQueriesRegistry
name|ThreadPool
name|threadPool
init|=
operator|new
name|TestThreadPool
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|CircuitBreakerService
name|circuitBreakerService
init|=
operator|new
name|NoneCircuitBreakerService
argument_list|()
decl_stmt|;
name|BigArrays
name|bigArrays
init|=
operator|new
name|BigArrays
argument_list|(
name|settings
argument_list|,
name|circuitBreakerService
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|ScriptEngineService
argument_list|>
name|scriptEngines
init|=
name|Collections
operator|.
name|emptySet
argument_list|()
decl_stmt|;
name|scriptEngines
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|scriptEngineServices
argument_list|)
argument_list|)
expr_stmt|;
name|ScriptEngineRegistry
name|scriptEngineRegistry
init|=
operator|new
name|ScriptEngineRegistry
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|)
decl_stmt|;
name|ScriptContextRegistry
name|scriptContextRegistry
init|=
operator|new
name|ScriptContextRegistry
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|)
decl_stmt|;
name|ScriptSettings
name|scriptSettings
init|=
operator|new
name|ScriptSettings
argument_list|(
name|scriptEngineRegistry
argument_list|,
name|scriptContextRegistry
argument_list|)
decl_stmt|;
name|ScriptService
name|scriptService
init|=
operator|new
name|ScriptService
argument_list|(
name|settings
argument_list|,
name|environment
argument_list|,
name|scriptEngines
argument_list|,
operator|new
name|ResourceWatcherService
argument_list|(
name|settings
argument_list|,
name|threadPool
argument_list|)
argument_list|,
name|scriptEngineRegistry
argument_list|,
name|scriptContextRegistry
argument_list|,
name|scriptSettings
argument_list|)
decl_stmt|;
name|IndicesQueriesRegistry
name|indicesQueriesRegistry
init|=
operator|new
name|IndicesQueriesRegistry
argument_list|()
decl_stmt|;
name|ClusterService
name|clusterService
init|=
name|ClusterServiceUtils
operator|.
name|createClusterService
argument_list|(
name|threadPool
argument_list|)
decl_stmt|;
return|return
operator|new
name|NodeServicesProvider
argument_list|(
name|threadPool
argument_list|,
name|bigArrays
argument_list|,
name|client
argument_list|,
name|scriptService
argument_list|,
name|indicesQueriesRegistry
argument_list|,
name|circuitBreakerService
argument_list|,
name|clusterService
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|settings
operator|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|indicesQueryCache
operator|=
operator|new
name|IndicesQueryCache
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|indexSettings
operator|=
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
literal|"foo"
argument_list|,
name|settings
argument_list|)
expr_stmt|;
name|index
operator|=
name|indexSettings
operator|.
name|getIndex
argument_list|()
expr_stmt|;
name|environment
operator|=
operator|new
name|Environment
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|nodeServicesProvider
operator|=
name|newNodeServiceProvider
argument_list|(
name|settings
argument_list|,
name|environment
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|nodeEnvironment
operator|=
operator|new
name|NodeEnvironment
argument_list|(
name|settings
argument_list|,
name|environment
argument_list|)
expr_stmt|;
name|mapperRegistry
operator|=
operator|new
name|IndicesModule
argument_list|()
operator|.
name|getMapperRegistry
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|nodeEnvironment
operator|.
name|close
argument_list|()
expr_stmt|;
name|indicesQueryCache
operator|.
name|close
argument_list|()
expr_stmt|;
name|nodeServicesProvider
operator|.
name|getClusterService
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
name|ThreadPool
operator|.
name|terminate
argument_list|(
name|nodeServicesProvider
operator|.
name|getThreadPool
argument_list|()
argument_list|,
literal|10
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
block|}
DECL|method|testWrapperIsBound
specifier|public
name|void
name|testWrapperIsBound
parameter_list|()
throws|throws
name|IOException
block|{
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|indexSettings
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
name|module
operator|.
name|setSearcherWrapper
argument_list|(
parameter_list|(
name|s
parameter_list|)
lambda|->
operator|new
name|Wrapper
argument_list|()
argument_list|)
expr_stmt|;
name|module
operator|.
name|engineFactory
operator|.
name|set
argument_list|(
operator|new
name|MockEngineFactory
argument_list|(
name|AssertingDirectoryReader
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|IndexService
name|indexService
init|=
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|listener
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|indexService
operator|.
name|getSearcherWrapper
argument_list|()
operator|instanceof
name|Wrapper
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|indexService
operator|.
name|getEngineFactory
argument_list|()
argument_list|,
name|module
operator|.
name|engineFactory
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|indexService
operator|.
name|close
argument_list|(
literal|"simon says"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|testRegisterIndexStore
specifier|public
name|void
name|testRegisterIndexStore
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|IndexModule
operator|.
name|INDEX_STORE_TYPE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"foo_store"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexSettings
name|indexSettings
init|=
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
name|index
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|indexSettings
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
name|module
operator|.
name|addIndexStore
argument_list|(
literal|"foo_store"
argument_list|,
name|FooStore
operator|::
operator|new
argument_list|)
expr_stmt|;
try|try
block|{
name|module
operator|.
name|addIndexStore
argument_list|(
literal|"foo_store"
argument_list|,
name|FooStore
operator|::
operator|new
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"already registered"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex
parameter_list|)
block|{
comment|// fine
block|}
name|IndexService
name|indexService
init|=
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|listener
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|indexService
operator|.
name|getIndexStore
argument_list|()
operator|instanceof
name|FooStore
argument_list|)
expr_stmt|;
name|indexService
operator|.
name|close
argument_list|(
literal|"simon says"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|testOtherServiceBound
specifier|public
name|void
name|testOtherServiceBound
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|AtomicBoolean
name|atomicBoolean
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|false
argument_list|)
decl_stmt|;
specifier|final
name|IndexEventListener
name|eventListener
init|=
operator|new
name|IndexEventListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|beforeIndexDeleted
parameter_list|(
name|IndexService
name|indexService
parameter_list|)
block|{
name|atomicBoolean
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|IndexSettings
name|indexSettings
init|=
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
name|index
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|indexSettings
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
name|Consumer
argument_list|<
name|Settings
argument_list|>
name|listener
init|=
parameter_list|(
name|s
parameter_list|)
lambda|->
block|{}
decl_stmt|;
name|module
operator|.
name|addIndexEventListener
argument_list|(
name|eventListener
argument_list|)
expr_stmt|;
name|IndexService
name|indexService
init|=
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|this
operator|.
name|listener
argument_list|)
argument_list|)
decl_stmt|;
name|IndexSettings
name|x
init|=
name|indexService
operator|.
name|getIndexSettings
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|x
operator|.
name|getSettings
argument_list|()
operator|.
name|getAsMap
argument_list|()
argument_list|,
name|indexSettings
operator|.
name|getSettings
argument_list|()
operator|.
name|getAsMap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|x
operator|.
name|getIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|indexService
operator|.
name|getIndexEventListener
argument_list|()
operator|.
name|beforeIndexDeleted
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|atomicBoolean
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|indexService
operator|.
name|close
argument_list|(
literal|"simon says"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|testListener
specifier|public
name|void
name|testListener
parameter_list|()
throws|throws
name|IOException
block|{
name|Setting
argument_list|<
name|Boolean
argument_list|>
name|booleanSetting
init|=
name|Setting
operator|.
name|boolSetting
argument_list|(
literal|"index.foo.bar"
argument_list|,
literal|false
argument_list|,
name|Property
operator|.
name|Dynamic
argument_list|,
name|Property
operator|.
name|IndexScope
argument_list|)
decl_stmt|;
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
name|index
argument_list|,
name|settings
argument_list|,
name|booleanSetting
argument_list|)
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
name|Setting
argument_list|<
name|Boolean
argument_list|>
name|booleanSetting2
init|=
name|Setting
operator|.
name|boolSetting
argument_list|(
literal|"index.foo.bar.baz"
argument_list|,
literal|false
argument_list|,
name|Property
operator|.
name|Dynamic
argument_list|,
name|Property
operator|.
name|IndexScope
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|atomicBoolean
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|module
operator|.
name|addSettingsUpdateConsumer
argument_list|(
name|booleanSetting
argument_list|,
name|atomicBoolean
operator|::
name|set
argument_list|)
expr_stmt|;
try|try
block|{
name|module
operator|.
name|addSettingsUpdateConsumer
argument_list|(
name|booleanSetting2
argument_list|,
name|atomicBoolean
operator|::
name|set
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"not registered"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex
parameter_list|)
block|{          }
name|IndexService
name|indexService
init|=
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|listener
argument_list|)
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|booleanSetting
argument_list|,
name|indexService
operator|.
name|getIndexSettings
argument_list|()
operator|.
name|getScopedSettings
argument_list|()
operator|.
name|get
argument_list|(
name|booleanSetting
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|indexService
operator|.
name|close
argument_list|(
literal|"simon says"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|testAddIndexOperationListener
specifier|public
name|void
name|testAddIndexOperationListener
parameter_list|()
throws|throws
name|IOException
block|{
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
name|index
argument_list|,
name|settings
argument_list|)
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|executed
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|IndexingOperationListener
name|listener
init|=
operator|new
name|IndexingOperationListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Engine
operator|.
name|Index
name|preIndex
parameter_list|(
name|Engine
operator|.
name|Index
name|operation
parameter_list|)
block|{
name|executed
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|operation
return|;
block|}
block|}
decl_stmt|;
name|module
operator|.
name|addIndexOperationListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|addIndexOperationListener
argument_list|(
name|listener
argument_list|)
argument_list|)
expr_stmt|;
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|addIndexOperationListener
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|IndexService
name|indexService
init|=
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|this
operator|.
name|listener
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|indexService
operator|.
name|getIndexOperationListeners
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|IndexingSlowLog
operator|.
name|class
argument_list|,
name|indexService
operator|.
name|getIndexOperationListeners
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|listener
argument_list|,
name|indexService
operator|.
name|getIndexOperationListeners
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Engine
operator|.
name|Index
name|index
init|=
operator|new
name|Engine
operator|.
name|Index
argument_list|(
operator|new
name|Term
argument_list|(
literal|"_uid"
argument_list|,
literal|"1"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
for|for
control|(
name|IndexingOperationListener
name|l
range|:
name|indexService
operator|.
name|getIndexOperationListeners
argument_list|()
control|)
block|{
name|l
operator|.
name|preIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|executed
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|indexService
operator|.
name|close
argument_list|(
literal|"simon says"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|testAddSearchOperationListener
specifier|public
name|void
name|testAddSearchOperationListener
parameter_list|()
throws|throws
name|IOException
block|{
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
name|index
argument_list|,
name|settings
argument_list|)
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|executed
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|SearchOperationListener
name|listener
init|=
operator|new
name|SearchOperationListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onNewContext
parameter_list|(
name|SearchContext
name|context
parameter_list|)
block|{
name|executed
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|module
operator|.
name|addSearchOperationListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|addSearchOperationListener
argument_list|(
name|listener
argument_list|)
argument_list|)
expr_stmt|;
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|addSearchOperationListener
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|IndexService
name|indexService
init|=
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|this
operator|.
name|listener
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|indexService
operator|.
name|getSearchOperationListener
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SearchSlowLog
operator|.
name|class
argument_list|,
name|indexService
operator|.
name|getSearchOperationListener
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|listener
argument_list|,
name|indexService
operator|.
name|getSearchOperationListener
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|SearchOperationListener
name|l
range|:
name|indexService
operator|.
name|getSearchOperationListener
argument_list|()
control|)
block|{
name|l
operator|.
name|onNewContext
argument_list|(
operator|new
name|TestSearchContext
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|executed
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|indexService
operator|.
name|close
argument_list|(
literal|"simon says"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|testAddSimilarity
specifier|public
name|void
name|testAddSimilarity
parameter_list|()
throws|throws
name|IOException
block|{
name|Settings
name|indexSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.similarity.my_similarity.type"
argument_list|,
literal|"test_similarity"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.similarity.my_similarity.key"
argument_list|,
literal|"there is a key"
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
literal|"foo"
argument_list|,
name|indexSettings
argument_list|)
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
name|module
operator|.
name|addSimilarity
argument_list|(
literal|"test_similarity"
argument_list|,
parameter_list|(
name|string
parameter_list|,
name|settings
parameter_list|)
lambda|->
operator|new
name|SimilarityProvider
argument_list|()
block|{
block|@Override             public String name(
argument_list|)
block|{
return|return
name|string
return|;
block|}
annotation|@
name|Override
specifier|public
name|Similarity
name|get
parameter_list|()
block|{
return|return
operator|new
name|TestSimilarity
argument_list|(
name|settings
operator|.
name|get
argument_list|(
literal|"key"
argument_list|)
argument_list|)
return|;
block|}
block|}
block|)
class|;
end_class

begin_decl_stmt
name|IndexService
name|indexService
init|=
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|listener
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|SimilarityService
name|similarityService
init|=
name|indexService
operator|.
name|similarityService
argument_list|()
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|assertNotNull
argument_list|(
name|similarityService
operator|.
name|getSimilarity
argument_list|(
literal|"my_similarity"
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertTrue
argument_list|(
name|similarityService
operator|.
name|getSimilarity
argument_list|(
literal|"my_similarity"
argument_list|)
operator|.
name|get
argument_list|()
operator|instanceof
name|TestSimilarity
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|"my_similarity"
argument_list|,
name|similarityService
operator|.
name|getSimilarity
argument_list|(
literal|"my_similarity"
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|"there is a key"
argument_list|,
operator|(
operator|(
name|TestSimilarity
operator|)
name|similarityService
operator|.
name|getSimilarity
argument_list|(
literal|"my_similarity"
argument_list|)
operator|.
name|get
argument_list|()
operator|)
operator|.
name|key
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|indexService
operator|.
name|close
argument_list|(
literal|"simon says"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function
unit|}      public
DECL|method|testFrozen
name|void
name|testFrozen
parameter_list|()
block|{
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
name|index
argument_list|,
name|settings
argument_list|)
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
name|module
operator|.
name|freeze
argument_list|()
expr_stmt|;
name|String
name|msg
init|=
literal|"Can't modify IndexModule once the index service has been created"
decl_stmt|;
name|assertEquals
argument_list|(
name|msg
argument_list|,
name|expectThrows
argument_list|(
name|IllegalStateException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|addSearchOperationListener
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
argument_list|,
name|expectThrows
argument_list|(
name|IllegalStateException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|addIndexEventListener
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
argument_list|,
name|expectThrows
argument_list|(
name|IllegalStateException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|addIndexOperationListener
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
argument_list|,
name|expectThrows
argument_list|(
name|IllegalStateException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|addSimilarity
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
argument_list|,
name|expectThrows
argument_list|(
name|IllegalStateException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|setSearcherWrapper
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
argument_list|,
name|expectThrows
argument_list|(
name|IllegalStateException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|forceQueryCacheProvider
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
argument_list|,
name|expectThrows
argument_list|(
name|IllegalStateException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|addIndexStore
argument_list|(
literal|"foo"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
DECL|method|testSetupUnknownSimilarity
specifier|public
name|void
name|testSetupUnknownSimilarity
parameter_list|()
throws|throws
name|IOException
block|{
name|Settings
name|indexSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.similarity.my_similarity.type"
argument_list|,
literal|"test_similarity"
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
literal|"foo"
argument_list|,
name|indexSettings
argument_list|)
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|listener
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Unknown Similarity type [test_similarity] for [my_similarity]"
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
DECL|method|testSetupWithoutType
specifier|public
name|void
name|testSetupWithoutType
parameter_list|()
throws|throws
name|IOException
block|{
name|Settings
name|indexSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.similarity.my_similarity.foo"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
literal|"foo"
argument_list|,
name|indexSettings
argument_list|)
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|listener
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Similarity [my_similarity] must have an associated type"
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
DECL|method|testForceCustomQueryCache
specifier|public
name|void
name|testForceCustomQueryCache
parameter_list|()
throws|throws
name|IOException
block|{
name|Settings
name|indexSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
literal|"foo"
argument_list|,
name|indexSettings
argument_list|)
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
name|module
operator|.
name|forceQueryCacheProvider
argument_list|(
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|)
lambda|->
operator|new
name|CustomQueryCache
argument_list|()
argument_list|)
expr_stmt|;
name|expectThrows
argument_list|(
name|AlreadySetException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|module
operator|.
name|forceQueryCacheProvider
argument_list|(
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|)
lambda|->
operator|new
name|CustomQueryCache
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|IndexService
name|indexService
init|=
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|listener
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|indexService
operator|.
name|cache
argument_list|()
operator|.
name|query
argument_list|()
operator|instanceof
name|CustomQueryCache
argument_list|)
expr_stmt|;
name|indexService
operator|.
name|close
argument_list|(
literal|"simon says"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
DECL|method|testDefaultQueryCacheImplIsSelected
specifier|public
name|void
name|testDefaultQueryCacheImplIsSelected
parameter_list|()
throws|throws
name|IOException
block|{
name|Settings
name|indexSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
literal|"foo"
argument_list|,
name|indexSettings
argument_list|)
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
name|IndexService
name|indexService
init|=
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|listener
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|indexService
operator|.
name|cache
argument_list|()
operator|.
name|query
argument_list|()
operator|instanceof
name|IndexQueryCache
argument_list|)
expr_stmt|;
name|indexService
operator|.
name|close
argument_list|(
literal|"simon says"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
DECL|method|testDisableQueryCacheHasPrecedenceOverForceQueryCache
specifier|public
name|void
name|testDisableQueryCacheHasPrecedenceOverForceQueryCache
parameter_list|()
throws|throws
name|IOException
block|{
name|Settings
name|indexSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexModule
operator|.
name|INDEX_QUERY_CACHE_ENABLED_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexModule
name|module
init|=
operator|new
name|IndexModule
argument_list|(
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
literal|"foo"
argument_list|,
name|indexSettings
argument_list|)
argument_list|,
literal|null
argument_list|,
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
name|environment
argument_list|)
argument_list|)
decl_stmt|;
name|module
operator|.
name|forceQueryCacheProvider
argument_list|(
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|)
lambda|->
operator|new
name|CustomQueryCache
argument_list|()
argument_list|)
expr_stmt|;
name|IndexService
name|indexService
init|=
name|module
operator|.
name|newIndexService
argument_list|(
name|nodeEnvironment
argument_list|,
name|deleter
argument_list|,
name|nodeServicesProvider
argument_list|,
name|indicesQueryCache
argument_list|,
name|mapperRegistry
argument_list|,
name|shardId
lambda|->
block|{}
argument_list|,
operator|new
name|IndicesFieldDataCache
argument_list|(
name|settings
argument_list|,
name|listener
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|indexService
operator|.
name|cache
argument_list|()
operator|.
name|query
argument_list|()
operator|instanceof
name|DisabledQueryCache
argument_list|)
expr_stmt|;
name|indexService
operator|.
name|close
argument_list|(
literal|"simon says"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function

begin_class
DECL|class|CustomQueryCache
class|class
name|CustomQueryCache
implements|implements
name|QueryCache
block|{
annotation|@
name|Override
DECL|method|clear
specifier|public
name|void
name|clear
parameter_list|(
name|String
name|reason
parameter_list|)
block|{         }
annotation|@
name|Override
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{         }
annotation|@
name|Override
DECL|method|index
specifier|public
name|Index
name|index
parameter_list|()
block|{
return|return
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|,
literal|"_na_"
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|doCache
specifier|public
name|Weight
name|doCache
parameter_list|(
name|Weight
name|weight
parameter_list|,
name|QueryCachingPolicy
name|policy
parameter_list|)
block|{
return|return
name|weight
return|;
block|}
block|}
end_class

begin_class
DECL|class|TestSimilarity
specifier|private
specifier|static
class|class
name|TestSimilarity
extends|extends
name|Similarity
block|{
DECL|field|delegate
specifier|private
specifier|final
name|Similarity
name|delegate
init|=
operator|new
name|BM25Similarity
argument_list|()
decl_stmt|;
DECL|field|key
specifier|private
specifier|final
name|String
name|key
decl_stmt|;
DECL|method|TestSimilarity
specifier|public
name|TestSimilarity
parameter_list|(
name|String
name|key
parameter_list|)
block|{
if|if
condition|(
name|key
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
literal|"key is null"
argument_list|)
throw|;
block|}
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|computeNorm
specifier|public
name|long
name|computeNorm
parameter_list|(
name|FieldInvertState
name|state
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|computeNorm
argument_list|(
name|state
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|computeWeight
specifier|public
name|SimWeight
name|computeWeight
parameter_list|(
name|CollectionStatistics
name|collectionStats
parameter_list|,
name|TermStatistics
modifier|...
name|termStats
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|computeWeight
argument_list|(
name|collectionStats
argument_list|,
name|termStats
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|simScorer
specifier|public
name|SimScorer
name|simScorer
parameter_list|(
name|SimWeight
name|weight
parameter_list|,
name|LeafReaderContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|delegate
operator|.
name|simScorer
argument_list|(
name|weight
argument_list|,
name|context
argument_list|)
return|;
block|}
block|}
end_class

begin_class
DECL|class|FooStore
specifier|public
specifier|static
specifier|final
class|class
name|FooStore
extends|extends
name|IndexStore
block|{
DECL|method|FooStore
specifier|public
name|FooStore
parameter_list|(
name|IndexSettings
name|indexSettings
parameter_list|,
name|IndexStoreConfig
name|config
parameter_list|)
block|{
name|super
argument_list|(
name|indexSettings
argument_list|,
name|config
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_class
DECL|class|Wrapper
specifier|public
specifier|static
specifier|final
class|class
name|Wrapper
extends|extends
name|IndexSearcherWrapper
block|{
annotation|@
name|Override
DECL|method|wrap
specifier|public
name|DirectoryReader
name|wrap
parameter_list|(
name|DirectoryReader
name|reader
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|wrap
specifier|public
name|IndexSearcher
name|wrap
parameter_list|(
name|IndexSearcher
name|searcher
parameter_list|)
throws|throws
name|EngineException
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

unit|}
end_unit

