begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.analysis
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|Environment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTokenStreamTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|IndexSettingsModule
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
operator|.
name|createTestAnalysis
import|;
end_import

begin_class
DECL|class|CharFilterTests
specifier|public
class|class
name|CharFilterTests
extends|extends
name|ESTokenStreamTestCase
block|{
DECL|method|testMappingCharFilter
specifier|public
name|void
name|testMappingCharFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.analysis.char_filter.my_mapping.type"
argument_list|,
literal|"mapping"
argument_list|)
operator|.
name|putArray
argument_list|(
literal|"index.analysis.char_filter.my_mapping.mappings"
argument_list|,
literal|"ph=>f"
argument_list|,
literal|"qu=>q"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.analysis.analyzer.custom_with_char_filter.tokenizer"
argument_list|,
literal|"standard"
argument_list|)
operator|.
name|putArray
argument_list|(
literal|"index.analysis.analyzer.custom_with_char_filter.char_filter"
argument_list|,
literal|"my_mapping"
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexSettings
name|idxSettings
init|=
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
literal|"test"
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|IndexAnalyzers
name|indexAnalyzers
init|=
name|createTestAnalysis
argument_list|(
name|idxSettings
argument_list|,
name|settings
argument_list|)
operator|.
name|indexAnalyzers
decl_stmt|;
name|NamedAnalyzer
name|analyzer1
init|=
name|indexAnalyzers
operator|.
name|get
argument_list|(
literal|"custom_with_char_filter"
argument_list|)
decl_stmt|;
name|assertTokenStreamContents
argument_list|(
name|analyzer1
operator|.
name|tokenStream
argument_list|(
literal|"test"
argument_list|,
literal|"jeff quit phish"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"jeff"
block|,
literal|"qit"
block|,
literal|"fish"
block|}
argument_list|)
expr_stmt|;
comment|// Repeat one more time to make sure that char filter is reinitialized correctly
name|assertTokenStreamContents
argument_list|(
name|analyzer1
operator|.
name|tokenStream
argument_list|(
literal|"test"
argument_list|,
literal|"jeff quit phish"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"jeff"
block|,
literal|"qit"
block|,
literal|"fish"
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|testHtmlStripCharFilter
specifier|public
name|void
name|testHtmlStripCharFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.analysis.analyzer.custom_with_char_filter.tokenizer"
argument_list|,
literal|"standard"
argument_list|)
operator|.
name|putArray
argument_list|(
literal|"index.analysis.analyzer.custom_with_char_filter.char_filter"
argument_list|,
literal|"html_strip"
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexSettings
name|idxSettings
init|=
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
literal|"test"
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|IndexAnalyzers
name|indexAnalyzers
init|=
name|createTestAnalysis
argument_list|(
name|idxSettings
argument_list|,
name|settings
argument_list|)
operator|.
name|indexAnalyzers
decl_stmt|;
name|NamedAnalyzer
name|analyzer1
init|=
name|indexAnalyzers
operator|.
name|get
argument_list|(
literal|"custom_with_char_filter"
argument_list|)
decl_stmt|;
name|assertTokenStreamContents
argument_list|(
name|analyzer1
operator|.
name|tokenStream
argument_list|(
literal|"test"
argument_list|,
literal|"<b>hello</b>!"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"hello"
block|}
argument_list|)
expr_stmt|;
comment|// Repeat one more time to make sure that char filter is reinitialized correctly
name|assertTokenStreamContents
argument_list|(
name|analyzer1
operator|.
name|tokenStream
argument_list|(
literal|"test"
argument_list|,
literal|"<b>hello</b>!"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"hello"
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|testPatternReplaceCharFilter
specifier|public
name|void
name|testPatternReplaceCharFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.analysis.char_filter.my_mapping.type"
argument_list|,
literal|"pattern_replace"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.analysis.char_filter.my_mapping.pattern"
argument_list|,
literal|"ab*"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.analysis.char_filter.my_mapping.replacement"
argument_list|,
literal|"oo"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.analysis.char_filter.my_mapping.flags"
argument_list|,
literal|"CASE_INSENSITIVE"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.analysis.analyzer.custom_with_char_filter.tokenizer"
argument_list|,
literal|"standard"
argument_list|)
operator|.
name|putArray
argument_list|(
literal|"index.analysis.analyzer.custom_with_char_filter.char_filter"
argument_list|,
literal|"my_mapping"
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexSettings
name|idxSettings
init|=
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
literal|"test"
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|IndexAnalyzers
name|indexAnalyzers
init|=
name|createTestAnalysis
argument_list|(
name|idxSettings
argument_list|,
name|settings
argument_list|)
operator|.
name|indexAnalyzers
decl_stmt|;
name|NamedAnalyzer
name|analyzer1
init|=
name|indexAnalyzers
operator|.
name|get
argument_list|(
literal|"custom_with_char_filter"
argument_list|)
decl_stmt|;
name|assertTokenStreamContents
argument_list|(
name|analyzer1
operator|.
name|tokenStream
argument_list|(
literal|"test"
argument_list|,
literal|"faBBbBB aBbbbBf"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"foo"
block|,
literal|"oof"
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

