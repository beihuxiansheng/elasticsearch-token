begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.query
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESSingleNodeTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|CommonTermsQueryParserTests
specifier|public
class|class
name|CommonTermsQueryParserTests
extends|extends
name|ESSingleNodeTestCase
block|{
DECL|method|testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown
specifier|public
name|void
name|testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|String
name|index
init|=
literal|"test-index"
decl_stmt|;
specifier|final
name|String
name|type
init|=
literal|"test-type"
decl_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
name|index
argument_list|)
operator|.
name|addMapping
argument_list|(
name|type
argument_list|,
literal|"name"
argument_list|,
literal|"type=text,analyzer=stop"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|CommonTermsQueryBuilder
name|commonTermsQueryBuilder
init|=
operator|new
name|CommonTermsQueryBuilder
argument_list|(
literal|"name"
argument_list|,
literal|"the"
argument_list|)
operator|.
name|queryName
argument_list|(
literal|"query-name"
argument_list|)
decl_stmt|;
comment|// the named query parses to null; we are testing this does not cause a NullPointerException
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|index
argument_list|)
operator|.
name|setTypes
argument_list|(
name|type
argument_list|)
operator|.
name|setQuery
argument_list|(
name|commonTermsQueryBuilder
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

