begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.fieldstats
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fieldstats
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|BaseDirectoryWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|compress
operator|.
name|CompressedXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|index
operator|.
name|ElasticsearchDirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|json
operator|.
name|JsonXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|Environment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
operator|.
name|AnalysisRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|analysis
operator|.
name|AnalysisService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|Engine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|Engine
operator|.
name|Searcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fieldstats
operator|.
name|FieldStatsProvider
operator|.
name|Relation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|DocumentMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MapperService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MapperService
operator|.
name|MergeReason
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|ParsedDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|similarity
operator|.
name|SimilarityService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|IndicesModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|mapper
operator|.
name|MapperRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|IndexSettingsModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTimeZone
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|chrono
operator|.
name|ISOChronology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
operator|.
name|settingsBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_class
DECL|class|FieldStatsProviderTests
specifier|public
class|class
name|FieldStatsProviderTests
extends|extends
name|ESTestCase
block|{
DECL|field|directoryReader
specifier|private
name|DirectoryReader
name|directoryReader
decl_stmt|;
DECL|field|searcher
specifier|private
name|Searcher
name|searcher
decl_stmt|;
DECL|field|fieldStatsProvider
specifier|private
name|FieldStatsProvider
name|fieldStatsProvider
decl_stmt|;
DECL|field|dir
specifier|private
name|BaseDirectoryWrapper
name|dir
decl_stmt|;
DECL|field|analysisRegistry
specifier|private
name|AnalysisRegistry
name|analysisRegistry
decl_stmt|;
annotation|@
name|Before
DECL|method|setup
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|IOException
block|{
name|Settings
name|nodeSettings
init|=
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexSettings
name|settings
init|=
name|IndexSettingsModule
operator|.
name|newIndexSettings
argument_list|(
literal|"_na"
argument_list|,
name|nodeSettings
argument_list|)
decl_stmt|;
name|SimilarityService
name|similarityService
init|=
operator|new
name|SimilarityService
argument_list|(
name|settings
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
decl_stmt|;
name|analysisRegistry
operator|=
operator|new
name|AnalysisRegistry
argument_list|(
literal|null
argument_list|,
operator|new
name|Environment
argument_list|(
name|nodeSettings
argument_list|)
argument_list|)
expr_stmt|;
name|AnalysisService
name|analysisService
init|=
name|analysisRegistry
operator|.
name|build
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|IndicesModule
name|indicesModule
init|=
operator|new
name|IndicesModule
argument_list|()
decl_stmt|;
name|MapperRegistry
name|mapperRegistry
init|=
name|indicesModule
operator|.
name|getMapperRegistry
argument_list|()
decl_stmt|;
name|MapperService
name|service
init|=
operator|new
name|MapperService
argument_list|(
name|settings
argument_list|,
name|analysisService
argument_list|,
name|similarityService
argument_list|,
name|mapperRegistry
argument_list|,
parameter_list|()
lambda|->
literal|null
argument_list|)
decl_stmt|;
name|putMapping
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|dir
operator|=
name|newDirectory
argument_list|()
expr_stmt|;
name|IndexWriter
name|w
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|()
argument_list|)
decl_stmt|;
name|indexDocument
argument_list|(
name|service
argument_list|,
name|w
argument_list|,
literal|"1"
argument_list|,
literal|50L
argument_list|,
literal|50.2f
argument_list|,
literal|50.2
argument_list|,
literal|"cherry"
argument_list|,
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|ISOChronology
operator|.
name|getInstanceUTC
argument_list|()
argument_list|)
argument_list|,
literal|"10.10.0.10"
argument_list|)
expr_stmt|;
name|indexDocument
argument_list|(
name|service
argument_list|,
name|w
argument_list|,
literal|"2"
argument_list|,
literal|60L
argument_list|,
literal|60.1f
argument_list|,
literal|60.1
argument_list|,
literal|"damson"
argument_list|,
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|ISOChronology
operator|.
name|getInstanceUTC
argument_list|()
argument_list|)
argument_list|,
literal|"10.10.0.20"
argument_list|)
expr_stmt|;
name|indexDocument
argument_list|(
name|service
argument_list|,
name|w
argument_list|,
literal|"3"
argument_list|,
literal|70L
argument_list|,
literal|70.6f
argument_list|,
literal|70.6
argument_list|,
literal|"grape"
argument_list|,
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|ISOChronology
operator|.
name|getInstanceUTC
argument_list|()
argument_list|)
argument_list|,
literal|"10.10.0.30"
argument_list|)
expr_stmt|;
name|indexDocument
argument_list|(
name|service
argument_list|,
name|w
argument_list|,
literal|"4"
argument_list|,
literal|80L
argument_list|,
literal|80.2f
argument_list|,
literal|80.2
argument_list|,
literal|"kiwi"
argument_list|,
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|ISOChronology
operator|.
name|getInstanceUTC
argument_list|()
argument_list|)
argument_list|,
literal|"10.10.0.40"
argument_list|)
expr_stmt|;
name|indexDocument
argument_list|(
name|service
argument_list|,
name|w
argument_list|,
literal|"5"
argument_list|,
literal|90L
argument_list|,
literal|90.4f
argument_list|,
literal|90.4
argument_list|,
literal|"lemon"
argument_list|,
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|ISOChronology
operator|.
name|getInstanceUTC
argument_list|()
argument_list|)
argument_list|,
literal|"10.10.0.50"
argument_list|)
expr_stmt|;
name|indexDocument
argument_list|(
name|service
argument_list|,
name|w
argument_list|,
literal|"6"
argument_list|,
literal|100L
argument_list|,
literal|100.3f
argument_list|,
literal|100.3
argument_list|,
literal|"orange"
argument_list|,
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|ISOChronology
operator|.
name|getInstanceUTC
argument_list|()
argument_list|)
argument_list|,
literal|"10.10.0.60"
argument_list|)
expr_stmt|;
name|directoryReader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|w
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|ShardId
name|shard
init|=
operator|new
name|ShardId
argument_list|(
literal|"index"
argument_list|,
literal|"_na_"
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|directoryReader
operator|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|directoryReader
argument_list|,
name|shard
argument_list|)
expr_stmt|;
name|IndexSearcher
name|s
init|=
operator|new
name|IndexSearcher
argument_list|(
name|directoryReader
argument_list|)
decl_stmt|;
name|searcher
operator|=
operator|new
name|Engine
operator|.
name|Searcher
argument_list|(
literal|"test"
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|fieldStatsProvider
operator|=
operator|new
name|FieldStatsProvider
argument_list|(
name|searcher
argument_list|,
name|service
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|teardown
specifier|public
name|void
name|teardown
parameter_list|()
throws|throws
name|IOException
block|{
name|searcher
operator|.
name|close
argument_list|()
expr_stmt|;
name|directoryReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|analysisRegistry
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testiIsFieldWithinQueryLong
specifier|public
name|void
name|testiIsFieldWithinQueryLong
parameter_list|()
throws|throws
name|IOException
block|{
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|10L
argument_list|,
literal|200L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|10L
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|null
argument_list|,
literal|200L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|10L
argument_list|,
literal|100L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|50L
argument_list|,
literal|200L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|30L
argument_list|,
literal|80L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|80L
argument_list|,
literal|200L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|60L
argument_list|,
literal|80L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|10L
argument_list|,
literal|100L
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|50L
argument_list|,
literal|200L
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|100L
argument_list|,
literal|200L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|1L
argument_list|,
literal|50L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|150L
argument_list|,
literal|200L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|1L
argument_list|,
literal|8L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|null
argument_list|,
literal|8L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|150L
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|100L
argument_list|,
literal|200L
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|1L
argument_list|,
literal|50L
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testiIsFieldWithinQueryFloat
specifier|public
name|void
name|testiIsFieldWithinQueryFloat
parameter_list|()
throws|throws
name|IOException
block|{
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|10.8f
argument_list|,
literal|200.5f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|10.8f
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|null
argument_list|,
literal|200.5f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|10.8f
argument_list|,
literal|100.3f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|50.2f
argument_list|,
literal|200.5f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|30.5f
argument_list|,
literal|80.1f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|80.1f
argument_list|,
literal|200.5f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|10.8f
argument_list|,
literal|100.3f
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|50.2f
argument_list|,
literal|200.5f
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|100.3f
argument_list|,
literal|200.5f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|1.9f
argument_list|,
literal|50.2f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|60.9f
argument_list|,
literal|80.1f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|150.4f
argument_list|,
literal|200.5f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|1.9f
argument_list|,
literal|8.1f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|null
argument_list|,
literal|8.1f
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|150.4f
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|100.3f
argument_list|,
literal|200.5f
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"float_field"
argument_list|,
literal|1.9f
argument_list|,
literal|50.2f
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testiIsFieldWithinQueryDouble
specifier|public
name|void
name|testiIsFieldWithinQueryDouble
parameter_list|()
throws|throws
name|IOException
block|{
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|10.8
argument_list|,
literal|200.5
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|10.8
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|null
argument_list|,
literal|200.5
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|10.8
argument_list|,
literal|100.3
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|50.2
argument_list|,
literal|200.5
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|30.5
argument_list|,
literal|80.1
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|80.1
argument_list|,
literal|200.5
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|60.9
argument_list|,
literal|80.1
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|10.8
argument_list|,
literal|100.3
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|50.2
argument_list|,
literal|200.5
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|100.3
argument_list|,
literal|200.5
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|1.9
argument_list|,
literal|50.2
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|150.4
argument_list|,
literal|200.5
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|1.9
argument_list|,
literal|8.1
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|null
argument_list|,
literal|8.1
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"double_field"
argument_list|,
literal|150.4
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|100.3
argument_list|,
literal|200.5
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"long_field"
argument_list|,
literal|1.9
argument_list|,
literal|50.2
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testiIsFieldWithinQueryText
specifier|public
name|void
name|testiIsFieldWithinQueryText
parameter_list|()
throws|throws
name|IOException
block|{
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
literal|null
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"orange"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"cherry"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"grape"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"grape"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"lime"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"mango"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"orange"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"cherry"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"orange"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"apple"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"cherry"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"peach"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"apple"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
literal|null
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"peach"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"orange"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"text_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"apple"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"cherry"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testiIsFieldWithinQueryKeyword
specifier|public
name|void
name|testiIsFieldWithinQueryKeyword
parameter_list|()
throws|throws
name|IOException
block|{
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
literal|null
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"orange"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"cherry"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"grape"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"grape"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"lime"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"mango"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"orange"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"cherry"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"orange"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"apple"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"cherry"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"peach"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"apple"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
literal|null
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"banana"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"peach"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"orange"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"zebra"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"keyword_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"apple"
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"cherry"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testiIsFieldWithinQueryDate
specifier|public
name|void
name|testiIsFieldWithinQueryDate
parameter_list|()
throws|throws
name|IOException
block|{
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2013-01-01"
argument_list|,
literal|"now"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2013-01-01"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|null
argument_list|,
literal|"now"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2013-01-01"
argument_list|,
literal|"2014-06-01"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2014-01-01"
argument_list|,
literal|"now"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2013-01-01"
argument_list|,
literal|"2014-03-01"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2014-03-01"
argument_list|,
literal|"now"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2014-03-01"
argument_list|,
literal|"2014-05-01"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2013-01-01"
argument_list|,
literal|"2014-06-01"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2014-01-01"
argument_list|,
literal|"now"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2014-06-01"
argument_list|,
literal|"now"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2013-01-01"
argument_list|,
literal|"2014-01-01"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2015-01-01"
argument_list|,
literal|"now"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2013-01-01"
argument_list|,
literal|"2013-09-01"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|null
argument_list|,
literal|"2013-09-01"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2015-01-01"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2014-06-01"
argument_list|,
literal|"now"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"date_field"
argument_list|,
literal|"2013-01-01"
argument_list|,
literal|"2014-01-01"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testiIsFieldWithinQueryIp
specifier|public
name|void
name|testiIsFieldWithinQueryIp
parameter_list|()
throws|throws
name|IOException
block|{
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.10.0.1"
argument_list|,
literal|"10.20.0.1"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.10.0.1"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|null
argument_list|,
literal|"10.20.0.1"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.10.0.1"
argument_list|,
literal|"10.10.0.60"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.10.0.10"
argument_list|,
literal|"10.20.0.1"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|WITHIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.10.0.1"
argument_list|,
literal|"10.10.0.40"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.10.0.40"
argument_list|,
literal|"10.20.0.1"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.10.0.30"
argument_list|,
literal|"10.10.0.40"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.10.0.1"
argument_list|,
literal|"10.10.0.60"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.10.0.10"
argument_list|,
literal|"10.20.0.1"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.10.0.60"
argument_list|,
literal|"10.20.0.1"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.0.0.1"
argument_list|,
literal|"10.10.0.10"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|INTERSECTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.20.0.10"
argument_list|,
literal|"10.20.0.1"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.0.0.1"
argument_list|,
literal|"10.0.0.100"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|null
argument_list|,
literal|"10.0.0.100"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.20.0.10"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.10.0.60"
argument_list|,
literal|"10.20.0.1"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldStatsProvider
operator|.
name|isFieldWithinQuery
argument_list|(
literal|"ip_field"
argument_list|,
literal|"10.0.0.1"
argument_list|,
literal|"10.10.0.10"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|,
literal|null
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Relation
operator|.
name|DISJOINT
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|putMapping
specifier|private
name|void
name|putMapping
parameter_list|(
name|MapperService
name|service
parameter_list|)
throws|throws
name|IOException
block|{
name|XContentBuilder
name|mappingbuilder
init|=
name|JsonXContent
operator|.
name|contentBuilder
argument_list|()
decl_stmt|;
name|mappingbuilder
operator|.
name|startObject
argument_list|()
expr_stmt|;
name|mappingbuilder
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|startObject
argument_list|(
literal|"long_field"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"long"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mappingbuilder
operator|.
name|startObject
argument_list|(
literal|"float_field"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"float"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mappingbuilder
operator|.
name|startObject
argument_list|(
literal|"double_field"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"double"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mappingbuilder
operator|.
name|startObject
argument_list|(
literal|"text_field"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"text"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mappingbuilder
operator|.
name|startObject
argument_list|(
literal|"keyword_field"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"keyword"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mappingbuilder
operator|.
name|startObject
argument_list|(
literal|"date_field"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"date"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mappingbuilder
operator|.
name|startObject
argument_list|(
literal|"ip_field"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"ip"
argument_list|)
expr_stmt|;
name|mappingbuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mappingbuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mappingbuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mappingbuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|service
operator|.
name|merge
argument_list|(
literal|"type"
argument_list|,
operator|new
name|CompressedXContent
argument_list|(
name|mappingbuilder
operator|.
name|bytes
argument_list|()
argument_list|)
argument_list|,
name|MergeReason
operator|.
name|MAPPING_UPDATE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|indexDocument
specifier|private
name|void
name|indexDocument
parameter_list|(
name|MapperService
name|service
parameter_list|,
name|IndexWriter
name|writer
parameter_list|,
name|String
name|id
parameter_list|,
name|long
name|longValue
parameter_list|,
name|float
name|floatValue
parameter_list|,
name|double
name|doubleValue
parameter_list|,
name|String
name|stringValue
parameter_list|,
name|DateTime
name|dateValue
parameter_list|,
name|String
name|ipValue
parameter_list|)
throws|throws
name|IOException
block|{
name|XContentBuilder
name|docBuilder
init|=
name|JsonXContent
operator|.
name|contentBuilder
argument_list|()
decl_stmt|;
name|docBuilder
operator|.
name|startObject
argument_list|()
expr_stmt|;
name|docBuilder
operator|.
name|field
argument_list|(
literal|"long_field"
argument_list|,
name|longValue
argument_list|)
expr_stmt|;
name|docBuilder
operator|.
name|field
argument_list|(
literal|"float_field"
argument_list|,
name|floatValue
argument_list|)
expr_stmt|;
name|docBuilder
operator|.
name|field
argument_list|(
literal|"double_field"
argument_list|,
name|doubleValue
argument_list|)
expr_stmt|;
name|docBuilder
operator|.
name|field
argument_list|(
literal|"text_field"
argument_list|,
name|stringValue
argument_list|)
expr_stmt|;
name|docBuilder
operator|.
name|field
argument_list|(
literal|"keyword_field"
argument_list|,
name|stringValue
argument_list|)
expr_stmt|;
name|docBuilder
operator|.
name|field
argument_list|(
literal|"date_field"
argument_list|,
name|dateValue
argument_list|)
expr_stmt|;
name|docBuilder
operator|.
name|field
argument_list|(
literal|"ip_field"
argument_list|,
name|ipValue
argument_list|)
expr_stmt|;
name|docBuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|DocumentMapper
name|documentMapper
init|=
name|service
operator|.
name|documentMapper
argument_list|(
literal|"type"
argument_list|)
decl_stmt|;
name|ParsedDocument
name|doc
init|=
name|documentMapper
operator|.
name|parse
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|id
argument_list|,
name|docBuilder
operator|.
name|bytes
argument_list|()
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
operator|.
name|rootDoc
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

