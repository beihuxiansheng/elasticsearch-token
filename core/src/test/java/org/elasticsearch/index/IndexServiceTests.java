begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/** Unit test(s) for IndexService */
end_comment

begin_class
DECL|class|IndexServiceTests
specifier|public
class|class
name|IndexServiceTests
extends|extends
name|ESTestCase
block|{
annotation|@
name|Test
DECL|method|testDetermineShadowEngineShouldBeUsed
specifier|public
name|void
name|testDetermineShadowEngineShouldBeUsed
parameter_list|()
block|{
name|Settings
name|regularSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
literal|2
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
literal|1
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Settings
name|shadowSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
literal|2
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
literal|1
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_SHADOW_REPLICAS
argument_list|,
literal|true
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
literal|"no shadow replicas for normal settings"
argument_list|,
name|IndexService
operator|.
name|useShadowEngine
argument_list|(
literal|true
argument_list|,
name|regularSettings
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"no shadow replicas for normal settings"
argument_list|,
name|IndexService
operator|.
name|useShadowEngine
argument_list|(
literal|false
argument_list|,
name|regularSettings
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"no shadow replicas for primary shard with shadow settings"
argument_list|,
name|IndexService
operator|.
name|useShadowEngine
argument_list|(
literal|true
argument_list|,
name|shadowSettings
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"shadow replicas for replica shards with shadow settings"
argument_list|,
name|IndexService
operator|.
name|useShadowEngine
argument_list|(
literal|false
argument_list|,
name|shadowSettings
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

