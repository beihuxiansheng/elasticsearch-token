begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|regex
operator|.
name|Regex
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|IndexScopedSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
operator|.
name|Translog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|VersionUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_class
DECL|class|IndexSettingsTests
specifier|public
class|class
name|IndexSettingsTests
extends|extends
name|ESTestCase
block|{
DECL|method|testRunListener
specifier|public
name|void
name|testRunListener
parameter_list|()
block|{
name|Version
name|version
init|=
name|VersionUtils
operator|.
name|getPreviousVersion
argument_list|()
decl_stmt|;
name|Settings
name|theSettings
init|=
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|version
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_INDEX_UUID
argument_list|,
literal|"0xdeadbeef"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|AtomicInteger
name|integer
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Setting
argument_list|<
name|Integer
argument_list|>
name|integerSetting
init|=
name|Setting
operator|.
name|intSetting
argument_list|(
literal|"index.test.setting.int"
argument_list|,
operator|-
literal|1
argument_list|,
name|Property
operator|.
name|Dynamic
argument_list|,
name|Property
operator|.
name|IndexScope
argument_list|)
decl_stmt|;
name|IndexMetaData
name|metaData
init|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|theSettings
argument_list|)
decl_stmt|;
name|IndexSettings
name|settings
init|=
name|newIndexSettings
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|theSettings
argument_list|)
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
name|integerSetting
argument_list|)
decl_stmt|;
name|settings
operator|.
name|getScopedSettings
argument_list|()
operator|.
name|addSettingsUpdateConsumer
argument_list|(
name|integerSetting
argument_list|,
name|integer
operator|::
name|set
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|settings
operator|.
name|getIndexVersionCreated
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0xdeadbeef"
argument_list|,
name|settings
operator|.
name|getUUID
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|metaData
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|metaData
operator|.
name|getSettings
argument_list|()
operator|.
name|getAsMap
argument_list|()
argument_list|,
name|settings
operator|.
name|getSettings
argument_list|()
operator|.
name|getAsMap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|integer
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|theSettings
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.test.setting.int"
argument_list|,
literal|42
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|42
argument_list|,
name|integer
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testMergedSettingsArePassed
specifier|public
name|void
name|testMergedSettingsArePassed
parameter_list|()
block|{
name|Version
name|version
init|=
name|VersionUtils
operator|.
name|getPreviousVersion
argument_list|()
decl_stmt|;
name|Settings
name|theSettings
init|=
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|version
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_INDEX_UUID
argument_list|,
literal|"0xdeadbeef"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|AtomicInteger
name|integer
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
specifier|final
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|Setting
argument_list|<
name|Integer
argument_list|>
name|integerSetting
init|=
name|Setting
operator|.
name|intSetting
argument_list|(
literal|"index.test.setting.int"
argument_list|,
operator|-
literal|1
argument_list|,
name|Property
operator|.
name|Dynamic
argument_list|,
name|Property
operator|.
name|IndexScope
argument_list|)
decl_stmt|;
name|Setting
argument_list|<
name|String
argument_list|>
name|notUpdated
init|=
operator|new
name|Setting
argument_list|<>
argument_list|(
literal|"index.not.updated"
argument_list|,
literal|""
argument_list|,
name|Function
operator|.
name|identity
argument_list|()
argument_list|,
name|Property
operator|.
name|Dynamic
argument_list|,
name|Property
operator|.
name|IndexScope
argument_list|)
decl_stmt|;
name|IndexSettings
name|settings
init|=
name|newIndexSettings
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|theSettings
argument_list|)
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
name|integerSetting
argument_list|,
name|notUpdated
argument_list|)
decl_stmt|;
name|settings
operator|.
name|getScopedSettings
argument_list|()
operator|.
name|addSettingsUpdateConsumer
argument_list|(
name|integerSetting
argument_list|,
name|integer
operator|::
name|set
argument_list|)
expr_stmt|;
name|settings
operator|.
name|getScopedSettings
argument_list|()
operator|.
name|addSettingsUpdateConsumer
argument_list|(
name|notUpdated
argument_list|,
name|builder
operator|::
name|append
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|integer
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|IndexMetaData
name|newMetaData
init|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|settings
operator|.
name|getIndexMetaData
argument_list|()
operator|.
name|getSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.test.setting.int"
argument_list|,
literal|42
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newMetaData
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|settings
operator|.
name|getIndexMetaData
argument_list|()
argument_list|,
name|newMetaData
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|42
argument_list|,
name|integer
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|integer
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|settings
operator|.
name|getIndexMetaData
argument_list|()
operator|.
name|getSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.not.updated"
argument_list|,
literal|"boom"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"boom"
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"not updated - we preserve the old settings"
argument_list|,
literal|0
argument_list|,
name|integer
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testSettingsConsistency
specifier|public
name|void
name|testSettingsConsistency
parameter_list|()
block|{
name|Version
name|version
init|=
name|VersionUtils
operator|.
name|getPreviousVersion
argument_list|()
decl_stmt|;
name|IndexMetaData
name|metaData
init|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|version
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|IndexSettings
name|settings
init|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|settings
operator|.
name|getIndexVersionCreated
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"_na_"
argument_list|,
name|settings
operator|.
name|getUUID
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.test.setting.int"
argument_list|,
literal|42
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"version has changed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"version mismatch on settings update expected: "
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|metaData
operator|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_INDEX_UUID
argument_list|,
literal|"0xdeadbeef"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
try|try
block|{
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.test.setting.int"
argument_list|,
literal|42
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"uuid missing/change"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"uuid mismatch on settings update expected: 0xdeadbeef but was: _na_"
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|metaData
operator|.
name|getSettings
argument_list|()
operator|.
name|getAsMap
argument_list|()
argument_list|,
name|settings
operator|.
name|getSettings
argument_list|()
operator|.
name|getAsMap
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|newIndexSettings
specifier|public
name|IndexSettings
name|newIndexSettings
parameter_list|(
name|IndexMetaData
name|metaData
parameter_list|,
name|Settings
name|nodeSettings
parameter_list|,
name|Setting
argument_list|<
name|?
argument_list|>
modifier|...
name|settings
parameter_list|)
block|{
name|Set
argument_list|<
name|Setting
argument_list|<
name|?
argument_list|>
argument_list|>
name|settingSet
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|IndexScopedSettings
operator|.
name|BUILT_IN_INDEX_SETTINGS
argument_list|)
decl_stmt|;
if|if
condition|(
name|settings
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|settingSet
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|settings
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|nodeSettings
argument_list|,
parameter_list|(
name|idx
parameter_list|)
lambda|->
name|Regex
operator|.
name|simpleMatch
argument_list|(
name|idx
argument_list|,
name|metaData
operator|.
name|getIndex
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|IndexScopedSettings
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|settingSet
argument_list|)
argument_list|)
return|;
block|}
DECL|method|testNodeSettingsAreContained
specifier|public
name|void
name|testNodeSettingsAreContained
parameter_list|()
block|{
specifier|final
name|int
name|numShards
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
specifier|final
name|int
name|numReplicas
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|Settings
name|theSettings
init|=
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.foo.bar"
argument_list|,
literal|0
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
name|numReplicas
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
name|numShards
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Settings
name|nodeSettings
init|=
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.foo.bar"
argument_list|,
literal|43
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|AtomicInteger
name|indexValue
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Setting
argument_list|<
name|Integer
argument_list|>
name|integerSetting
init|=
name|Setting
operator|.
name|intSetting
argument_list|(
literal|"index.foo.bar"
argument_list|,
operator|-
literal|1
argument_list|,
name|Property
operator|.
name|Dynamic
argument_list|,
name|Property
operator|.
name|IndexScope
argument_list|)
decl_stmt|;
name|IndexSettings
name|settings
init|=
name|newIndexSettings
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|theSettings
argument_list|)
argument_list|,
name|nodeSettings
argument_list|,
name|integerSetting
argument_list|)
decl_stmt|;
name|settings
operator|.
name|getScopedSettings
argument_list|()
operator|.
name|addSettingsUpdateConsumer
argument_list|(
name|integerSetting
argument_list|,
name|indexValue
operator|::
name|set
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|numReplicas
argument_list|,
name|settings
operator|.
name|getNumberOfReplicas
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|numShards
argument_list|,
name|settings
operator|.
name|getNumberOfShards
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|indexValue
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.foo.bar"
argument_list|,
literal|42
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
name|numReplicas
operator|+
literal|1
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
name|numShards
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|42
argument_list|,
name|indexValue
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|nodeSettings
argument_list|,
name|settings
operator|.
name|getNodeSettings
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
name|numReplicas
operator|+
literal|1
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
name|numShards
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|43
argument_list|,
name|indexValue
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|newIndexMeta
specifier|public
specifier|static
name|IndexMetaData
name|newIndexMeta
parameter_list|(
name|String
name|name
parameter_list|,
name|Settings
name|indexSettings
parameter_list|)
block|{
name|Settings
name|build
init|=
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
literal|1
argument_list|)
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
literal|1
argument_list|)
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|IndexMetaData
name|metaData
init|=
name|IndexMetaData
operator|.
name|builder
argument_list|(
name|name
argument_list|)
operator|.
name|settings
argument_list|(
name|build
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|metaData
return|;
block|}
DECL|method|testUpdateDurability
specifier|public
name|void
name|testUpdateDurability
parameter_list|()
block|{
name|IndexMetaData
name|metaData
init|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_TRANSLOG_DURABILITY_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"async"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|IndexSettings
name|settings
init|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Translog
operator|.
name|Durability
operator|.
name|ASYNC
argument_list|,
name|settings
operator|.
name|getTranslogDurability
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_TRANSLOG_DURABILITY_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"request"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Translog
operator|.
name|Durability
operator|.
name|REQUEST
argument_list|,
name|settings
operator|.
name|getTranslogDurability
argument_list|()
argument_list|)
expr_stmt|;
name|metaData
operator|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Translog
operator|.
name|Durability
operator|.
name|REQUEST
argument_list|,
name|settings
operator|.
name|getTranslogDurability
argument_list|()
argument_list|)
expr_stmt|;
comment|// test default
block|}
DECL|method|testIsWarmerEnabled
specifier|public
name|void
name|testIsWarmerEnabled
parameter_list|()
block|{
name|IndexMetaData
name|metaData
init|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_WARMER_ENABLED_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|IndexSettings
name|settings
init|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|settings
operator|.
name|isWarmerEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_WARMER_ENABLED_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"true"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|settings
operator|.
name|isWarmerEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|metaData
operator|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|settings
operator|.
name|isWarmerEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testRefreshInterval
specifier|public
name|void
name|testRefreshInterval
parameter_list|()
block|{
name|String
name|refreshInterval
init|=
name|getRandomTimeString
argument_list|()
decl_stmt|;
name|IndexMetaData
name|metaData
init|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_REFRESH_INTERVAL_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|refreshInterval
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|IndexSettings
name|settings
init|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TimeValue
operator|.
name|parseTimeValue
argument_list|(
name|refreshInterval
argument_list|,
operator|new
name|TimeValue
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|DAYS
argument_list|)
argument_list|,
name|IndexSettings
operator|.
name|INDEX_REFRESH_INTERVAL_SETTING
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|settings
operator|.
name|getRefreshInterval
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|newRefreshInterval
init|=
name|getRandomTimeString
argument_list|()
decl_stmt|;
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_REFRESH_INTERVAL_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|newRefreshInterval
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimeValue
operator|.
name|parseTimeValue
argument_list|(
name|newRefreshInterval
argument_list|,
operator|new
name|TimeValue
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|DAYS
argument_list|)
argument_list|,
name|IndexSettings
operator|.
name|INDEX_REFRESH_INTERVAL_SETTING
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|settings
operator|.
name|getRefreshInterval
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getRandomTimeString
specifier|private
name|String
name|getRandomTimeString
parameter_list|()
block|{
name|int
name|refreshIntervalInt
init|=
name|randomFrom
argument_list|(
operator|-
literal|1
argument_list|,
name|Math
operator|.
name|abs
argument_list|(
name|randomInt
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|refreshInterval
init|=
name|Integer
operator|.
name|toString
argument_list|(
name|refreshIntervalInt
argument_list|)
decl_stmt|;
if|if
condition|(
name|refreshIntervalInt
operator|>=
literal|0
condition|)
block|{
name|refreshInterval
operator|+=
name|randomFrom
argument_list|(
literal|"s"
argument_list|,
literal|"ms"
argument_list|,
literal|"h"
argument_list|)
expr_stmt|;
block|}
return|return
name|refreshInterval
return|;
block|}
DECL|method|testMaxResultWindow
specifier|public
name|void
name|testMaxResultWindow
parameter_list|()
block|{
name|IndexMetaData
name|metaData
init|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|MAX_RESULT_WINDOW_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|15
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|IndexSettings
name|settings
init|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|15
argument_list|,
name|settings
operator|.
name|getMaxResultWindow
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|MAX_RESULT_WINDOW_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|42
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|42
argument_list|,
name|settings
operator|.
name|getMaxResultWindow
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|IndexSettings
operator|.
name|MAX_RESULT_WINDOW_SETTING
operator|.
name|get
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
operator|.
name|intValue
argument_list|()
argument_list|,
name|settings
operator|.
name|getMaxResultWindow
argument_list|()
argument_list|)
expr_stmt|;
name|metaData
operator|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|IndexSettings
operator|.
name|MAX_RESULT_WINDOW_SETTING
operator|.
name|get
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
operator|.
name|intValue
argument_list|()
argument_list|,
name|settings
operator|.
name|getMaxResultWindow
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testGCDeletesSetting
specifier|public
name|void
name|testGCDeletesSetting
parameter_list|()
block|{
name|TimeValue
name|gcDeleteSetting
init|=
operator|new
name|TimeValue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|randomInt
argument_list|()
argument_list|)
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
decl_stmt|;
name|IndexMetaData
name|metaData
init|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_GC_DELETES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|gcDeleteSetting
operator|.
name|getStringRep
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|IndexSettings
name|settings
init|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TimeValue
operator|.
name|parseTimeValue
argument_list|(
name|gcDeleteSetting
operator|.
name|getStringRep
argument_list|()
argument_list|,
operator|new
name|TimeValue
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|DAYS
argument_list|)
argument_list|,
name|IndexSettings
operator|.
name|INDEX_GC_DELETES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|getMillis
argument_list|()
argument_list|,
name|settings
operator|.
name|getGcDeletesInMillis
argument_list|()
argument_list|)
expr_stmt|;
name|TimeValue
name|newGCDeleteSetting
init|=
operator|new
name|TimeValue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|randomInt
argument_list|()
argument_list|)
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
decl_stmt|;
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_GC_DELETES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|newGCDeleteSetting
operator|.
name|getStringRep
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimeValue
operator|.
name|parseTimeValue
argument_list|(
name|newGCDeleteSetting
operator|.
name|getStringRep
argument_list|()
argument_list|,
operator|new
name|TimeValue
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|DAYS
argument_list|)
argument_list|,
name|IndexSettings
operator|.
name|INDEX_GC_DELETES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|getMillis
argument_list|()
argument_list|,
name|settings
operator|.
name|getGcDeletesInMillis
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_GC_DELETES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
condition|?
operator|-
literal|1
else|:
operator|new
name|TimeValue
argument_list|(
operator|-
literal|1
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|settings
operator|.
name|getGcDeletesInMillis
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testIsTTLPurgeDisabled
specifier|public
name|void
name|testIsTTLPurgeDisabled
parameter_list|()
block|{
name|IndexMetaData
name|metaData
init|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_TTL_DISABLE_PURGE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|IndexSettings
name|settings
init|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|settings
operator|.
name|isTTLPurgeDisabled
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_TTL_DISABLE_PURGE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"true"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|settings
operator|.
name|isTTLPurgeDisabled
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"reset to default"
argument_list|,
name|settings
operator|.
name|isTTLPurgeDisabled
argument_list|()
argument_list|)
expr_stmt|;
name|metaData
operator|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|settings
operator|.
name|isTTLPurgeDisabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testTranslogFlushSizeThreshold
specifier|public
name|void
name|testTranslogFlushSizeThreshold
parameter_list|()
block|{
name|ByteSizeValue
name|translogFlushThresholdSize
init|=
operator|new
name|ByteSizeValue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|randomInt
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|ByteSizeValue
name|actualValue
init|=
name|ByteSizeValue
operator|.
name|parseBytesSizeValue
argument_list|(
name|translogFlushThresholdSize
operator|.
name|toString
argument_list|()
argument_list|,
name|IndexSettings
operator|.
name|INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
name|IndexMetaData
name|metaData
init|=
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|translogFlushThresholdSize
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|IndexSettings
name|settings
init|=
operator|new
name|IndexSettings
argument_list|(
name|metaData
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|actualValue
argument_list|,
name|settings
operator|.
name|getFlushThresholdSize
argument_list|()
argument_list|)
expr_stmt|;
name|ByteSizeValue
name|newTranslogFlushThresholdSize
init|=
operator|new
name|ByteSizeValue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|randomInt
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|ByteSizeValue
name|actualNewTranslogFlushThresholdSize
init|=
name|ByteSizeValue
operator|.
name|parseBytesSizeValue
argument_list|(
name|newTranslogFlushThresholdSize
operator|.
name|toString
argument_list|()
argument_list|,
name|IndexSettings
operator|.
name|INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
name|settings
operator|.
name|updateIndexMetaData
argument_list|(
name|newIndexMeta
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexSettings
operator|.
name|INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|newTranslogFlushThresholdSize
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|actualNewTranslogFlushThresholdSize
argument_list|,
name|settings
operator|.
name|getFlushThresholdSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

