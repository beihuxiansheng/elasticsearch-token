begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.search
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|MultiReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanClause
operator|.
name|Occur
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|MatchAllDocsQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|MatchNoDocsQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|join
operator|.
name|ScoreMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MapperService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|MatchAllQueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|NestedQueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryShardContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|TermQueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESSingleNodeTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|NestedHelperTests
specifier|public
class|class
name|NestedHelperTests
extends|extends
name|ESSingleNodeTestCase
block|{
DECL|field|indexService
name|IndexService
name|indexService
decl_stmt|;
DECL|field|mapperService
name|MapperService
name|mapperService
decl_stmt|;
annotation|@
name|Override
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|XContentBuilder
name|mapping
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"keyword"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"nested1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"nested"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"keyword"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"nested2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"nested"
argument_list|)
operator|.
name|field
argument_list|(
literal|"include_in_parent"
argument_list|,
literal|true
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"keyword"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"nested3"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"nested"
argument_list|)
operator|.
name|field
argument_list|(
literal|"include_in_root"
argument_list|,
literal|true
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"keyword"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|indexService
operator|=
name|createIndex
argument_list|(
literal|"index"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
name|mapping
argument_list|)
expr_stmt|;
name|mapperService
operator|=
name|indexService
operator|.
name|mapperService
argument_list|()
expr_stmt|;
block|}
DECL|method|testMatchAll
specifier|public
name|void
name|testMatchAll
parameter_list|()
block|{
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|"nested_missing"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testMatchNo
specifier|public
name|void
name|testMatchNo
parameter_list|()
block|{
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
operator|new
name|MatchNoDocsQuery
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
operator|new
name|MatchNoDocsQuery
argument_list|()
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
operator|new
name|MatchNoDocsQuery
argument_list|()
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
operator|new
name|MatchNoDocsQuery
argument_list|()
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
operator|new
name|MatchNoDocsQuery
argument_list|()
argument_list|,
literal|"nested_missing"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testTermQuery
specifier|public
name|void
name|testTermQuery
parameter_list|()
block|{
name|TermQuery
name|termQuery
init|=
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|termQuery
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested_missing"
argument_list|)
argument_list|)
expr_stmt|;
name|termQuery
operator|=
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested1.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|termQuery
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested_missing"
argument_list|)
argument_list|)
expr_stmt|;
name|termQuery
operator|=
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested2.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|termQuery
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested_missing"
argument_list|)
argument_list|)
expr_stmt|;
name|termQuery
operator|=
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested3.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|termQuery
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|termQuery
argument_list|,
literal|"nested_missing"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDisjunction
specifier|public
name|void
name|testDisjunction
parameter_list|()
block|{
name|BooleanQuery
name|bq
init|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"baz"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested1.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested1.foo"
argument_list|,
literal|"baz"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested2.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested2.foo"
argument_list|,
literal|"baz"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested3.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested3.foo"
argument_list|,
literal|"baz"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested1.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested2.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested3.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|requiredOccur
specifier|private
specifier|static
name|Occur
name|requiredOccur
parameter_list|()
block|{
return|return
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|?
name|Occur
operator|.
name|MUST
else|:
name|Occur
operator|.
name|FILTER
return|;
block|}
DECL|method|testConjunction
specifier|public
name|void
name|testConjunction
parameter_list|()
block|{
name|BooleanQuery
name|bq
init|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested1.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested2.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested3.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|bq
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|requiredOccur
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|bq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|bq
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testNested
specifier|public
name|void
name|testNested
parameter_list|()
throws|throws
name|IOException
block|{
name|QueryShardContext
name|context
init|=
name|indexService
operator|.
name|newQueryShardContext
argument_list|(
literal|0
argument_list|,
operator|new
name|MultiReader
argument_list|()
argument_list|,
parameter_list|()
lambda|->
literal|0
argument_list|)
decl_stmt|;
name|NestedQueryBuilder
name|queryBuilder
init|=
operator|new
name|NestedQueryBuilder
argument_list|(
literal|"nested1"
argument_list|,
operator|new
name|MatchAllQueryBuilder
argument_list|()
argument_list|,
name|ScoreMode
operator|.
name|Avg
argument_list|)
decl_stmt|;
name|ESToParentBlockJoinQuery
name|query
init|=
operator|(
name|ESToParentBlockJoinQuery
operator|)
name|queryBuilder
operator|.
name|toQuery
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|Query
name|expectedChildQuery
init|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|Occur
operator|.
name|MUST
argument_list|)
comment|// we automatically add a filter since the inner query might match non-nested docs
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"_type"
argument_list|,
literal|"__nested1"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|FILTER
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedChildQuery
argument_list|,
name|query
operator|.
name|getChildQuery
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|query
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested_missing"
argument_list|)
argument_list|)
expr_stmt|;
name|queryBuilder
operator|=
operator|new
name|NestedQueryBuilder
argument_list|(
literal|"nested1"
argument_list|,
operator|new
name|TermQueryBuilder
argument_list|(
literal|"nested1.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|ScoreMode
operator|.
name|Avg
argument_list|)
expr_stmt|;
name|query
operator|=
operator|(
name|ESToParentBlockJoinQuery
operator|)
name|queryBuilder
operator|.
name|toQuery
argument_list|(
name|context
argument_list|)
expr_stmt|;
comment|// this time we do not add a filter since the inner query only matches inner docs
name|expectedChildQuery
operator|=
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested1.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedChildQuery
argument_list|,
name|query
operator|.
name|getChildQuery
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|query
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested_missing"
argument_list|)
argument_list|)
expr_stmt|;
name|queryBuilder
operator|=
operator|new
name|NestedQueryBuilder
argument_list|(
literal|"nested2"
argument_list|,
operator|new
name|TermQueryBuilder
argument_list|(
literal|"nested2.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|ScoreMode
operator|.
name|Avg
argument_list|)
expr_stmt|;
name|query
operator|=
operator|(
name|ESToParentBlockJoinQuery
operator|)
name|queryBuilder
operator|.
name|toQuery
argument_list|(
name|context
argument_list|)
expr_stmt|;
comment|// we need to add the filter again because of include_in_parent
name|expectedChildQuery
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested2.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|MUST
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"_type"
argument_list|,
literal|"__nested2"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|FILTER
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedChildQuery
argument_list|,
name|query
operator|.
name|getChildQuery
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|query
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested_missing"
argument_list|)
argument_list|)
expr_stmt|;
name|queryBuilder
operator|=
operator|new
name|NestedQueryBuilder
argument_list|(
literal|"nested3"
argument_list|,
operator|new
name|TermQueryBuilder
argument_list|(
literal|"nested3.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|ScoreMode
operator|.
name|Avg
argument_list|)
expr_stmt|;
name|query
operator|=
operator|(
name|ESToParentBlockJoinQuery
operator|)
name|queryBuilder
operator|.
name|toQuery
argument_list|(
name|context
argument_list|)
expr_stmt|;
comment|// we need to add the filter again because of include_in_root
name|expectedChildQuery
operator|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"nested3.foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|MUST
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"_type"
argument_list|,
literal|"__nested3"
argument_list|)
argument_list|)
argument_list|,
name|Occur
operator|.
name|FILTER
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedChildQuery
argument_list|,
name|query
operator|.
name|getChildQuery
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNestedDocs
argument_list|(
name|query
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|NestedHelper
argument_list|(
name|mapperService
argument_list|)
operator|.
name|mightMatchNonNestedDocs
argument_list|(
name|query
argument_list|,
literal|"nested_missing"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

