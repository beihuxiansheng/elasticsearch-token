begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.client.transport
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|state
operator|.
name|ClusterStateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|state
operator|.
name|ClusterStateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|PlainListenableActionFuture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Requests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|transport
operator|.
name|TransportAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|Environment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|node
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|node
operator|.
name|internal
operator|.
name|InternalSettingsPreparer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
operator|.
name|ClusterScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
operator|.
name|settingsBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThanOrEqualTo
import|;
end_import

begin_class
annotation|@
name|ClusterScope
argument_list|(
name|scope
operator|=
name|Scope
operator|.
name|TEST
argument_list|,
name|numClientNodes
operator|=
literal|0
argument_list|)
DECL|class|TransportClientRetryIT
specifier|public
class|class
name|TransportClientRetryIT
extends|extends
name|ESIntegTestCase
block|{
DECL|method|testRetry
specifier|public
name|void
name|testRetry
parameter_list|()
throws|throws
name|IOException
throws|,
name|ExecutionException
throws|,
name|InterruptedException
block|{
name|Iterable
argument_list|<
name|TransportService
argument_list|>
name|instances
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstances
argument_list|(
name|TransportService
operator|.
name|class
argument_list|)
decl_stmt|;
name|TransportAddress
index|[]
name|addresses
init|=
operator|new
name|TransportAddress
index|[
name|internalCluster
argument_list|()
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|TransportService
name|instance
range|:
name|instances
control|)
block|{
name|addresses
index|[
name|i
operator|++
index|]
operator|=
name|instance
operator|.
name|boundAddress
argument_list|()
operator|.
name|publishAddress
argument_list|()
expr_stmt|;
block|}
name|Settings
operator|.
name|Builder
name|builder
init|=
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
literal|"client.transport.nodes_sampler_interval"
argument_list|,
literal|"1s"
argument_list|)
operator|.
name|put
argument_list|(
literal|"node.name"
argument_list|,
literal|"transport_client_retry_test"
argument_list|)
operator|.
name|put
argument_list|(
name|Node
operator|.
name|NODE_MODE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|getNodeMode
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|ClusterName
operator|.
name|CLUSTER_NAME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|getClusterName
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|InternalSettingsPreparer
operator|.
name|IGNORE_SYSTEM_PROPERTIES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|TransportClient
name|transportClient
init|=
name|TransportClient
operator|.
name|builder
argument_list|()
operator|.
name|settings
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
init|)
block|{
name|transportClient
operator|.
name|addTransportAddresses
argument_list|(
name|addresses
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|transportClient
operator|.
name|connectedNodes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|internalCluster
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|size
init|=
name|cluster
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
comment|//kill all nodes one by one, leaving a single master/data node at the end of the loop
for|for
control|(
name|int
name|j
init|=
literal|1
init|;
name|j
operator|<
name|size
condition|;
name|j
operator|++
control|)
block|{
name|internalCluster
argument_list|()
operator|.
name|stopRandomNode
argument_list|(
name|input
lambda|->
literal|true
argument_list|)
expr_stmt|;
name|ClusterStateRequest
name|clusterStateRequest
init|=
name|Requests
operator|.
name|clusterStateRequest
argument_list|()
operator|.
name|local
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|ClusterState
name|clusterState
decl_stmt|;
comment|//use both variants of execute method: with and without listener
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|clusterState
operator|=
name|transportClient
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|state
argument_list|(
name|clusterStateRequest
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|PlainListenableActionFuture
argument_list|<
name|ClusterStateResponse
argument_list|>
name|future
init|=
operator|new
name|PlainListenableActionFuture
argument_list|<>
argument_list|(
name|transportClient
operator|.
name|threadPool
argument_list|()
argument_list|)
decl_stmt|;
name|transportClient
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|state
argument_list|(
name|clusterStateRequest
argument_list|,
name|future
argument_list|)
expr_stmt|;
name|clusterState
operator|=
name|future
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|clusterState
operator|.
name|nodes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|greaterThanOrEqualTo
argument_list|(
name|size
operator|-
name|j
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|transportClient
operator|.
name|connectedNodes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|greaterThanOrEqualTo
argument_list|(
name|size
operator|-
name|j
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

