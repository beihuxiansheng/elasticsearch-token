begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.client
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|ClearScrollRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|tasks
operator|.
name|TaskId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|client
operator|.
name|NoOpClient
import|;
end_import

begin_class
DECL|class|ParentTaskAssigningClientTests
specifier|public
class|class
name|ParentTaskAssigningClientTests
extends|extends
name|ESTestCase
block|{
DECL|method|testSetsParentId
specifier|public
name|void
name|testSetsParentId
parameter_list|()
block|{
name|TaskId
index|[]
name|parentTaskId
init|=
operator|new
name|TaskId
index|[]
block|{
operator|new
name|TaskId
argument_list|(
name|randomAlphaOfLength
argument_list|(
literal|3
argument_list|)
argument_list|,
name|randomLong
argument_list|()
argument_list|)
block|}
decl_stmt|;
comment|// This mock will do nothing but verify that parentTaskId is set on all requests sent to it.
name|NoOpClient
name|mock
init|=
operator|new
name|NoOpClient
argument_list|(
name|getTestName
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
parameter_list|<
name|Request
extends|extends
name|ActionRequest
parameter_list|,
name|Response
extends|extends
name|ActionResponse
parameter_list|,
name|RequestBuilder
extends|extends
name|ActionRequestBuilder
argument_list|<
name|Request
argument_list|,
name|Response
argument_list|,
name|RequestBuilder
argument_list|>
parameter_list|>
name|void
name|doExecute
parameter_list|(
name|Action
argument_list|<
name|Request
argument_list|,
name|Response
argument_list|,
name|RequestBuilder
argument_list|>
name|action
parameter_list|,
name|Request
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|Response
argument_list|>
name|listener
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|parentTaskId
index|[
literal|0
index|]
argument_list|,
name|request
operator|.
name|getParentTask
argument_list|()
argument_list|)
expr_stmt|;
name|super
operator|.
name|doExecute
argument_list|(
name|action
argument_list|,
name|request
argument_list|,
name|listener
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
try|try
init|(
name|ParentTaskAssigningClient
name|client
init|=
operator|new
name|ParentTaskAssigningClient
argument_list|(
name|mock
argument_list|,
name|parentTaskId
index|[
literal|0
index|]
argument_list|)
init|)
block|{
comment|// All of these should have the parentTaskId set
name|client
operator|.
name|bulk
argument_list|(
operator|new
name|BulkRequest
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|search
argument_list|(
operator|new
name|SearchRequest
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|clearScroll
argument_list|(
operator|new
name|ClearScrollRequest
argument_list|()
argument_list|)
expr_stmt|;
comment|// Now lets verify that unwrapped calls don't have the parentTaskId set
name|parentTaskId
index|[
literal|0
index|]
operator|=
name|TaskId
operator|.
name|EMPTY_TASK_ID
expr_stmt|;
name|client
operator|.
name|unwrap
argument_list|()
operator|.
name|bulk
argument_list|(
operator|new
name|BulkRequest
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|unwrap
argument_list|()
operator|.
name|search
argument_list|(
operator|new
name|SearchRequest
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|unwrap
argument_list|()
operator|.
name|clearScroll
argument_list|(
operator|new
name|ClearScrollRequest
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

