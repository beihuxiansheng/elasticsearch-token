begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.fieldstats
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|fieldstats
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|FieldStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|FieldStatsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|core
operator|.
name|DateFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|core
operator|.
name|LegacyDateFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESSingleNodeTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTimeZone
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|GT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|GTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|LT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|LTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Property
operator|.
name|MAX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Property
operator|.
name|MIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|containsString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|either
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|FieldStatsTests
specifier|public
class|class
name|FieldStatsTests
extends|extends
name|ESSingleNodeTestCase
block|{
DECL|method|testByte
specifier|public
name|void
name|testByte
parameter_list|()
block|{
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"byte"
argument_list|,
literal|12
argument_list|,
literal|18
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"byte"
argument_list|,
operator|-
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"byte"
argument_list|,
operator|-
literal|18
argument_list|,
operator|-
literal|12
argument_list|)
expr_stmt|;
block|}
DECL|method|testShort
specifier|public
name|void
name|testShort
parameter_list|()
block|{
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"short"
argument_list|,
literal|256
argument_list|,
literal|266
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"short"
argument_list|,
operator|-
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"short"
argument_list|,
operator|-
literal|266
argument_list|,
operator|-
literal|256
argument_list|)
expr_stmt|;
block|}
DECL|method|testInteger
specifier|public
name|void
name|testInteger
parameter_list|()
block|{
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"integer"
argument_list|,
literal|56880
argument_list|,
literal|56890
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"integer"
argument_list|,
operator|-
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"integer"
argument_list|,
operator|-
literal|56890
argument_list|,
operator|-
literal|56880
argument_list|)
expr_stmt|;
block|}
DECL|method|testLong
specifier|public
name|void
name|testLong
parameter_list|()
block|{
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"long"
argument_list|,
literal|312321312312412L
argument_list|,
literal|312321312312422L
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"long"
argument_list|,
operator|-
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"long"
argument_list|,
operator|-
literal|312321312312422L
argument_list|,
operator|-
literal|312321312312412L
argument_list|)
expr_stmt|;
block|}
DECL|method|testString
specifier|public
name|void
name|testString
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
literal|"field"
argument_list|,
literal|"type=text"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|value
init|=
literal|0
init|;
name|value
operator|<=
literal|10
condition|;
name|value
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%03d"
argument_list|,
name|value
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|result
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"field"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getDensity
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|new
name|BytesRef
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%03d"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getMaxValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|new
name|BytesRef
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%03d"
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%03d"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
operator|.
name|getMaxValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%03d"
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDouble
specifier|public
name|void
name|testDouble
parameter_list|()
block|{
name|String
name|fieldName
init|=
literal|"field"
decl_stmt|;
name|createIndex
argument_list|(
literal|"test"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
name|fieldName
argument_list|,
literal|"type=double"
argument_list|)
expr_stmt|;
for|for
control|(
name|double
name|value
init|=
operator|-
literal|1
init|;
name|value
operator|<=
literal|9
condition|;
name|value
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
name|fieldName
argument_list|,
name|value
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|result
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
name|fieldName
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getDensity
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMaxValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|9d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|toString
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testFloat
specifier|public
name|void
name|testFloat
parameter_list|()
block|{
name|String
name|fieldName
init|=
literal|"field"
decl_stmt|;
name|createIndex
argument_list|(
literal|"test"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
name|fieldName
argument_list|,
literal|"type=float"
argument_list|)
expr_stmt|;
for|for
control|(
name|float
name|value
init|=
operator|-
literal|1
init|;
name|value
operator|<=
literal|9
condition|;
name|value
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
name|fieldName
argument_list|,
name|value
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|result
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
name|fieldName
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getDensity
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMaxValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|9d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMaxValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
literal|9
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testNumberRange
specifier|private
name|void
name|testNumberRange
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|String
name|fieldType
parameter_list|,
name|long
name|min
parameter_list|,
name|long
name|max
parameter_list|)
block|{
name|createIndex
argument_list|(
literal|"test"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
name|fieldName
argument_list|,
literal|"type="
operator|+
name|fieldType
argument_list|)
expr_stmt|;
for|for
control|(
name|long
name|value
init|=
name|min
init|;
name|value
operator|<=
name|max
condition|;
name|value
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
name|fieldName
argument_list|,
name|value
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|result
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
name|fieldName
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|long
name|numDocs
init|=
name|max
operator|-
name|min
operator|+
literal|1
decl_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getDensity
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|min
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMaxValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|max
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|java
operator|.
name|lang
operator|.
name|Long
operator|.
name|toString
argument_list|(
name|min
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMaxValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|java
operator|.
name|lang
operator|.
name|Long
operator|.
name|toString
argument_list|(
name|max
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"test"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
DECL|method|testMerge
specifier|public
name|void
name|testMerge
parameter_list|()
block|{
name|List
argument_list|<
name|FieldStats
argument_list|>
name|stats
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|FieldStats
name|stat
init|=
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
decl_stmt|;
for|for
control|(
name|FieldStats
name|otherStat
range|:
name|stats
control|)
block|{
name|stat
operator|.
name|append
argument_list|(
name|otherStat
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|stat
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stat
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stat
operator|.
name|getSumDocFreq
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stat
operator|.
name|getSumTotalTermFreq
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testMerge_notAvailable
specifier|public
name|void
name|testMerge_notAvailable
parameter_list|()
block|{
name|List
argument_list|<
name|FieldStats
argument_list|>
name|stats
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|FieldStats
name|stat
init|=
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
operator|-
literal|1L
argument_list|,
operator|-
literal|1L
argument_list|,
operator|-
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
decl_stmt|;
for|for
control|(
name|FieldStats
name|otherStat
range|:
name|stats
control|)
block|{
name|stat
operator|.
name|append
argument_list|(
name|otherStat
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|stat
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stat
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stat
operator|.
name|getSumDocFreq
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stat
operator|.
name|getSumTotalTermFreq
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
operator|-
literal|1L
argument_list|,
operator|-
literal|1L
argument_list|,
operator|-
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|stat
operator|=
name|stats
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|FieldStats
name|otherStat
range|:
name|stats
control|)
block|{
name|stat
operator|.
name|append
argument_list|(
name|otherStat
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|stat
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stat
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stat
operator|.
name|getSumDocFreq
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stat
operator|.
name|getSumTotalTermFreq
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|-
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testInvalidField
specifier|public
name|void
name|testInvalidField
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
literal|"field1"
argument_list|,
literal|"type=text"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test1"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field1"
argument_list|,
literal|"a"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test1"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field1"
argument_list|,
literal|"b"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|createIndex
argument_list|(
literal|"test2"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
literal|"field2"
argument_list|,
literal|"type=text"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test2"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field2"
argument_list|,
literal|"a"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test2"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field2"
argument_list|,
literal|"b"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|result
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"field1"
argument_list|,
literal|"field2"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getFailedShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getTotalShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getSuccessfulShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getShardFailures
argument_list|()
index|[
literal|0
index|]
operator|.
name|reason
argument_list|()
argument_list|,
name|either
argument_list|(
name|containsString
argument_list|(
literal|"field [field1] doesn't exist"
argument_list|)
argument_list|)
operator|.
name|or
argument_list|(
name|containsString
argument_list|(
literal|"field [field2] doesn't exist"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// will only succeed on the 'test2' shard, because there the field does exist
name|result
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getFailedShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getTotalShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getSuccessfulShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getShardFailures
argument_list|()
index|[
literal|0
index|]
operator|.
name|reason
argument_list|()
argument_list|,
name|either
argument_list|(
name|containsString
argument_list|(
literal|"field [field1] doesn't exist"
argument_list|)
argument_list|)
operator|.
name|or
argument_list|(
name|containsString
argument_list|(
literal|"field [field2] doesn't exist"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"_all"
argument_list|)
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|getMaxValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testNumberFiltering
specifier|public
name|void
name|testNumberFiltering
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=long"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test1"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
literal|1L
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|createIndex
argument_list|(
literal|"test2"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=long"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test2"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
literal|3L
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"-1"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"0"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"0"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LT
argument_list|,
literal|"1"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"0"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"1"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"1"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"1"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"2"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"3"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"3"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"4"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"3"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"4"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"1"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"3"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"1"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LT
argument_list|,
literal|"3"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDateFiltering
specifier|public
name|void
name|testDateFiltering
parameter_list|()
block|{
name|DateTime
name|dateTime1
init|=
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|)
decl_stmt|;
name|String
name|dateTime1Str
init|=
name|DateFieldMapper
operator|.
name|DEFAULT_DATE_TIME_FORMATTER
operator|.
name|parser
argument_list|()
operator|.
name|print
argument_list|(
name|dateTime1
argument_list|)
decl_stmt|;
name|DateTime
name|dateTime2
init|=
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|)
decl_stmt|;
name|String
name|dateTime2Str
init|=
name|DateFieldMapper
operator|.
name|DEFAULT_DATE_TIME_FORMATTER
operator|.
name|parser
argument_list|()
operator|.
name|print
argument_list|(
name|dateTime2
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=date"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test1"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
name|dateTime1Str
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|createIndex
argument_list|(
literal|"test2"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=date"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test2"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
name|dateTime2Str
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime1Str
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime2Str
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"2013-12-30T00:00:00.000Z"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2013-12-31T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"2013-12-31T00:00:00.000Z"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2014-01-01T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime1Str
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"2014-01-01T00:00:00.000Z"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2014-01-02T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime2Str
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"2014-01-02T00:00:00.000Z"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2014-01-03T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"2014-01-01T23:00:00.000Z"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2014-01-02T01:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime2Str
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"2014-01-01T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime1Str
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime2Str
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2014-01-02T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime1Str
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|dateTime2Str
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDateFiltering_optionalFormat
specifier|public
name|void
name|testDateFiltering_optionalFormat
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=date,format=strict_date_optional_time"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test1"
argument_list|,
literal|"type"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
literal|"2014-01-01T00:00:00.000Z"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|createIndex
argument_list|(
literal|"test2"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=date,format=strict_date_optional_time"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test2"
argument_list|,
literal|"type"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
literal|"2014-01-02T00:00:00.000Z"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|DateTime
name|dateTime1
init|=
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|)
decl_stmt|;
name|DateTime
name|dateTime2
init|=
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|)
decl_stmt|;
name|FieldStatsResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|,
literal|"epoch_millis"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|,
literal|"epoch_millis"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2014-01-02T00:00:00.000Z"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|,
literal|"xyz"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"IllegalArgumentException should have been thrown"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"Invalid format"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testEmptyIndex
specifier|public
name|void
name|testEmptyIndex
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=date"
argument_list|)
expr_stmt|;
name|FieldStatsResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"1998-01-01T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

