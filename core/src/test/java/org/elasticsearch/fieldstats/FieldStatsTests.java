begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.fieldstats
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|fieldstats
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|FieldStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|FieldStatsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|joda
operator|.
name|Joda
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|DateFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESSingleNodeTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTimeZone
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|GT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|GTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|LT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|LTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Property
operator|.
name|MAX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Property
operator|.
name|MIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|containsString
import|;
end_import

begin_class
DECL|class|FieldStatsTests
specifier|public
class|class
name|FieldStatsTests
extends|extends
name|ESSingleNodeTestCase
block|{
DECL|method|testByte
specifier|public
name|void
name|testByte
parameter_list|()
block|{
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"byte"
argument_list|,
literal|12
argument_list|,
literal|18
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"byte"
argument_list|,
operator|-
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"byte"
argument_list|,
operator|-
literal|18
argument_list|,
operator|-
literal|12
argument_list|)
expr_stmt|;
block|}
DECL|method|testShort
specifier|public
name|void
name|testShort
parameter_list|()
block|{
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"short"
argument_list|,
literal|256
argument_list|,
literal|266
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"short"
argument_list|,
operator|-
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"short"
argument_list|,
operator|-
literal|266
argument_list|,
operator|-
literal|256
argument_list|)
expr_stmt|;
block|}
DECL|method|testInteger
specifier|public
name|void
name|testInteger
parameter_list|()
block|{
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"integer"
argument_list|,
literal|56880
argument_list|,
literal|56890
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"integer"
argument_list|,
operator|-
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"integer"
argument_list|,
operator|-
literal|56890
argument_list|,
operator|-
literal|56880
argument_list|)
expr_stmt|;
block|}
DECL|method|testLong
specifier|public
name|void
name|testLong
parameter_list|()
block|{
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"long"
argument_list|,
literal|312321312312412L
argument_list|,
literal|312321312312422L
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"long"
argument_list|,
operator|-
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|testNumberRange
argument_list|(
literal|"field1"
argument_list|,
literal|"long"
argument_list|,
operator|-
literal|312321312312422L
argument_list|,
operator|-
literal|312321312312412L
argument_list|)
expr_stmt|;
block|}
DECL|method|makeType
specifier|private
specifier|static
name|String
name|makeType
parameter_list|(
name|String
name|type
parameter_list|,
name|boolean
name|indexed
parameter_list|,
name|boolean
name|docValues
parameter_list|,
name|boolean
name|stored
parameter_list|)
block|{
return|return
operator|new
name|StringBuilder
argument_list|()
operator|.
name|append
argument_list|(
literal|"type="
argument_list|)
operator|.
name|append
argument_list|(
name|type
argument_list|)
operator|.
name|append
argument_list|(
literal|",index="
argument_list|)
operator|.
name|append
argument_list|(
name|indexed
argument_list|)
operator|.
name|append
argument_list|(
literal|",doc_values="
argument_list|)
operator|.
name|append
argument_list|(
name|docValues
argument_list|)
operator|.
name|append
argument_list|(
literal|",store="
argument_list|)
operator|.
name|append
argument_list|(
name|stored
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|testString
specifier|public
name|void
name|testString
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
literal|"field_index"
argument_list|,
name|makeType
argument_list|(
literal|"keyword"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|,
literal|"field_dv"
argument_list|,
name|makeType
argument_list|(
literal|"keyword"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
argument_list|,
literal|"field_stored"
argument_list|,
name|makeType
argument_list|(
literal|"keyword"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|,
literal|"field_source"
argument_list|,
name|makeType
argument_list|(
literal|"keyword"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|value
init|=
literal|0
init|;
name|value
operator|<=
literal|10
condition|;
name|value
operator|++
control|)
block|{
name|String
name|keyword
init|=
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%03d"
argument_list|,
name|value
argument_list|)
decl_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field_index"
argument_list|,
name|keyword
argument_list|,
literal|"field_dv"
argument_list|,
name|keyword
argument_list|,
literal|"field_stored"
argument_list|,
name|keyword
argument_list|,
literal|"field_source"
argument_list|,
name|keyword
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|result
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"field_index"
argument_list|,
literal|"field_dv"
argument_list|,
literal|"field_stored"
argument_list|,
literal|"field_source"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|field
range|:
operator|new
name|String
index|[]
block|{
literal|"field_index"
block|,
literal|"field_dv"
block|,
literal|"field_stored"
block|}
control|)
block|{
name|FieldStats
name|stats
init|=
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|field
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
literal|11L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"field_index"
operator|.
name|equals
argument_list|(
name|field
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMinValue
argument_list|()
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%03d"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMaxValue
argument_list|()
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%03d"
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%03d"
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMaxValueAsString
argument_list|()
argument_list|,
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"%03d"
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDocCount
argument_list|()
argument_list|,
literal|11L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDensity
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDocCount
argument_list|()
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|stats
operator|.
name|getMinValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|stats
operator|.
name|getMaxValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDensity
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testDouble
specifier|public
name|void
name|testDouble
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
literal|"field_index"
argument_list|,
name|makeType
argument_list|(
literal|"double"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|,
literal|"field_dv"
argument_list|,
name|makeType
argument_list|(
literal|"double"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
argument_list|,
literal|"field_stored"
argument_list|,
name|makeType
argument_list|(
literal|"double"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|,
literal|"field_source"
argument_list|,
name|makeType
argument_list|(
literal|"double"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|double
name|value
init|=
operator|-
literal|1
init|;
name|value
operator|<=
literal|9
condition|;
name|value
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field_index"
argument_list|,
name|value
argument_list|,
literal|"field_dv"
argument_list|,
name|value
argument_list|,
literal|"field_stored"
argument_list|,
name|value
argument_list|,
literal|"field_source"
argument_list|,
name|value
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|result
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"field_index"
argument_list|,
literal|"field_dv"
argument_list|,
literal|"field_stored"
argument_list|,
literal|"field_source"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|field
range|:
operator|new
name|String
index|[]
block|{
literal|"field_index"
block|,
literal|"field_dv"
block|,
literal|"field_stored"
block|}
control|)
block|{
name|FieldStats
name|stats
init|=
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|field
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
literal|11L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"float"
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"field_index"
operator|.
name|equals
argument_list|(
name|field
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDocCount
argument_list|()
argument_list|,
literal|11L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDensity
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMinValue
argument_list|()
argument_list|,
operator|-
literal|1d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMaxValue
argument_list|()
argument_list|,
literal|9d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|Double
operator|.
name|toString
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDocCount
argument_list|()
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|stats
operator|.
name|getMinValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|stats
operator|.
name|getMaxValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDensity
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testHalfFloat
specifier|public
name|void
name|testHalfFloat
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
literal|"field_index"
argument_list|,
name|makeType
argument_list|(
literal|"half_float"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|,
literal|"field_dv"
argument_list|,
name|makeType
argument_list|(
literal|"half_float"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
argument_list|,
literal|"field_stored"
argument_list|,
name|makeType
argument_list|(
literal|"half_float"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|,
literal|"field_source"
argument_list|,
name|makeType
argument_list|(
literal|"half_float"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|float
name|value
init|=
operator|-
literal|1
init|;
name|value
operator|<=
literal|9
condition|;
name|value
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field_index"
argument_list|,
name|value
argument_list|,
literal|"field_dv"
argument_list|,
name|value
argument_list|,
literal|"field_stored"
argument_list|,
name|value
argument_list|,
literal|"field_source"
argument_list|,
name|value
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|result
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"field_index"
argument_list|,
literal|"field_dv"
argument_list|,
literal|"field_stored"
argument_list|,
literal|"field_source"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|field
range|:
operator|new
name|String
index|[]
block|{
literal|"field_index"
block|,
literal|"field_dv"
block|,
literal|"field_stored"
block|}
control|)
block|{
name|FieldStats
name|stats
init|=
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|field
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
literal|11L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"float"
argument_list|)
expr_stmt|;
if|if
condition|(
name|field
operator|.
name|equals
argument_list|(
literal|"field_index"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDocCount
argument_list|()
argument_list|,
literal|11L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDensity
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMinValue
argument_list|()
argument_list|,
operator|-
literal|1d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMaxValue
argument_list|()
argument_list|,
literal|9d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|Float
operator|.
name|toString
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMaxValueAsString
argument_list|()
argument_list|,
name|Float
operator|.
name|toString
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDocCount
argument_list|()
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|stats
operator|.
name|getMinValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|stats
operator|.
name|getMaxValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDensity
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testFloat
specifier|public
name|void
name|testFloat
parameter_list|()
block|{
name|String
name|fieldName
init|=
literal|"field"
decl_stmt|;
name|createIndex
argument_list|(
literal|"test"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
literal|"field_index"
argument_list|,
name|makeType
argument_list|(
literal|"float"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|,
literal|"field_dv"
argument_list|,
name|makeType
argument_list|(
literal|"float"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
argument_list|,
literal|"field_stored"
argument_list|,
name|makeType
argument_list|(
literal|"float"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|,
literal|"field_source"
argument_list|,
name|makeType
argument_list|(
literal|"float"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|float
name|value
init|=
operator|-
literal|1
init|;
name|value
operator|<=
literal|9
condition|;
name|value
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field_index"
argument_list|,
name|value
argument_list|,
literal|"field_dv"
argument_list|,
name|value
argument_list|,
literal|"field_stored"
argument_list|,
name|value
argument_list|,
literal|"field_source"
argument_list|,
name|value
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|result
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"field_index"
argument_list|,
literal|"field_dv"
argument_list|,
literal|"field_stored"
argument_list|,
literal|"field_source"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|field
range|:
operator|new
name|String
index|[]
block|{
literal|"field_index"
block|,
literal|"field_dv"
block|,
literal|"field_stored"
block|}
control|)
block|{
name|FieldStats
name|stats
init|=
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|field
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
literal|11L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"float"
argument_list|)
expr_stmt|;
if|if
condition|(
name|field
operator|.
name|equals
argument_list|(
literal|"field_index"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDocCount
argument_list|()
argument_list|,
literal|11L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDensity
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMinValue
argument_list|()
argument_list|,
operator|-
literal|1d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMaxValue
argument_list|()
argument_list|,
literal|9d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|Float
operator|.
name|toString
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getMaxValueAsString
argument_list|()
argument_list|,
name|Float
operator|.
name|toString
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDocCount
argument_list|()
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|stats
operator|.
name|getMinValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|stats
operator|.
name|getMaxValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getDensity
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testNumberRange
specifier|private
name|void
name|testNumberRange
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|String
name|fieldType
parameter_list|,
name|long
name|min
parameter_list|,
name|long
name|max
parameter_list|)
block|{
name|createIndex
argument_list|(
literal|"test"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
name|fieldName
argument_list|,
literal|"type="
operator|+
name|fieldType
argument_list|)
expr_stmt|;
comment|// index=false
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
name|fieldName
argument_list|,
literal|"type="
operator|+
name|fieldType
operator|+
literal|",index=false"
argument_list|)
expr_stmt|;
comment|// no value
name|createIndex
argument_list|(
literal|"test2"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"test"
argument_list|,
name|fieldName
argument_list|,
literal|"type="
operator|+
name|fieldType
argument_list|)
expr_stmt|;
for|for
control|(
name|long
name|value
init|=
name|min
init|;
name|value
operator|<=
name|max
condition|;
name|value
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
name|fieldName
argument_list|,
name|value
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|result
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
name|fieldName
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|long
name|numDocs
init|=
name|max
operator|-
name|min
operator|+
literal|1
decl_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
name|numDocs
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|numDocs
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getDensity
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|min
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMaxValue
argument_list|()
argument_list|,
name|max
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|java
operator|.
name|lang
operator|.
name|Long
operator|.
name|toString
argument_list|(
name|min
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getMaxValueAsString
argument_list|()
argument_list|,
name|java
operator|.
name|lang
operator|.
name|Long
operator|.
name|toString
argument_list|(
name|max
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|isSearchable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|isAggregatable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|fieldType
operator|.
name|equals
argument_list|(
literal|"float"
argument_list|)
operator|||
name|fieldType
operator|.
name|equals
argument_list|(
literal|"double"
argument_list|)
operator|||
name|fieldType
operator|.
name|equals
argument_list|(
literal|"half-float"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"float"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|result
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"integer"
argument_list|)
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"test"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
DECL|method|testMerge
specifier|public
name|void
name|testMerge
parameter_list|()
block|{
name|List
argument_list|<
name|FieldStats
argument_list|>
name|stats
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|FieldStats
name|stat
init|=
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
decl_stmt|;
for|for
control|(
name|FieldStats
name|otherStat
range|:
name|stats
control|)
block|{
name|stat
operator|.
name|accumulate
argument_list|(
name|otherStat
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|stat
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getDocCount
argument_list|()
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getSumDocFreq
argument_list|()
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getSumTotalTermFreq
argument_list|()
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|isSearchable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|isAggregatable
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"integer"
argument_list|)
expr_stmt|;
block|}
DECL|method|testMerge_notAvailable
specifier|public
name|void
name|testMerge_notAvailable
parameter_list|()
block|{
name|List
argument_list|<
name|FieldStats
argument_list|>
name|stats
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|FieldStats
name|stat
init|=
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
operator|-
literal|1L
argument_list|,
operator|-
literal|1L
argument_list|,
operator|-
literal|1L
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
decl_stmt|;
for|for
control|(
name|FieldStats
name|otherStat
range|:
name|stats
control|)
block|{
name|stat
operator|.
name|accumulate
argument_list|(
name|otherStat
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|stat
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getDocCount
argument_list|()
argument_list|,
operator|-
literal|1L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getSumDocFreq
argument_list|()
argument_list|,
operator|-
literal|1L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getSumTotalTermFreq
argument_list|()
argument_list|,
operator|-
literal|1L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|isSearchable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|isAggregatable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"integer"
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
literal|1
argument_list|,
operator|-
literal|1L
argument_list|,
operator|-
literal|1L
argument_list|,
operator|-
literal|1L
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|stat
operator|=
name|stats
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|FieldStats
name|otherStat
range|:
name|stats
control|)
block|{
name|stat
operator|.
name|accumulate
argument_list|(
name|otherStat
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|stat
operator|.
name|getMaxDoc
argument_list|()
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getDocCount
argument_list|()
argument_list|,
operator|-
literal|1L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getSumDocFreq
argument_list|()
argument_list|,
operator|-
literal|1L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getSumTotalTermFreq
argument_list|()
argument_list|,
operator|-
literal|1L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|isSearchable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|isAggregatable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stat
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"integer"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|stat
operator|.
name|getMaxValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|stat
operator|.
name|getMinValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testNumberFiltering
specifier|public
name|void
name|testNumberFiltering
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=long"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test1"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
literal|1L
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|createIndex
argument_list|(
literal|"test2"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=long"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test2"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
literal|3L
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
literal|3L
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"-1"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"0"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"0"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LT
argument_list|,
literal|"1"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"0"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"1"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"1"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"1"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"2"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"3"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
literal|3L
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"3"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"4"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
literal|3L
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"3"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"4"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"1"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"3"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
literal|3L
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"1"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LT
argument_list|,
literal|"3"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|testDateFiltering
specifier|public
name|void
name|testDateFiltering
parameter_list|()
block|{
name|DateTime
name|dateTime1
init|=
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|)
decl_stmt|;
name|String
name|dateTime1Str
init|=
name|DateFieldMapper
operator|.
name|DEFAULT_DATE_TIME_FORMATTER
operator|.
name|parser
argument_list|()
operator|.
name|print
argument_list|(
name|dateTime1
argument_list|)
decl_stmt|;
name|DateTime
name|dateTime2
init|=
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|)
decl_stmt|;
name|String
name|dateTime2Str
init|=
name|DateFieldMapper
operator|.
name|DEFAULT_DATE_TIME_FORMATTER
operator|.
name|parser
argument_list|()
operator|.
name|print
argument_list|(
name|dateTime2
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=date"
argument_list|,
literal|"value2"
argument_list|,
literal|"type=date,index=false"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test1"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
name|dateTime1Str
argument_list|,
literal|"value2"
argument_list|,
name|dateTime1Str
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|createIndex
argument_list|(
literal|"test2"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=date"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test2"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
name|dateTime2Str
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|dateTime1Str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|dateTime2Str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"date"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"2013-12-30T00:00:00.000Z"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2013-12-31T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"2013-12-31T00:00:00.000Z"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2014-01-01T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|dateTime1Str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"date"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"2014-01-01T00:00:00.000Z"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2014-01-02T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|dateTime2Str
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
literal|"2014-01-02T00:00:00.000Z"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2014-01-03T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"2014-01-01T23:00:00.000Z"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2014-01-02T01:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|dateTime2Str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"date"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GTE
argument_list|,
literal|"2014-01-01T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|dateTime1Str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|dateTime2Str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"date"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2014-01-02T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValue
argument_list|()
argument_list|,
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|dateTime1Str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
name|dateTime2Str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"date"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value2"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value2"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
literal|"2014-01-02T00:00:00.000Z"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|testDateFiltering_optionalFormat
specifier|public
name|void
name|testDateFiltering_optionalFormat
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=date,format=strict_date_optional_time"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test1"
argument_list|,
literal|"type"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
literal|"2014-01-01T00:00:00.000Z"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|createIndex
argument_list|(
literal|"test2"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=date,format=strict_date_optional_time"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test2"
argument_list|,
literal|"type"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"value"
argument_list|,
literal|"2014-01-02T00:00:00.000Z"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|DateTime
name|dateTime1
init|=
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|)
decl_stmt|;
name|DateTime
name|dateTime2
init|=
operator|new
name|DateTime
argument_list|(
literal|2014
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|)
decl_stmt|;
name|FieldStatsResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|,
literal|"epoch_millis"
argument_list|)
argument_list|,
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MAX
argument_list|,
name|LTE
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|dateTime2
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|,
literal|"epoch_millis"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getMinValueAsString
argument_list|()
argument_list|,
literal|"2014-01-02T00:00:00.000Z"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getDisplayType
argument_list|()
argument_list|,
literal|"date"
argument_list|)
expr_stmt|;
try|try
block|{
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"value"
argument_list|)
operator|.
name|setIndexContraints
argument_list|(
operator|new
name|IndexConstraint
argument_list|(
literal|"value"
argument_list|,
name|MIN
argument_list|,
name|GT
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|dateTime1
operator|.
name|getMillis
argument_list|()
argument_list|)
argument_list|,
literal|"xyz"
argument_list|)
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"IllegalArgumentException should have been thrown"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"Invalid format"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testEmptyIndex
specifier|public
name|void
name|testEmptyIndex
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=date"
argument_list|)
expr_stmt|;
name|FieldStatsResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"*"
argument_list|)
operator|.
name|setLevel
argument_list|(
literal|"indices"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getIndicesMergedFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|testMetaFieldsNotIndexed
specifier|public
name|void
name|testMetaFieldsNotIndexed
parameter_list|()
block|{
name|createIndex
argument_list|(
literal|"test"
argument_list|,
name|Settings
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test"
argument_list|,
literal|"type"
argument_list|)
operator|.
name|setSource
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|FieldStatsResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareFieldStats
argument_list|()
operator|.
name|setFields
argument_list|(
literal|"_id"
argument_list|,
literal|"_type"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"_type"
argument_list|)
operator|.
name|isSearchable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getAllFieldStats
argument_list|()
operator|.
name|get
argument_list|(
literal|"_type"
argument_list|)
operator|.
name|isAggregatable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|testSerialization
specifier|public
name|void
name|testSerialization
parameter_list|()
throws|throws
name|IOException
block|{
for|for
control|(
name|Version
name|version
range|:
operator|new
name|Version
index|[]
block|{
name|Version
operator|.
name|CURRENT
block|,
name|Version
operator|.
name|V_5_0_1
block|}
control|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|++
control|)
block|{
name|assertSerialization
argument_list|(
name|randomFieldStats
argument_list|(
name|version
operator|.
name|onOrAfter
argument_list|(
name|Version
operator|.
name|V_5_2_0_UNRELEASED
argument_list|)
argument_list|)
argument_list|,
name|version
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**      * creates a random field stats which does not guarantee that {@link FieldStats#maxValue} is greater than {@link FieldStats#minValue}      **/
DECL|method|randomFieldStats
specifier|public
specifier|static
name|FieldStats
name|randomFieldStats
parameter_list|(
name|boolean
name|withNullMinMax
parameter_list|)
throws|throws
name|UnknownHostException
block|{
name|int
name|type
init|=
name|randomInt
argument_list|(
literal|5
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
name|withNullMinMax
operator|&&
name|randomBoolean
argument_list|()
condition|)
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Long
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomLong
argument_list|()
argument_list|,
name|randomLong
argument_list|()
argument_list|)
return|;
block|}
case|case
literal|1
case|:
if|if
condition|(
name|withNullMinMax
operator|&&
name|randomBoolean
argument_list|()
condition|)
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Double
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Double
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomDouble
argument_list|()
argument_list|,
name|randomDouble
argument_list|()
argument_list|)
return|;
block|}
case|case
literal|2
case|:
if|if
condition|(
name|withNullMinMax
operator|&&
name|randomBoolean
argument_list|()
condition|)
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Date
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Date
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|Joda
operator|.
name|forPattern
argument_list|(
literal|"basicDate"
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|,
operator|new
name|Date
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
return|;
block|}
case|case
literal|3
case|:
if|if
condition|(
name|withNullMinMax
operator|&&
name|randomBoolean
argument_list|()
condition|)
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Text
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Text
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|randomAsciiOfLength
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|randomAsciiOfLength
argument_list|(
literal|20
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
case|case
literal|4
case|:
if|if
condition|(
name|withNullMinMax
operator|&&
name|randomBoolean
argument_list|()
condition|)
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Ip
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Ip
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|InetAddress
operator|.
name|getByName
argument_list|(
literal|"::1"
argument_list|)
argument_list|,
name|InetAddress
operator|.
name|getByName
argument_list|(
literal|"::1"
argument_list|)
argument_list|)
return|;
block|}
case|case
literal|5
case|:
if|if
condition|(
name|withNullMinMax
operator|&&
name|randomBoolean
argument_list|()
condition|)
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Ip
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|FieldStats
operator|.
name|Ip
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|randomBoolean
argument_list|()
argument_list|,
name|InetAddress
operator|.
name|getByName
argument_list|(
literal|"1.2.3.4"
argument_list|)
argument_list|,
name|InetAddress
operator|.
name|getByName
argument_list|(
literal|"1.2.3.4"
argument_list|)
argument_list|)
return|;
block|}
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid type"
argument_list|)
throw|;
block|}
block|}
DECL|method|assertSerialization
specifier|private
name|void
name|assertSerialization
parameter_list|(
name|FieldStats
name|stats
parameter_list|,
name|Version
name|version
parameter_list|)
throws|throws
name|IOException
block|{
name|BytesStreamOutput
name|output
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|output
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|stats
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|output
operator|.
name|flush
argument_list|()
expr_stmt|;
name|StreamInput
name|input
init|=
name|output
operator|.
name|bytes
argument_list|()
operator|.
name|streamInput
argument_list|()
decl_stmt|;
name|input
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|FieldStats
name|deserializedStats
init|=
name|FieldStats
operator|.
name|readFrom
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|stats
argument_list|,
name|deserializedStats
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|hashCode
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

