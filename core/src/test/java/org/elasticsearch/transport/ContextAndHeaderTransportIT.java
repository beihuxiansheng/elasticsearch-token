begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.transport
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|message
operator|.
name|BasicHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|refresh
operator|.
name|RefreshRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|get
operator|.
name|GetRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|ActionFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|termvectors
operator|.
name|MultiTermVectorsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|network
operator|.
name|NetworkModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|BoolQueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|GeoShapeQueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|MoreLikeThisQueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|MoreLikeThisQueryBuilder
operator|.
name|Item
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|TermsQueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|TermsLookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|ActionPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
operator|.
name|ClusterScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singletonList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
operator|.
name|SETTING_NUMBER_OF_SHARDS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
operator|.
name|Scope
operator|.
name|SUITE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertAcked
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertHitCount
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertNoFailures
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThan
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|hasSize
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_class
annotation|@
name|ClusterScope
argument_list|(
name|scope
operator|=
name|SUITE
argument_list|)
DECL|class|ContextAndHeaderTransportIT
specifier|public
class|class
name|ContextAndHeaderTransportIT
extends|extends
name|ESIntegTestCase
block|{
DECL|field|requests
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|RequestAndHeaders
argument_list|>
name|requests
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|randomHeaderKey
specifier|private
name|String
name|randomHeaderKey
init|=
name|randomAsciiOfLength
argument_list|(
literal|10
argument_list|)
decl_stmt|;
DECL|field|randomHeaderValue
specifier|private
name|String
name|randomHeaderValue
init|=
name|randomAsciiOfLength
argument_list|(
literal|20
argument_list|)
decl_stmt|;
DECL|field|queryIndex
specifier|private
name|String
name|queryIndex
init|=
literal|"query-"
operator|+
name|randomAsciiOfLength
argument_list|(
literal|10
argument_list|)
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|lookupIndex
specifier|private
name|String
name|lookupIndex
init|=
literal|"lookup-"
operator|+
name|randomAsciiOfLength
argument_list|(
literal|10
argument_list|)
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|nodeSettings
specifier|protected
name|Settings
name|nodeSettings
parameter_list|(
name|int
name|nodeOrdinal
parameter_list|)
block|{
return|return
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|super
operator|.
name|nodeSettings
argument_list|(
name|nodeOrdinal
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"script.stored"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|put
argument_list|(
name|NetworkModule
operator|.
name|HTTP_ENABLED
operator|.
name|getKey
argument_list|()
argument_list|,
literal|true
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|nodePlugins
specifier|protected
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|Plugin
argument_list|>
argument_list|>
name|nodePlugins
parameter_list|()
block|{
return|return
name|pluginList
argument_list|(
name|ActionLoggingPlugin
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Before
DECL|method|createIndices
specifier|public
name|void
name|createIndices
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"type"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"location"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"geo_shape"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|(
literal|"name"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"text"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|string
argument_list|()
decl_stmt|;
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
literal|1
argument_list|)
comment|// A single shard will help to keep the tests repeatable.
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertAcked
argument_list|(
name|transportClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
name|lookupIndex
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
name|mapping
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|transportClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
name|queryIndex
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
name|mapping
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|(
name|queryIndex
argument_list|,
name|lookupIndex
argument_list|)
expr_stmt|;
name|requests
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|checkAllRequestsContainHeaders
specifier|public
name|void
name|checkAllRequestsContainHeaders
parameter_list|()
block|{
name|assertRequestsContainHeader
argument_list|(
name|IndexRequest
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertRequestsContainHeader
argument_list|(
name|RefreshRequest
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|testThatTermsLookupGetRequestContainsContextAndHeaders
specifier|public
name|void
name|testThatTermsLookupGetRequestContainsContextAndHeaders
parameter_list|()
throws|throws
name|Exception
block|{
name|transportClient
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|lookupIndex
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|array
argument_list|(
literal|"followers"
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"baz"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|transportClient
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|queryIndex
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"username"
argument_list|,
literal|"foo"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|transportClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|(
name|queryIndex
argument_list|,
name|lookupIndex
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|TermsLookup
name|termsLookup
init|=
operator|new
name|TermsLookup
argument_list|(
name|lookupIndex
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|,
literal|"followers"
argument_list|)
decl_stmt|;
name|TermsQueryBuilder
name|termsLookupFilterBuilder
init|=
name|QueryBuilders
operator|.
name|termsLookupQuery
argument_list|(
literal|"username"
argument_list|,
name|termsLookup
argument_list|)
decl_stmt|;
name|BoolQueryBuilder
name|queryBuilder
init|=
name|QueryBuilders
operator|.
name|boolQuery
argument_list|()
operator|.
name|must
argument_list|(
name|QueryBuilders
operator|.
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|must
argument_list|(
name|termsLookupFilterBuilder
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|transportClient
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|queryIndex
argument_list|)
operator|.
name|setQuery
argument_list|(
name|queryBuilder
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNoFailures
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertGetRequestsContainHeaders
argument_list|()
expr_stmt|;
block|}
DECL|method|testThatGeoShapeQueryGetRequestContainsContextAndHeaders
specifier|public
name|void
name|testThatGeoShapeQueryGetRequestContainsContextAndHeaders
parameter_list|()
throws|throws
name|Exception
block|{
name|transportClient
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|lookupIndex
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"name"
argument_list|,
literal|"Munich Suburban Area"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"location"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"polygon"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|startArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|11.34
argument_list|)
operator|.
name|value
argument_list|(
literal|48.25
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|11.68
argument_list|)
operator|.
name|value
argument_list|(
literal|48.25
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|11.65
argument_list|)
operator|.
name|value
argument_list|(
literal|48.06
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|11.37
argument_list|)
operator|.
name|value
argument_list|(
literal|48.13
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|startArray
argument_list|()
operator|.
name|value
argument_list|(
literal|11.34
argument_list|)
operator|.
name|value
argument_list|(
literal|48.25
argument_list|)
operator|.
name|endArray
argument_list|()
comment|// close the polygon
operator|.
name|endArray
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
comment|// second document
name|transportClient
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|queryIndex
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"name"
argument_list|,
literal|"Munich Center"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"location"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"point"
argument_list|)
operator|.
name|startArray
argument_list|(
literal|"coordinates"
argument_list|)
operator|.
name|value
argument_list|(
literal|11.57
argument_list|)
operator|.
name|value
argument_list|(
literal|48.13
argument_list|)
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|transportClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|(
name|lookupIndex
argument_list|,
name|queryIndex
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|GeoShapeQueryBuilder
name|queryBuilder
init|=
name|QueryBuilders
operator|.
name|geoShapeQuery
argument_list|(
literal|"location"
argument_list|,
literal|"1"
argument_list|,
literal|"type"
argument_list|)
operator|.
name|indexedShapeIndex
argument_list|(
name|lookupIndex
argument_list|)
operator|.
name|indexedShapePath
argument_list|(
literal|"location"
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|transportClient
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|queryIndex
argument_list|)
operator|.
name|setQuery
argument_list|(
name|queryBuilder
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNoFailures
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|requests
argument_list|,
name|hasSize
argument_list|(
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertGetRequestsContainHeaders
argument_list|()
expr_stmt|;
block|}
DECL|method|testThatMoreLikeThisQueryMultiTermVectorRequestContainsContextAndHeaders
specifier|public
name|void
name|testThatMoreLikeThisQueryMultiTermVectorRequestContainsContextAndHeaders
parameter_list|()
throws|throws
name|Exception
block|{
name|transportClient
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|lookupIndex
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"name"
argument_list|,
literal|"Star Wars - The new republic"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|transportClient
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|queryIndex
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"name"
argument_list|,
literal|"Jar Jar Binks - A horrible mistake"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|transportClient
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|queryIndex
argument_list|,
literal|"type"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"name"
argument_list|,
literal|"Star Wars - Return of the jedi"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|transportClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|(
name|lookupIndex
argument_list|,
name|queryIndex
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|MoreLikeThisQueryBuilder
name|moreLikeThisQueryBuilder
init|=
name|QueryBuilders
operator|.
name|moreLikeThisQuery
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"name"
block|}
argument_list|,
literal|null
argument_list|,
operator|new
name|Item
index|[]
block|{
operator|new
name|Item
argument_list|(
name|lookupIndex
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
block|}
argument_list|)
operator|.
name|minTermFreq
argument_list|(
literal|1
argument_list|)
operator|.
name|minDocFreq
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|transportClient
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|queryIndex
argument_list|)
operator|.
name|setQuery
argument_list|(
name|moreLikeThisQueryBuilder
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNoFailures
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertRequestsContainHeader
argument_list|(
name|MultiTermVectorsRequest
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|testThatRelevantHttpHeadersBecomeRequestHeaders
specifier|public
name|void
name|testThatRelevantHttpHeadersBecomeRequestHeaders
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|relevantHeaderName
init|=
literal|"relevant_"
operator|+
name|randomHeaderKey
decl_stmt|;
for|for
control|(
name|RestController
name|restController
range|:
name|internalCluster
argument_list|()
operator|.
name|getInstances
argument_list|(
name|RestController
operator|.
name|class
argument_list|)
control|)
block|{
name|restController
operator|.
name|registerRelevantHeaders
argument_list|(
name|relevantHeaderName
argument_list|)
expr_stmt|;
block|}
try|try
init|(
name|Response
name|response
init|=
name|getRestClient
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"GET"
argument_list|,
literal|"/"
operator|+
name|queryIndex
operator|+
literal|"/_search"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
literal|null
argument_list|,
operator|new
name|BasicHeader
argument_list|(
name|randomHeaderKey
argument_list|,
name|randomHeaderValue
argument_list|)
argument_list|,
operator|new
name|BasicHeader
argument_list|(
name|relevantHeaderName
argument_list|,
name|randomHeaderValue
argument_list|)
argument_list|)
init|)
block|{
name|assertThat
argument_list|(
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|RequestAndHeaders
argument_list|>
name|searchRequests
init|=
name|getRequests
argument_list|(
name|SearchRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|searchRequests
argument_list|,
name|hasSize
argument_list|(
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|RequestAndHeaders
name|requestAndHeaders
range|:
name|searchRequests
control|)
block|{
name|assertThat
argument_list|(
name|requestAndHeaders
operator|.
name|headers
operator|.
name|containsKey
argument_list|(
name|relevantHeaderName
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
comment|// was not specified, thus is not included
name|assertThat
argument_list|(
name|requestAndHeaders
operator|.
name|headers
operator|.
name|containsKey
argument_list|(
name|randomHeaderKey
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|getRequests
specifier|private
name|List
argument_list|<
name|RequestAndHeaders
argument_list|>
name|getRequests
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|)
block|{
name|List
argument_list|<
name|RequestAndHeaders
argument_list|>
name|results
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|RequestAndHeaders
name|request
range|:
name|requests
control|)
block|{
if|if
condition|(
name|request
operator|.
name|request
operator|.
name|getClass
argument_list|()
operator|.
name|equals
argument_list|(
name|clazz
argument_list|)
condition|)
block|{
name|results
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|results
return|;
block|}
DECL|method|assertRequestsContainHeader
specifier|private
name|void
name|assertRequestsContainHeader
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|ActionRequest
argument_list|>
name|clazz
parameter_list|)
block|{
name|List
argument_list|<
name|RequestAndHeaders
argument_list|>
name|classRequests
init|=
name|getRequests
argument_list|(
name|clazz
argument_list|)
decl_stmt|;
for|for
control|(
name|RequestAndHeaders
name|request
range|:
name|classRequests
control|)
block|{
name|assertRequestContainsHeader
argument_list|(
name|request
operator|.
name|request
argument_list|,
name|request
operator|.
name|headers
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|assertGetRequestsContainHeaders
specifier|private
name|void
name|assertGetRequestsContainHeaders
parameter_list|()
block|{
name|assertGetRequestsContainHeaders
argument_list|(
name|this
operator|.
name|lookupIndex
argument_list|)
expr_stmt|;
block|}
DECL|method|assertGetRequestsContainHeaders
specifier|private
name|void
name|assertGetRequestsContainHeaders
parameter_list|(
name|String
name|index
parameter_list|)
block|{
name|List
argument_list|<
name|RequestAndHeaders
argument_list|>
name|getRequests
init|=
name|getRequests
argument_list|(
name|GetRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|getRequests
argument_list|,
name|hasSize
argument_list|(
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|RequestAndHeaders
name|request
range|:
name|getRequests
control|)
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|GetRequest
operator|)
name|request
operator|.
name|request
operator|)
operator|.
name|index
argument_list|()
operator|.
name|equals
argument_list|(
name|index
argument_list|)
condition|)
block|{
continue|continue;
block|}
name|assertRequestContainsHeader
argument_list|(
name|request
operator|.
name|request
argument_list|,
name|request
operator|.
name|headers
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|assertRequestContainsHeader
specifier|private
name|void
name|assertRequestContainsHeader
parameter_list|(
name|ActionRequest
name|request
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|context
parameter_list|)
block|{
name|String
name|msg
init|=
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"Expected header %s to be in request %s"
argument_list|,
name|randomHeaderKey
argument_list|,
name|request
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|request
operator|instanceof
name|IndexRequest
condition|)
block|{
name|IndexRequest
name|indexRequest
init|=
operator|(
name|IndexRequest
operator|)
name|request
decl_stmt|;
name|msg
operator|=
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"Expected header %s to be in index request %s/%s/%s"
argument_list|,
name|randomHeaderKey
argument_list|,
name|indexRequest
operator|.
name|index
argument_list|()
argument_list|,
name|indexRequest
operator|.
name|type
argument_list|()
argument_list|,
name|indexRequest
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|msg
argument_list|,
name|context
operator|.
name|containsKey
argument_list|(
name|randomHeaderKey
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
operator|.
name|get
argument_list|(
name|randomHeaderKey
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
name|randomHeaderValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * a transport client that adds our random header      */
DECL|method|transportClient
specifier|private
name|Client
name|transportClient
parameter_list|()
block|{
return|return
name|internalCluster
argument_list|()
operator|.
name|transportClient
argument_list|()
operator|.
name|filterWithHeader
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
name|randomHeaderKey
argument_list|,
name|randomHeaderValue
argument_list|)
argument_list|)
return|;
block|}
DECL|class|ActionLoggingPlugin
specifier|public
specifier|static
class|class
name|ActionLoggingPlugin
extends|extends
name|Plugin
implements|implements
name|ActionPlugin
block|{
annotation|@
name|Override
DECL|method|nodeModules
specifier|public
name|Collection
argument_list|<
name|Module
argument_list|>
name|nodeModules
parameter_list|()
block|{
return|return
name|Collections
operator|.
expr|<
name|Module
operator|>
name|singletonList
argument_list|(
operator|new
name|ActionLoggingModule
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getActionFilters
specifier|public
name|List
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|ActionFilter
argument_list|>
argument_list|>
name|getActionFilters
parameter_list|()
block|{
return|return
name|singletonList
argument_list|(
name|LoggingFilter
operator|.
name|class
argument_list|)
return|;
block|}
block|}
DECL|class|ActionLoggingModule
specifier|public
specifier|static
class|class
name|ActionLoggingModule
extends|extends
name|AbstractModule
block|{
annotation|@
name|Override
DECL|method|configure
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|bind
argument_list|(
name|LoggingFilter
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|LoggingFilter
specifier|public
specifier|static
class|class
name|LoggingFilter
extends|extends
name|ActionFilter
operator|.
name|Simple
block|{
DECL|field|threadPool
specifier|private
specifier|final
name|ThreadPool
name|threadPool
decl_stmt|;
annotation|@
name|Inject
DECL|method|LoggingFilter
specifier|public
name|LoggingFilter
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|ThreadPool
name|pool
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|this
operator|.
name|threadPool
operator|=
name|pool
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|order
specifier|public
name|int
name|order
parameter_list|()
block|{
return|return
literal|999
return|;
block|}
annotation|@
name|Override
DECL|method|apply
specifier|protected
name|boolean
name|apply
parameter_list|(
name|String
name|action
parameter_list|,
name|ActionRequest
name|request
parameter_list|,
name|ActionListener
name|listener
parameter_list|)
block|{
name|requests
operator|.
name|add
argument_list|(
operator|new
name|RequestAndHeaders
argument_list|(
name|threadPool
operator|.
name|getThreadContext
argument_list|()
operator|.
name|getHeaders
argument_list|()
argument_list|,
name|request
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|apply
specifier|protected
name|boolean
name|apply
parameter_list|(
name|String
name|action
parameter_list|,
name|ActionResponse
name|response
parameter_list|,
name|ActionListener
name|listener
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
DECL|class|RequestAndHeaders
specifier|private
specifier|static
class|class
name|RequestAndHeaders
block|{
DECL|field|headers
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
decl_stmt|;
DECL|field|request
specifier|final
name|ActionRequest
name|request
decl_stmt|;
DECL|method|RequestAndHeaders
specifier|private
name|RequestAndHeaders
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
parameter_list|,
name|ActionRequest
name|request
parameter_list|)
block|{
name|this
operator|.
name|headers
operator|=
name|headers
expr_stmt|;
name|this
operator|.
name|request
operator|=
name|request
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

