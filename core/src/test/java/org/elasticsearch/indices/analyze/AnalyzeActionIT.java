begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.indices.analyze
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|analyze
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|Alias
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|analyze
operator|.
name|AnalyzeRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|analyze
operator|.
name|AnalyzeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|IsNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertAcked
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|hasSize
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|startsWith
import|;
end_import

begin_class
DECL|class|AnalyzeActionIT
specifier|public
class|class
name|AnalyzeActionIT
extends|extends
name|ESIntegTestCase
block|{
DECL|method|testSimpleAnalyzerTests
specifier|public
name|void
name|testSimpleAnalyzerTests
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|AnalyzeResponse
name|analyzeResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"this is a test"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|AnalyzeResponse
operator|.
name|AnalyzeToken
name|token
init|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"this"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"is"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testAnalyzeNumericField
specifier|public
name|void
name|testAnalyzeNumericField
parameter_list|()
throws|throws
name|IOException
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"test"
argument_list|,
literal|"long"
argument_list|,
literal|"type=long"
argument_list|,
literal|"double"
argument_list|,
literal|"type=double"
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"123"
argument_list|)
operator|.
name|setField
argument_list|(
literal|"long"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"123.0"
argument_list|)
operator|.
name|setField
argument_list|(
literal|"double"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testAnalyzeWithNoIndex
specifier|public
name|void
name|testAnalyzeWithNoIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|AnalyzeResponse
name|analyzeResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"THIS IS A TEST"
argument_list|)
operator|.
name|setAnalyzer
argument_list|(
literal|"simple"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|analyzeResponse
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"THIS IS A TEST"
argument_list|)
operator|.
name|setTokenizer
argument_list|(
literal|"keyword"
argument_list|)
operator|.
name|addTokenFilter
argument_list|(
literal|"lowercase"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"this is a test"
argument_list|)
argument_list|)
expr_stmt|;
name|analyzeResponse
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"THIS IS A TEST"
argument_list|)
operator|.
name|setTokenizer
argument_list|(
literal|"standard"
argument_list|)
operator|.
name|addTokenFilter
argument_list|(
literal|"lowercase"
argument_list|)
operator|.
name|addTokenFilter
argument_list|(
literal|"reverse"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|AnalyzeResponse
operator|.
name|AnalyzeToken
name|token
init|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"siht"
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"si"
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"tset"
argument_list|)
argument_list|)
expr_stmt|;
name|analyzeResponse
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"of course"
argument_list|)
operator|.
name|setTokenizer
argument_list|(
literal|"standard"
argument_list|)
operator|.
name|addTokenFilter
argument_list|(
literal|"stop"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"course"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testAnalyzeWithNonDefaultPostionLength
specifier|public
name|void
name|testAnalyzeWithNonDefaultPostionLength
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.analysis.filter.syns.type"
argument_list|,
literal|"synonym"
argument_list|)
operator|.
name|putArray
argument_list|(
literal|"index.analysis.filter.syns.synonyms"
argument_list|,
literal|"wtf, what the fudge"
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.analysis.analyzer.custom_syns.tokenizer"
argument_list|,
literal|"standard"
argument_list|)
operator|.
name|putArray
argument_list|(
literal|"index.analysis.analyzer.custom_syns.filter"
argument_list|,
literal|"lowercase"
argument_list|,
literal|"syns"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|AnalyzeResponse
name|analyzeResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"say what the fudge"
argument_list|)
operator|.
name|setIndex
argument_list|(
literal|"test"
argument_list|)
operator|.
name|setAnalyzer
argument_list|(
literal|"custom_syns"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|AnalyzeResponse
operator|.
name|AnalyzeToken
name|token
init|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"say"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"what"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"wtf"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|18
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"the"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"fudge"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|13
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|18
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testAnalyzerWithFieldOrTypeTests
specifier|public
name|void
name|testAnalyzerWithFieldOrTypeTests
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
literal|"test"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"document"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"simple"
argument_list|,
literal|"type=text,analyzer=simple"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
specifier|final
name|AnalyzeRequestBuilder
name|requestBuilder
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"THIS IS A TEST"
argument_list|)
decl_stmt|;
name|requestBuilder
operator|.
name|setIndex
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|)
expr_stmt|;
name|requestBuilder
operator|.
name|setField
argument_list|(
literal|"document.simple"
argument_list|)
expr_stmt|;
name|AnalyzeResponse
name|analyzeResponse
init|=
name|requestBuilder
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|AnalyzeResponse
operator|.
name|AnalyzeToken
name|token
init|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// issue #5974
DECL|method|testThatStandardAndDefaultAnalyzersAreSame
specifier|public
name|void
name|testThatStandardAndDefaultAnalyzersAreSame
parameter_list|()
throws|throws
name|Exception
block|{
name|AnalyzeResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"this is a test"
argument_list|)
operator|.
name|setAnalyzer
argument_list|(
literal|"standard"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertTokens
argument_list|(
name|response
argument_list|,
literal|"this"
argument_list|,
literal|"is"
argument_list|,
literal|"a"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"this is a test"
argument_list|)
operator|.
name|setAnalyzer
argument_list|(
literal|"default"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertTokens
argument_list|(
name|response
argument_list|,
literal|"this"
argument_list|,
literal|"is"
argument_list|,
literal|"a"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"this is a test"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertTokens
argument_list|(
name|response
argument_list|,
literal|"this"
argument_list|,
literal|"is"
argument_list|,
literal|"a"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
block|}
DECL|method|assertTokens
specifier|private
name|void
name|assertTokens
parameter_list|(
name|AnalyzeResponse
name|response
parameter_list|,
name|String
modifier|...
name|tokens
parameter_list|)
block|{
name|assertThat
argument_list|(
name|response
operator|.
name|getTokens
argument_list|()
argument_list|,
name|hasSize
argument_list|(
name|tokens
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|tokens
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|assertThat
argument_list|(
name|response
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getTerm
argument_list|()
argument_list|,
name|is
argument_list|(
name|tokens
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|indexOrAlias
specifier|private
specifier|static
name|String
name|indexOrAlias
parameter_list|()
block|{
return|return
name|randomBoolean
argument_list|()
condition|?
literal|"test"
else|:
literal|"alias"
return|;
block|}
DECL|method|testAnalyzerWithMultiValues
specifier|public
name|void
name|testAnalyzerWithMultiValues
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
literal|"test"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"document"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"simple"
argument_list|,
literal|"type=text,analyzer=simple,position_increment_gap=100"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|String
index|[]
name|texts
init|=
operator|new
name|String
index|[]
block|{
literal|"THIS IS A TEST"
block|,
literal|"THE SECOND TEXT"
block|}
decl_stmt|;
specifier|final
name|AnalyzeRequestBuilder
name|requestBuilder
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|()
decl_stmt|;
name|requestBuilder
operator|.
name|setText
argument_list|(
name|texts
argument_list|)
expr_stmt|;
name|requestBuilder
operator|.
name|setIndex
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|)
expr_stmt|;
name|requestBuilder
operator|.
name|setField
argument_list|(
literal|"simple"
argument_list|)
expr_stmt|;
name|AnalyzeResponse
name|analyzeResponse
init|=
name|requestBuilder
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|AnalyzeResponse
operator|.
name|AnalyzeToken
name|token
init|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"second"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|19
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDetailAnalyzeWithNoIndex
specifier|public
name|void
name|testDetailAnalyzeWithNoIndex
parameter_list|()
throws|throws
name|Exception
block|{
comment|//analyzer only
name|AnalyzeResponse
name|analyzeResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"THIS IS A TEST"
argument_list|)
operator|.
name|setExplain
argument_list|(
literal|true
argument_list|)
operator|.
name|setAnalyzer
argument_list|(
literal|"simple"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
argument_list|,
name|IsNull
operator|.
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
argument_list|,
name|IsNull
operator|.
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|charfilters
argument_list|()
argument_list|,
name|IsNull
operator|.
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|analyzer
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|analyzer
argument_list|()
operator|.
name|getTokens
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDetailAnalyzeCustomAnalyzerWithNoIndex
specifier|public
name|void
name|testDetailAnalyzeCustomAnalyzerWithNoIndex
parameter_list|()
throws|throws
name|Exception
block|{
comment|//analyzer only
name|AnalyzeResponse
name|analyzeResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"THIS IS A TEST"
argument_list|)
operator|.
name|setExplain
argument_list|(
literal|true
argument_list|)
operator|.
name|setAnalyzer
argument_list|(
literal|"simple"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
argument_list|,
name|IsNull
operator|.
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
argument_list|,
name|IsNull
operator|.
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|charfilters
argument_list|()
argument_list|,
name|IsNull
operator|.
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|analyzer
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|analyzer
argument_list|()
operator|.
name|getTokens
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
comment|//custom analyzer
name|analyzeResponse
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"<text>THIS IS A TEST</text>"
argument_list|)
operator|.
name|setExplain
argument_list|(
literal|true
argument_list|)
operator|.
name|addCharFilter
argument_list|(
literal|"html_strip"
argument_list|)
operator|.
name|setTokenizer
argument_list|(
literal|"keyword"
argument_list|)
operator|.
name|addTokenFilter
argument_list|(
literal|"lowercase"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|analyzer
argument_list|()
argument_list|,
name|IsNull
operator|.
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
comment|//charfilters
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|charfilters
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|charfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"html_strip"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|charfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTexts
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|charfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTexts
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|"\nTHIS IS A TEST\n"
argument_list|)
argument_list|)
expr_stmt|;
comment|//tokenizer
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"\nTHIS IS A TEST\n"
argument_list|)
argument_list|)
expr_stmt|;
comment|//tokenfilters
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"lowercase"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"\nthis is a test\n"
argument_list|)
argument_list|)
expr_stmt|;
comment|//check other attributes
name|analyzeResponse
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"This is troubled"
argument_list|)
operator|.
name|setExplain
argument_list|(
literal|true
argument_list|)
operator|.
name|setTokenizer
argument_list|(
literal|"standard"
argument_list|)
operator|.
name|addTokenFilter
argument_list|(
literal|"lowercase"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"lowercase"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"troubled"
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|expectedAttributesKey
init|=
block|{
literal|"bytes"
block|,
literal|"positionLength"
block|}
decl_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getAttributes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|expectedAttributesKey
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|extendedAttribute
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|expectedAttributesKey
control|)
block|{
name|extendedAttribute
operator|=
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|extendedAttribute
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testDetailAnalyzeWithMultiValues
specifier|public
name|void
name|testDetailAnalyzeWithMultiValues
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|preparePutMapping
argument_list|(
literal|"test"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"document"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"simple"
argument_list|,
literal|"type=text,analyzer=simple,position_increment_gap=100"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|String
index|[]
name|texts
init|=
operator|new
name|String
index|[]
block|{
literal|"THIS IS A TEST"
block|,
literal|"THE SECOND TEXT"
block|}
decl_stmt|;
name|AnalyzeResponse
name|analyzeResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|()
operator|.
name|setIndex
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|)
operator|.
name|setText
argument_list|(
name|texts
argument_list|)
operator|.
name|setExplain
argument_list|(
literal|true
argument_list|)
operator|.
name|setField
argument_list|(
literal|"simple"
argument_list|)
operator|.
name|setText
argument_list|(
name|texts
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|analyzer
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|analyzer
argument_list|()
operator|.
name|getTokens
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|AnalyzeResponse
operator|.
name|AnalyzeToken
name|token
init|=
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|analyzer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|3
index|]
decl_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|=
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|analyzer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|5
index|]
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"second"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|19
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testNonExistTokenizer
specifier|public
name|void
name|testNonExistTokenizer
parameter_list|()
block|{
name|IllegalArgumentException
name|e
init|=
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
literal|"this is a test"
argument_list|)
operator|.
name|setAnalyzer
argument_list|(
literal|"not_exist_analyzer"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|startsWith
argument_list|(
literal|"failed to find global analyzer"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testCustomTokenFilterInRequest
specifier|public
name|void
name|testCustomTokenFilterInRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|stopFilterSettings
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|stopFilterSettings
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"stop"
argument_list|)
expr_stmt|;
name|stopFilterSettings
operator|.
name|put
argument_list|(
literal|"stopwords"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"foo"
block|,
literal|"buzz"
block|}
argument_list|)
expr_stmt|;
name|AnalyzeResponse
name|analyzeResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|()
operator|.
name|setText
argument_list|(
literal|"Foo buzz test"
argument_list|)
operator|.
name|setTokenizer
argument_list|(
literal|"whitespace"
argument_list|)
operator|.
name|addTokenFilter
argument_list|(
literal|"lowercase"
argument_list|)
operator|.
name|addTokenFilter
argument_list|(
name|stopFilterSettings
argument_list|)
operator|.
name|setExplain
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
comment|//tokenizer
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"whitespace"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"Foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"buzz"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|13
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// tokenfilter(lowercase)
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"lowercase"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"buzz"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|13
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// tokenfilter({"type": "stop", "stopwords": ["foo", "buzz"]})
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|1
index|]
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_anonymous_tokenfilter_[1]"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|1
index|]
operator|.
name|getTokens
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|1
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|1
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|1
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|13
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|1
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenfilters
argument_list|()
index|[
literal|1
index|]
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testCustomTokenizerInRequest
specifier|public
name|void
name|testCustomTokenizerInRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|tokenizerSettings
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|tokenizerSettings
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"nGram"
argument_list|)
expr_stmt|;
name|tokenizerSettings
operator|.
name|put
argument_list|(
literal|"min_gram"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|tokenizerSettings
operator|.
name|put
argument_list|(
literal|"max_gram"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|AnalyzeResponse
name|analyzeResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|()
operator|.
name|setText
argument_list|(
literal|"good"
argument_list|)
operator|.
name|setTokenizer
argument_list|(
name|tokenizerSettings
argument_list|)
operator|.
name|setExplain
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
comment|//tokenizer
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_anonymous_tokenizer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"go"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|0
index|]
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"oo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|1
index|]
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"od"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|detail
argument_list|()
operator|.
name|tokenizer
argument_list|()
operator|.
name|getTokens
argument_list|()
index|[
literal|2
index|]
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testAnalyzeKeywordField
specifier|public
name|void
name|testAnalyzeKeywordField
parameter_list|()
throws|throws
name|IOException
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"test"
argument_list|,
literal|"keyword"
argument_list|,
literal|"type=keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|AnalyzeResponse
name|analyzeResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"ABC"
argument_list|)
operator|.
name|setField
argument_list|(
literal|"keyword"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|AnalyzeResponse
operator|.
name|AnalyzeToken
name|token
init|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"ABC"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testAnalyzeNormalizedKeywordField
specifier|public
name|void
name|testAnalyzeNormalizedKeywordField
parameter_list|()
throws|throws
name|IOException
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
literal|"alias"
argument_list|)
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.analysis.normalizer.my_normalizer.type"
argument_list|,
literal|"custom"
argument_list|)
operator|.
name|putArray
argument_list|(
literal|"index.analysis.normalizer.my_normalizer.filter"
argument_list|,
literal|"lowercase"
argument_list|)
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"test"
argument_list|,
literal|"keyword"
argument_list|,
literal|"type=keyword,normalizer=my_normalizer"
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|AnalyzeResponse
name|analyzeResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareAnalyze
argument_list|(
name|indexOrAlias
argument_list|()
argument_list|,
literal|"ABC"
argument_list|)
operator|.
name|setField
argument_list|(
literal|"keyword"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|AnalyzeResponse
operator|.
name|AnalyzeToken
name|token
init|=
name|analyzeResponse
operator|.
name|getTokens
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getTerm
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"abc"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPosition
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|token
operator|.
name|getPositionLength
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

