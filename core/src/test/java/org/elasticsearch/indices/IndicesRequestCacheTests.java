begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.indices
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|indices
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TopDocs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|index
operator|.
name|ElasticsearchDirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|request
operator|.
name|ShardRequestCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|TermQueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Supplier
import|;
end_import

begin_class
DECL|class|IndicesRequestCacheTests
specifier|public
class|class
name|IndicesRequestCacheTests
extends|extends
name|ESTestCase
block|{
DECL|method|testBasicOperationsCache
specifier|public
name|void
name|testBasicOperationsCache
parameter_list|()
throws|throws
name|Exception
block|{
name|ShardRequestCache
name|requestCacheStats
init|=
operator|new
name|ShardRequestCache
argument_list|()
decl_stmt|;
name|IndicesRequestCache
name|cache
init|=
operator|new
name|IndicesRequestCache
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|()
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|TermQueryBuilder
name|termQuery
init|=
operator|new
name|TermQueryBuilder
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|indexShard
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|true
argument_list|)
decl_stmt|;
comment|// initial cache
name|TestEntity
name|entity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
decl_stmt|;
name|Loader
name|loader
init|=
operator|new
name|Loader
argument_list|(
name|reader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|BytesReference
name|value
init|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|entity
argument_list|,
name|loader
argument_list|,
name|reader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|value
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
comment|// cache hit
name|entity
operator|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
expr_stmt|;
name|loader
operator|=
operator|new
name|Loader
argument_list|(
name|reader
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|value
operator|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|entity
argument_list|,
name|loader
argument_list|,
name|reader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|value
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
operator|.
name|bytesAsInt
argument_list|()
operator|>
name|value
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|numRegisteredCloseListeners
argument_list|()
argument_list|)
expr_stmt|;
comment|// Closing the cache doesn't modify an already returned CacheEntity
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|indexShard
operator|.
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// closed shard but reader is still open
name|cache
operator|.
name|clear
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
name|cache
operator|.
name|cleanCache
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
operator|.
name|bytesAsInt
argument_list|()
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|close
argument_list|(
name|reader
argument_list|,
name|writer
argument_list|,
name|dir
argument_list|,
name|cache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cache
operator|.
name|numRegisteredCloseListeners
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testCacheDifferentReaders
specifier|public
name|void
name|testCacheDifferentReaders
parameter_list|()
throws|throws
name|Exception
block|{
name|IndicesRequestCache
name|cache
init|=
operator|new
name|IndicesRequestCache
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|indexShard
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|ShardRequestCache
name|requestCacheStats
init|=
operator|new
name|ShardRequestCache
argument_list|()
decl_stmt|;
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|()
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|TermQueryBuilder
name|termQuery
init|=
operator|new
name|TermQueryBuilder
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
decl_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
argument_list|,
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|secondReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
comment|// initial cache
name|TestEntity
name|entity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
decl_stmt|;
name|Loader
name|loader
init|=
operator|new
name|Loader
argument_list|(
name|reader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|BytesReference
name|value
init|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|entity
argument_list|,
name|loader
argument_list|,
name|reader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|value
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
operator|.
name|bytesAsInt
argument_list|()
operator|>
name|value
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|int
name|cacheSize
init|=
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
operator|.
name|bytesAsInt
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|numRegisteredCloseListeners
argument_list|()
argument_list|)
expr_stmt|;
comment|// cache the second
name|TestEntity
name|secondEntity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
decl_stmt|;
name|loader
operator|=
operator|new
name|Loader
argument_list|(
name|secondReader
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|value
operator|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|entity
argument_list|,
name|loader
argument_list|,
name|secondReader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|value
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
operator|.
name|bytesAsInt
argument_list|()
operator|>
name|cacheSize
operator|+
name|value
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cache
operator|.
name|numRegisteredCloseListeners
argument_list|()
argument_list|)
expr_stmt|;
name|secondEntity
operator|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
expr_stmt|;
name|loader
operator|=
operator|new
name|Loader
argument_list|(
name|secondReader
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|value
operator|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|secondEntity
argument_list|,
name|loader
argument_list|,
name|secondReader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|value
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
expr_stmt|;
name|loader
operator|=
operator|new
name|Loader
argument_list|(
name|reader
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|value
operator|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|entity
argument_list|,
name|loader
argument_list|,
name|reader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|value
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
comment|// Closing the cache doesn't change returned entities
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|cache
operator|.
name|cleanCache
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|cacheSize
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
operator|.
name|bytesAsInt
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|numRegisteredCloseListeners
argument_list|()
argument_list|)
expr_stmt|;
comment|// release
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|secondReader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|indexShard
operator|.
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// closed shard but reader is still open
name|cache
operator|.
name|clear
argument_list|(
name|secondEntity
argument_list|)
expr_stmt|;
block|}
name|cache
operator|.
name|cleanCache
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
operator|.
name|bytesAsInt
argument_list|()
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|close
argument_list|(
name|secondReader
argument_list|,
name|writer
argument_list|,
name|dir
argument_list|,
name|cache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cache
operator|.
name|numRegisteredCloseListeners
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testEviction
specifier|public
name|void
name|testEviction
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ByteSizeValue
name|size
decl_stmt|;
block|{
name|IndicesRequestCache
name|cache
init|=
operator|new
name|IndicesRequestCache
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|indexShard
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|ShardRequestCache
name|requestCacheStats
init|=
operator|new
name|ShardRequestCache
argument_list|()
decl_stmt|;
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|()
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|TermQueryBuilder
name|termQuery
init|=
operator|new
name|TermQueryBuilder
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
decl_stmt|;
name|TestEntity
name|entity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
decl_stmt|;
name|Loader
name|loader
init|=
operator|new
name|Loader
argument_list|(
name|reader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
argument_list|,
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|secondReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|TestEntity
name|secondEntity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
decl_stmt|;
name|Loader
name|secondLoader
init|=
operator|new
name|Loader
argument_list|(
name|secondReader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|BytesReference
name|value1
init|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|entity
argument_list|,
name|loader
argument_list|,
name|reader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|value1
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|BytesReference
name|value2
init|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|secondEntity
argument_list|,
name|secondLoader
argument_list|,
name|secondReader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|value2
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|size
operator|=
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
expr_stmt|;
name|IOUtils
operator|.
name|close
argument_list|(
name|reader
argument_list|,
name|secondReader
argument_list|,
name|writer
argument_list|,
name|dir
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|IndicesRequestCache
name|cache
init|=
operator|new
name|IndicesRequestCache
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndicesRequestCache
operator|.
name|INDICES_CACHE_QUERY_SIZE
operator|.
name|getKey
argument_list|()
argument_list|,
name|size
operator|.
name|getBytes
argument_list|()
operator|+
literal|1
operator|+
literal|"b"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|indexShard
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|ShardRequestCache
name|requestCacheStats
init|=
operator|new
name|ShardRequestCache
argument_list|()
decl_stmt|;
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|()
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|TermQueryBuilder
name|termQuery
init|=
operator|new
name|TermQueryBuilder
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
decl_stmt|;
name|TestEntity
name|entity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
decl_stmt|;
name|Loader
name|loader
init|=
operator|new
name|Loader
argument_list|(
name|reader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
argument_list|,
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|secondReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|TestEntity
name|secondEntity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
decl_stmt|;
name|Loader
name|secondLoader
init|=
operator|new
name|Loader
argument_list|(
name|secondReader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
argument_list|,
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"baz"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|thirdReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|TestEntity
name|thirddEntity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
decl_stmt|;
name|Loader
name|thirdLoader
init|=
operator|new
name|Loader
argument_list|(
name|thirdReader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|BytesReference
name|value1
init|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|entity
argument_list|,
name|loader
argument_list|,
name|reader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|value1
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|BytesReference
name|value2
init|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|secondEntity
argument_list|,
name|secondLoader
argument_list|,
name|secondReader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|value2
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Memory size: {}"
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|BytesReference
name|value3
init|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|thirddEntity
argument_list|,
name|thirdLoader
argument_list|,
name|thirdReader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"baz"
argument_list|,
name|value3
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|close
argument_list|(
name|reader
argument_list|,
name|secondReader
argument_list|,
name|thirdReader
argument_list|,
name|writer
argument_list|,
name|dir
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
DECL|method|testClearAllEntityIdentity
specifier|public
name|void
name|testClearAllEntityIdentity
parameter_list|()
throws|throws
name|Exception
block|{
name|IndicesRequestCache
name|cache
init|=
operator|new
name|IndicesRequestCache
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|indexShard
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|ShardRequestCache
name|requestCacheStats
init|=
operator|new
name|ShardRequestCache
argument_list|()
decl_stmt|;
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|()
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|TermQueryBuilder
name|termQuery
init|=
operator|new
name|TermQueryBuilder
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
decl_stmt|;
name|TestEntity
name|entity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
decl_stmt|;
name|Loader
name|loader
init|=
operator|new
name|Loader
argument_list|(
name|reader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
argument_list|,
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|secondReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|TestEntity
name|secondEntity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
decl_stmt|;
name|Loader
name|secondLoader
init|=
operator|new
name|Loader
argument_list|(
name|secondReader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
argument_list|,
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"baz"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|thirdReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|differentIdentity
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|TestEntity
name|thirddEntity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|differentIdentity
argument_list|)
decl_stmt|;
name|Loader
name|thirdLoader
init|=
operator|new
name|Loader
argument_list|(
name|thirdReader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|BytesReference
name|value1
init|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|entity
argument_list|,
name|loader
argument_list|,
name|reader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|value1
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|BytesReference
name|value2
init|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|secondEntity
argument_list|,
name|secondLoader
argument_list|,
name|secondReader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|value2
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Memory size: {}"
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|BytesReference
name|value3
init|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|thirddEntity
argument_list|,
name|thirdLoader
argument_list|,
name|thirdReader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"baz"
argument_list|,
name|value3
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|long
name|hitCount
init|=
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
decl_stmt|;
comment|// clear all for the indexShard Idendity even though is't still open
name|cache
operator|.
name|clear
argument_list|(
name|randomFrom
argument_list|(
name|entity
argument_list|,
name|secondEntity
argument_list|)
argument_list|)
expr_stmt|;
name|cache
operator|.
name|cleanCache
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
comment|// third has not been validated since it's a different identity
name|value3
operator|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|thirddEntity
argument_list|,
name|thirdLoader
argument_list|,
name|thirdReader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|hitCount
operator|+
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"baz"
argument_list|,
name|value3
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|close
argument_list|(
name|reader
argument_list|,
name|secondReader
argument_list|,
name|thirdReader
argument_list|,
name|writer
argument_list|,
name|dir
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
DECL|method|newDoc
specifier|public
name|Iterable
argument_list|<
name|Field
argument_list|>
name|newDoc
parameter_list|(
name|int
name|id
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|newField
argument_list|(
literal|"id"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|id
argument_list|)
argument_list|,
name|StringField
operator|.
name|TYPE_STORED
argument_list|)
argument_list|,
name|newField
argument_list|(
literal|"value"
argument_list|,
name|value
argument_list|,
name|StringField
operator|.
name|TYPE_STORED
argument_list|)
argument_list|)
return|;
block|}
DECL|class|Loader
specifier|private
specifier|static
class|class
name|Loader
implements|implements
name|Supplier
argument_list|<
name|BytesReference
argument_list|>
block|{
DECL|field|reader
specifier|private
specifier|final
name|DirectoryReader
name|reader
decl_stmt|;
DECL|field|id
specifier|private
specifier|final
name|int
name|id
decl_stmt|;
DECL|field|loadedFromCache
specifier|public
name|boolean
name|loadedFromCache
init|=
literal|true
decl_stmt|;
DECL|method|Loader
name|Loader
parameter_list|(
name|DirectoryReader
name|reader
parameter_list|,
name|int
name|id
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|reader
operator|=
name|reader
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|BytesReference
name|get
parameter_list|()
block|{
try|try
init|(
name|BytesStreamOutput
name|out
init|=
operator|new
name|BytesStreamOutput
argument_list|()
init|)
block|{
name|IndexSearcher
name|searcher
init|=
operator|new
name|IndexSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|TopDocs
name|topDocs
init|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|id
argument_list|)
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|topDocs
operator|.
name|totalHits
argument_list|)
expr_stmt|;
name|Document
name|document
init|=
name|reader
operator|.
name|document
argument_list|(
name|topDocs
operator|.
name|scoreDocs
index|[
literal|0
index|]
operator|.
name|doc
argument_list|)
decl_stmt|;
name|out
operator|.
name|writeString
argument_list|(
name|document
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|loadedFromCache
operator|=
literal|false
expr_stmt|;
return|return
name|out
operator|.
name|bytes
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|method|testInvalidate
specifier|public
name|void
name|testInvalidate
parameter_list|()
throws|throws
name|Exception
block|{
name|ShardRequestCache
name|requestCacheStats
init|=
operator|new
name|ShardRequestCache
argument_list|()
decl_stmt|;
name|IndicesRequestCache
name|cache
init|=
operator|new
name|IndicesRequestCache
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|()
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|newDoc
argument_list|(
literal|0
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|TermQueryBuilder
name|termQuery
init|=
operator|new
name|TermQueryBuilder
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|indexShard
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|true
argument_list|)
decl_stmt|;
comment|// initial cache
name|TestEntity
name|entity
init|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
decl_stmt|;
name|Loader
name|loader
init|=
operator|new
name|Loader
argument_list|(
name|reader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|BytesReference
name|value
init|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|entity
argument_list|,
name|loader
argument_list|,
name|reader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|value
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
comment|// cache hit
name|entity
operator|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
expr_stmt|;
name|loader
operator|=
operator|new
name|Loader
argument_list|(
name|reader
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|value
operator|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|entity
argument_list|,
name|loader
argument_list|,
name|reader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|value
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
operator|.
name|bytesAsInt
argument_list|()
operator|>
name|value
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|numRegisteredCloseListeners
argument_list|()
argument_list|)
expr_stmt|;
comment|// load again after invalidate
name|entity
operator|=
operator|new
name|TestEntity
argument_list|(
name|requestCacheStats
argument_list|,
name|indexShard
argument_list|)
expr_stmt|;
name|loader
operator|=
operator|new
name|Loader
argument_list|(
name|reader
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|cache
operator|.
name|invalidate
argument_list|(
name|entity
argument_list|,
name|reader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|cache
operator|.
name|getOrCompute
argument_list|(
name|entity
argument_list|,
name|loader
argument_list|,
name|reader
argument_list|,
name|termQuery
operator|.
name|buildAsBytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|value
operator|.
name|streamInput
argument_list|()
operator|.
name|readString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loader
operator|.
name|loadedFromCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
operator|.
name|bytesAsInt
argument_list|()
operator|>
name|value
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cache
operator|.
name|numRegisteredCloseListeners
argument_list|()
argument_list|)
expr_stmt|;
comment|// release
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|indexShard
operator|.
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// closed shard but reader is still open
name|cache
operator|.
name|clear
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
name|cache
operator|.
name|cleanCache
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cache
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|requestCacheStats
operator|.
name|stats
argument_list|()
operator|.
name|getMemorySize
argument_list|()
operator|.
name|bytesAsInt
argument_list|()
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|close
argument_list|(
name|reader
argument_list|,
name|writer
argument_list|,
name|dir
argument_list|,
name|cache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cache
operator|.
name|numRegisteredCloseListeners
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|TestEntity
specifier|private
class|class
name|TestEntity
extends|extends
name|AbstractIndexShardCacheEntity
block|{
DECL|field|standInForIndexShard
specifier|private
specifier|final
name|AtomicBoolean
name|standInForIndexShard
decl_stmt|;
DECL|field|shardRequestCache
specifier|private
specifier|final
name|ShardRequestCache
name|shardRequestCache
decl_stmt|;
DECL|method|TestEntity
specifier|private
name|TestEntity
parameter_list|(
name|ShardRequestCache
name|shardRequestCache
parameter_list|,
name|AtomicBoolean
name|standInForIndexShard
parameter_list|)
block|{
name|this
operator|.
name|standInForIndexShard
operator|=
name|standInForIndexShard
expr_stmt|;
name|this
operator|.
name|shardRequestCache
operator|=
name|shardRequestCache
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|stats
specifier|protected
name|ShardRequestCache
name|stats
parameter_list|()
block|{
return|return
name|shardRequestCache
return|;
block|}
annotation|@
name|Override
DECL|method|isOpen
specifier|public
name|boolean
name|isOpen
parameter_list|()
block|{
return|return
name|standInForIndexShard
operator|.
name|get
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getCacheIdentity
specifier|public
name|Object
name|getCacheIdentity
parameter_list|()
block|{
return|return
name|standInForIndexShard
return|;
block|}
annotation|@
name|Override
DECL|method|ramBytesUsed
specifier|public
name|long
name|ramBytesUsed
parameter_list|()
block|{
return|return
literal|42
return|;
block|}
block|}
block|}
end_class

end_unit

