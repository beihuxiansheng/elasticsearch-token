begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.routing
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|routing
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|internal
operator|.
name|util
operator|.
name|collections
operator|.
name|Sets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
DECL|class|PartitionedRoutingIT
specifier|public
class|class
name|PartitionedRoutingIT
extends|extends
name|ESIntegTestCase
block|{
DECL|method|testVariousPartitionSizes
specifier|public
name|void
name|testVariousPartitionSizes
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|int
name|shards
init|=
literal|1
init|;
name|shards
operator|<=
literal|4
condition|;
name|shards
operator|++
control|)
block|{
for|for
control|(
name|int
name|partitionSize
init|=
literal|1
init|;
name|partitionSize
operator|<
name|shards
condition|;
name|partitionSize
operator|++
control|)
block|{
name|String
name|index
init|=
literal|"index_"
operator|+
name|shards
operator|+
literal|"_"
operator|+
name|partitionSize
decl_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
name|index
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.number_of_shards"
argument_list|,
name|shards
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.routing_partition_size"
argument_list|,
name|partitionSize
argument_list|)
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
literal|"{\"type\":{\"_routing\":{\"required\":true}}}"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|routingToDocumentIds
init|=
name|generateRoutedDocumentIds
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|verifyGets
argument_list|(
name|index
argument_list|,
name|routingToDocumentIds
argument_list|)
expr_stmt|;
name|verifyBroadSearches
argument_list|(
name|index
argument_list|,
name|routingToDocumentIds
argument_list|,
name|shards
argument_list|)
expr_stmt|;
name|verifyRoutedSearches
argument_list|(
name|index
argument_list|,
name|routingToDocumentIds
argument_list|,
name|Sets
operator|.
name|newSet
argument_list|(
name|partitionSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testShrinking
specifier|public
name|void
name|testShrinking
parameter_list|()
throws|throws
name|Exception
block|{
comment|// creates random routing groups and repeatedly halves the index until it is down to 1 shard
comment|// verifying that the count is correct for each shrunken index
specifier|final
name|int
name|partitionSize
init|=
literal|3
decl_stmt|;
specifier|final
name|int
name|originalShards
init|=
literal|8
decl_stmt|;
name|int
name|currentShards
init|=
name|originalShards
decl_stmt|;
name|String
name|index
init|=
literal|"index_"
operator|+
name|currentShards
decl_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
name|index
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.number_of_shards"
argument_list|,
name|currentShards
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.routing_partition_size"
argument_list|,
name|partitionSize
argument_list|)
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
literal|"{\"type\":{\"_routing\":{\"required\":true}}}"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|routingToDocumentIds
init|=
name|generateRoutedDocumentIds
argument_list|(
name|index
argument_list|)
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|int
name|factor
init|=
name|originalShards
operator|/
name|currentShards
decl_stmt|;
name|verifyGets
argument_list|(
name|index
argument_list|,
name|routingToDocumentIds
argument_list|)
expr_stmt|;
name|verifyBroadSearches
argument_list|(
name|index
argument_list|,
name|routingToDocumentIds
argument_list|,
name|currentShards
argument_list|)
expr_stmt|;
comment|// we need the floor and ceiling of the routing_partition_size / factor since the partition size of the shrunken
comment|// index will be one of those, depending on the routing value
name|verifyRoutedSearches
argument_list|(
name|index
argument_list|,
name|routingToDocumentIds
argument_list|,
name|Math
operator|.
name|floorDiv
argument_list|(
name|partitionSize
argument_list|,
name|factor
argument_list|)
operator|==
literal|0
condition|?
name|Sets
operator|.
name|newSet
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
else|:
name|Sets
operator|.
name|newSet
argument_list|(
name|Math
operator|.
name|floorDiv
argument_list|(
name|partitionSize
argument_list|,
name|factor
argument_list|)
argument_list|,
operator|-
name|Math
operator|.
name|floorDiv
argument_list|(
operator|-
name|partitionSize
argument_list|,
name|factor
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareUpdateSettings
argument_list|(
name|index
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.routing.allocation.require._name"
argument_list|,
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
operator|.
name|nodes
argument_list|()
operator|.
name|getDataNodes
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|toArray
argument_list|(
name|DiscoveryNode
operator|.
name|class
argument_list|)
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.blocks.write"
argument_list|,
literal|true
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|currentShards
operator|=
name|Math
operator|.
name|floorDiv
argument_list|(
name|currentShards
argument_list|,
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|currentShards
operator|==
literal|0
condition|)
block|{
break|break;
block|}
name|String
name|previousIndex
init|=
name|index
decl_stmt|;
name|index
operator|=
literal|"index_"
operator|+
name|currentShards
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> shrinking index ["
operator|+
name|previousIndex
operator|+
literal|"] to ["
operator|+
name|index
operator|+
literal|"]"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareShrinkIndex
argument_list|(
name|previousIndex
argument_list|,
name|index
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.number_of_shards"
argument_list|,
name|currentShards
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|verifyRoutedSearches
specifier|private
name|void
name|verifyRoutedSearches
parameter_list|(
name|String
name|index
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|routingToDocumentIds
parameter_list|,
name|Set
argument_list|<
name|Integer
argument_list|>
name|expectedShards
parameter_list|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|routingEntry
range|:
name|routingToDocumentIds
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|routing
init|=
name|routingEntry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|int
name|expectedDocuments
init|=
name|routingEntry
operator|.
name|getValue
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|QueryBuilders
operator|.
name|termQuery
argument_list|(
literal|"_routing"
argument_list|,
name|routing
argument_list|)
argument_list|)
operator|.
name|setRouting
argument_list|(
name|routing
argument_list|)
operator|.
name|setIndices
argument_list|(
name|index
argument_list|)
operator|.
name|setSize
argument_list|(
literal|100
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> routed search on index ["
operator|+
name|index
operator|+
literal|"] visited ["
operator|+
name|response
operator|.
name|getTotalShards
argument_list|()
operator|+
literal|"] shards for routing ["
operator|+
name|routing
operator|+
literal|"] and got hits ["
operator|+
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
operator|+
literal|"]"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|response
operator|.
name|getTotalShards
argument_list|()
operator|+
literal|" was not in "
operator|+
name|expectedShards
operator|+
literal|" for "
operator|+
name|index
argument_list|,
name|expectedShards
operator|.
name|contains
argument_list|(
name|response
operator|.
name|getTotalShards
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedDocuments
argument_list|,
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|found
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|forEach
argument_list|(
name|h
lambda|->
name|found
operator|.
name|add
argument_list|(
name|h
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|routingEntry
operator|.
name|getValue
argument_list|()
argument_list|,
name|found
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|verifyBroadSearches
specifier|private
name|void
name|verifyBroadSearches
parameter_list|(
name|String
name|index
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|routingToDocumentIds
parameter_list|,
name|int
name|expectedShards
parameter_list|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|routingEntry
range|:
name|routingToDocumentIds
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|routing
init|=
name|routingEntry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|int
name|expectedDocuments
init|=
name|routingEntry
operator|.
name|getValue
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|QueryBuilders
operator|.
name|termQuery
argument_list|(
literal|"_routing"
argument_list|,
name|routing
argument_list|)
argument_list|)
operator|.
name|setIndices
argument_list|(
name|index
argument_list|)
operator|.
name|setSize
argument_list|(
literal|100
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedShards
argument_list|,
name|response
operator|.
name|getTotalShards
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedDocuments
argument_list|,
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|found
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|response
operator|.
name|getHits
argument_list|()
operator|.
name|forEach
argument_list|(
name|h
lambda|->
name|found
operator|.
name|add
argument_list|(
name|h
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|routingEntry
operator|.
name|getValue
argument_list|()
argument_list|,
name|found
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|verifyGets
specifier|private
name|void
name|verifyGets
parameter_list|(
name|String
name|index
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|routingToDocumentIds
parameter_list|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|routingEntry
range|:
name|routingToDocumentIds
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|routing
init|=
name|routingEntry
operator|.
name|getKey
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|routingEntry
operator|.
name|getValue
argument_list|()
control|)
block|{
name|assertTrue
argument_list|(
name|client
argument_list|()
operator|.
name|prepareGet
argument_list|(
name|index
argument_list|,
literal|"type"
argument_list|,
name|id
argument_list|)
operator|.
name|setRouting
argument_list|(
name|routing
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|generateRoutedDocumentIds
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|generateRoutedDocumentIds
parameter_list|(
name|String
name|index
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|routingToDocumentIds
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|numRoutingValues
init|=
name|randomIntBetween
argument_list|(
literal|5
argument_list|,
literal|15
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numRoutingValues
condition|;
name|i
operator|++
control|)
block|{
name|String
name|routingValue
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|int
name|numDocuments
init|=
name|randomIntBetween
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|routingToDocumentIds
operator|.
name|put
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|routingValue
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|numDocuments
condition|;
name|k
operator|++
control|)
block|{
name|String
name|id
init|=
name|routingValue
operator|+
literal|"_"
operator|+
name|String
operator|.
name|valueOf
argument_list|(
name|k
argument_list|)
decl_stmt|;
name|routingToDocumentIds
operator|.
name|get
argument_list|(
name|routingValue
argument_list|)
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|index
argument_list|,
literal|"type"
argument_list|,
name|id
argument_list|)
operator|.
name|setRouting
argument_list|(
name|routingValue
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
block|}
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRefresh
argument_list|(
name|index
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
return|return
name|routingToDocumentIds
return|;
block|}
block|}
end_class

end_unit

