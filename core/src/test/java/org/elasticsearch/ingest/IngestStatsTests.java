begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.ingest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Writeable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|IngestStatsTests
specifier|public
class|class
name|IngestStatsTests
extends|extends
name|ESTestCase
block|{
DECL|method|testSerialization
specifier|public
name|void
name|testSerialization
parameter_list|()
throws|throws
name|IOException
block|{
name|IngestStats
operator|.
name|Stats
name|total
init|=
operator|new
name|IngestStats
operator|.
name|Stats
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|)
decl_stmt|;
name|IngestStats
operator|.
name|Stats
name|foo
init|=
operator|new
name|IngestStats
operator|.
name|Stats
argument_list|(
literal|50
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|)
decl_stmt|;
name|IngestStats
name|ingestStats
init|=
operator|new
name|IngestStats
argument_list|(
name|total
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"foo"
argument_list|,
name|foo
argument_list|)
argument_list|)
decl_stmt|;
name|IngestStats
name|serialize
init|=
name|serialize
argument_list|(
name|ingestStats
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|serialize
argument_list|,
name|ingestStats
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|serialize
operator|.
name|getTotalStats
argument_list|()
argument_list|,
name|total
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|total
operator|.
name|getIngestCount
argument_list|()
argument_list|,
name|serialize
operator|.
name|getTotalStats
argument_list|()
operator|.
name|getIngestCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|total
operator|.
name|getIngestFailedCount
argument_list|()
argument_list|,
name|serialize
operator|.
name|getTotalStats
argument_list|()
operator|.
name|getIngestFailedCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|total
operator|.
name|getIngestTimeInMillis
argument_list|()
argument_list|,
name|serialize
operator|.
name|getTotalStats
argument_list|()
operator|.
name|getIngestTimeInMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|total
operator|.
name|getIngestCurrent
argument_list|()
argument_list|,
name|serialize
operator|.
name|getTotalStats
argument_list|()
operator|.
name|getIngestCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ingestStats
operator|.
name|getStatsPerPipeline
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ingestStats
operator|.
name|getStatsPerPipeline
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|IngestStats
operator|.
name|Stats
argument_list|>
name|left
init|=
name|ingestStats
operator|.
name|getStatsPerPipeline
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|IngestStats
operator|.
name|Stats
argument_list|>
name|right
init|=
name|serialize
operator|.
name|getStatsPerPipeline
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|right
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|right
operator|.
name|containsKey
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|left
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|left
operator|.
name|containsKey
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|IngestStats
operator|.
name|Stats
name|leftStats
init|=
name|left
operator|.
name|get
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|IngestStats
operator|.
name|Stats
name|rightStats
init|=
name|right
operator|.
name|get
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|leftStats
operator|.
name|getIngestCount
argument_list|()
argument_list|,
name|rightStats
operator|.
name|getIngestCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|leftStats
operator|.
name|getIngestFailedCount
argument_list|()
argument_list|,
name|rightStats
operator|.
name|getIngestFailedCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|leftStats
operator|.
name|getIngestTimeInMillis
argument_list|()
argument_list|,
name|rightStats
operator|.
name|getIngestTimeInMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|leftStats
operator|.
name|getIngestCurrent
argument_list|()
argument_list|,
name|rightStats
operator|.
name|getIngestCurrent
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|serialize
specifier|private
parameter_list|<
name|T
parameter_list|>
name|T
name|serialize
parameter_list|(
name|Writeable
argument_list|<
name|T
argument_list|>
name|writeable
parameter_list|)
throws|throws
name|IOException
block|{
name|BytesStreamOutput
name|out
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|writeable
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|StreamInput
name|in
init|=
name|StreamInput
operator|.
name|wrap
argument_list|(
name|out
operator|.
name|bytes
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|writeable
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
return|;
block|}
block|}
end_class

end_unit

