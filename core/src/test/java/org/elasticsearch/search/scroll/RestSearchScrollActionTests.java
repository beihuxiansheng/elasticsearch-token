begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.scroll
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|scroll
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchScrollRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|search
operator|.
name|RestSearchScrollAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|FakeRestRequest
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|startsWith
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
DECL|class|RestSearchScrollActionTests
specifier|public
class|class
name|RestSearchScrollActionTests
extends|extends
name|ESTestCase
block|{
DECL|method|testParseSearchScrollRequest
specifier|public
name|void
name|testParseSearchScrollRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|XContentParser
name|content
init|=
name|createParser
argument_list|(
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"scroll_id"
argument_list|,
literal|"SCROLL_ID"
argument_list|)
operator|.
name|field
argument_list|(
literal|"scroll"
argument_list|,
literal|"1m"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
decl_stmt|;
name|SearchScrollRequest
name|searchScrollRequest
init|=
operator|new
name|SearchScrollRequest
argument_list|()
decl_stmt|;
name|RestSearchScrollAction
operator|.
name|buildFromContent
argument_list|(
name|content
argument_list|,
name|searchScrollRequest
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchScrollRequest
operator|.
name|scrollId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"SCROLL_ID"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchScrollRequest
operator|.
name|scroll
argument_list|()
operator|.
name|keepAlive
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|TimeValue
operator|.
name|parseTimeValue
argument_list|(
literal|"1m"
argument_list|,
literal|null
argument_list|,
literal|"scroll"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testParseSearchScrollRequestWithInvalidJsonThrowsException
specifier|public
name|void
name|testParseSearchScrollRequestWithInvalidJsonThrowsException
parameter_list|()
throws|throws
name|Exception
block|{
name|RestSearchScrollAction
name|action
init|=
operator|new
name|RestSearchScrollAction
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|mock
argument_list|(
name|RestController
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|RestRequest
name|request
init|=
operator|new
name|FakeRestRequest
operator|.
name|Builder
argument_list|()
operator|.
name|withContent
argument_list|(
operator|new
name|BytesArray
argument_list|(
literal|"{invalid_json}"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Exception
name|e
init|=
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|action
operator|.
name|prepareRequest
argument_list|(
name|request
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"Failed to parse request body"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testParseSearchScrollRequestWithUnknownParamThrowsException
specifier|public
name|void
name|testParseSearchScrollRequestWithUnknownParamThrowsException
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchScrollRequest
name|searchScrollRequest
init|=
operator|new
name|SearchScrollRequest
argument_list|()
decl_stmt|;
name|XContentParser
name|invalidContent
init|=
name|createParser
argument_list|(
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"scroll_id"
argument_list|,
literal|"value_2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"unknown"
argument_list|,
literal|"keyword"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
decl_stmt|;
name|Exception
name|e
init|=
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|RestSearchScrollAction
operator|.
name|buildFromContent
argument_list|(
name|invalidContent
argument_list|,
name|searchScrollRequest
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|startsWith
argument_list|(
literal|"Unknown parameter [unknown]"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

