begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.sort
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|sort
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|GeoDistance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|GeoPoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|text
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|DistanceUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|builder
operator|.
name|SearchSourceBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|InternalSettingsPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|VersionUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|matchAllQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|sort
operator|.
name|SortBuilders
operator|.
name|fieldSort
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertAcked
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertOrderedSearchHits
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertSortValues
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|closeTo
import|;
end_import

begin_class
DECL|class|GeoDistanceSortBuilderIT
specifier|public
class|class
name|GeoDistanceSortBuilderIT
extends|extends
name|ESIntegTestCase
block|{
DECL|field|LOCATION_FIELD
specifier|private
specifier|static
specifier|final
name|String
name|LOCATION_FIELD
init|=
literal|"location"
decl_stmt|;
annotation|@
name|Override
DECL|method|nodePlugins
specifier|protected
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|Plugin
argument_list|>
argument_list|>
name|nodePlugins
parameter_list|()
block|{
return|return
name|pluginList
argument_list|(
name|InternalSettingsPlugin
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|testManyToManyGeoPoints
specifier|public
name|void
name|testManyToManyGeoPoints
parameter_list|()
throws|throws
name|ExecutionException
throws|,
name|InterruptedException
throws|,
name|IOException
block|{
comment|/**          * | q  |  d1    |   d2          * |    |        |          * |    |        |          * |    |        |          * |2  o|  x     |     x          * |    |        |          * |1  o|      x | x          * |___________________________          * 1   2   3   4   5   6   7          */
name|Version
name|version
init|=
name|VersionUtils
operator|.
name|randomVersionBetween
argument_list|(
name|random
argument_list|()
argument_list|,
name|Version
operator|.
name|V_2_0_0
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|Settings
name|settings
init|=
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|version
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"index"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
name|LOCATION_FIELD
argument_list|,
literal|"type=geo_point"
argument_list|)
argument_list|)
expr_stmt|;
name|XContentBuilder
name|d1Builder
init|=
name|jsonBuilder
argument_list|()
decl_stmt|;
name|GeoPoint
index|[]
name|d1Points
init|=
block|{
operator|new
name|GeoPoint
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
block|}
decl_stmt|;
name|createShuffeldJSONArray
argument_list|(
name|d1Builder
argument_list|,
name|d1Points
argument_list|)
expr_stmt|;
name|XContentBuilder
name|d2Builder
init|=
name|jsonBuilder
argument_list|()
decl_stmt|;
name|GeoPoint
index|[]
name|d2Points
init|=
block|{
operator|new
name|GeoPoint
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|6
argument_list|,
literal|2
argument_list|)
block|}
decl_stmt|;
name|createShuffeldJSONArray
argument_list|(
name|d2Builder
argument_list|,
name|d2Points
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"d1: {}"
argument_list|,
name|d1Builder
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"d2: {}"
argument_list|,
name|d2Builder
argument_list|)
expr_stmt|;
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"d1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|d1Builder
argument_list|)
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"d2"
argument_list|)
operator|.
name|setSource
argument_list|(
name|d2Builder
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|GeoPoint
index|[]
name|q
init|=
operator|new
name|GeoPoint
index|[
literal|2
index|]
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|q
index|[
literal|0
index|]
operator|=
operator|new
name|GeoPoint
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|q
index|[
literal|1
index|]
operator|=
operator|new
name|GeoPoint
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|q
index|[
literal|1
index|]
operator|=
operator|new
name|GeoPoint
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|q
index|[
literal|0
index|]
operator|=
operator|new
name|GeoPoint
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addSort
argument_list|(
operator|new
name|GeoDistanceSortBuilder
argument_list|(
name|LOCATION_FIELD
argument_list|,
name|q
argument_list|)
operator|.
name|sortMode
argument_list|(
name|SortMode
operator|.
name|MIN
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertOrderedSearchHits
argument_list|(
name|searchResponse
argument_list|,
literal|"d1"
argument_list|,
literal|"d2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|1
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
name|searchResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addSort
argument_list|(
operator|new
name|GeoDistanceSortBuilder
argument_list|(
name|LOCATION_FIELD
argument_list|,
name|q
argument_list|)
operator|.
name|sortMode
argument_list|(
name|SortMode
operator|.
name|MIN
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|DESC
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertOrderedSearchHits
argument_list|(
name|searchResponse
argument_list|,
literal|"d2"
argument_list|,
literal|"d1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|1
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
name|searchResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addSort
argument_list|(
operator|new
name|GeoDistanceSortBuilder
argument_list|(
name|LOCATION_FIELD
argument_list|,
name|q
argument_list|)
operator|.
name|sortMode
argument_list|(
name|SortMode
operator|.
name|MAX
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertOrderedSearchHits
argument_list|(
name|searchResponse
argument_list|,
literal|"d1"
argument_list|,
literal|"d2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|1
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|6
argument_list|,
literal|2
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
name|searchResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addSort
argument_list|(
operator|new
name|GeoDistanceSortBuilder
argument_list|(
name|LOCATION_FIELD
argument_list|,
name|q
argument_list|)
operator|.
name|sortMode
argument_list|(
name|SortMode
operator|.
name|MAX
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|DESC
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertOrderedSearchHits
argument_list|(
name|searchResponse
argument_list|,
literal|"d2"
argument_list|,
literal|"d1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|6
argument_list|,
literal|2
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|1
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSingeToManyAvgMedian
specifier|public
name|void
name|testSingeToManyAvgMedian
parameter_list|()
throws|throws
name|ExecutionException
throws|,
name|InterruptedException
throws|,
name|IOException
block|{
comment|/**          * q  = (0, 0)          *          * d1 = (0, 1), (0, 4), (0, 10); so avg. distance is 5, median distance is 4          * d2 = (0, 1), (0, 5), (0, 6); so avg. distance is 4, median distance is 5          */
name|Version
name|version
init|=
name|VersionUtils
operator|.
name|randomVersionBetween
argument_list|(
name|random
argument_list|()
argument_list|,
name|Version
operator|.
name|V_2_0_0
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|Settings
name|settings
init|=
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|version
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"index"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
name|LOCATION_FIELD
argument_list|,
literal|"type=geo_point"
argument_list|)
argument_list|)
expr_stmt|;
name|XContentBuilder
name|d1Builder
init|=
name|jsonBuilder
argument_list|()
decl_stmt|;
name|GeoPoint
index|[]
name|d1Points
init|=
block|{
operator|new
name|GeoPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
block|}
decl_stmt|;
name|createShuffeldJSONArray
argument_list|(
name|d1Builder
argument_list|,
name|d1Points
argument_list|)
expr_stmt|;
name|XContentBuilder
name|d2Builder
init|=
name|jsonBuilder
argument_list|()
decl_stmt|;
name|GeoPoint
index|[]
name|d2Points
init|=
block|{
operator|new
name|GeoPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|0
argument_list|,
literal|6
argument_list|)
block|}
decl_stmt|;
name|createShuffeldJSONArray
argument_list|(
name|d2Builder
argument_list|,
name|d2Points
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"d1: {}"
argument_list|,
name|d1Builder
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"d2: {}"
argument_list|,
name|d2Builder
argument_list|)
expr_stmt|;
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"d1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|d1Builder
argument_list|)
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"d2"
argument_list|)
operator|.
name|setSource
argument_list|(
name|d2Builder
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|GeoPoint
name|q
init|=
operator|new
name|GeoPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addSort
argument_list|(
operator|new
name|GeoDistanceSortBuilder
argument_list|(
name|LOCATION_FIELD
argument_list|,
name|q
argument_list|)
operator|.
name|sortMode
argument_list|(
name|SortMode
operator|.
name|AVG
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertOrderedSearchHits
argument_list|(
name|searchResponse
argument_list|,
literal|"d2"
argument_list|,
literal|"d1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|1
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
name|searchResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addSort
argument_list|(
operator|new
name|GeoDistanceSortBuilder
argument_list|(
name|LOCATION_FIELD
argument_list|,
name|q
argument_list|)
operator|.
name|sortMode
argument_list|(
name|SortMode
operator|.
name|MEDIAN
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertOrderedSearchHits
argument_list|(
name|searchResponse
argument_list|,
literal|"d1"
argument_list|,
literal|"d2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|1
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|0.01d
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|createShuffeldJSONArray
specifier|protected
name|void
name|createShuffeldJSONArray
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|GeoPoint
index|[]
name|pointsArray
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|points
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|pointsArray
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|startObject
argument_list|()
expr_stmt|;
name|builder
operator|.
name|startArray
argument_list|(
name|LOCATION_FIELD
argument_list|)
expr_stmt|;
name|int
name|numPoints
init|=
name|points
operator|.
name|size
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numPoints
condition|;
name|i
operator|++
control|)
block|{
name|builder
operator|.
name|value
argument_list|(
name|points
operator|.
name|remove
argument_list|(
name|randomInt
argument_list|(
name|points
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endArray
argument_list|()
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|testManyToManyGeoPointsWithDifferentFormats
specifier|public
name|void
name|testManyToManyGeoPointsWithDifferentFormats
parameter_list|()
throws|throws
name|ExecutionException
throws|,
name|InterruptedException
throws|,
name|IOException
block|{
comment|/**   q     d1       d2          * |4  o|   x    |   x          * |    |        |          * |3  o|  x     |  x          * |    |        |          * |2  o| x      | x          * |    |        |          * |1  o|x       |x          * |______________________          * 1   2   3   4   5   6          */
name|Version
name|version
init|=
name|VersionUtils
operator|.
name|randomVersionBetween
argument_list|(
name|random
argument_list|()
argument_list|,
name|Version
operator|.
name|V_2_0_0
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|Settings
name|settings
init|=
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|version
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"index"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
name|LOCATION_FIELD
argument_list|,
literal|"type=geo_point"
argument_list|)
argument_list|)
expr_stmt|;
name|XContentBuilder
name|d1Builder
init|=
name|jsonBuilder
argument_list|()
decl_stmt|;
name|GeoPoint
index|[]
name|d1Points
init|=
block|{
operator|new
name|GeoPoint
argument_list|(
literal|2.5
argument_list|,
literal|1
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|2.75
argument_list|,
literal|2
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|3.25
argument_list|,
literal|4
argument_list|)
block|}
decl_stmt|;
name|createShuffeldJSONArray
argument_list|(
name|d1Builder
argument_list|,
name|d1Points
argument_list|)
expr_stmt|;
name|XContentBuilder
name|d2Builder
init|=
name|jsonBuilder
argument_list|()
decl_stmt|;
name|GeoPoint
index|[]
name|d2Points
init|=
block|{
operator|new
name|GeoPoint
argument_list|(
literal|4.5
argument_list|,
literal|1
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|4.75
argument_list|,
literal|2
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|5
argument_list|,
literal|3
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|5.25
argument_list|,
literal|4
argument_list|)
block|}
decl_stmt|;
name|createShuffeldJSONArray
argument_list|(
name|d2Builder
argument_list|,
name|d2Points
argument_list|)
expr_stmt|;
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"d1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|d1Builder
argument_list|)
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"d2"
argument_list|)
operator|.
name|setSource
argument_list|(
name|d2Builder
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|qHashes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|qPoints
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|createQPoints
argument_list|(
name|qHashes
argument_list|,
name|qPoints
argument_list|)
expr_stmt|;
name|GeoDistanceSortBuilder
name|geoDistanceSortBuilder
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|int
name|at
init|=
name|randomInt
argument_list|(
literal|3
operator|-
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
if|if
condition|(
name|geoDistanceSortBuilder
operator|==
literal|null
condition|)
block|{
name|geoDistanceSortBuilder
operator|=
operator|new
name|GeoDistanceSortBuilder
argument_list|(
name|LOCATION_FIELD
argument_list|,
name|qHashes
operator|.
name|get
argument_list|(
name|at
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|geoDistanceSortBuilder
operator|.
name|geohashes
argument_list|(
name|qHashes
operator|.
name|get
argument_list|(
name|at
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|geoDistanceSortBuilder
operator|==
literal|null
condition|)
block|{
name|geoDistanceSortBuilder
operator|=
operator|new
name|GeoDistanceSortBuilder
argument_list|(
name|LOCATION_FIELD
argument_list|,
name|qPoints
operator|.
name|get
argument_list|(
name|at
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|geoDistanceSortBuilder
operator|.
name|points
argument_list|(
name|qPoints
operator|.
name|get
argument_list|(
name|at
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|qHashes
operator|.
name|remove
argument_list|(
name|at
argument_list|)
expr_stmt|;
name|qPoints
operator|.
name|remove
argument_list|(
name|at
argument_list|)
expr_stmt|;
block|}
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addSort
argument_list|(
name|geoDistanceSortBuilder
operator|.
name|sortMode
argument_list|(
name|SortMode
operator|.
name|MIN
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertOrderedSearchHits
argument_list|(
name|searchResponse
argument_list|,
literal|"d1"
argument_list|,
literal|"d2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|2.5
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|1.e-4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|1
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|4.5
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|1.e-4
argument_list|)
argument_list|)
expr_stmt|;
name|searchResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addSort
argument_list|(
name|geoDistanceSortBuilder
operator|.
name|sortMode
argument_list|(
name|SortMode
operator|.
name|MAX
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertOrderedSearchHits
argument_list|(
name|searchResponse
argument_list|,
literal|"d1"
argument_list|,
literal|"d2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|3.25
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|1.e-4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|1
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|5.25
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|1.e-4
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSinglePointGeoDistanceSort
specifier|public
name|void
name|testSinglePointGeoDistanceSort
parameter_list|()
throws|throws
name|ExecutionException
throws|,
name|InterruptedException
throws|,
name|IOException
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"index"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
name|LOCATION_FIELD
argument_list|,
literal|"type=geo_point"
argument_list|)
argument_list|)
expr_stmt|;
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"d1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|LOCATION_FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"lat"
argument_list|,
literal|1
argument_list|)
operator|.
name|field
argument_list|(
literal|"lon"
argument_list|,
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"d2"
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|LOCATION_FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"lat"
argument_list|,
literal|1
argument_list|)
operator|.
name|field
argument_list|(
literal|"lon"
argument_list|,
literal|2
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|String
name|hashPoint
init|=
literal|"s037ms06g7h0"
decl_stmt|;
name|GeoDistanceSortBuilder
name|geoDistanceSortBuilder
init|=
operator|new
name|GeoDistanceSortBuilder
argument_list|(
name|LOCATION_FIELD
argument_list|,
name|hashPoint
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addSort
argument_list|(
name|geoDistanceSortBuilder
operator|.
name|sortMode
argument_list|(
name|SortMode
operator|.
name|MIN
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|checkCorrectSortOrderForGeoSort
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|geoDistanceSortBuilder
operator|=
operator|new
name|GeoDistanceSortBuilder
argument_list|(
name|LOCATION_FIELD
argument_list|,
operator|new
name|GeoPoint
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|searchResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addSort
argument_list|(
name|geoDistanceSortBuilder
operator|.
name|sortMode
argument_list|(
name|SortMode
operator|.
name|MIN
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|checkCorrectSortOrderForGeoSort
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|geoDistanceSortBuilder
operator|=
operator|new
name|GeoDistanceSortBuilder
argument_list|(
name|LOCATION_FIELD
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|searchResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addSort
argument_list|(
name|geoDistanceSortBuilder
operator|.
name|sortMode
argument_list|(
name|SortMode
operator|.
name|MIN
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|checkCorrectSortOrderForGeoSort
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|searchResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setSource
argument_list|(
operator|new
name|SearchSourceBuilder
argument_list|()
operator|.
name|sort
argument_list|(
name|SortBuilders
operator|.
name|geoDistanceSort
argument_list|(
name|LOCATION_FIELD
argument_list|,
literal|2.0
argument_list|,
literal|2.0
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|checkCorrectSortOrderForGeoSort
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|searchResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setSource
argument_list|(
operator|new
name|SearchSourceBuilder
argument_list|()
operator|.
name|sort
argument_list|(
name|SortBuilders
operator|.
name|geoDistanceSort
argument_list|(
name|LOCATION_FIELD
argument_list|,
literal|"s037ms06g7h0"
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|checkCorrectSortOrderForGeoSort
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|searchResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setSource
argument_list|(
operator|new
name|SearchSourceBuilder
argument_list|()
operator|.
name|sort
argument_list|(
name|SortBuilders
operator|.
name|geoDistanceSort
argument_list|(
name|LOCATION_FIELD
argument_list|,
literal|2.0
argument_list|,
literal|2.0
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|checkCorrectSortOrderForGeoSort
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|searchResponse
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|()
operator|.
name|setSource
argument_list|(
operator|new
name|SearchSourceBuilder
argument_list|()
operator|.
name|sort
argument_list|(
name|SortBuilders
operator|.
name|geoDistanceSort
argument_list|(
name|LOCATION_FIELD
argument_list|,
literal|2.0
argument_list|,
literal|2.0
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
operator|.
name|geoDistance
argument_list|(
name|GeoDistance
operator|.
name|PLANE
argument_list|)
operator|.
name|ignoreMalformed
argument_list|(
literal|true
argument_list|)
operator|.
name|coerce
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|checkCorrectSortOrderForGeoSort
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
block|}
DECL|method|checkCorrectSortOrderForGeoSort
specifier|private
specifier|static
name|void
name|checkCorrectSortOrderForGeoSort
parameter_list|(
name|SearchResponse
name|searchResponse
parameter_list|)
block|{
name|assertOrderedSearchHits
argument_list|(
name|searchResponse
argument_list|,
literal|"d2"
argument_list|,
literal|"d1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|1.e-4
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Double
operator|)
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|1
argument_list|)
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|closeTo
argument_list|(
name|GeoDistance
operator|.
name|PLANE
operator|.
name|calculate
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
argument_list|,
literal|1.e-4
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|createQPoints
specifier|protected
name|void
name|createQPoints
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|qHashes
parameter_list|,
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|qPoints
parameter_list|)
block|{
name|GeoPoint
index|[]
name|qp
init|=
block|{
operator|new
name|GeoPoint
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|)
block|}
decl_stmt|;
name|qPoints
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|qp
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|qh
init|=
block|{
literal|"s02equ04ven0"
block|,
literal|"s037ms06g7h0"
block|,
literal|"s065kk0dc540"
block|,
literal|"s06g7h0dyg00"
block|}
decl_stmt|;
name|qHashes
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|qh
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testCrossIndexIgnoreUnmapped
specifier|public
name|void
name|testCrossIndexIgnoreUnmapped
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
literal|"str_field"
argument_list|,
literal|"type=keyword"
argument_list|,
literal|"long_field"
argument_list|,
literal|"type=long"
argument_list|,
literal|"double_field"
argument_list|,
literal|"type=double"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test1"
argument_list|,
literal|"type"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"str_field"
argument_list|,
literal|"bcd"
argument_list|,
literal|"long_field"
argument_list|,
literal|3
argument_list|,
literal|"double_field"
argument_list|,
literal|0.65
argument_list|)
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test2"
argument_list|,
literal|"type"
argument_list|)
operator|.
name|setSource
argument_list|()
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
expr_stmt|;
name|SearchResponse
name|resp
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|addSort
argument_list|(
name|fieldSort
argument_list|(
literal|"str_field"
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|unmappedType
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
operator|.
name|addSort
argument_list|(
name|fieldSort
argument_list|(
literal|"str_field2"
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|DESC
argument_list|)
operator|.
name|unmappedType
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertSortValues
argument_list|(
name|resp
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|Text
argument_list|(
literal|"bcd"
argument_list|)
block|,
literal|null
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|null
block|,
literal|null
block|}
argument_list|)
expr_stmt|;
name|resp
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|addSort
argument_list|(
name|fieldSort
argument_list|(
literal|"long_field"
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|unmappedType
argument_list|(
literal|"long"
argument_list|)
argument_list|)
operator|.
name|addSort
argument_list|(
name|fieldSort
argument_list|(
literal|"long_field2"
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|DESC
argument_list|)
operator|.
name|unmappedType
argument_list|(
literal|"long"
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertSortValues
argument_list|(
name|resp
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|3L
block|,
name|Long
operator|.
name|MIN_VALUE
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
name|Long
operator|.
name|MAX_VALUE
block|,
name|Long
operator|.
name|MIN_VALUE
block|}
argument_list|)
expr_stmt|;
name|resp
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test1"
argument_list|,
literal|"test2"
argument_list|)
operator|.
name|addSort
argument_list|(
name|fieldSort
argument_list|(
literal|"double_field"
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|ASC
argument_list|)
operator|.
name|unmappedType
argument_list|(
literal|"double"
argument_list|)
argument_list|)
operator|.
name|addSort
argument_list|(
name|fieldSort
argument_list|(
literal|"double_field2"
argument_list|)
operator|.
name|order
argument_list|(
name|SortOrder
operator|.
name|DESC
argument_list|)
operator|.
name|unmappedType
argument_list|(
literal|"double"
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertSortValues
argument_list|(
name|resp
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|0.65
block|,
name|Double
operator|.
name|NEGATIVE_INFINITY
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
name|Double
operator|.
name|POSITIVE_INFINITY
block|,
name|Double
operator|.
name|NEGATIVE_INFINITY
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

