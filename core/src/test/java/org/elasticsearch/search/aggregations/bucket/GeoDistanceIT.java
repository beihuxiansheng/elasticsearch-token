begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.bucket
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|GeoPoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|DistanceUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|Aggregator
operator|.
name|SubAggCollectionMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|histogram
operator|.
name|Histogram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|range
operator|.
name|Range
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|range
operator|.
name|Range
operator|.
name|Bucket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|Terms
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|InternalSettingsPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|VersionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|matchAllQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|geoDistance
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|histogram
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|terms
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertSearchResponse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|sameInstance
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|IsNull
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|IsNull
operator|.
name|nullValue
import|;
end_import

begin_class
annotation|@
name|ESIntegTestCase
operator|.
name|SuiteScopeTestCase
DECL|class|GeoDistanceIT
specifier|public
class|class
name|GeoDistanceIT
extends|extends
name|ESIntegTestCase
block|{
annotation|@
name|Override
DECL|method|nodePlugins
specifier|protected
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|Plugin
argument_list|>
argument_list|>
name|nodePlugins
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|InternalSettingsPlugin
operator|.
name|class
argument_list|)
return|;
comment|// uses index.version.created
block|}
DECL|field|version
specifier|private
name|Version
name|version
init|=
name|VersionUtils
operator|.
name|randomVersionBetween
argument_list|(
name|random
argument_list|()
argument_list|,
name|Version
operator|.
name|V_2_0_0
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
DECL|method|indexCity
specifier|private
name|IndexRequestBuilder
name|indexCity
parameter_list|(
name|String
name|idx
parameter_list|,
name|String
name|name
parameter_list|,
name|String
modifier|...
name|latLons
parameter_list|)
throws|throws
name|Exception
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"city"
argument_list|,
name|name
argument_list|)
decl_stmt|;
name|source
operator|.
name|startArray
argument_list|(
literal|"location"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|latLons
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|source
operator|.
name|value
argument_list|(
name|latLons
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|source
operator|.
name|endArray
argument_list|()
expr_stmt|;
name|source
operator|=
name|source
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|idx
argument_list|,
literal|"type"
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setupSuiteScopeCluster
specifier|public
name|void
name|setupSuiteScopeCluster
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|version
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|prepareCreate
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
literal|"location"
argument_list|,
literal|"type=geo_point"
argument_list|,
literal|"city"
argument_list|,
literal|"type=keyword"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|prepareCreate
argument_list|(
literal|"idx-multi"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
literal|"location"
argument_list|,
literal|"type=geo_point"
argument_list|,
literal|"city"
argument_list|,
literal|"type=keyword"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|createIndex
argument_list|(
literal|"idx_unmapped"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|cities
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cities
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
comment|// below 500km
name|indexCity
argument_list|(
literal|"idx"
argument_list|,
literal|"utrecht"
argument_list|,
literal|"52.0945, 5.116"
argument_list|)
argument_list|,
name|indexCity
argument_list|(
literal|"idx"
argument_list|,
literal|"haarlem"
argument_list|,
literal|"52.3890, 4.637"
argument_list|)
argument_list|,
comment|// above 500km, below 1000km
name|indexCity
argument_list|(
literal|"idx"
argument_list|,
literal|"berlin"
argument_list|,
literal|"52.540, 13.409"
argument_list|)
argument_list|,
name|indexCity
argument_list|(
literal|"idx"
argument_list|,
literal|"prague"
argument_list|,
literal|"50.097679, 14.441314"
argument_list|)
argument_list|,
comment|// above 1000km
name|indexCity
argument_list|(
literal|"idx"
argument_list|,
literal|"tel-aviv"
argument_list|,
literal|"32.0741, 34.777"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// random cities with no location
for|for
control|(
name|String
name|cityName
range|:
name|Arrays
operator|.
name|asList
argument_list|(
literal|"london"
argument_list|,
literal|"singapour"
argument_list|,
literal|"tokyo"
argument_list|,
literal|"milan"
argument_list|)
control|)
block|{
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|cities
operator|.
name|add
argument_list|(
name|indexCity
argument_list|(
literal|"idx"
argument_list|,
name|cityName
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|cities
argument_list|)
expr_stmt|;
name|cities
operator|.
name|clear
argument_list|()
expr_stmt|;
name|cities
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|indexCity
argument_list|(
literal|"idx-multi"
argument_list|,
literal|"city1"
argument_list|,
literal|"52.3890, 4.637"
argument_list|,
literal|"50.097679,14.441314"
argument_list|)
argument_list|,
comment|// first point is within the ~17.5km, the second is ~710km
name|indexCity
argument_list|(
literal|"idx-multi"
argument_list|,
literal|"city2"
argument_list|,
literal|"52.540, 13.409"
argument_list|,
literal|"52.0945, 5.116"
argument_list|)
argument_list|,
comment|// first point is ~576km, the second is within the ~35km
name|indexCity
argument_list|(
literal|"idx-multi"
argument_list|,
literal|"city3"
argument_list|,
literal|"32.0741, 34.777"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// above 1000km
comment|// random cities with no location
for|for
control|(
name|String
name|cityName
range|:
name|Arrays
operator|.
name|asList
argument_list|(
literal|"london"
argument_list|,
literal|"singapour"
argument_list|,
literal|"tokyo"
argument_list|,
literal|"milan"
argument_list|)
control|)
block|{
if|if
condition|(
name|randomBoolean
argument_list|()
operator|||
literal|true
condition|)
block|{
name|cities
operator|.
name|add
argument_list|(
name|indexCity
argument_list|(
literal|"idx-multi"
argument_list|,
name|cityName
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|cities
argument_list|)
expr_stmt|;
name|prepareCreate
argument_list|(
literal|"empty_bucket_idx"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
literal|"value"
argument_list|,
literal|"type=integer"
argument_list|,
literal|"location"
argument_list|,
literal|"type=geo_point"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|builders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|builders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"empty_bucket_idx"
argument_list|,
literal|"type"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"value"
argument_list|,
name|i
operator|*
literal|2
argument_list|)
operator|.
name|field
argument_list|(
literal|"location"
argument_list|,
literal|"52.0945, 5.116"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|builders
operator|.
name|toArray
argument_list|(
operator|new
name|IndexRequestBuilder
index|[
name|builders
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|ensureSearchable
argument_list|()
expr_stmt|;
block|}
DECL|method|testSimple
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoDistance
argument_list|(
literal|"amsterdam_rings"
argument_list|,
operator|new
name|GeoPoint
argument_list|(
literal|52.3760
argument_list|,
literal|4.894
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"location"
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
operator|.
name|addUnboundedTo
argument_list|(
literal|500
argument_list|)
operator|.
name|addRange
argument_list|(
literal|500
argument_list|,
literal|1000
argument_list|)
operator|.
name|addUnboundedFrom
argument_list|(
literal|1000
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Range
name|geoDist
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"amsterdam_rings"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoDist
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoDist
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"amsterdam_rings"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|geoDist
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|buckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"*-500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0-1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0-*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSimpleWithCustomKeys
specifier|public
name|void
name|testSimpleWithCustomKeys
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoDistance
argument_list|(
literal|"amsterdam_rings"
argument_list|,
operator|new
name|GeoPoint
argument_list|(
literal|52.3760
argument_list|,
literal|4.894
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"location"
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
operator|.
name|addUnboundedTo
argument_list|(
literal|"ring1"
argument_list|,
literal|500
argument_list|)
operator|.
name|addRange
argument_list|(
literal|"ring2"
argument_list|,
literal|500
argument_list|,
literal|1000
argument_list|)
operator|.
name|addUnboundedFrom
argument_list|(
literal|"ring3"
argument_list|,
literal|1000
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Range
name|geoDist
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"amsterdam_rings"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoDist
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoDist
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"amsterdam_rings"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|geoDist
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|buckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"ring1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"ring2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"ring3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testUnmapped
specifier|public
name|void
name|testUnmapped
parameter_list|()
throws|throws
name|Exception
block|{
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|(
literal|"idx_unmapped"
argument_list|)
operator|.
name|setWaitForYellowStatus
argument_list|()
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx_unmapped"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoDistance
argument_list|(
literal|"amsterdam_rings"
argument_list|,
operator|new
name|GeoPoint
argument_list|(
literal|52.3760
argument_list|,
literal|4.894
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"location"
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
operator|.
name|addUnboundedTo
argument_list|(
literal|500
argument_list|)
operator|.
name|addRange
argument_list|(
literal|500
argument_list|,
literal|1000
argument_list|)
operator|.
name|addUnboundedFrom
argument_list|(
literal|1000
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Range
name|geoDist
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"amsterdam_rings"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoDist
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoDist
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"amsterdam_rings"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|geoDist
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|geoDist
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"*-500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0-1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0-*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testPartiallyUnmapped
specifier|public
name|void
name|testPartiallyUnmapped
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|,
literal|"idx_unmapped"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoDistance
argument_list|(
literal|"amsterdam_rings"
argument_list|,
operator|new
name|GeoPoint
argument_list|(
literal|52.3760
argument_list|,
literal|4.894
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"location"
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
operator|.
name|addUnboundedTo
argument_list|(
literal|500
argument_list|)
operator|.
name|addRange
argument_list|(
literal|500
argument_list|,
literal|1000
argument_list|)
operator|.
name|addUnboundedFrom
argument_list|(
literal|1000
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Range
name|geoDist
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"amsterdam_rings"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoDist
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoDist
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"amsterdam_rings"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|geoDist
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|geoDist
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"*-500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0-1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0-*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testWithSubAggregation
specifier|public
name|void
name|testWithSubAggregation
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoDistance
argument_list|(
literal|"amsterdam_rings"
argument_list|,
operator|new
name|GeoPoint
argument_list|(
literal|52.3760
argument_list|,
literal|4.894
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"location"
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
operator|.
name|addUnboundedTo
argument_list|(
literal|500
argument_list|)
operator|.
name|addRange
argument_list|(
literal|500
argument_list|,
literal|1000
argument_list|)
operator|.
name|addUnboundedFrom
argument_list|(
literal|1000
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|terms
argument_list|(
literal|"cities"
argument_list|)
operator|.
name|field
argument_list|(
literal|"city"
argument_list|)
operator|.
name|collectMode
argument_list|(
name|randomFrom
argument_list|(
name|SubAggCollectionMode
operator|.
name|values
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Range
name|geoDist
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"amsterdam_rings"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoDist
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoDist
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"amsterdam_rings"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|geoDist
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|geoDist
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoDist
operator|.
name|getProperty
argument_list|(
literal|"_bucket_count"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Object
index|[]
name|propertiesKeys
init|=
operator|(
name|Object
index|[]
operator|)
name|geoDist
operator|.
name|getProperty
argument_list|(
literal|"_key"
argument_list|)
decl_stmt|;
name|Object
index|[]
name|propertiesDocCounts
init|=
operator|(
name|Object
index|[]
operator|)
name|geoDist
operator|.
name|getProperty
argument_list|(
literal|"_count"
argument_list|)
decl_stmt|;
name|Object
index|[]
name|propertiesCities
init|=
operator|(
name|Object
index|[]
operator|)
name|geoDist
operator|.
name|getProperty
argument_list|(
literal|"cities"
argument_list|)
decl_stmt|;
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"*-500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Terms
name|cities
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"cities"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|cities
argument_list|,
name|Matchers
operator|.
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|names
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Terms
operator|.
name|Bucket
name|city
range|:
name|cities
operator|.
name|getBuckets
argument_list|()
control|)
block|{
name|names
operator|.
name|add
argument_list|(
name|city
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|names
operator|.
name|contains
argument_list|(
literal|"utrecht"
argument_list|)
operator|&&
name|names
operator|.
name|contains
argument_list|(
literal|"haarlem"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|propertiesKeys
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|"*-500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|long
operator|)
name|propertiesDocCounts
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Terms
operator|)
name|propertiesCities
index|[
literal|0
index|]
argument_list|,
name|sameInstance
argument_list|(
name|cities
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0-1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|cities
operator|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"cities"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|cities
argument_list|,
name|Matchers
operator|.
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|names
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
for|for
control|(
name|Terms
operator|.
name|Bucket
name|city
range|:
name|cities
operator|.
name|getBuckets
argument_list|()
control|)
block|{
name|names
operator|.
name|add
argument_list|(
name|city
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|names
operator|.
name|contains
argument_list|(
literal|"berlin"
argument_list|)
operator|&&
name|names
operator|.
name|contains
argument_list|(
literal|"prague"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|propertiesKeys
index|[
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|"500.0-1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|long
operator|)
name|propertiesDocCounts
index|[
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Terms
operator|)
name|propertiesCities
index|[
literal|1
index|]
argument_list|,
name|sameInstance
argument_list|(
name|cities
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0-*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|cities
operator|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"cities"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|cities
argument_list|,
name|Matchers
operator|.
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|names
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
for|for
control|(
name|Terms
operator|.
name|Bucket
name|city
range|:
name|cities
operator|.
name|getBuckets
argument_list|()
control|)
block|{
name|names
operator|.
name|add
argument_list|(
name|city
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|names
operator|.
name|contains
argument_list|(
literal|"tel-aviv"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|propertiesKeys
index|[
literal|2
index|]
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0-*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|long
operator|)
name|propertiesDocCounts
index|[
literal|2
index|]
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|Terms
operator|)
name|propertiesCities
index|[
literal|2
index|]
argument_list|,
name|sameInstance
argument_list|(
name|cities
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testEmptyAggregation
specifier|public
name|void
name|testEmptyAggregation
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"empty_bucket_idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|interval
argument_list|(
literal|1L
argument_list|)
operator|.
name|minDocCount
argument_list|(
literal|0
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|geoDistance
argument_list|(
literal|"geo_dist"
argument_list|,
operator|new
name|GeoPoint
argument_list|(
literal|52.3760
argument_list|,
literal|4.894
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"location"
argument_list|)
operator|.
name|addRange
argument_list|(
literal|"0-100"
argument_list|,
literal|0.0
argument_list|,
literal|100.0
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|Histogram
name|histo
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|histo
argument_list|,
name|Matchers
operator|.
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|Histogram
operator|.
name|Bucket
name|bucket
init|=
name|histo
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|Matchers
operator|.
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|Range
name|geoDistance
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"geo_dist"
argument_list|)
decl_stmt|;
comment|// TODO: use diamond once JI-9019884 is fixed
name|List
argument_list|<
name|Range
operator|.
name|Bucket
argument_list|>
name|buckets
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|geoDistance
operator|.
name|getBuckets
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoDistance
argument_list|,
name|Matchers
operator|.
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoDistance
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"geo_dist"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|buckets
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0-100"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"100.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testMultiValues
specifier|public
name|void
name|testMultiValues
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx-multi"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoDistance
argument_list|(
literal|"amsterdam_rings"
argument_list|,
operator|new
name|GeoPoint
argument_list|(
literal|52.3760
argument_list|,
literal|4.894
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"location"
argument_list|)
operator|.
name|unit
argument_list|(
name|DistanceUnit
operator|.
name|KILOMETERS
argument_list|)
operator|.
name|distanceType
argument_list|(
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|GeoDistance
operator|.
name|ARC
argument_list|)
operator|.
name|addUnboundedTo
argument_list|(
literal|500
argument_list|)
operator|.
name|addRange
argument_list|(
literal|500
argument_list|,
literal|1000
argument_list|)
operator|.
name|addUnboundedFrom
argument_list|(
literal|1000
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Range
name|geoDist
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"amsterdam_rings"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoDist
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoDist
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"amsterdam_rings"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|geoDist
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|geoDist
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"*-500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0-1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|500.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"500.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|bucket
operator|=
name|buckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|String
operator|)
name|bucket
operator|.
name|getKey
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0-*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getFrom
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1000.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|bucket
operator|.
name|getTo
argument_list|()
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getFromAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"1000.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getToAsString
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

