begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
operator|.
name|PipelineAggregatorBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_class
DECL|class|AggregatorFactoriesTests
specifier|public
class|class
name|AggregatorFactoriesTests
extends|extends
name|ESTestCase
block|{
DECL|method|testGetAggregatorFactories_returnsUnmodifiableList
specifier|public
name|void
name|testGetAggregatorFactories_returnsUnmodifiableList
parameter_list|()
block|{
name|AggregatorFactories
operator|.
name|Builder
name|builder
init|=
operator|new
name|AggregatorFactories
operator|.
name|Builder
argument_list|()
operator|.
name|addAggregator
argument_list|(
name|AggregationBuilders
operator|.
name|avg
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AggregationBuilder
argument_list|>
name|aggregatorFactories
init|=
name|builder
operator|.
name|getAggregatorFactories
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|aggregatorFactories
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|expectThrows
argument_list|(
name|UnsupportedOperationException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|aggregatorFactories
operator|.
name|add
argument_list|(
name|AggregationBuilders
operator|.
name|avg
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetPipelineAggregatorFactories_returnsUnmodifiableList
specifier|public
name|void
name|testGetPipelineAggregatorFactories_returnsUnmodifiableList
parameter_list|()
block|{
name|AggregatorFactories
operator|.
name|Builder
name|builder
init|=
operator|new
name|AggregatorFactories
operator|.
name|Builder
argument_list|()
operator|.
name|addPipelineAggregator
argument_list|(
name|PipelineAggregatorBuilders
operator|.
name|avgBucket
argument_list|(
literal|"foo"
argument_list|,
literal|"path1"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|PipelineAggregationBuilder
argument_list|>
name|pipelineAggregatorFactories
init|=
name|builder
operator|.
name|getPipelineAggregatorFactories
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|pipelineAggregatorFactories
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|expectThrows
argument_list|(
name|UnsupportedOperationException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|pipelineAggregatorFactories
operator|.
name|add
argument_list|(
name|PipelineAggregatorBuilders
operator|.
name|avgBucket
argument_list|(
literal|"bar"
argument_list|,
literal|"path2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

