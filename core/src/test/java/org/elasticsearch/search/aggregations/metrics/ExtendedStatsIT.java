begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.metrics
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|Script
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationTestScriptsPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|filter
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|global
operator|.
name|Global
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|histogram
operator|.
name|Histogram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|missing
operator|.
name|Missing
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|Terms
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|Terms
operator|.
name|Order
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|stats
operator|.
name|extended
operator|.
name|ExtendedStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|stats
operator|.
name|extended
operator|.
name|ExtendedStats
operator|.
name|Bounds
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|matchAllQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|termQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|extendedStats
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|filter
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|global
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|histogram
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|missing
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|terms
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertAcked
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertHitCount
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertSearchResponse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|sameInstance
import|;
end_import

begin_class
DECL|class|ExtendedStatsIT
specifier|public
class|class
name|ExtendedStatsIT
extends|extends
name|AbstractNumericTestCase
block|{
annotation|@
name|Override
DECL|method|nodePlugins
specifier|protected
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|Plugin
argument_list|>
argument_list|>
name|nodePlugins
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|singleton
argument_list|(
name|AggregationTestScriptsPlugin
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|stdDev
specifier|private
specifier|static
name|double
name|stdDev
parameter_list|(
name|int
modifier|...
name|vals
parameter_list|)
block|{
return|return
name|Math
operator|.
name|sqrt
argument_list|(
name|variance
argument_list|(
name|vals
argument_list|)
argument_list|)
return|;
block|}
DECL|method|variance
specifier|private
specifier|static
name|double
name|variance
parameter_list|(
name|int
modifier|...
name|vals
parameter_list|)
block|{
name|double
name|sum
init|=
literal|0
decl_stmt|;
name|double
name|sumOfSqrs
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|val
range|:
name|vals
control|)
block|{
name|sum
operator|+=
name|val
expr_stmt|;
name|sumOfSqrs
operator|+=
name|val
operator|*
name|val
expr_stmt|;
block|}
return|return
operator|(
name|sumOfSqrs
operator|-
operator|(
operator|(
name|sum
operator|*
name|sum
operator|)
operator|/
name|vals
operator|.
name|length
operator|)
operator|)
operator|/
name|vals
operator|.
name|length
return|;
block|}
annotation|@
name|Override
DECL|method|testEmptyAggregation
specifier|public
name|void
name|testEmptyAggregation
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"empty_bucket_idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|interval
argument_list|(
literal|1L
argument_list|)
operator|.
name|minDocCount
argument_list|(
literal|0
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|Histogram
name|histo
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|histo
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|Histogram
operator|.
name|Bucket
name|bucket
init|=
name|histo
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NEGATIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|stats
operator|.
name|getStdDeviationBound
argument_list|(
name|ExtendedStats
operator|.
name|Bounds
operator|.
name|UPPER
argument_list|)
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|stats
operator|.
name|getStdDeviationBound
argument_list|(
name|ExtendedStats
operator|.
name|Bounds
operator|.
name|LOWER
argument_list|)
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testUnmapped
specifier|public
name|void
name|testUnmapped
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx_unmapped"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NaN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NEGATIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NaN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NaN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|stats
operator|.
name|getStdDeviationBound
argument_list|(
name|ExtendedStats
operator|.
name|Bounds
operator|.
name|UPPER
argument_list|)
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|stats
operator|.
name|getStdDeviationBound
argument_list|(
name|ExtendedStats
operator|.
name|Bounds
operator|.
name|LOWER
argument_list|)
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testPartiallyUnmapped
specifier|public
name|void
name|testPartiallyUnmapped
parameter_list|()
block|{
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
literal|5
decl_stmt|;
name|ExtendedStats
name|s1
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|ExtendedStats
name|s2
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|,
literal|"idx_unmapped"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|s1
operator|.
name|getAvg
argument_list|()
argument_list|,
name|s2
operator|.
name|getAvg
argument_list|()
argument_list|,
literal|1e-10
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|s1
operator|.
name|getCount
argument_list|()
argument_list|,
name|s2
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|s1
operator|.
name|getMin
argument_list|()
argument_list|,
name|s2
operator|.
name|getMin
argument_list|()
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|s1
operator|.
name|getMax
argument_list|()
argument_list|,
name|s2
operator|.
name|getMax
argument_list|()
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|s1
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|s2
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
literal|1e-10
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|s1
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|s2
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
literal|1e-10
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|s1
operator|.
name|getStdDeviationBound
argument_list|(
name|Bounds
operator|.
name|LOWER
argument_list|)
argument_list|,
name|s2
operator|.
name|getStdDeviationBound
argument_list|(
name|Bounds
operator|.
name|LOWER
argument_list|)
argument_list|,
literal|1e-10
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|s1
operator|.
name|getStdDeviationBound
argument_list|(
name|Bounds
operator|.
name|UPPER
argument_list|)
argument_list|,
name|s2
operator|.
name|getStdDeviationBound
argument_list|(
name|Bounds
operator|.
name|UPPER
argument_list|)
argument_list|,
literal|1e-10
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testSingleValuedField
specifier|public
name|void
name|testSingleValuedField
parameter_list|()
throws|throws
name|Exception
block|{
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
argument_list|)
operator|/
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
DECL|method|testSingleValuedFieldDefaultSigma
specifier|public
name|void
name|testSingleValuedFieldDefaultSigma
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Same as previous test, but uses a default value for sigma
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
argument_list|)
operator|/
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
DECL|method|testSingleValuedField_WithFormatter
specifier|public
name|void
name|testSingleValuedField_WithFormatter
parameter_list|()
throws|throws
name|Exception
block|{
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|format
argument_list|(
literal|"0000.0"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
argument_list|)
operator|/
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvgAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0005.5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMinAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0001.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMaxAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0010.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0055.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCountAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0010.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquaresAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0385.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVarianceAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0008.2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviationAsString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"0002.9"
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testSingleValuedFieldGetProperty
specifier|public
name|void
name|testSingleValuedFieldGetProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|global
argument_list|(
literal|"global"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|Global
name|global
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"global"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|global
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|global
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"global"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|global
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|global
operator|.
name|getAggregations
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|global
operator|.
name|getAggregations
argument_list|()
operator|.
name|asMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|global
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|ExtendedStats
name|statsFromProperty
init|=
operator|(
name|ExtendedStats
operator|)
name|global
operator|.
name|getProperty
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|statsFromProperty
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|statsFromProperty
argument_list|,
name|sameInstance
argument_list|(
name|stats
argument_list|)
argument_list|)
expr_stmt|;
name|double
name|expectedAvgValue
init|=
call|(
name|double
call|)
argument_list|(
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
argument_list|)
operator|/
literal|10
decl_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|expectedAvgValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|global
operator|.
name|getProperty
argument_list|(
literal|"stats.avg"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|expectedAvgValue
argument_list|)
argument_list|)
expr_stmt|;
name|double
name|expectedMinValue
init|=
literal|1.0
decl_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|expectedMinValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|global
operator|.
name|getProperty
argument_list|(
literal|"stats.min"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|expectedMinValue
argument_list|)
argument_list|)
expr_stmt|;
name|double
name|expectedMaxValue
init|=
literal|10.0
decl_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|expectedMaxValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|global
operator|.
name|getProperty
argument_list|(
literal|"stats.max"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|expectedMaxValue
argument_list|)
argument_list|)
expr_stmt|;
name|double
name|expectedSumValue
init|=
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
decl_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|expectedSumValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|global
operator|.
name|getProperty
argument_list|(
literal|"stats.sum"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|expectedSumValue
argument_list|)
argument_list|)
expr_stmt|;
name|long
name|expectedCountValue
init|=
literal|10
decl_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|expectedCountValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|global
operator|.
name|getProperty
argument_list|(
literal|"stats.count"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
name|expectedCountValue
argument_list|)
argument_list|)
expr_stmt|;
name|double
name|expectedSumOfSquaresValue
init|=
operator|(
name|double
operator|)
literal|1
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
decl_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|expectedSumOfSquaresValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|global
operator|.
name|getProperty
argument_list|(
literal|"stats.sum_of_squares"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|expectedSumOfSquaresValue
argument_list|)
argument_list|)
expr_stmt|;
name|double
name|expectedVarianceValue
init|=
name|variance
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|expectedVarianceValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|global
operator|.
name|getProperty
argument_list|(
literal|"stats.variance"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|expectedVarianceValue
argument_list|)
argument_list|)
expr_stmt|;
name|double
name|expectedStdDevValue
init|=
name|stdDev
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|expectedStdDevValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|double
operator|)
name|global
operator|.
name|getProperty
argument_list|(
literal|"stats.std_deviation"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|expectedStdDevValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testSingleValuedFieldPartiallyUnmapped
specifier|public
name|void
name|testSingleValuedFieldPartiallyUnmapped
parameter_list|()
throws|throws
name|Exception
block|{
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|,
literal|"idx_unmapped"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
argument_list|)
operator|/
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testSingleValuedFieldWithValueScript
specifier|public
name|void
name|testSingleValuedFieldWithValueScript
parameter_list|()
throws|throws
name|Exception
block|{
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|AggregationTestScriptsPlugin
operator|.
name|NAME
argument_list|,
literal|"_value + 1"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
argument_list|)
operator|/
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|121
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testSingleValuedFieldWithValueScriptWithParams
specifier|public
name|void
name|testSingleValuedFieldWithValueScriptWithParams
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"inc"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|AggregationTestScriptsPlugin
operator|.
name|NAME
argument_list|,
literal|"_value + inc"
argument_list|,
name|params
argument_list|)
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
argument_list|)
operator|/
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|121
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testMultiValuedField
specifier|public
name|void
name|testMultiValuedField
parameter_list|()
throws|throws
name|Exception
block|{
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"values"
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
operator|+
literal|12
argument_list|)
operator|/
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|12.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
operator|+
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|20L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|121
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|121
operator|+
literal|144
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testMultiValuedFieldWithValueScript
specifier|public
name|void
name|testMultiValuedFieldWithValueScript
parameter_list|()
throws|throws
name|Exception
block|{
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"values"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|AggregationTestScriptsPlugin
operator|.
name|NAME
argument_list|,
literal|"_value - 1"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
argument_list|)
operator|/
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|20L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|121
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testMultiValuedFieldWithValueScriptWithParams
specifier|public
name|void
name|testMultiValuedFieldWithValueScriptWithParams
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"dec"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"values"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|AggregationTestScriptsPlugin
operator|.
name|NAME
argument_list|,
literal|"_value - dec"
argument_list|,
name|params
argument_list|)
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
argument_list|)
operator|/
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|20L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|121
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testScriptSingleValued
specifier|public
name|void
name|testScriptSingleValued
parameter_list|()
throws|throws
name|Exception
block|{
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|AggregationTestScriptsPlugin
operator|.
name|NAME
argument_list|,
literal|"doc['value'].value"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
argument_list|)
operator|/
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testScriptSingleValuedWithParams
specifier|public
name|void
name|testScriptSingleValuedWithParams
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"inc"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Script
name|script
init|=
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|AggregationTestScriptsPlugin
operator|.
name|NAME
argument_list|,
literal|"doc['value'].value + inc"
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|script
argument_list|(
name|script
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
argument_list|)
operator|/
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|121
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testScriptMultiValued
specifier|public
name|void
name|testScriptMultiValued
parameter_list|()
throws|throws
name|Exception
block|{
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|AggregationTestScriptsPlugin
operator|.
name|NAME
argument_list|,
literal|"doc['values'].values"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
operator|+
literal|12
argument_list|)
operator|/
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|12.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|11
operator|+
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|20L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|121
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|121
operator|+
literal|144
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testScriptMultiValuedWithParams
specifier|public
name|void
name|testScriptMultiValuedWithParams
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"dec"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Script
name|script
init|=
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|AggregationTestScriptsPlugin
operator|.
name|NAME
argument_list|,
literal|"[ doc['value'].value, doc['value'].value - dec ]"
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|double
name|sigma
init|=
name|randomDouble
argument_list|()
operator|*
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|script
argument_list|(
name|script
argument_list|)
operator|.
name|sigma
argument_list|(
name|sigma
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
call|(
name|double
call|)
argument_list|(
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|0
operator|+
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
argument_list|)
operator|/
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
operator|+
literal|10
operator|+
literal|0
operator|+
literal|1
operator|+
literal|2
operator|+
literal|3
operator|+
literal|4
operator|+
literal|5
operator|+
literal|6
operator|+
literal|7
operator|+
literal|8
operator|+
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|20L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|double
operator|)
literal|1
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
operator|+
literal|100
operator|+
literal|0
operator|+
literal|1
operator|+
literal|4
operator|+
literal|9
operator|+
literal|16
operator|+
literal|25
operator|+
literal|36
operator|+
literal|49
operator|+
literal|64
operator|+
literal|81
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|variance
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|stdDev
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|9
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|checkUpperLowerBounds
argument_list|(
name|stats
argument_list|,
name|sigma
argument_list|)
expr_stmt|;
block|}
DECL|method|testEmptySubAggregation
specifier|public
name|void
name|testEmptySubAggregation
parameter_list|()
block|{
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|terms
argument_list|(
literal|"value"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|missing
argument_list|(
literal|"values"
argument_list|)
operator|.
name|field
argument_list|(
literal|"values"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"stats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|Terms
name|terms
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|terms
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|terms
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Terms
operator|.
name|Bucket
name|bucket
range|:
name|terms
operator|.
name|getBuckets
argument_list|()
control|)
block|{
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|Missing
name|missing
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"values"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|missing
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|missing
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|ExtendedStats
name|stats
init|=
name|missing
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|stats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"stats"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NEGATIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|stats
operator|.
name|getStdDeviationBound
argument_list|(
name|ExtendedStats
operator|.
name|Bounds
operator|.
name|UPPER
argument_list|)
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|stats
operator|.
name|getStdDeviationBound
argument_list|(
name|ExtendedStats
operator|.
name|Bounds
operator|.
name|LOWER
argument_list|)
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|testOrderByEmptyAggregation
specifier|public
name|void
name|testOrderByEmptyAggregation
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|terms
argument_list|(
literal|"terms"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
operator|.
name|order
argument_list|(
name|Order
operator|.
name|compound
argument_list|(
name|Order
operator|.
name|aggregation
argument_list|(
literal|"filter>extendedStats.avg"
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|filter
argument_list|(
literal|"filter"
argument_list|,
name|termQuery
argument_list|(
literal|"value"
argument_list|,
literal|100
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"extendedStats"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertHitCount
argument_list|(
name|searchResponse
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|Terms
name|terms
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"terms"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|terms
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Terms
operator|.
name|Bucket
argument_list|>
name|buckets
init|=
name|terms
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|buckets
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|buckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|Terms
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getKeyAsNumber
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|long
operator|)
name|i
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|Filter
name|filter
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"filter"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|filter
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|filter
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|ExtendedStats
name|extendedStats
init|=
name|filter
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"extendedStats"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|extendedStats
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|extendedStats
operator|.
name|getMin
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|extendedStats
operator|.
name|getMax
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NEGATIVE_INFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|extendedStats
operator|.
name|getAvg
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NaN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|extendedStats
operator|.
name|getSum
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|extendedStats
operator|.
name|getCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|extendedStats
operator|.
name|getStdDeviation
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NaN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|extendedStats
operator|.
name|getSumOfSquares
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|extendedStats
operator|.
name|getVariance
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NaN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|extendedStats
operator|.
name|getStdDeviationBound
argument_list|(
name|Bounds
operator|.
name|LOWER
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NaN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|extendedStats
operator|.
name|getStdDeviationBound
argument_list|(
name|Bounds
operator|.
name|UPPER
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|Double
operator|.
name|NaN
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|checkUpperLowerBounds
specifier|private
name|void
name|checkUpperLowerBounds
parameter_list|(
name|ExtendedStats
name|stats
parameter_list|,
name|double
name|sigma
parameter_list|)
block|{
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviationBound
argument_list|(
name|ExtendedStats
operator|.
name|Bounds
operator|.
name|UPPER
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
operator|+
operator|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
operator|*
name|sigma
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|stats
operator|.
name|getStdDeviationBound
argument_list|(
name|ExtendedStats
operator|.
name|Bounds
operator|.
name|LOWER
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|stats
operator|.
name|getAvg
argument_list|()
operator|-
operator|(
name|stats
operator|.
name|getStdDeviation
argument_list|()
operator|*
name|sigma
operator|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Make sure that a request using a script does not get cached and a request      * not using a script does get cached.      */
DECL|method|testDontCacheScripts
specifier|public
name|void
name|testDontCacheScripts
parameter_list|()
throws|throws
name|Exception
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"cache_test_idx"
argument_list|)
operator|.
name|addMapping
argument_list|(
literal|"type"
argument_list|,
literal|"d"
argument_list|,
literal|"type=long"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"requests.cache.enable"
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
literal|1
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"cache_test_idx"
argument_list|,
literal|"type"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"s"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"cache_test_idx"
argument_list|,
literal|"type"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"s"
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure we are starting with a clear cache
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
literal|"cache_test_idx"
argument_list|)
operator|.
name|setRequestCache
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getRequestCache
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
literal|"cache_test_idx"
argument_list|)
operator|.
name|setRequestCache
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getRequestCache
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test that a request using a script does not get cached
name|SearchResponse
name|r
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"cache_test_idx"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
literal|"d"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|AggregationTestScriptsPlugin
operator|.
name|NAME
argument_list|,
literal|"_value + 1"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
literal|"cache_test_idx"
argument_list|)
operator|.
name|setRequestCache
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getRequestCache
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
literal|"cache_test_idx"
argument_list|)
operator|.
name|setRequestCache
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getRequestCache
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
comment|// To make sure that the cache is working test that a request not using
comment|// a script is cached
name|r
operator|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"cache_test_idx"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|extendedStats
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|field
argument_list|(
literal|"d"
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertSearchResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
literal|"cache_test_idx"
argument_list|)
operator|.
name|setRequestCache
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getRequestCache
argument_list|()
operator|.
name|getHitCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
literal|"cache_test_idx"
argument_list|)
operator|.
name|setRequestCache
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|.
name|getRequestCache
argument_list|()
operator|.
name|getMissCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

