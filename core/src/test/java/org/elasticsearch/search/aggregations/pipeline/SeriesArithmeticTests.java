begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.pipeline
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|Script
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptService
operator|.
name|ScriptType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|groovy
operator|.
name|GroovyScriptEngineService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|histogram
operator|.
name|Histogram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|histogram
operator|.
name|InternalHistogram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|histogram
operator|.
name|InternalHistogram
operator|.
name|Bucket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|sum
operator|.
name|Sum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
operator|.
name|BucketHelpers
operator|.
name|GapPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ElasticsearchIntegrationTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|histogram
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|sum
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
operator|.
name|PipelineAggregatorBuilders
operator|.
name|seriesArithmetic
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertSearchResponse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_class
annotation|@
name|ElasticsearchIntegrationTest
operator|.
name|SuiteScopeTest
DECL|class|SeriesArithmeticTests
specifier|public
class|class
name|SeriesArithmeticTests
extends|extends
name|ElasticsearchIntegrationTest
block|{
DECL|field|FIELD_1_NAME
specifier|private
specifier|static
specifier|final
name|String
name|FIELD_1_NAME
init|=
literal|"field1"
decl_stmt|;
DECL|field|FIELD_2_NAME
specifier|private
specifier|static
specifier|final
name|String
name|FIELD_2_NAME
init|=
literal|"field2"
decl_stmt|;
DECL|field|FIELD_3_NAME
specifier|private
specifier|static
specifier|final
name|String
name|FIELD_3_NAME
init|=
literal|"field3"
decl_stmt|;
DECL|field|FIELD_4_NAME
specifier|private
specifier|static
specifier|final
name|String
name|FIELD_4_NAME
init|=
literal|"field4"
decl_stmt|;
DECL|field|interval
specifier|private
specifier|static
name|int
name|interval
decl_stmt|;
DECL|field|numDocs
specifier|private
specifier|static
name|int
name|numDocs
decl_stmt|;
DECL|field|minNumber
specifier|private
specifier|static
name|int
name|minNumber
decl_stmt|;
DECL|field|maxNumber
specifier|private
specifier|static
name|int
name|maxNumber
decl_stmt|;
annotation|@
name|Override
DECL|method|setupSuiteScopeCluster
specifier|public
name|void
name|setupSuiteScopeCluster
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"idx"
argument_list|)
expr_stmt|;
name|createIndex
argument_list|(
literal|"idx_unmapped"
argument_list|)
expr_stmt|;
name|interval
operator|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|numDocs
operator|=
name|randomIntBetween
argument_list|(
literal|10
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|minNumber
operator|=
operator|-
literal|200
expr_stmt|;
name|maxNumber
operator|=
literal|200
expr_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|builders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|docs
init|=
literal|0
init|;
name|docs
operator|<
name|numDocs
condition|;
name|docs
operator|++
control|)
block|{
name|builders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"idx"
argument_list|,
literal|"type"
argument_list|)
operator|.
name|setSource
argument_list|(
name|newDocBuilder
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|preparePutIndexedScript
argument_list|()
operator|.
name|setId
argument_list|(
literal|"my_script"
argument_list|)
operator|.
name|setScriptLang
argument_list|(
name|GroovyScriptEngineService
operator|.
name|NAME
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"{ \"script\": \"_value0 + _value1 + _value2\" }"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|builders
argument_list|)
expr_stmt|;
name|ensureSearchable
argument_list|()
expr_stmt|;
block|}
DECL|method|newDocBuilder
specifier|private
name|XContentBuilder
name|newDocBuilder
parameter_list|()
throws|throws
name|IOException
block|{
name|XContentBuilder
name|jsonBuilder
init|=
name|jsonBuilder
argument_list|()
decl_stmt|;
name|jsonBuilder
operator|.
name|startObject
argument_list|()
expr_stmt|;
name|jsonBuilder
operator|.
name|field
argument_list|(
name|FIELD_1_NAME
argument_list|,
name|randomIntBetween
argument_list|(
name|minNumber
argument_list|,
name|maxNumber
argument_list|)
argument_list|)
expr_stmt|;
name|jsonBuilder
operator|.
name|field
argument_list|(
name|FIELD_2_NAME
argument_list|,
name|randomIntBetween
argument_list|(
name|minNumber
argument_list|,
name|maxNumber
argument_list|)
argument_list|)
expr_stmt|;
name|jsonBuilder
operator|.
name|field
argument_list|(
name|FIELD_3_NAME
argument_list|,
name|randomIntBetween
argument_list|(
name|minNumber
argument_list|,
name|maxNumber
argument_list|)
argument_list|)
expr_stmt|;
name|jsonBuilder
operator|.
name|field
argument_list|(
name|FIELD_4_NAME
argument_list|,
name|randomIntBetween
argument_list|(
name|minNumber
argument_list|,
name|maxNumber
argument_list|)
argument_list|)
expr_stmt|;
name|jsonBuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|jsonBuilder
return|;
block|}
annotation|@
name|Test
DECL|method|inlineScript
specifier|public
name|void
name|inlineScript
parameter_list|()
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_1_NAME
argument_list|)
operator|.
name|interval
argument_list|(
name|interval
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field2Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_2_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field3Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_3_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field4Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_4_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|seriesArithmetic
argument_list|(
literal|"seriesArithmetic"
argument_list|)
operator|.
name|setBucketsPaths
argument_list|(
literal|"field2Sum"
argument_list|,
literal|"field3Sum"
argument_list|,
literal|"field4Sum"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
literal|"_value0 + _value1 + _value2"
argument_list|,
name|ScriptType
operator|.
name|INLINE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|InternalHistogram
argument_list|<
name|Bucket
argument_list|>
name|histo
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|histo
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|histo
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"histo"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|histo
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|buckets
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Histogram
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|bucket
operator|.
name|getDocCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|seriesArithmeticValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Sum
name|field2Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field2Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field2SumValue
init|=
name|field2Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field3Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field3Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field3Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field3SumValue
init|=
name|field3Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field4Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field4Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field4Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field4SumValue
init|=
name|field4Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmeticValue
argument_list|,
name|equalTo
argument_list|(
name|field2SumValue
operator|+
name|field3SumValue
operator|+
name|field4SumValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|inlineScript2
specifier|public
name|void
name|inlineScript2
parameter_list|()
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_1_NAME
argument_list|)
operator|.
name|interval
argument_list|(
name|interval
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field2Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_2_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field3Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_3_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field4Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_4_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|seriesArithmetic
argument_list|(
literal|"seriesArithmetic"
argument_list|)
operator|.
name|setBucketsPaths
argument_list|(
literal|"field2Sum"
argument_list|,
literal|"field3Sum"
argument_list|,
literal|"field4Sum"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
literal|"_value0 + _value1 / _value2"
argument_list|,
name|ScriptType
operator|.
name|INLINE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|InternalHistogram
argument_list|<
name|Bucket
argument_list|>
name|histo
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|histo
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|histo
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"histo"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|histo
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|buckets
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Histogram
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|bucket
operator|.
name|getDocCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|seriesArithmeticValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Sum
name|field2Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field2Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field2SumValue
init|=
name|field2Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field3Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field3Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field3Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field3SumValue
init|=
name|field3Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field4Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field4Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field4Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field4SumValue
init|=
name|field4Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmeticValue
argument_list|,
name|equalTo
argument_list|(
name|field2SumValue
operator|+
name|field3SumValue
operator|/
name|field4SumValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|inlineScriptSingleVariable
specifier|public
name|void
name|inlineScriptSingleVariable
parameter_list|()
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_1_NAME
argument_list|)
operator|.
name|interval
argument_list|(
name|interval
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field2Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_2_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|seriesArithmetic
argument_list|(
literal|"seriesArithmetic"
argument_list|)
operator|.
name|setBucketsPaths
argument_list|(
literal|"field2Sum"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
literal|"_value0"
argument_list|,
name|ScriptType
operator|.
name|INLINE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|InternalHistogram
argument_list|<
name|Bucket
argument_list|>
name|histo
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|histo
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|histo
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"histo"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|histo
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|buckets
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Histogram
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|bucket
operator|.
name|getDocCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|seriesArithmeticValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Sum
name|field2Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field2Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field2SumValue
init|=
name|field2Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmeticValue
argument_list|,
name|equalTo
argument_list|(
name|field2SumValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|inlineScriptNamedVars
specifier|public
name|void
name|inlineScriptNamedVars
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|bucketsPathsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|bucketsPathsMap
operator|.
name|put
argument_list|(
literal|"foo"
argument_list|,
literal|"field2Sum"
argument_list|)
expr_stmt|;
name|bucketsPathsMap
operator|.
name|put
argument_list|(
literal|"bar"
argument_list|,
literal|"field3Sum"
argument_list|)
expr_stmt|;
name|bucketsPathsMap
operator|.
name|put
argument_list|(
literal|"baz"
argument_list|,
literal|"field4Sum"
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_1_NAME
argument_list|)
operator|.
name|interval
argument_list|(
name|interval
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field2Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_2_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field3Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_3_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field4Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_4_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|seriesArithmetic
argument_list|(
literal|"seriesArithmetic"
argument_list|)
operator|.
name|setBucketsPathsMap
argument_list|(
name|bucketsPathsMap
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
literal|"foo + bar + baz"
argument_list|,
name|ScriptType
operator|.
name|INLINE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|InternalHistogram
argument_list|<
name|Bucket
argument_list|>
name|histo
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|histo
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|histo
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"histo"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|histo
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|buckets
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Histogram
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|bucket
operator|.
name|getDocCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|seriesArithmeticValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Sum
name|field2Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field2Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field2SumValue
init|=
name|field2Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field3Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field3Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field3Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field3SumValue
init|=
name|field3Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field4Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field4Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field4Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field4SumValue
init|=
name|field4Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmeticValue
argument_list|,
name|equalTo
argument_list|(
name|field2SumValue
operator|+
name|field3SumValue
operator|+
name|field4SumValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|inlineScriptWithParams
specifier|public
name|void
name|inlineScriptWithParams
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"factor"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_1_NAME
argument_list|)
operator|.
name|interval
argument_list|(
name|interval
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field2Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_2_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field3Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_3_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field4Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_4_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|seriesArithmetic
argument_list|(
literal|"seriesArithmetic"
argument_list|)
operator|.
name|setBucketsPaths
argument_list|(
literal|"field2Sum"
argument_list|,
literal|"field3Sum"
argument_list|,
literal|"field4Sum"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
literal|"(_value0 + _value1 + _value2) * factor"
argument_list|,
name|ScriptType
operator|.
name|INLINE
argument_list|,
literal|null
argument_list|,
name|params
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|InternalHistogram
argument_list|<
name|Bucket
argument_list|>
name|histo
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|histo
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|histo
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"histo"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|histo
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|buckets
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Histogram
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|bucket
operator|.
name|getDocCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|seriesArithmeticValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Sum
name|field2Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field2Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field2SumValue
init|=
name|field2Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field3Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field3Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field3Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field3SumValue
init|=
name|field3Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field4Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field4Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field4Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field4SumValue
init|=
name|field4Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmeticValue
argument_list|,
name|equalTo
argument_list|(
operator|(
name|field2SumValue
operator|+
name|field3SumValue
operator|+
name|field4SumValue
operator|)
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|inlineScriptInsertZeros
specifier|public
name|void
name|inlineScriptInsertZeros
parameter_list|()
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_1_NAME
argument_list|)
operator|.
name|interval
argument_list|(
name|interval
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field2Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_2_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field3Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_3_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field4Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_4_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|seriesArithmetic
argument_list|(
literal|"seriesArithmetic"
argument_list|)
operator|.
name|setBucketsPaths
argument_list|(
literal|"field2Sum"
argument_list|,
literal|"field3Sum"
argument_list|,
literal|"field4Sum"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
literal|"_value0 + _value1 + _value2"
argument_list|,
name|ScriptType
operator|.
name|INLINE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|gapPolicy
argument_list|(
name|GapPolicy
operator|.
name|INSERT_ZEROS
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|InternalHistogram
argument_list|<
name|Bucket
argument_list|>
name|histo
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|histo
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|histo
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"histo"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|histo
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|buckets
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Histogram
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|bucket
operator|.
name|getDocCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmeticValue
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Sum
name|field2Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field2Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field2SumValue
init|=
name|field2Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field3Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field3Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field3Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field3SumValue
init|=
name|field3Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field4Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field4Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field4Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field4SumValue
init|=
name|field4Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmeticValue
argument_list|,
name|equalTo
argument_list|(
name|field2SumValue
operator|+
name|field3SumValue
operator|+
name|field4SumValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|indexedScript
specifier|public
name|void
name|indexedScript
parameter_list|()
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_1_NAME
argument_list|)
operator|.
name|interval
argument_list|(
name|interval
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field2Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_2_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field3Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_3_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field4Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_4_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|seriesArithmetic
argument_list|(
literal|"seriesArithmetic"
argument_list|)
operator|.
name|setBucketsPaths
argument_list|(
literal|"field2Sum"
argument_list|,
literal|"field3Sum"
argument_list|,
literal|"field4Sum"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
literal|"my_script"
argument_list|,
name|ScriptType
operator|.
name|INDEXED
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|gapPolicy
argument_list|(
name|GapPolicy
operator|.
name|INSERT_ZEROS
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|InternalHistogram
argument_list|<
name|Bucket
argument_list|>
name|histo
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|histo
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|histo
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"histo"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|histo
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|buckets
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Histogram
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|bucket
operator|.
name|getDocCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmeticValue
argument_list|,
name|equalTo
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Sum
name|field2Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field2Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field2SumValue
init|=
name|field2Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field3Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field3Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field3Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field3SumValue
init|=
name|field3Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field4Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field4Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field4Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field4SumValue
init|=
name|field4Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmeticValue
argument_list|,
name|equalTo
argument_list|(
name|field2SumValue
operator|+
name|field3SumValue
operator|+
name|field4SumValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|unmapped
specifier|public
name|void
name|unmapped
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx_unmapped"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_1_NAME
argument_list|)
operator|.
name|interval
argument_list|(
name|interval
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field2Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_2_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field3Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_3_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field4Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_4_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|seriesArithmetic
argument_list|(
literal|"seriesArithmetic"
argument_list|)
operator|.
name|setBucketsPaths
argument_list|(
literal|"field2Sum"
argument_list|,
literal|"field3Sum"
argument_list|,
literal|"field4Sum"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
literal|"_value0 + _value1 + _value2"
argument_list|,
name|ScriptType
operator|.
name|INLINE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|InternalHistogram
argument_list|<
name|Bucket
argument_list|>
name|deriv
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|deriv
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|deriv
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"histo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|deriv
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|partiallyUnmapped
specifier|public
name|void
name|partiallyUnmapped
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"idx"
argument_list|,
literal|"idx_unmapped"
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|histogram
argument_list|(
literal|"histo"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_1_NAME
argument_list|)
operator|.
name|interval
argument_list|(
name|interval
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field2Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_2_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field3Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_3_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|sum
argument_list|(
literal|"field4Sum"
argument_list|)
operator|.
name|field
argument_list|(
name|FIELD_4_NAME
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|seriesArithmetic
argument_list|(
literal|"seriesArithmetic"
argument_list|)
operator|.
name|setBucketsPaths
argument_list|(
literal|"field2Sum"
argument_list|,
literal|"field3Sum"
argument_list|,
literal|"field4Sum"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
literal|"_value0 + _value1 + _value2"
argument_list|,
name|ScriptType
operator|.
name|INLINE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|InternalHistogram
argument_list|<
name|Bucket
argument_list|>
name|histo
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"histo"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|histo
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|histo
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"histo"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|histo
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|buckets
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Histogram
operator|.
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|bucket
operator|.
name|getDocCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|Double
operator|.
name|isNaN
argument_list|(
name|seriesArithmeticValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Sum
name|field2Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field2Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field2SumValue
init|=
name|field2Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field3Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field3Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field3Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field3SumValue
init|=
name|field3Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Sum
name|field4Sum
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"field4Sum"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|field4Sum
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|field4SumValue
init|=
name|field4Sum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|SimpleValue
name|seriesArithmetic
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"seriesArithmetic"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmetic
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|double
name|seriesArithmeticValue
init|=
name|seriesArithmetic
operator|.
name|value
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|seriesArithmeticValue
argument_list|,
name|equalTo
argument_list|(
name|field2SumValue
operator|+
name|field3SumValue
operator|+
name|field4SumValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

