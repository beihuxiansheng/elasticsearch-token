begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.bucket.nested
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|nested
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedNumericDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriterConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|NoMergePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|RandomIndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanClause
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|ConstantScoreQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|MatchAllDocsQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|search
operator|.
name|Queries
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MappedFieldType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|NumberFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|TypeFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|UidFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregatorTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|InternalAggregation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|max
operator|.
name|InternalMax
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|max
operator|.
name|MaxAggregationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|sum
operator|.
name|InternalSum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|sum
operator|.
name|SumAggregationBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|DoubleStream
import|;
end_import

begin_class
DECL|class|NestedAggregatorTests
specifier|public
class|class
name|NestedAggregatorTests
extends|extends
name|AggregatorTestCase
block|{
DECL|field|VALUE_FIELD_NAME
specifier|private
specifier|static
specifier|final
name|String
name|VALUE_FIELD_NAME
init|=
literal|"number"
decl_stmt|;
DECL|field|NESTED_OBJECT
specifier|private
specifier|static
specifier|final
name|String
name|NESTED_OBJECT
init|=
literal|"nested_object"
decl_stmt|;
DECL|field|NESTED_OBJECT2
specifier|private
specifier|static
specifier|final
name|String
name|NESTED_OBJECT2
init|=
literal|"nested_object2"
decl_stmt|;
DECL|field|NESTED_AGG
specifier|private
specifier|static
specifier|final
name|String
name|NESTED_AGG
init|=
literal|"nestedAgg"
decl_stmt|;
DECL|field|MAX_AGG_NAME
specifier|private
specifier|static
specifier|final
name|String
name|MAX_AGG_NAME
init|=
literal|"maxAgg"
decl_stmt|;
DECL|field|SUM_AGG_NAME
specifier|private
specifier|static
specifier|final
name|String
name|SUM_AGG_NAME
init|=
literal|"sumAgg"
decl_stmt|;
DECL|method|testNoDocs
specifier|public
name|void
name|testNoDocs
parameter_list|()
throws|throws
name|IOException
block|{
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
comment|// intentionally not writing any docs
block|}
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
init|)
block|{
name|NestedAggregationBuilder
name|nestedBuilder
init|=
operator|new
name|NestedAggregationBuilder
argument_list|(
name|NESTED_AGG
argument_list|,
name|NESTED_OBJECT
argument_list|)
decl_stmt|;
name|MaxAggregationBuilder
name|maxAgg
init|=
operator|new
name|MaxAggregationBuilder
argument_list|(
name|MAX_AGG_NAME
argument_list|)
operator|.
name|field
argument_list|(
name|VALUE_FIELD_NAME
argument_list|)
decl_stmt|;
name|nestedBuilder
operator|.
name|subAggregation
argument_list|(
name|maxAgg
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
name|VALUE_FIELD_NAME
argument_list|)
expr_stmt|;
name|Nested
name|nested
init|=
name|search
argument_list|(
name|newSearcher
argument_list|(
name|indexReader
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|,
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|nestedBuilder
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|NESTED_AGG
argument_list|,
name|nested
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|nested
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|InternalMax
name|max
init|=
call|(
name|InternalMax
call|)
argument_list|(
operator|(
name|InternalAggregation
operator|)
name|nested
argument_list|)
operator|.
name|getProperty
argument_list|(
name|MAX_AGG_NAME
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MAX_AGG_NAME
argument_list|,
name|max
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|NEGATIVE_INFINITY
argument_list|,
name|max
operator|.
name|getValue
argument_list|()
argument_list|,
name|Double
operator|.
name|MIN_VALUE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testSingleNestingMax
specifier|public
name|void
name|testSingleNestingMax
parameter_list|()
throws|throws
name|IOException
block|{
name|int
name|numRootDocs
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|int
name|expectedNestedDocs
init|=
literal|0
decl_stmt|;
name|double
name|expectedMaxValue
init|=
name|Double
operator|.
name|NEGATIVE_INFINITY
decl_stmt|;
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numRootDocs
condition|;
name|i
operator|++
control|)
block|{
name|List
argument_list|<
name|Document
argument_list|>
name|documents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|numNestedDocs
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|expectedMaxValue
operator|=
name|Math
operator|.
name|max
argument_list|(
name|expectedMaxValue
argument_list|,
name|generateMaxDocs
argument_list|(
name|documents
argument_list|,
name|numNestedDocs
argument_list|,
name|i
argument_list|,
name|NESTED_OBJECT
argument_list|,
name|VALUE_FIELD_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|expectedNestedDocs
operator|+=
name|numNestedDocs
expr_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#"
operator|+
name|i
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"test"
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocuments
argument_list|(
name|documents
argument_list|)
expr_stmt|;
block|}
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
init|)
block|{
name|NestedAggregationBuilder
name|nestedBuilder
init|=
operator|new
name|NestedAggregationBuilder
argument_list|(
name|NESTED_AGG
argument_list|,
name|NESTED_OBJECT
argument_list|)
decl_stmt|;
name|MaxAggregationBuilder
name|maxAgg
init|=
operator|new
name|MaxAggregationBuilder
argument_list|(
name|MAX_AGG_NAME
argument_list|)
operator|.
name|field
argument_list|(
name|VALUE_FIELD_NAME
argument_list|)
decl_stmt|;
name|nestedBuilder
operator|.
name|subAggregation
argument_list|(
name|maxAgg
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
name|VALUE_FIELD_NAME
argument_list|)
expr_stmt|;
name|Nested
name|nested
init|=
name|search
argument_list|(
name|newSearcher
argument_list|(
name|indexReader
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|,
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|nestedBuilder
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedNestedDocs
argument_list|,
name|nested
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NESTED_AGG
argument_list|,
name|nested
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedNestedDocs
argument_list|,
name|nested
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|InternalMax
name|max
init|=
call|(
name|InternalMax
call|)
argument_list|(
operator|(
name|InternalAggregation
operator|)
name|nested
argument_list|)
operator|.
name|getProperty
argument_list|(
name|MAX_AGG_NAME
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MAX_AGG_NAME
argument_list|,
name|max
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedMaxValue
argument_list|,
name|max
operator|.
name|getValue
argument_list|()
argument_list|,
name|Double
operator|.
name|MIN_VALUE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testDoubleNestingMax
specifier|public
name|void
name|testDoubleNestingMax
parameter_list|()
throws|throws
name|IOException
block|{
name|int
name|numRootDocs
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|int
name|expectedNestedDocs
init|=
literal|0
decl_stmt|;
name|double
name|expectedMaxValue
init|=
name|Double
operator|.
name|NEGATIVE_INFINITY
decl_stmt|;
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numRootDocs
condition|;
name|i
operator|++
control|)
block|{
name|List
argument_list|<
name|Document
argument_list|>
name|documents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|numNestedDocs
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|expectedMaxValue
operator|=
name|Math
operator|.
name|max
argument_list|(
name|expectedMaxValue
argument_list|,
name|generateMaxDocs
argument_list|(
name|documents
argument_list|,
name|numNestedDocs
argument_list|,
name|i
argument_list|,
name|NESTED_OBJECT
operator|+
literal|"."
operator|+
name|NESTED_OBJECT2
argument_list|,
name|VALUE_FIELD_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|expectedNestedDocs
operator|+=
name|numNestedDocs
expr_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#"
operator|+
name|i
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"test"
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocuments
argument_list|(
name|documents
argument_list|)
expr_stmt|;
block|}
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
init|)
block|{
name|NestedAggregationBuilder
name|nestedBuilder
init|=
operator|new
name|NestedAggregationBuilder
argument_list|(
name|NESTED_AGG
argument_list|,
name|NESTED_OBJECT
operator|+
literal|"."
operator|+
name|NESTED_OBJECT2
argument_list|)
decl_stmt|;
name|MaxAggregationBuilder
name|maxAgg
init|=
operator|new
name|MaxAggregationBuilder
argument_list|(
name|MAX_AGG_NAME
argument_list|)
operator|.
name|field
argument_list|(
name|VALUE_FIELD_NAME
argument_list|)
decl_stmt|;
name|nestedBuilder
operator|.
name|subAggregation
argument_list|(
name|maxAgg
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
name|VALUE_FIELD_NAME
argument_list|)
expr_stmt|;
name|Nested
name|nested
init|=
name|search
argument_list|(
name|newSearcher
argument_list|(
name|indexReader
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|,
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|nestedBuilder
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedNestedDocs
argument_list|,
name|nested
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NESTED_AGG
argument_list|,
name|nested
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedNestedDocs
argument_list|,
name|nested
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|InternalMax
name|max
init|=
call|(
name|InternalMax
call|)
argument_list|(
operator|(
name|InternalAggregation
operator|)
name|nested
argument_list|)
operator|.
name|getProperty
argument_list|(
name|MAX_AGG_NAME
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MAX_AGG_NAME
argument_list|,
name|max
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedMaxValue
argument_list|,
name|max
operator|.
name|getValue
argument_list|()
argument_list|,
name|Double
operator|.
name|MIN_VALUE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testOrphanedDocs
specifier|public
name|void
name|testOrphanedDocs
parameter_list|()
throws|throws
name|IOException
block|{
name|int
name|numRootDocs
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|int
name|expectedNestedDocs
init|=
literal|0
decl_stmt|;
name|double
name|expectedSum
init|=
literal|0
decl_stmt|;
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numRootDocs
condition|;
name|i
operator|++
control|)
block|{
name|List
argument_list|<
name|Document
argument_list|>
name|documents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|numNestedDocs
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|expectedSum
operator|+=
name|generateSumDocs
argument_list|(
name|documents
argument_list|,
name|numNestedDocs
argument_list|,
name|i
argument_list|,
name|NESTED_OBJECT
argument_list|,
name|VALUE_FIELD_NAME
argument_list|)
expr_stmt|;
name|expectedNestedDocs
operator|+=
name|numNestedDocs
expr_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#"
operator|+
name|i
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"test"
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocuments
argument_list|(
name|documents
argument_list|)
expr_stmt|;
block|}
comment|//add some random nested docs that don't belong
name|List
argument_list|<
name|Document
argument_list|>
name|documents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|numOrphanedDocs
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|generateSumDocs
argument_list|(
name|documents
argument_list|,
name|numOrphanedDocs
argument_list|,
literal|1234
argument_list|,
literal|"foo"
argument_list|,
name|VALUE_FIELD_NAME
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocuments
argument_list|(
name|documents
argument_list|)
expr_stmt|;
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
init|)
block|{
name|NestedAggregationBuilder
name|nestedBuilder
init|=
operator|new
name|NestedAggregationBuilder
argument_list|(
name|NESTED_AGG
argument_list|,
name|NESTED_OBJECT
argument_list|)
decl_stmt|;
name|SumAggregationBuilder
name|sumAgg
init|=
operator|new
name|SumAggregationBuilder
argument_list|(
name|SUM_AGG_NAME
argument_list|)
operator|.
name|field
argument_list|(
name|VALUE_FIELD_NAME
argument_list|)
decl_stmt|;
name|nestedBuilder
operator|.
name|subAggregation
argument_list|(
name|sumAgg
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
name|VALUE_FIELD_NAME
argument_list|)
expr_stmt|;
name|Nested
name|nested
init|=
name|search
argument_list|(
name|newSearcher
argument_list|(
name|indexReader
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|,
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|nestedBuilder
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedNestedDocs
argument_list|,
name|nested
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NESTED_AGG
argument_list|,
name|nested
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedNestedDocs
argument_list|,
name|nested
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|InternalSum
name|sum
init|=
call|(
name|InternalSum
call|)
argument_list|(
operator|(
name|InternalAggregation
operator|)
name|nested
argument_list|)
operator|.
name|getProperty
argument_list|(
name|SUM_AGG_NAME
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|SUM_AGG_NAME
argument_list|,
name|sum
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedSum
argument_list|,
name|sum
operator|.
name|getValue
argument_list|()
argument_list|,
name|Double
operator|.
name|MIN_VALUE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testResetRootDocId
specifier|public
name|void
name|testResetRootDocId
parameter_list|()
throws|throws
name|Exception
block|{
name|IndexWriterConfig
name|iwc
init|=
operator|new
name|IndexWriterConfig
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|iwc
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|,
name|iwc
argument_list|)
init|)
block|{
name|List
argument_list|<
name|Document
argument_list|>
name|documents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|// 1 segment with, 1 root document, with 3 nested sub docs
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#1"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|NESTED_FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"__nested_field"
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#1"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|NESTED_FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"__nested_field"
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#1"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|NESTED_FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"__nested_field"
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#1"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"test"
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocuments
argument_list|(
name|documents
argument_list|)
expr_stmt|;
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
name|documents
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// 1 segment with:
comment|// 1 document, with 1 nested subdoc
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#2"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|NESTED_FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"__nested_field"
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#2"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"test"
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocuments
argument_list|(
name|documents
argument_list|)
expr_stmt|;
name|documents
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// and 1 document, with 1 nested subdoc
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#3"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|NESTED_FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"__nested_field"
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#3"
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"test"
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocuments
argument_list|(
name|documents
argument_list|)
expr_stmt|;
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
init|)
block|{
name|NestedAggregationBuilder
name|nestedBuilder
init|=
operator|new
name|NestedAggregationBuilder
argument_list|(
name|NESTED_AGG
argument_list|,
literal|"nested_field"
argument_list|)
decl_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
name|VALUE_FIELD_NAME
argument_list|)
expr_stmt|;
name|BooleanQuery
operator|.
name|Builder
name|bq
init|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|bq
operator|.
name|add
argument_list|(
name|Queries
operator|.
name|newNonNestedFilter
argument_list|()
argument_list|,
name|BooleanClause
operator|.
name|Occur
operator|.
name|MUST
argument_list|)
expr_stmt|;
name|bq
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#2"
argument_list|)
argument_list|)
argument_list|,
name|BooleanClause
operator|.
name|Occur
operator|.
name|MUST_NOT
argument_list|)
expr_stmt|;
name|Nested
name|nested
init|=
name|search
argument_list|(
name|newSearcher
argument_list|(
name|indexReader
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|,
operator|new
name|ConstantScoreQuery
argument_list|(
name|bq
operator|.
name|build
argument_list|()
argument_list|)
argument_list|,
name|nestedBuilder
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|NESTED_AGG
argument_list|,
name|nested
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// The bug manifests if 6 docs are returned, because currentRootDoc isn't reset the previous child docs from the first segment are emitted as hits.
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|nested
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|generateMaxDocs
specifier|private
name|double
name|generateMaxDocs
parameter_list|(
name|List
argument_list|<
name|Document
argument_list|>
name|documents
parameter_list|,
name|int
name|numNestedDocs
parameter_list|,
name|int
name|id
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|fieldName
parameter_list|)
block|{
return|return
name|DoubleStream
operator|.
name|of
argument_list|(
name|generateDocuments
argument_list|(
name|documents
argument_list|,
name|numNestedDocs
argument_list|,
name|id
argument_list|,
name|path
argument_list|,
name|fieldName
argument_list|)
argument_list|)
operator|.
name|max
argument_list|()
operator|.
name|orElse
argument_list|(
name|Double
operator|.
name|NEGATIVE_INFINITY
argument_list|)
return|;
block|}
DECL|method|generateSumDocs
specifier|private
name|double
name|generateSumDocs
parameter_list|(
name|List
argument_list|<
name|Document
argument_list|>
name|documents
parameter_list|,
name|int
name|numNestedDocs
parameter_list|,
name|int
name|id
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|fieldName
parameter_list|)
block|{
return|return
name|DoubleStream
operator|.
name|of
argument_list|(
name|generateDocuments
argument_list|(
name|documents
argument_list|,
name|numNestedDocs
argument_list|,
name|id
argument_list|,
name|path
argument_list|,
name|fieldName
argument_list|)
argument_list|)
operator|.
name|sum
argument_list|()
return|;
block|}
DECL|method|generateDocuments
specifier|private
name|double
index|[]
name|generateDocuments
parameter_list|(
name|List
argument_list|<
name|Document
argument_list|>
name|documents
parameter_list|,
name|int
name|numNestedDocs
parameter_list|,
name|int
name|id
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|fieldName
parameter_list|)
block|{
name|double
index|[]
name|values
init|=
operator|new
name|double
index|[
name|numNestedDocs
index|]
decl_stmt|;
for|for
control|(
name|int
name|nested
init|=
literal|0
init|;
name|nested
operator|<
name|numNestedDocs
condition|;
name|nested
operator|++
control|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
literal|"type#"
operator|+
name|id
argument_list|,
name|UidFieldMapper
operator|.
name|Defaults
operator|.
name|NESTED_FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
literal|"__"
operator|+
name|path
argument_list|,
name|TypeFieldMapper
operator|.
name|Defaults
operator|.
name|FIELD_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|long
name|value
init|=
name|randomNonNegativeLong
argument_list|()
operator|%
literal|10000
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
name|fieldName
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|documents
operator|.
name|add
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|values
index|[
name|nested
index|]
operator|=
name|value
expr_stmt|;
block|}
return|return
name|values
return|;
block|}
block|}
end_class

end_unit

