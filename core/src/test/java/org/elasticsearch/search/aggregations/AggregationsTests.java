begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|NamedXContentRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|search
operator|.
name|RestSearchAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|filter
operator|.
name|InternalFilterTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|geogrid
operator|.
name|InternalGeoHashGridTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|global
operator|.
name|InternalGlobalTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|histogram
operator|.
name|InternalDateHistogramTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|histogram
operator|.
name|InternalHistogramTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|missing
operator|.
name|InternalMissingTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|nested
operator|.
name|InternalNestedTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|nested
operator|.
name|InternalReverseNestedTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|range
operator|.
name|InternalRangeTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|range
operator|.
name|date
operator|.
name|InternalDateRangeTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|range
operator|.
name|geodistance
operator|.
name|InternalGeoDistanceTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|sampler
operator|.
name|InternalSamplerTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|DoubleTermsTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|LongTermsTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|StringTermsTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|InternalExtendedStatsTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|InternalMaxTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|InternalStatsBucketTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|InternalStatsTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|avg
operator|.
name|InternalAvgTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|cardinality
operator|.
name|InternalCardinalityTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|geobounds
operator|.
name|InternalGeoBoundsTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|geocentroid
operator|.
name|InternalGeoCentroidTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|min
operator|.
name|InternalMinTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|percentiles
operator|.
name|hdr
operator|.
name|InternalHDRPercentilesRanksTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|percentiles
operator|.
name|hdr
operator|.
name|InternalHDRPercentilesTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|percentiles
operator|.
name|tdigest
operator|.
name|InternalTDigestPercentilesRanksTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|percentiles
operator|.
name|tdigest
operator|.
name|InternalTDigestPercentilesTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|sum
operator|.
name|InternalSumTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|valuecount
operator|.
name|InternalValueCountTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
operator|.
name|InternalSimpleValueTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
operator|.
name|bucketmetrics
operator|.
name|InternalBucketMetricValueTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
operator|.
name|bucketmetrics
operator|.
name|percentile
operator|.
name|InternalPercentilesBucketTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
operator|.
name|bucketmetrics
operator|.
name|stats
operator|.
name|extended
operator|.
name|InternalExtendedStatsBucketTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
operator|.
name|derivative
operator|.
name|InternalDerivativeTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|InternalAggregationTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singletonMap
import|;
end_import

begin_comment
comment|/**  * This class tests that aggregations parsing works properly. It checks that we can parse  * different aggregations and adds sub-aggregations where applicable.  *  */
end_comment

begin_class
DECL|class|AggregationsTests
specifier|public
class|class
name|AggregationsTests
extends|extends
name|ESTestCase
block|{
DECL|field|aggsTests
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|InternalAggregationTestCase
argument_list|>
name|aggsTests
init|=
name|getAggsTests
argument_list|()
decl_stmt|;
DECL|method|getAggsTests
specifier|private
specifier|static
name|List
argument_list|<
name|InternalAggregationTestCase
argument_list|>
name|getAggsTests
parameter_list|()
block|{
name|List
argument_list|<
name|InternalAggregationTestCase
argument_list|>
name|aggsTests
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalCardinalityTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalTDigestPercentilesTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalTDigestPercentilesRanksTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalHDRPercentilesTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalHDRPercentilesRanksTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalPercentilesBucketTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalMinTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalMaxTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalAvgTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalSumTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalValueCountTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalSimpleValueTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalDerivativeTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalBucketMetricValueTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalStatsTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalStatsBucketTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalExtendedStatsTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalExtendedStatsBucketTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalGeoBoundsTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalGeoCentroidTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalHistogramTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalDateHistogramTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|LongTermsTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|DoubleTermsTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|StringTermsTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalMissingTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalNestedTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalReverseNestedTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalGlobalTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalFilterTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalSamplerTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalGeoHashGridTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalRangeTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalDateRangeTests
argument_list|()
argument_list|)
expr_stmt|;
name|aggsTests
operator|.
name|add
argument_list|(
operator|new
name|InternalGeoDistanceTests
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|aggsTests
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|xContentRegistry
specifier|protected
name|NamedXContentRegistry
name|xContentRegistry
parameter_list|()
block|{
return|return
operator|new
name|NamedXContentRegistry
argument_list|(
name|InternalAggregationTestCase
operator|.
name|getDefaultNamedXContents
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Before
DECL|method|init
specifier|public
name|void
name|init
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|InternalAggregationTestCase
name|aggsTest
range|:
name|aggsTests
control|)
block|{
name|aggsTest
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|After
DECL|method|cleanUp
specifier|public
name|void
name|cleanUp
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|InternalAggregationTestCase
name|aggsTest
range|:
name|aggsTests
control|)
block|{
name|aggsTest
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testAllAggsAreBeingTested
specifier|public
name|void
name|testAllAggsAreBeingTested
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|InternalAggregationTestCase
operator|.
name|getDefaultNamedXContents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|aggsTests
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|aggs
init|=
name|aggsTests
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
parameter_list|(
name|testCase
parameter_list|)
lambda|->
name|testCase
operator|.
name|createTestInstance
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toSet
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|NamedXContentRegistry
operator|.
name|Entry
name|entry
range|:
name|InternalAggregationTestCase
operator|.
name|getDefaultNamedXContents
argument_list|()
control|)
block|{
name|assertTrue
argument_list|(
name|aggs
operator|.
name|contains
argument_list|(
name|entry
operator|.
name|name
operator|.
name|getPreferredName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testFromXContent
specifier|public
name|void
name|testFromXContent
parameter_list|()
throws|throws
name|IOException
block|{
name|XContentType
name|xContentType
init|=
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|ToXContent
operator|.
name|Params
name|params
init|=
operator|new
name|ToXContent
operator|.
name|MapParams
argument_list|(
name|singletonMap
argument_list|(
name|RestSearchAction
operator|.
name|TYPED_KEYS_PARAM
argument_list|,
literal|"true"
argument_list|)
argument_list|)
decl_stmt|;
name|Aggregations
name|aggregations
init|=
name|createTestInstance
argument_list|()
decl_stmt|;
name|BytesReference
name|originalBytes
init|=
name|toShuffledXContent
argument_list|(
name|aggregations
argument_list|,
name|xContentType
argument_list|,
name|params
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|XContentParser
name|parser
init|=
name|createParser
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|,
name|originalBytes
argument_list|)
init|)
block|{
name|assertEquals
argument_list|(
name|XContentParser
operator|.
name|Token
operator|.
name|START_OBJECT
argument_list|,
name|parser
operator|.
name|nextToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|XContentParser
operator|.
name|Token
operator|.
name|FIELD_NAME
argument_list|,
name|parser
operator|.
name|nextToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Aggregations
operator|.
name|AGGREGATIONS_FIELD
argument_list|,
name|parser
operator|.
name|currentName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|XContentParser
operator|.
name|Token
operator|.
name|START_OBJECT
argument_list|,
name|parser
operator|.
name|nextToken
argument_list|()
argument_list|)
expr_stmt|;
name|Aggregations
name|parsedAggregations
init|=
name|Aggregations
operator|.
name|fromXContent
argument_list|(
name|parser
argument_list|)
decl_stmt|;
name|BytesReference
name|parsedBytes
init|=
name|XContentHelper
operator|.
name|toXContent
argument_list|(
name|parsedAggregations
argument_list|,
name|xContentType
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
decl_stmt|;
name|ElasticsearchAssertions
operator|.
name|assertToXContentEquivalent
argument_list|(
name|originalBytes
argument_list|,
name|parsedBytes
argument_list|,
name|xContentType
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createTestInstance
specifier|private
specifier|static
name|InternalAggregations
name|createTestInstance
parameter_list|()
block|{
return|return
name|createTestInstance
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
return|;
block|}
DECL|method|createTestInstance
specifier|private
specifier|static
name|InternalAggregations
name|createTestInstance
parameter_list|(
specifier|final
name|int
name|minNumAggs
parameter_list|,
specifier|final
name|int
name|currentDepth
parameter_list|,
specifier|final
name|int
name|maxDepth
parameter_list|)
block|{
name|int
name|numAggs
init|=
name|randomIntBetween
argument_list|(
name|minNumAggs
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|InternalAggregation
argument_list|>
name|aggs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|numAggs
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numAggs
condition|;
name|i
operator|++
control|)
block|{
name|InternalAggregationTestCase
name|testCase
init|=
name|randomFrom
argument_list|(
name|aggsTests
argument_list|)
decl_stmt|;
if|if
condition|(
name|testCase
operator|instanceof
name|InternalMultiBucketAggregationTestCase
condition|)
block|{
name|InternalMultiBucketAggregationTestCase
name|multiBucketAggTestCase
init|=
operator|(
name|InternalMultiBucketAggregationTestCase
operator|)
name|testCase
decl_stmt|;
if|if
condition|(
name|currentDepth
operator|<
name|maxDepth
condition|)
block|{
name|multiBucketAggTestCase
operator|.
name|subAggregationsSupplier
operator|=
parameter_list|()
lambda|->
name|createTestInstance
argument_list|(
literal|0
argument_list|,
name|currentDepth
operator|+
literal|1
argument_list|,
name|maxDepth
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|multiBucketAggTestCase
operator|.
name|subAggregationsSupplier
operator|=
parameter_list|()
lambda|->
name|InternalAggregations
operator|.
name|EMPTY
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|testCase
operator|instanceof
name|InternalSingleBucketAggregationTestCase
condition|)
block|{
name|InternalSingleBucketAggregationTestCase
name|singleBucketAggTestCase
init|=
operator|(
name|InternalSingleBucketAggregationTestCase
operator|)
name|testCase
decl_stmt|;
if|if
condition|(
name|currentDepth
operator|<
name|maxDepth
condition|)
block|{
name|singleBucketAggTestCase
operator|.
name|subAggregationsSupplier
operator|=
parameter_list|()
lambda|->
name|createTestInstance
argument_list|(
literal|0
argument_list|,
name|currentDepth
operator|+
literal|1
argument_list|,
name|maxDepth
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|singleBucketAggTestCase
operator|.
name|subAggregationsSupplier
operator|=
parameter_list|()
lambda|->
name|InternalAggregations
operator|.
name|EMPTY
expr_stmt|;
block|}
block|}
name|aggs
operator|.
name|add
argument_list|(
name|testCase
operator|.
name|createTestInstance
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|InternalAggregations
argument_list|(
name|aggs
argument_list|)
return|;
block|}
block|}
end_class

end_unit

