begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.bucket.terms
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|InetAddressPoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|NumericDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedNumericDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedSetDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexableField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|RandomIndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|MatchAllDocsQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|NumericUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|network
operator|.
name|InetAddresses
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|MockBigArrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|IpFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|KeywordFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MappedFieldType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|NumberFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|breaker
operator|.
name|NoneCircuitBreakerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|Aggregator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregatorTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|BucketOrder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|InternalAggregation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|filter
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|filter
operator|.
name|FilterAggregationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|support
operator|.
name|IncludeExclude
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|support
operator|.
name|ValueType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|BiFunction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|instanceOf
import|;
end_import

begin_class
DECL|class|TermsAggregatorTests
specifier|public
class|class
name|TermsAggregatorTests
extends|extends
name|AggregatorTestCase
block|{
DECL|method|testGlobalOrdinalsExecutionHint
specifier|public
name|void
name|testGlobalOrdinalsExecutionHint
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
decl_stmt|;
name|indexWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|IndexReader
name|indexReader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
decl_stmt|;
comment|// We do not use LuceneTestCase.newSearcher because we need a DirectoryReader
name|IndexSearcher
name|indexSearcher
init|=
operator|new
name|IndexSearcher
argument_list|(
name|indexReader
argument_list|)
decl_stmt|;
name|TermsAggregationBuilder
name|aggregationBuilder
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|field
argument_list|(
literal|"string"
argument_list|)
operator|.
name|collectMode
argument_list|(
name|Aggregator
operator|.
name|SubAggCollectionMode
operator|.
name|BREADTH_FIRST
argument_list|)
decl_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|KeywordFieldMapper
operator|.
name|KeywordFieldType
argument_list|()
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|fieldType
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|TermsAggregator
name|aggregator
init|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|aggregator
argument_list|,
name|instanceOf
argument_list|(
name|GlobalOrdinalsStringTermsAggregator
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|GlobalOrdinalsStringTermsAggregator
name|globalAgg
init|=
operator|(
name|GlobalOrdinalsStringTermsAggregator
operator|)
name|aggregator
decl_stmt|;
name|assertFalse
argument_list|(
name|globalAgg
operator|.
name|remapGlobalOrds
argument_list|()
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|.
name|subAggregation
argument_list|(
name|AggregationBuilders
operator|.
name|cardinality
argument_list|(
literal|"card"
argument_list|)
operator|.
name|field
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregator
argument_list|,
name|instanceOf
argument_list|(
name|GlobalOrdinalsStringTermsAggregator
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|globalAgg
operator|=
operator|(
name|GlobalOrdinalsStringTermsAggregator
operator|)
name|aggregator
expr_stmt|;
name|assertFalse
argument_list|(
name|globalAgg
operator|.
name|remapGlobalOrds
argument_list|()
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|aggregation
argument_list|(
literal|"card"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregator
argument_list|,
name|instanceOf
argument_list|(
name|GlobalOrdinalsStringTermsAggregator
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|globalAgg
operator|=
operator|(
name|GlobalOrdinalsStringTermsAggregator
operator|)
name|aggregator
expr_stmt|;
name|assertTrue
argument_list|(
name|globalAgg
operator|.
name|remapGlobalOrds
argument_list|()
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|field
argument_list|(
literal|"string"
argument_list|)
operator|.
name|executionHint
argument_list|(
literal|"global_ordinals_hash"
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|aggregator
argument_list|,
name|instanceOf
argument_list|(
name|GlobalOrdinalsStringTermsAggregator
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|globalAgg
operator|=
operator|(
name|GlobalOrdinalsStringTermsAggregator
operator|)
name|aggregator
expr_stmt|;
name|assertTrue
argument_list|(
name|globalAgg
operator|.
name|remapGlobalOrds
argument_list|()
argument_list|)
expr_stmt|;
name|indexReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|directory
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testSimple
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|Exception
block|{
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"string"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"a"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"string"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"string"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"c"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"string"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"a"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"string"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"string"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"d"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|maybeWrapReaderEs
argument_list|(
name|indexWriter
operator|.
name|getReader
argument_list|()
argument_list|)
init|)
block|{
name|IndexSearcher
name|indexSearcher
init|=
name|newIndexSearcher
argument_list|(
name|indexReader
argument_list|)
decl_stmt|;
for|for
control|(
name|TermsAggregatorFactory
operator|.
name|ExecutionMode
name|executionMode
range|:
name|TermsAggregatorFactory
operator|.
name|ExecutionMode
operator|.
name|values
argument_list|()
control|)
block|{
name|TermsAggregationBuilder
name|aggregationBuilder
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionMode
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|field
argument_list|(
literal|"string"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|KeywordFieldMapper
operator|.
name|KeywordFieldType
argument_list|()
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|fieldType
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|TermsAggregator
name|aggregator
init|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|Terms
name|result
init|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
DECL|method|testStringIncludeExclude
specifier|public
name|void
name|testStringIncludeExclude
parameter_list|()
throws|throws
name|Exception
block|{
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val000"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val001"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"sv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val001"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val002"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val003"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"sv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val003"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val004"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val005"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"sv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val005"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val006"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val007"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"sv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val007"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val008"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val009"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"sv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val009"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val010"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"mv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val011"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"sv_field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"val011"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|maybeWrapReaderEs
argument_list|(
name|indexWriter
operator|.
name|getReader
argument_list|()
argument_list|)
init|)
block|{
name|IndexSearcher
name|indexSearcher
init|=
name|newIndexSearcher
argument_list|(
name|indexReader
argument_list|)
decl_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|KeywordFieldMapper
operator|.
name|KeywordFieldType
argument_list|()
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
literal|"mv_field"
argument_list|)
expr_stmt|;
name|fieldType
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|executionHint
init|=
name|randomFrom
argument_list|(
name|TermsAggregatorFactory
operator|.
name|ExecutionMode
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|TermsAggregationBuilder
name|aggregationBuilder
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|includeExclude
argument_list|(
operator|new
name|IncludeExclude
argument_list|(
literal|"val00.+"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"mv_field"
argument_list|)
operator|.
name|size
argument_list|(
literal|12
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|Aggregator
name|aggregator
init|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|Terms
name|result
init|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val000"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val001"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val002"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val003"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val004"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val005"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val006"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val007"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val008"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|8
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|8
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val009"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|9
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|9
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType2
init|=
operator|new
name|KeywordFieldMapper
operator|.
name|KeywordFieldType
argument_list|()
decl_stmt|;
name|fieldType2
operator|.
name|setName
argument_list|(
literal|"sv_field"
argument_list|)
expr_stmt|;
name|fieldType2
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|includeExclude
argument_list|(
operator|new
name|IncludeExclude
argument_list|(
literal|"val00.+"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"sv_field"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType2
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val001"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val003"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val005"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val007"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val009"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|includeExclude
argument_list|(
operator|new
name|IncludeExclude
argument_list|(
literal|"val00.+"
argument_list|,
literal|"(val000|val001)"
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"mv_field"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val002"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val003"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val004"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val005"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val006"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val007"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val008"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val009"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|includeExclude
argument_list|(
operator|new
name|IncludeExclude
argument_list|(
literal|null
argument_list|,
literal|"val00.+"
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"mv_field"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val010"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val011"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|includeExclude
argument_list|(
operator|new
name|IncludeExclude
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"val000"
block|,
literal|"val010"
block|}
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"mv_field"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val000"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val010"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|includeExclude
argument_list|(
operator|new
name|IncludeExclude
argument_list|(
literal|null
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"val001"
block|,
literal|"val002"
block|,
literal|"val003"
block|,
literal|"val004"
block|,
literal|"val005"
block|,
literal|"val006"
block|,
literal|"val007"
block|,
literal|"val008"
block|,
literal|"val009"
block|,
literal|"val011"
block|}
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"mv_field"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val000"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"val010"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
DECL|method|testNumericIncludeExclude
specifier|public
name|void
name|testNumericIncludeExclude
parameter_list|()
throws|throws
name|Exception
block|{
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"long_field"
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"double_field"
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
literal|0.0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"long_field"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"double_field"
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
literal|1.0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"long_field"
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"double_field"
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
literal|2.0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"long_field"
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"double_field"
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
literal|3.0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"long_field"
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"double_field"
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
literal|4.0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"long_field"
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"double_field"
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
literal|5.0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|maybeWrapReaderEs
argument_list|(
name|indexWriter
operator|.
name|getReader
argument_list|()
argument_list|)
init|)
block|{
name|IndexSearcher
name|indexSearcher
init|=
name|newIndexSearcher
argument_list|(
name|indexReader
argument_list|)
decl_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
literal|"long_field"
argument_list|)
expr_stmt|;
name|fieldType
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|executionHint
init|=
name|randomFrom
argument_list|(
name|TermsAggregatorFactory
operator|.
name|ExecutionMode
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|TermsAggregationBuilder
name|aggregationBuilder
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|LONG
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|includeExclude
argument_list|(
operator|new
name|IncludeExclude
argument_list|(
operator|new
name|long
index|[]
block|{
literal|0
block|,
literal|5
block|}
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"long_field"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|Aggregator
name|aggregator
init|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|Terms
name|result
init|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|LONG
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|includeExclude
argument_list|(
operator|new
name|IncludeExclude
argument_list|(
literal|null
argument_list|,
operator|new
name|long
index|[]
block|{
literal|0
block|,
literal|5
block|}
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"long_field"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|fieldType
operator|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|DOUBLE
argument_list|)
expr_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
literal|"double_field"
argument_list|)
expr_stmt|;
name|fieldType
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|DOUBLE
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|includeExclude
argument_list|(
operator|new
name|IncludeExclude
argument_list|(
operator|new
name|double
index|[]
block|{
literal|0.0
block|,
literal|5.0
block|}
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"double_field"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0.0
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5.0
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|DOUBLE
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|includeExclude
argument_list|(
operator|new
name|IncludeExclude
argument_list|(
literal|null
argument_list|,
operator|new
name|double
index|[]
block|{
literal|0.0
block|,
literal|5.0
block|}
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"double_field"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.0
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2.0
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3.0
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4.0
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
DECL|method|testStringTermsAggregator
specifier|public
name|void
name|testStringTermsAggregator
parameter_list|()
throws|throws
name|Exception
block|{
name|BiFunction
argument_list|<
name|String
argument_list|,
name|Boolean
argument_list|,
name|IndexableField
argument_list|>
name|luceneFieldFactory
init|=
parameter_list|(
name|val
parameter_list|,
name|mv
parameter_list|)
lambda|->
block|{
if|if
condition|(
name|mv
condition|)
block|{
return|return
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|val
argument_list|)
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|SortedDocValuesField
argument_list|(
literal|"field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|val
argument_list|)
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|KeywordFieldMapper
operator|.
name|KeywordFieldType
argument_list|()
decl_stmt|;
name|termsAggregator
argument_list|(
name|ValueType
operator|.
name|STRING
argument_list|,
name|fieldType
argument_list|,
name|i
lambda|->
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
name|String
operator|::
name|compareTo
argument_list|,
name|luceneFieldFactory
argument_list|)
expr_stmt|;
name|termsAggregatorWithNestedMaxAgg
argument_list|(
name|ValueType
operator|.
name|STRING
argument_list|,
name|fieldType
argument_list|,
name|i
lambda|->
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
name|val
lambda|->
operator|new
name|SortedDocValuesField
argument_list|(
literal|"field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|val
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testLongTermsAggregator
specifier|public
name|void
name|testLongTermsAggregator
parameter_list|()
throws|throws
name|Exception
block|{
name|BiFunction
argument_list|<
name|Long
argument_list|,
name|Boolean
argument_list|,
name|IndexableField
argument_list|>
name|luceneFieldFactory
init|=
parameter_list|(
name|val
parameter_list|,
name|mv
parameter_list|)
lambda|->
block|{
if|if
condition|(
name|mv
condition|)
block|{
return|return
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"field"
argument_list|,
name|val
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|NumericDocValuesField
argument_list|(
literal|"field"
argument_list|,
name|val
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|termsAggregator
argument_list|(
name|ValueType
operator|.
name|LONG
argument_list|,
name|fieldType
argument_list|,
name|Integer
operator|::
name|longValue
argument_list|,
name|Long
operator|::
name|compareTo
argument_list|,
name|luceneFieldFactory
argument_list|)
expr_stmt|;
name|termsAggregatorWithNestedMaxAgg
argument_list|(
name|ValueType
operator|.
name|LONG
argument_list|,
name|fieldType
argument_list|,
name|Integer
operator|::
name|longValue
argument_list|,
name|val
lambda|->
operator|new
name|NumericDocValuesField
argument_list|(
literal|"field"
argument_list|,
name|val
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDoubleTermsAggregator
specifier|public
name|void
name|testDoubleTermsAggregator
parameter_list|()
throws|throws
name|Exception
block|{
name|BiFunction
argument_list|<
name|Double
argument_list|,
name|Boolean
argument_list|,
name|IndexableField
argument_list|>
name|luceneFieldFactory
init|=
parameter_list|(
name|val
parameter_list|,
name|mv
parameter_list|)
lambda|->
block|{
if|if
condition|(
name|mv
condition|)
block|{
return|return
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"field"
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
name|val
argument_list|)
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|NumericDocValuesField
argument_list|(
literal|"field"
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
name|val
argument_list|)
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|DOUBLE
argument_list|)
decl_stmt|;
name|termsAggregator
argument_list|(
name|ValueType
operator|.
name|DOUBLE
argument_list|,
name|fieldType
argument_list|,
name|Integer
operator|::
name|doubleValue
argument_list|,
name|Double
operator|::
name|compareTo
argument_list|,
name|luceneFieldFactory
argument_list|)
expr_stmt|;
name|termsAggregatorWithNestedMaxAgg
argument_list|(
name|ValueType
operator|.
name|DOUBLE
argument_list|,
name|fieldType
argument_list|,
name|Integer
operator|::
name|doubleValue
argument_list|,
name|val
lambda|->
operator|new
name|NumericDocValuesField
argument_list|(
literal|"field"
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
name|val
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testIpTermsAggregator
specifier|public
name|void
name|testIpTermsAggregator
parameter_list|()
throws|throws
name|Exception
block|{
name|BiFunction
argument_list|<
name|InetAddress
argument_list|,
name|Boolean
argument_list|,
name|IndexableField
argument_list|>
name|luceneFieldFactory
init|=
parameter_list|(
name|val
parameter_list|,
name|mv
parameter_list|)
lambda|->
block|{
if|if
condition|(
name|mv
condition|)
block|{
return|return
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|InetAddressPoint
operator|.
name|encode
argument_list|(
name|val
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|SortedDocValuesField
argument_list|(
literal|"field"
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|InetAddressPoint
operator|.
name|encode
argument_list|(
name|val
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|InetAddress
index|[]
name|base
init|=
operator|new
name|InetAddress
index|[]
block|{
name|InetAddresses
operator|.
name|forString
argument_list|(
literal|"192.168.0.0"
argument_list|)
block|}
decl_stmt|;
name|Comparator
argument_list|<
name|InetAddress
argument_list|>
name|comparator
init|=
parameter_list|(
name|o1
parameter_list|,
name|o2
parameter_list|)
lambda|->
block|{
name|BytesRef
name|b1
init|=
operator|new
name|BytesRef
argument_list|(
name|InetAddressPoint
operator|.
name|encode
argument_list|(
name|o1
argument_list|)
argument_list|)
decl_stmt|;
name|BytesRef
name|b2
init|=
operator|new
name|BytesRef
argument_list|(
name|InetAddressPoint
operator|.
name|encode
argument_list|(
name|o2
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|b1
operator|.
name|compareTo
argument_list|(
name|b2
argument_list|)
return|;
block|}
decl_stmt|;
name|termsAggregator
argument_list|(
name|ValueType
operator|.
name|IP
argument_list|,
operator|new
name|IpFieldMapper
operator|.
name|IpFieldType
argument_list|()
argument_list|,
name|i
lambda|->
block|{
return|return
name|base
index|[
literal|0
index|]
operator|=
name|InetAddressPoint
operator|.
name|nextUp
argument_list|(
name|base
index|[
literal|0
index|]
argument_list|)
return|;
block|}
argument_list|,
name|comparator
argument_list|,
name|luceneFieldFactory
argument_list|)
expr_stmt|;
block|}
DECL|method|termsAggregator
specifier|private
parameter_list|<
name|T
parameter_list|>
name|void
name|termsAggregator
parameter_list|(
name|ValueType
name|valueType
parameter_list|,
name|MappedFieldType
name|fieldType
parameter_list|,
name|Function
argument_list|<
name|Integer
argument_list|,
name|T
argument_list|>
name|valueFactory
parameter_list|,
name|Comparator
argument_list|<
name|T
argument_list|>
name|keyComparator
parameter_list|,
name|BiFunction
argument_list|<
name|T
argument_list|,
name|Boolean
argument_list|,
name|IndexableField
argument_list|>
name|luceneFieldFactory
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
name|counts
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
name|filteredCounts
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|numTerms
init|=
name|scaledRandomIntBetween
argument_list|(
literal|8
argument_list|,
literal|128
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numTerms
condition|;
name|i
operator|++
control|)
block|{
name|int
name|numDocs
init|=
name|scaledRandomIntBetween
argument_list|(
literal|2
argument_list|,
literal|32
argument_list|)
decl_stmt|;
name|T
name|key
init|=
name|valueFactory
operator|.
name|apply
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|counts
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|numDocs
argument_list|)
expr_stmt|;
name|filteredCounts
operator|.
name|put
argument_list|(
name|key
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
name|boolean
name|multiValued
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
try|try
init|(
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
if|if
condition|(
name|multiValued
operator|==
literal|false
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
name|entry
range|:
name|counts
operator|.
name|entrySet
argument_list|()
control|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|entry
operator|.
name|getValue
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
name|luceneFieldFactory
operator|.
name|apply
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|document
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"include"
argument_list|,
literal|"yes"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|filteredCounts
operator|.
name|computeIfPresent
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
parameter_list|(
name|key
parameter_list|,
name|integer
parameter_list|)
lambda|->
name|integer
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|Iterator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
argument_list|>
name|iterator
init|=
name|counts
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
name|entry1
init|=
name|iterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
name|entry2
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
operator|&&
name|iterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|entry2
operator|=
name|iterator
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|entry1
operator|.
name|getValue
argument_list|()
operator|.
name|compareTo
argument_list|(
name|entry2
operator|.
name|getValue
argument_list|()
argument_list|)
operator|<
literal|0
condition|)
block|{
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
name|temp
init|=
name|entry1
decl_stmt|;
name|entry1
operator|=
name|entry2
expr_stmt|;
name|entry2
operator|=
name|temp
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|entry1
operator|.
name|getValue
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
name|luceneFieldFactory
operator|.
name|apply
argument_list|(
name|entry1
operator|.
name|getKey
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|entry2
operator|!=
literal|null
operator|&&
name|i
operator|<
name|entry2
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|document
operator|.
name|add
argument_list|(
name|luceneFieldFactory
operator|.
name|apply
argument_list|(
name|entry2
operator|.
name|getKey
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
block|}
block|}
block|}
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|maybeWrapReaderEs
argument_list|(
name|indexWriter
operator|.
name|getReader
argument_list|()
argument_list|)
init|)
block|{
name|boolean
name|order
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
argument_list|>
name|expectedBuckets
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|expectedBuckets
operator|.
name|addAll
argument_list|(
name|counts
operator|.
name|entrySet
argument_list|()
argument_list|)
expr_stmt|;
name|BucketOrder
name|bucketOrder
decl_stmt|;
name|Comparator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
argument_list|>
name|comparator
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|bucketOrder
operator|=
name|BucketOrder
operator|.
name|key
argument_list|(
name|order
argument_list|)
expr_stmt|;
name|comparator
operator|=
name|Comparator
operator|.
name|comparing
argument_list|(
name|Map
operator|.
name|Entry
operator|::
name|getKey
argument_list|,
name|keyComparator
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// if order by count then we need to use compound so that we can also sort by key as tie breaker:
name|bucketOrder
operator|=
name|BucketOrder
operator|.
name|compound
argument_list|(
name|BucketOrder
operator|.
name|count
argument_list|(
name|order
argument_list|)
argument_list|,
name|BucketOrder
operator|.
name|key
argument_list|(
name|order
argument_list|)
argument_list|)
expr_stmt|;
name|comparator
operator|=
name|Comparator
operator|.
name|comparing
argument_list|(
name|Map
operator|.
name|Entry
operator|::
name|getValue
argument_list|)
expr_stmt|;
name|comparator
operator|=
name|comparator
operator|.
name|thenComparing
argument_list|(
name|Comparator
operator|.
name|comparing
argument_list|(
name|Map
operator|.
name|Entry
operator|::
name|getKey
argument_list|,
name|keyComparator
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|order
operator|==
literal|false
condition|)
block|{
name|comparator
operator|=
name|comparator
operator|.
name|reversed
argument_list|()
expr_stmt|;
block|}
name|expectedBuckets
operator|.
name|sort
argument_list|(
name|comparator
argument_list|)
expr_stmt|;
name|int
name|size
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
name|counts
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|executionHint
init|=
name|randomFrom
argument_list|(
name|TermsAggregatorFactory
operator|.
name|ExecutionMode
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"bucket_order={} size={} execution_hint={}"
argument_list|,
name|bucketOrder
argument_list|,
name|size
argument_list|,
name|executionHint
argument_list|)
expr_stmt|;
name|IndexSearcher
name|indexSearcher
init|=
name|newIndexSearcher
argument_list|(
name|indexReader
argument_list|)
decl_stmt|;
name|AggregationBuilder
name|aggregationBuilder
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|valueType
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|size
argument_list|(
name|size
argument_list|)
operator|.
name|shardSize
argument_list|(
name|size
argument_list|)
operator|.
name|field
argument_list|(
literal|"field"
argument_list|)
operator|.
name|order
argument_list|(
name|bucketOrder
argument_list|)
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
literal|"field"
argument_list|)
expr_stmt|;
name|fieldType
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Aggregator
name|aggregator
init|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|Terms
name|result
init|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|size
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
name|expected
init|=
name|expectedBuckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|Terms
operator|.
name|Bucket
name|actual
init|=
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|valueType
operator|==
name|ValueType
operator|.
name|IP
condition|)
block|{
name|assertEquals
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|expected
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|,
name|actual
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|expected
operator|.
name|getKey
argument_list|()
argument_list|,
name|actual
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|expected
operator|.
name|getValue
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|,
name|actual
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|multiValued
operator|==
literal|false
condition|)
block|{
name|aggregationBuilder
operator|=
operator|new
name|FilterAggregationBuilder
argument_list|(
literal|"_name1"
argument_list|,
name|QueryBuilders
operator|.
name|termQuery
argument_list|(
literal|"include"
argument_list|,
literal|"yes"
argument_list|)
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|.
name|subAggregation
argument_list|(
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name2"
argument_list|,
name|valueType
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|size
argument_list|(
name|numTerms
argument_list|)
operator|.
name|collectMode
argument_list|(
name|randomFrom
argument_list|(
name|Aggregator
operator|.
name|SubAggCollectionMode
operator|.
name|values
argument_list|()
argument_list|)
argument_list|)
operator|.
name|field
argument_list|(
literal|"field"
argument_list|)
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
operator|(
name|Filter
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
operator|)
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"_name2"
argument_list|)
expr_stmt|;
name|int
name|expectedFilteredCounts
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Integer
name|count
range|:
name|filteredCounts
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|count
operator|>
literal|0
condition|)
block|{
name|expectedFilteredCounts
operator|++
expr_stmt|;
block|}
block|}
name|assertEquals
argument_list|(
name|expectedFilteredCounts
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Terms
operator|.
name|Bucket
name|actual
range|:
name|result
operator|.
name|getBuckets
argument_list|()
control|)
block|{
name|Integer
name|expectedCount
decl_stmt|;
if|if
condition|(
name|valueType
operator|==
name|ValueType
operator|.
name|IP
condition|)
block|{
name|expectedCount
operator|=
name|filteredCounts
operator|.
name|get
argument_list|(
name|InetAddresses
operator|.
name|forString
argument_list|(
operator|(
name|String
operator|)
name|actual
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|expectedCount
operator|=
name|filteredCounts
operator|.
name|get
argument_list|(
name|actual
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|expectedCount
operator|.
name|longValue
argument_list|()
argument_list|,
name|actual
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
DECL|method|termsAggregatorWithNestedMaxAgg
specifier|private
parameter_list|<
name|T
parameter_list|>
name|void
name|termsAggregatorWithNestedMaxAgg
parameter_list|(
name|ValueType
name|valueType
parameter_list|,
name|MappedFieldType
name|fieldType
parameter_list|,
name|Function
argument_list|<
name|Integer
argument_list|,
name|T
argument_list|>
name|valueFactory
parameter_list|,
name|Function
argument_list|<
name|T
argument_list|,
name|IndexableField
argument_list|>
name|luceneFieldFactory
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|T
argument_list|,
name|Long
argument_list|>
name|counts
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|numTerms
init|=
name|scaledRandomIntBetween
argument_list|(
literal|8
argument_list|,
literal|128
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numTerms
condition|;
name|i
operator|++
control|)
block|{
name|counts
operator|.
name|put
argument_list|(
name|valueFactory
operator|.
name|apply
argument_list|(
name|i
argument_list|)
argument_list|,
name|randomLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Long
argument_list|>
name|entry
range|:
name|counts
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
name|luceneFieldFactory
operator|.
name|apply
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"value"
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
block|}
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|maybeWrapReaderEs
argument_list|(
name|indexWriter
operator|.
name|getReader
argument_list|()
argument_list|)
init|)
block|{
name|boolean
name|order
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Long
argument_list|>
argument_list|>
name|expectedBuckets
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|expectedBuckets
operator|.
name|addAll
argument_list|(
name|counts
operator|.
name|entrySet
argument_list|()
argument_list|)
expr_stmt|;
name|BucketOrder
name|bucketOrder
init|=
name|BucketOrder
operator|.
name|aggregation
argument_list|(
literal|"_max"
argument_list|,
name|order
argument_list|)
decl_stmt|;
name|Comparator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Long
argument_list|>
argument_list|>
name|comparator
init|=
name|Comparator
operator|.
name|comparing
argument_list|(
name|Map
operator|.
name|Entry
operator|::
name|getValue
argument_list|,
name|Long
operator|::
name|compareTo
argument_list|)
decl_stmt|;
if|if
condition|(
name|order
operator|==
literal|false
condition|)
block|{
name|comparator
operator|=
name|comparator
operator|.
name|reversed
argument_list|()
expr_stmt|;
block|}
name|expectedBuckets
operator|.
name|sort
argument_list|(
name|comparator
argument_list|)
expr_stmt|;
name|int
name|size
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
name|counts
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|executionHint
init|=
name|randomFrom
argument_list|(
name|TermsAggregatorFactory
operator|.
name|ExecutionMode
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Aggregator
operator|.
name|SubAggCollectionMode
name|collectionMode
init|=
name|randomFrom
argument_list|(
name|Aggregator
operator|.
name|SubAggCollectionMode
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"bucket_order={} size={} execution_hint={}, collect_mode={}"
argument_list|,
name|bucketOrder
argument_list|,
name|size
argument_list|,
name|executionHint
argument_list|,
name|collectionMode
argument_list|)
expr_stmt|;
name|IndexSearcher
name|indexSearcher
init|=
name|newIndexSearcher
argument_list|(
name|indexReader
argument_list|)
decl_stmt|;
name|AggregationBuilder
name|aggregationBuilder
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|valueType
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|collectMode
argument_list|(
name|collectionMode
argument_list|)
operator|.
name|size
argument_list|(
name|size
argument_list|)
operator|.
name|shardSize
argument_list|(
name|size
argument_list|)
operator|.
name|field
argument_list|(
literal|"field"
argument_list|)
operator|.
name|order
argument_list|(
name|bucketOrder
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|AggregationBuilders
operator|.
name|max
argument_list|(
literal|"_max"
argument_list|)
operator|.
name|field
argument_list|(
literal|"value"
argument_list|)
argument_list|)
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
literal|"field"
argument_list|)
expr_stmt|;
name|fieldType
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType2
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|fieldType2
operator|.
name|setName
argument_list|(
literal|"value"
argument_list|)
expr_stmt|;
name|fieldType2
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Aggregator
name|aggregator
init|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType
argument_list|,
name|fieldType2
argument_list|)
decl_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|Terms
name|result
init|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|size
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|Map
operator|.
name|Entry
argument_list|<
name|T
argument_list|,
name|Long
argument_list|>
name|expected
init|=
name|expectedBuckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|Terms
operator|.
name|Bucket
name|actual
init|=
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|getKey
argument_list|()
argument_list|,
name|actual
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
DECL|method|testEmpty
specifier|public
name|void
name|testEmpty
parameter_list|()
throws|throws
name|Exception
block|{
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
name|MappedFieldType
name|fieldType1
init|=
operator|new
name|KeywordFieldMapper
operator|.
name|KeywordFieldType
argument_list|()
decl_stmt|;
name|fieldType1
operator|.
name|setName
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|fieldType1
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType2
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|fieldType1
operator|.
name|setName
argument_list|(
literal|"long"
argument_list|)
expr_stmt|;
name|fieldType1
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType3
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|DOUBLE
argument_list|)
decl_stmt|;
name|fieldType1
operator|.
name|setName
argument_list|(
literal|"double"
argument_list|)
expr_stmt|;
name|fieldType1
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|maybeWrapReaderEs
argument_list|(
name|indexWriter
operator|.
name|getReader
argument_list|()
argument_list|)
init|)
block|{
name|IndexSearcher
name|indexSearcher
init|=
name|newIndexSearcher
argument_list|(
name|indexReader
argument_list|)
decl_stmt|;
name|TermsAggregationBuilder
name|aggregationBuilder
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|field
argument_list|(
literal|"string"
argument_list|)
decl_stmt|;
name|Aggregator
name|aggregator
init|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType1
argument_list|)
decl_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|Terms
name|result
init|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"_name"
argument_list|,
name|result
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|LONG
argument_list|)
operator|.
name|field
argument_list|(
literal|"long"
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType2
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"_name"
argument_list|,
name|result
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|aggregationBuilder
operator|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|DOUBLE
argument_list|)
operator|.
name|field
argument_list|(
literal|"double"
argument_list|)
expr_stmt|;
name|aggregator
operator|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType3
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"_name"
argument_list|,
name|result
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
DECL|method|testUnmapped
specifier|public
name|void
name|testUnmapped
parameter_list|()
throws|throws
name|Exception
block|{
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"string"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"a"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"long"
argument_list|,
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"double"
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType1
init|=
operator|new
name|KeywordFieldMapper
operator|.
name|KeywordFieldType
argument_list|()
decl_stmt|;
name|fieldType1
operator|.
name|setName
argument_list|(
literal|"another_string"
argument_list|)
expr_stmt|;
name|fieldType1
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType2
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|fieldType1
operator|.
name|setName
argument_list|(
literal|"another_long"
argument_list|)
expr_stmt|;
name|fieldType1
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType3
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|DOUBLE
argument_list|)
decl_stmt|;
name|fieldType1
operator|.
name|setName
argument_list|(
literal|"another_double"
argument_list|)
expr_stmt|;
name|fieldType1
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|maybeWrapReaderEs
argument_list|(
name|indexWriter
operator|.
name|getReader
argument_list|()
argument_list|)
init|)
block|{
name|IndexSearcher
name|indexSearcher
init|=
name|newIndexSearcher
argument_list|(
name|indexReader
argument_list|)
decl_stmt|;
name|ValueType
index|[]
name|valueTypes
init|=
operator|new
name|ValueType
index|[]
block|{
name|ValueType
operator|.
name|STRING
block|,
name|ValueType
operator|.
name|LONG
block|,
name|ValueType
operator|.
name|DOUBLE
block|}
decl_stmt|;
name|String
index|[]
name|fieldNames
init|=
operator|new
name|String
index|[]
block|{
literal|"string"
block|,
literal|"long"
block|,
literal|"double"
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|fieldNames
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|TermsAggregationBuilder
name|aggregationBuilder
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|valueTypes
index|[
name|i
index|]
argument_list|)
operator|.
name|field
argument_list|(
name|fieldNames
index|[
name|i
index|]
argument_list|)
decl_stmt|;
name|Aggregator
name|aggregator
init|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType1
argument_list|,
name|fieldType2
argument_list|,
name|fieldType3
argument_list|)
decl_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|Terms
name|result
init|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"_name"
argument_list|,
name|result
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
DECL|method|testNestedTermsAgg
specifier|public
name|void
name|testNestedTermsAgg
parameter_list|()
throws|throws
name|Exception
block|{
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|)
block|{
try|try
init|(
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"field1"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"a"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"field2"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"field1"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"c"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"field2"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"d"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"field1"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"e"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"field2"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"f"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
try|try
init|(
name|IndexReader
name|indexReader
init|=
name|maybeWrapReaderEs
argument_list|(
name|indexWriter
operator|.
name|getReader
argument_list|()
argument_list|)
init|)
block|{
name|IndexSearcher
name|indexSearcher
init|=
name|newIndexSearcher
argument_list|(
name|indexReader
argument_list|)
decl_stmt|;
name|String
name|executionHint
init|=
name|randomFrom
argument_list|(
name|TermsAggregatorFactory
operator|.
name|ExecutionMode
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Aggregator
operator|.
name|SubAggCollectionMode
name|collectionMode
init|=
name|randomFrom
argument_list|(
name|Aggregator
operator|.
name|SubAggCollectionMode
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|TermsAggregationBuilder
name|aggregationBuilder
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name1"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|collectMode
argument_list|(
name|collectionMode
argument_list|)
operator|.
name|field
argument_list|(
literal|"field1"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
operator|.
name|subAggregation
argument_list|(
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name2"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionHint
argument_list|)
operator|.
name|collectMode
argument_list|(
name|collectionMode
argument_list|)
operator|.
name|field
argument_list|(
literal|"field2"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|MappedFieldType
name|fieldType1
init|=
operator|new
name|KeywordFieldMapper
operator|.
name|KeywordFieldType
argument_list|()
decl_stmt|;
name|fieldType1
operator|.
name|setName
argument_list|(
literal|"field1"
argument_list|)
expr_stmt|;
name|fieldType1
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType2
init|=
operator|new
name|KeywordFieldMapper
operator|.
name|KeywordFieldType
argument_list|()
decl_stmt|;
name|fieldType2
operator|.
name|setName
argument_list|(
literal|"field2"
argument_list|)
expr_stmt|;
name|fieldType2
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Aggregator
name|aggregator
init|=
name|createAggregator
argument_list|(
name|aggregationBuilder
argument_list|,
name|indexSearcher
argument_list|,
name|fieldType1
argument_list|,
name|fieldType2
argument_list|)
decl_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|indexSearcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
name|Terms
name|result
init|=
operator|(
name|Terms
operator|)
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|Terms
operator|.
name|Bucket
name|nestedBucket
init|=
operator|(
operator|(
name|Terms
operator|)
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"_name2"
argument_list|)
operator|)
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|nestedBucket
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|nestedBucket
operator|=
operator|(
operator|(
name|Terms
operator|)
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"_name2"
argument_list|)
operator|)
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
name|nestedBucket
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"e"
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|nestedBucket
operator|=
operator|(
operator|(
name|Terms
operator|)
name|result
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"_name2"
argument_list|)
operator|)
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"f"
argument_list|,
name|nestedBucket
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
DECL|method|testMixLongAndDouble
specifier|public
name|void
name|testMixLongAndDouble
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|TermsAggregatorFactory
operator|.
name|ExecutionMode
name|executionMode
range|:
name|TermsAggregatorFactory
operator|.
name|ExecutionMode
operator|.
name|values
argument_list|()
control|)
block|{
name|TermsAggregationBuilder
name|aggregationBuilder
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|ValueType
operator|.
name|LONG
argument_list|)
operator|.
name|executionHint
argument_list|(
name|executionMode
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|field
argument_list|(
literal|"number"
argument_list|)
operator|.
name|order
argument_list|(
name|BucketOrder
operator|.
name|key
argument_list|(
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|InternalAggregation
argument_list|>
name|aggs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|numLongs
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numLongs
condition|;
name|i
operator|++
control|)
block|{
specifier|final
name|Directory
name|dir
decl_stmt|;
try|try
init|(
name|IndexReader
name|reader
init|=
name|createIndexWithLongs
argument_list|()
init|)
block|{
name|dir
operator|=
operator|(
operator|(
name|DirectoryReader
operator|)
name|reader
operator|)
operator|.
name|directory
argument_list|()
expr_stmt|;
name|IndexSearcher
name|searcher
init|=
operator|new
name|IndexSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|fieldType
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|aggs
operator|.
name|add
argument_list|(
name|buildInternalAggregation
argument_list|(
name|aggregationBuilder
argument_list|,
name|fieldType
argument_list|,
name|searcher
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|int
name|numDoubles
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDoubles
condition|;
name|i
operator|++
control|)
block|{
specifier|final
name|Directory
name|dir
decl_stmt|;
try|try
init|(
name|IndexReader
name|reader
init|=
name|createIndexWithDoubles
argument_list|()
init|)
block|{
name|dir
operator|=
operator|(
operator|(
name|DirectoryReader
operator|)
name|reader
operator|)
operator|.
name|directory
argument_list|()
expr_stmt|;
name|IndexSearcher
name|searcher
init|=
operator|new
name|IndexSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|DOUBLE
argument_list|)
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|fieldType
operator|.
name|setHasDocValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|aggs
operator|.
name|add
argument_list|(
name|buildInternalAggregation
argument_list|(
name|aggregationBuilder
argument_list|,
name|fieldType
argument_list|,
name|searcher
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|InternalAggregation
operator|.
name|ReduceContext
name|ctx
init|=
operator|new
name|InternalAggregation
operator|.
name|ReduceContext
argument_list|(
operator|new
name|MockBigArrays
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
operator|new
name|NoneCircuitBreakerService
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
for|for
control|(
name|InternalAggregation
name|internalAgg
range|:
name|aggs
control|)
block|{
name|InternalAggregation
name|mergedAggs
init|=
name|internalAgg
operator|.
name|doReduce
argument_list|(
name|aggs
argument_list|,
name|ctx
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|mergedAggs
operator|instanceof
name|DoubleTerms
argument_list|)
expr_stmt|;
name|long
name|expected
init|=
name|numLongs
operator|+
name|numDoubles
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Terms
operator|.
name|Bucket
argument_list|>
name|buckets
init|=
operator|(
operator|(
name|DoubleTerms
operator|)
name|mergedAggs
operator|)
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|buckets
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0"
argument_list|,
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|buckets
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"10.0"
argument_list|,
name|buckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|*
literal|2
argument_list|,
name|buckets
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"100.0"
argument_list|,
name|buckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|*
literal|2
argument_list|,
name|buckets
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1000.0"
argument_list|,
name|buckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|buckets
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|createIndexWithLongs
specifier|private
name|IndexReader
name|createIndexWithLongs
parameter_list|()
throws|throws
name|IOException
block|{
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
return|;
block|}
DECL|method|createIndexWithDoubles
specifier|private
name|IndexReader
name|createIndexWithDoubles
parameter_list|()
throws|throws
name|IOException
block|{
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
name|NumericUtils
operator|.
name|doubleToSortableLong
argument_list|(
literal|10.0d
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
name|NumericUtils
operator|.
name|doubleToSortableLong
argument_list|(
literal|100.0d
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
name|NumericUtils
operator|.
name|doubleToSortableLong
argument_list|(
literal|1.0d
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
name|NumericUtils
operator|.
name|doubleToSortableLong
argument_list|(
literal|100.0d
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
name|NumericUtils
operator|.
name|doubleToSortableLong
argument_list|(
literal|10.0d
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
name|NumericUtils
operator|.
name|doubleToSortableLong
argument_list|(
literal|1000.0d
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
return|;
block|}
DECL|method|buildInternalAggregation
specifier|private
name|InternalAggregation
name|buildInternalAggregation
parameter_list|(
name|TermsAggregationBuilder
name|builder
parameter_list|,
name|MappedFieldType
name|fieldType
parameter_list|,
name|IndexSearcher
name|searcher
parameter_list|)
throws|throws
name|IOException
block|{
name|TermsAggregator
name|aggregator
init|=
name|createAggregator
argument_list|(
name|builder
argument_list|,
name|searcher
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|aggregator
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggregator
argument_list|)
expr_stmt|;
name|aggregator
operator|.
name|postCollection
argument_list|()
expr_stmt|;
return|return
name|aggregator
operator|.
name|buildAggregation
argument_list|(
literal|0L
argument_list|)
return|;
block|}
block|}
end_class

end_unit

