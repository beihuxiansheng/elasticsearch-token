begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.metrics
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|GeoPoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|BigArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|InternalAggregation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|global
operator|.
name|Global
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|Terms
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|Terms
operator|.
name|Bucket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|geobounds
operator|.
name|GeoBounds
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|geobounds
operator|.
name|GeoBoundsAggregator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
operator|.
name|matchAllQuery
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|geoBounds
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|global
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregationBuilders
operator|.
name|terms
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertSearchResponse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|allOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|closeTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThanOrEqualTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|lessThanOrEqualTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|sameInstance
import|;
end_import

begin_class
annotation|@
name|ESIntegTestCase
operator|.
name|SuiteScopeTestCase
DECL|class|GeoBoundsIT
specifier|public
class|class
name|GeoBoundsIT
extends|extends
name|AbstractGeoTestCase
block|{
DECL|field|aggName
specifier|private
specifier|static
specifier|final
name|String
name|aggName
init|=
literal|"geoBounds"
decl_stmt|;
DECL|method|testSingleValuedField
specifier|public
name|void
name|testSingleValuedField
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|IDX_NAME
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoBounds
argument_list|(
name|aggName
argument_list|)
operator|.
name|field
argument_list|(
name|SINGLE_VALUED_FIELD_NAME
argument_list|)
operator|.
name|wrapLongitude
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|GeoBounds
name|geoBounds
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
name|aggName
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoBounds
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|aggName
argument_list|)
argument_list|)
expr_stmt|;
name|GeoPoint
name|topLeft
init|=
name|geoBounds
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|GeoPoint
name|bottomRight
init|=
name|geoBounds
operator|.
name|bottomRight
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleTopLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleTopLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleBottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleBottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSingleValuedField_getProperty
specifier|public
name|void
name|testSingleValuedField_getProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|IDX_NAME
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|global
argument_list|(
literal|"global"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|geoBounds
argument_list|(
name|aggName
argument_list|)
operator|.
name|field
argument_list|(
name|SINGLE_VALUED_FIELD_NAME
argument_list|)
operator|.
name|wrapLongitude
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|Global
name|global
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"global"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|global
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|global
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"global"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|global
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
operator|(
name|long
operator|)
name|numDocs
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|global
operator|.
name|getAggregations
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|global
operator|.
name|getAggregations
argument_list|()
operator|.
name|asMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|GeoBounds
name|geobounds
init|=
name|global
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
name|aggName
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geobounds
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geobounds
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|aggName
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
call|(
name|GeoBounds
call|)
argument_list|(
operator|(
name|InternalAggregation
operator|)
name|global
argument_list|)
operator|.
name|getProperty
argument_list|(
name|aggName
argument_list|)
argument_list|,
name|sameInstance
argument_list|(
name|geobounds
argument_list|)
argument_list|)
expr_stmt|;
name|GeoPoint
name|topLeft
init|=
name|geobounds
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|GeoPoint
name|bottomRight
init|=
name|geobounds
operator|.
name|bottomRight
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleTopLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleTopLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleBottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleBottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
call|(
name|double
call|)
argument_list|(
operator|(
name|InternalAggregation
operator|)
name|global
argument_list|)
operator|.
name|getProperty
argument_list|(
name|aggName
operator|+
literal|".top"
argument_list|)
argument_list|,
name|closeTo
argument_list|(
name|singleTopLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
call|(
name|double
call|)
argument_list|(
operator|(
name|InternalAggregation
operator|)
name|global
argument_list|)
operator|.
name|getProperty
argument_list|(
name|aggName
operator|+
literal|".left"
argument_list|)
argument_list|,
name|closeTo
argument_list|(
name|singleTopLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
call|(
name|double
call|)
argument_list|(
operator|(
name|InternalAggregation
operator|)
name|global
argument_list|)
operator|.
name|getProperty
argument_list|(
name|aggName
operator|+
literal|".bottom"
argument_list|)
argument_list|,
name|closeTo
argument_list|(
name|singleBottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
call|(
name|double
call|)
argument_list|(
operator|(
name|InternalAggregation
operator|)
name|global
argument_list|)
operator|.
name|getProperty
argument_list|(
name|aggName
operator|+
literal|".right"
argument_list|)
argument_list|,
name|closeTo
argument_list|(
name|singleBottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testMultiValuedField
specifier|public
name|void
name|testMultiValuedField
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|IDX_NAME
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoBounds
argument_list|(
name|aggName
argument_list|)
operator|.
name|field
argument_list|(
name|MULTI_VALUED_FIELD_NAME
argument_list|)
operator|.
name|wrapLongitude
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|GeoBounds
name|geoBounds
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
name|aggName
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoBounds
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|aggName
argument_list|)
argument_list|)
expr_stmt|;
name|GeoPoint
name|topLeft
init|=
name|geoBounds
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|GeoPoint
name|bottomRight
init|=
name|geoBounds
operator|.
name|bottomRight
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|multiTopLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|multiTopLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|multiBottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|multiBottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testUnmapped
specifier|public
name|void
name|testUnmapped
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|UNMAPPED_IDX_NAME
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoBounds
argument_list|(
name|aggName
argument_list|)
operator|.
name|field
argument_list|(
name|SINGLE_VALUED_FIELD_NAME
argument_list|)
operator|.
name|wrapLongitude
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|GeoBounds
name|geoBounds
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
name|aggName
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoBounds
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|aggName
argument_list|)
argument_list|)
expr_stmt|;
name|GeoPoint
name|topLeft
init|=
name|geoBounds
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|GeoPoint
name|bottomRight
init|=
name|geoBounds
operator|.
name|bottomRight
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|topLeft
argument_list|,
name|equalTo
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
argument_list|,
name|equalTo
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testPartiallyUnmapped
specifier|public
name|void
name|testPartiallyUnmapped
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|IDX_NAME
argument_list|,
name|UNMAPPED_IDX_NAME
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoBounds
argument_list|(
name|aggName
argument_list|)
operator|.
name|field
argument_list|(
name|SINGLE_VALUED_FIELD_NAME
argument_list|)
operator|.
name|wrapLongitude
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|GeoBounds
name|geoBounds
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
name|aggName
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoBounds
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|aggName
argument_list|)
argument_list|)
expr_stmt|;
name|GeoPoint
name|topLeft
init|=
name|geoBounds
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|GeoPoint
name|bottomRight
init|=
name|geoBounds
operator|.
name|bottomRight
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleTopLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleTopLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleBottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|singleBottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testEmptyAggregation
specifier|public
name|void
name|testEmptyAggregation
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|EMPTY_IDX_NAME
argument_list|)
operator|.
name|setQuery
argument_list|(
name|matchAllQuery
argument_list|()
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoBounds
argument_list|(
name|aggName
argument_list|)
operator|.
name|field
argument_list|(
name|SINGLE_VALUED_FIELD_NAME
argument_list|)
operator|.
name|wrapLongitude
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|GeoBounds
name|geoBounds
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
name|aggName
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoBounds
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|aggName
argument_list|)
argument_list|)
expr_stmt|;
name|GeoPoint
name|topLeft
init|=
name|geoBounds
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|GeoPoint
name|bottomRight
init|=
name|geoBounds
operator|.
name|bottomRight
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|topLeft
argument_list|,
name|equalTo
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
argument_list|,
name|equalTo
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSingleValuedFieldNearDateLine
specifier|public
name|void
name|testSingleValuedFieldNearDateLine
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|DATELINE_IDX_NAME
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoBounds
argument_list|(
name|aggName
argument_list|)
operator|.
name|field
argument_list|(
name|SINGLE_VALUED_FIELD_NAME
argument_list|)
operator|.
name|wrapLongitude
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|GeoPoint
name|geoValuesTopLeft
init|=
operator|new
name|GeoPoint
argument_list|(
literal|38
argument_list|,
operator|-
literal|179
argument_list|)
decl_stmt|;
name|GeoPoint
name|geoValuesBottomRight
init|=
operator|new
name|GeoPoint
argument_list|(
operator|-
literal|24
argument_list|,
literal|178
argument_list|)
decl_stmt|;
name|GeoBounds
name|geoBounds
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
name|aggName
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoBounds
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|aggName
argument_list|)
argument_list|)
expr_stmt|;
name|GeoPoint
name|topLeft
init|=
name|geoBounds
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|GeoPoint
name|bottomRight
init|=
name|geoBounds
operator|.
name|bottomRight
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|geoValuesTopLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|geoValuesTopLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|geoValuesBottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|geoValuesBottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSingleValuedFieldNearDateLineWrapLongitude
specifier|public
name|void
name|testSingleValuedFieldNearDateLineWrapLongitude
parameter_list|()
throws|throws
name|Exception
block|{
name|GeoPoint
name|geoValuesTopLeft
init|=
operator|new
name|GeoPoint
argument_list|(
literal|38
argument_list|,
literal|170
argument_list|)
decl_stmt|;
name|GeoPoint
name|geoValuesBottomRight
init|=
operator|new
name|GeoPoint
argument_list|(
operator|-
literal|24
argument_list|,
operator|-
literal|175
argument_list|)
decl_stmt|;
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|DATELINE_IDX_NAME
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoBounds
argument_list|(
name|aggName
argument_list|)
operator|.
name|field
argument_list|(
name|SINGLE_VALUED_FIELD_NAME
argument_list|)
operator|.
name|wrapLongitude
argument_list|(
literal|true
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|GeoBounds
name|geoBounds
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
name|aggName
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoBounds
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|aggName
argument_list|)
argument_list|)
expr_stmt|;
name|GeoPoint
name|topLeft
init|=
name|geoBounds
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|GeoPoint
name|bottomRight
init|=
name|geoBounds
operator|.
name|bottomRight
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|geoValuesTopLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|geoValuesTopLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|geoValuesBottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
name|geoValuesBottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * This test forces the {@link GeoBoundsAggregator} to resize the {@link BigArray}s it uses to ensure they are resized correctly      */
DECL|method|testSingleValuedFieldAsSubAggToHighCardTermsAgg
specifier|public
name|void
name|testSingleValuedFieldAsSubAggToHighCardTermsAgg
parameter_list|()
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|HIGH_CARD_IDX_NAME
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|terms
argument_list|(
literal|"terms"
argument_list|)
operator|.
name|field
argument_list|(
name|NUMBER_FIELD_NAME
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|geoBounds
argument_list|(
name|aggName
argument_list|)
operator|.
name|field
argument_list|(
name|SINGLE_VALUED_FIELD_NAME
argument_list|)
operator|.
name|wrapLongitude
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Terms
name|terms
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"terms"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|terms
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|terms
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"terms"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Bucket
argument_list|>
name|buckets
init|=
name|terms
operator|.
name|getBuckets
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|buckets
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|Bucket
name|bucket
init|=
name|buckets
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|bucket
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"InternalBucket "
operator|+
name|bucket
operator|.
name|getKey
argument_list|()
operator|+
literal|" has wrong number of documents"
argument_list|,
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|GeoBounds
name|geoBounds
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
name|aggName
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoBounds
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|aggName
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|topLeft
argument_list|()
operator|.
name|getLat
argument_list|()
argument_list|,
name|allOf
argument_list|(
name|greaterThanOrEqualTo
argument_list|(
operator|-
literal|90.0
argument_list|)
argument_list|,
name|lessThanOrEqualTo
argument_list|(
literal|90.0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|topLeft
argument_list|()
operator|.
name|getLon
argument_list|()
argument_list|,
name|allOf
argument_list|(
name|greaterThanOrEqualTo
argument_list|(
operator|-
literal|180.0
argument_list|)
argument_list|,
name|lessThanOrEqualTo
argument_list|(
literal|180.0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|bottomRight
argument_list|()
operator|.
name|getLat
argument_list|()
argument_list|,
name|allOf
argument_list|(
name|greaterThanOrEqualTo
argument_list|(
operator|-
literal|90.0
argument_list|)
argument_list|,
name|lessThanOrEqualTo
argument_list|(
literal|90.0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|bottomRight
argument_list|()
operator|.
name|getLon
argument_list|()
argument_list|,
name|allOf
argument_list|(
name|greaterThanOrEqualTo
argument_list|(
operator|-
literal|180.0
argument_list|)
argument_list|,
name|lessThanOrEqualTo
argument_list|(
literal|180.0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testSingleValuedFieldWithZeroLon
specifier|public
name|void
name|testSingleValuedFieldWithZeroLon
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|IDX_ZERO_NAME
argument_list|)
operator|.
name|addAggregation
argument_list|(
name|geoBounds
argument_list|(
name|aggName
argument_list|)
operator|.
name|field
argument_list|(
name|SINGLE_VALUED_FIELD_NAME
argument_list|)
operator|.
name|wrapLongitude
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertSearchResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|GeoBounds
name|geoBounds
init|=
name|response
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
name|aggName
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|geoBounds
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|geoBounds
operator|.
name|getName
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|aggName
argument_list|)
argument_list|)
expr_stmt|;
name|GeoPoint
name|topLeft
init|=
name|geoBounds
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|GeoPoint
name|bottomRight
init|=
name|geoBounds
operator|.
name|bottomRight
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
literal|1.0
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|topLeft
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
literal|0.0
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lat
argument_list|()
argument_list|,
name|closeTo
argument_list|(
literal|1.0
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|bottomRight
operator|.
name|lon
argument_list|()
argument_list|,
name|closeTo
argument_list|(
literal|0.0
argument_list|,
name|GEOHASH_TOLERANCE
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

