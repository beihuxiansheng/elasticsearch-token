begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.internal
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|TermQueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|EqualsHashCodeTestUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThan
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|instanceOf
import|;
end_import

begin_class
DECL|class|AliasFilterTests
specifier|public
class|class
name|AliasFilterTests
extends|extends
name|ESTestCase
block|{
DECL|method|testEqualsAndHashCode
specifier|public
name|void
name|testEqualsAndHashCode
parameter_list|()
block|{
specifier|final
name|QueryBuilder
name|filter
init|=
name|QueryBuilders
operator|.
name|termQuery
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
specifier|final
name|String
index|[]
name|aliases
init|=
operator|new
name|String
index|[]
block|{
literal|"alias_0"
block|,
literal|"alias_1"
block|}
decl_stmt|;
specifier|final
name|AliasFilter
name|aliasFilter
init|=
operator|new
name|AliasFilter
argument_list|(
name|filter
argument_list|,
name|aliases
argument_list|)
decl_stmt|;
specifier|final
name|EqualsHashCodeTestUtils
operator|.
name|CopyFunction
argument_list|<
name|AliasFilter
argument_list|>
name|aliasFilterCopyFunction
init|=
name|x
lambda|->
block|{
name|assertThat
argument_list|(
name|x
operator|.
name|getQueryBuilder
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|TermQueryBuilder
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|BytesStreamOutput
name|out
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|x
operator|.
name|getQueryBuilder
argument_list|()
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
specifier|final
name|QueryBuilder
name|otherFilter
init|=
operator|new
name|TermQueryBuilder
argument_list|(
name|out
operator|.
name|bytes
argument_list|()
operator|.
name|streamInput
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
index|[]
name|otherAliases
init|=
name|Arrays
operator|.
name|copyOf
argument_list|(
name|x
operator|.
name|getAliases
argument_list|()
argument_list|,
name|x
operator|.
name|getAliases
argument_list|()
operator|.
name|length
argument_list|)
decl_stmt|;
return|return
operator|new
name|AliasFilter
argument_list|(
name|otherFilter
argument_list|,
name|otherAliases
argument_list|)
return|;
block|}
decl_stmt|;
specifier|final
name|EqualsHashCodeTestUtils
operator|.
name|MutateFunction
argument_list|<
name|AliasFilter
argument_list|>
name|aliasFilterMutationFunction
init|=
name|x
lambda|->
block|{
name|assertThat
argument_list|(
name|x
operator|.
name|getQueryBuilder
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|TermQueryBuilder
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|BytesStreamOutput
name|out
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|x
operator|.
name|getQueryBuilder
argument_list|()
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
specifier|final
name|QueryBuilder
name|otherFilter
init|=
operator|new
name|TermQueryBuilder
argument_list|(
name|out
operator|.
name|bytes
argument_list|()
operator|.
name|streamInput
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|x
operator|.
name|getAliases
argument_list|()
operator|.
name|length
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|String
index|[]
name|otherAliases
init|=
name|Arrays
operator|.
name|copyOf
argument_list|(
name|x
operator|.
name|getAliases
argument_list|()
argument_list|,
name|x
operator|.
name|getAliases
argument_list|()
operator|.
name|length
operator|-
literal|1
argument_list|)
decl_stmt|;
return|return
operator|new
name|AliasFilter
argument_list|(
name|otherFilter
argument_list|,
name|otherAliases
argument_list|)
return|;
block|}
decl_stmt|;
name|EqualsHashCodeTestUtils
operator|.
name|checkEqualsAndHashCode
argument_list|(
name|aliasFilter
argument_list|,
name|aliasFilterCopyFunction
argument_list|,
name|aliasFilterMutationFunction
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

