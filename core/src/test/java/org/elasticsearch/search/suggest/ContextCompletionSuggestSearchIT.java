begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.suggest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
package|;
end_package

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|generators
operator|.
name|RandomStrings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|util
operator|.
name|GeoHashUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
operator|.
name|SuppressCodecs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|GeoPoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|Fuzziness
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|CompletionSuggestSearchIT
operator|.
name|CompletionMappingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|CompletionSuggestionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|context
operator|.
name|CategoryContextMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|context
operator|.
name|CategoryQueryContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|context
operator|.
name|ContextBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|context
operator|.
name|ContextMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|context
operator|.
name|GeoContextMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|context
operator|.
name|GeoQueryContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertAcked
import|;
end_import

begin_class
annotation|@
name|SuppressCodecs
argument_list|(
literal|"*"
argument_list|)
comment|// requires custom completion format
DECL|class|ContextCompletionSuggestSearchIT
specifier|public
class|class
name|ContextCompletionSuggestSearchIT
extends|extends
name|ESIntegTestCase
block|{
DECL|field|INDEX
specifier|private
specifier|final
name|String
name|INDEX
init|=
name|RandomStrings
operator|.
name|randomAsciiOfLength
argument_list|(
name|getRandom
argument_list|()
argument_list|,
literal|10
argument_list|)
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|TYPE
specifier|private
specifier|final
name|String
name|TYPE
init|=
name|RandomStrings
operator|.
name|randomAsciiOfLength
argument_list|(
name|getRandom
argument_list|()
argument_list|,
literal|10
argument_list|)
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|FIELD
specifier|private
specifier|final
name|String
name|FIELD
init|=
name|RandomStrings
operator|.
name|randomAsciiOfLength
argument_list|(
name|getRandom
argument_list|()
argument_list|,
literal|10
argument_list|)
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|numberOfReplicas
specifier|protected
name|int
name|numberOfReplicas
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
DECL|method|testContextPrefix
specifier|public
name|void
name|testContextPrefix
parameter_list|()
throws|throws
name|Exception
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"cat"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|addAnotherContext
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
if|if
condition|(
name|addAnotherContext
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"type"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|,
literal|"cat"
operator|+
name|i
operator|%
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
name|addAnotherContext
condition|)
block|{
name|source
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"type"
operator|+
name|i
operator|%
literal|3
argument_list|)
expr_stmt|;
block|}
name|source
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion7"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion5"
argument_list|)
expr_stmt|;
block|}
DECL|method|testContextRegex
specifier|public
name|void
name|testContextRegex
parameter_list|()
throws|throws
name|Exception
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"cat"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|addAnotherContext
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
if|if
condition|(
name|addAnotherContext
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"type"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"sugg"
operator|+
name|i
operator|+
literal|"estion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|,
literal|"cat"
operator|+
name|i
operator|%
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
name|addAnotherContext
condition|)
block|{
name|source
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"type"
operator|+
name|i
operator|%
literal|3
argument_list|)
expr_stmt|;
block|}
name|source
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|regex
argument_list|(
literal|"sugg.*es"
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"sugg9estion"
argument_list|,
literal|"sugg8estion"
argument_list|,
literal|"sugg7estion"
argument_list|,
literal|"sugg6estion"
argument_list|,
literal|"sugg5estion"
argument_list|)
expr_stmt|;
block|}
DECL|method|testContextFuzzy
specifier|public
name|void
name|testContextFuzzy
parameter_list|()
throws|throws
name|Exception
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"cat"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|addAnotherContext
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
if|if
condition|(
name|addAnotherContext
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"type"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"sugxgestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|,
literal|"cat"
operator|+
name|i
operator|%
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
name|addAnotherContext
condition|)
block|{
name|source
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"type"
operator|+
name|i
operator|%
literal|3
argument_list|)
expr_stmt|;
block|}
name|source
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|,
name|Fuzziness
operator|.
name|ONE
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"sugxgestion9"
argument_list|,
literal|"sugxgestion8"
argument_list|,
literal|"sugxgestion7"
argument_list|,
literal|"sugxgestion6"
argument_list|,
literal|"sugxgestion5"
argument_list|)
expr_stmt|;
block|}
DECL|method|testSingleContextFiltering
specifier|public
name|void
name|testSingleContextFiltering
parameter_list|()
throws|throws
name|Exception
block|{
name|CategoryContextMapping
name|contextMapping
init|=
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"cat"
argument_list|,
name|contextMapping
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|,
literal|"cat"
operator|+
name|i
operator|%
literal|2
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
operator|.
name|contexts
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"cat"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"cat0"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion4"
argument_list|,
literal|"suggestion2"
argument_list|,
literal|"suggestion0"
argument_list|)
expr_stmt|;
block|}
DECL|method|testSingleContextBoosting
specifier|public
name|void
name|testSingleContextBoosting
parameter_list|()
throws|throws
name|Exception
block|{
name|CategoryContextMapping
name|contextMapping
init|=
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"cat"
argument_list|,
name|contextMapping
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|,
literal|"cat"
operator|+
name|i
operator|%
literal|2
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
operator|.
name|contexts
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"cat"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"cat0"
argument_list|)
operator|.
name|setBoost
argument_list|(
literal|3
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"cat1"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion4"
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion2"
argument_list|)
expr_stmt|;
block|}
DECL|method|testSingleContextMultipleContexts
specifier|public
name|void
name|testSingleContextMultipleContexts
parameter_list|()
throws|throws
name|Exception
block|{
name|CategoryContextMapping
name|contextMapping
init|=
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"cat"
argument_list|,
name|contextMapping
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|contexts
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"type1"
argument_list|,
literal|"type2"
argument_list|,
literal|"type3"
argument_list|,
literal|"type4"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|,
name|contexts
argument_list|)
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion7"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion5"
argument_list|)
expr_stmt|;
block|}
DECL|method|testMultiContextFiltering
specifier|public
name|void
name|testMultiContextFiltering
parameter_list|()
throws|throws
name|Exception
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"cat"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"type"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|,
literal|"cat"
operator|+
name|i
operator|%
literal|2
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"type"
operator|+
name|i
operator|%
literal|4
argument_list|)
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
comment|// filter only on context cat
name|CompletionSuggestionBuilder
name|catFilterSuggest
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|catFilterSuggest
operator|.
name|contexts
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"cat"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"cat0"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|catFilterSuggest
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion4"
argument_list|,
literal|"suggestion2"
argument_list|,
literal|"suggestion0"
argument_list|)
expr_stmt|;
comment|// filter only on context type
name|CompletionSuggestionBuilder
name|typeFilterSuggest
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|typeFilterSuggest
operator|.
name|contexts
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"type"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"type2"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|typeFilterSuggest
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion5"
argument_list|,
literal|"suggestion2"
argument_list|,
literal|"suggestion1"
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|multiContextFilterSuggest
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
comment|// query context order should never matter
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|?
extends|extends
name|ToXContent
argument_list|>
argument_list|>
name|contextMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|contextMap
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"type2"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|contextMap
operator|.
name|put
argument_list|(
literal|"cat"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"cat2"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|multiContextFilterSuggest
operator|.
name|contexts
argument_list|(
name|contextMap
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|multiContextFilterSuggest
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion2"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"multiple context boosting is broken, as a suggestion, contexts pair is treated as (num(context) entries)"
argument_list|)
DECL|method|testMultiContextBoosting
specifier|public
name|void
name|testMultiContextBoosting
parameter_list|()
throws|throws
name|Exception
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"cat"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"type"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|,
literal|"cat"
operator|+
name|i
operator|%
literal|2
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"type"
operator|+
name|i
operator|%
literal|4
argument_list|)
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
comment|// boost only on context cat
name|CompletionSuggestionBuilder
name|catBoostSuggest
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|catBoostSuggest
operator|.
name|contexts
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"cat"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"cat0"
argument_list|)
operator|.
name|setBoost
argument_list|(
literal|3
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"cat1"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|catBoostSuggest
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion4"
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion2"
argument_list|)
expr_stmt|;
comment|// boost only on context type
name|CompletionSuggestionBuilder
name|typeBoostSuggest
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|typeBoostSuggest
operator|.
name|contexts
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"type"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"type2"
argument_list|)
operator|.
name|setBoost
argument_list|(
literal|2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|setBoost
argument_list|(
literal|4
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|typeBoostSuggest
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion5"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion1"
argument_list|,
literal|"suggestion2"
argument_list|)
expr_stmt|;
comment|// boost on both contexts
name|CompletionSuggestionBuilder
name|multiContextBoostSuggest
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
comment|// query context order should never matter
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|?
extends|extends
name|ToXContent
argument_list|>
argument_list|>
name|contextMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|contextMap
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"type2"
argument_list|)
operator|.
name|setBoost
argument_list|(
literal|2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"type1"
argument_list|)
operator|.
name|setBoost
argument_list|(
literal|4
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|contextMap
operator|.
name|put
argument_list|(
literal|"cat"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"cat0"
argument_list|)
operator|.
name|setBoost
argument_list|(
literal|3
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|CategoryQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setCategory
argument_list|(
literal|"cat1"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|multiContextBoostSuggest
operator|.
name|contexts
argument_list|(
name|contextMap
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|multiContextBoostSuggest
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion5"
argument_list|,
literal|"suggestion2"
argument_list|,
literal|"suggestion1"
argument_list|)
expr_stmt|;
block|}
DECL|method|testMissingContextValue
specifier|public
name|void
name|testMissingContextValue
parameter_list|()
throws|throws
name|Exception
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"cat"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"type"
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|source
operator|.
name|field
argument_list|(
literal|"cat"
argument_list|,
literal|"cat"
operator|+
name|i
operator|%
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|source
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"type"
operator|+
name|i
operator|%
literal|4
argument_list|)
expr_stmt|;
block|}
name|source
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion7"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion5"
argument_list|)
expr_stmt|;
block|}
DECL|method|testSeveralContexts
specifier|public
name|void
name|testSeveralContexts
parameter_list|()
throws|throws
name|Exception
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|final
name|int
name|numContexts
init|=
name|randomIntBetween
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numContexts
condition|;
name|i
operator|++
control|)
block|{
name|map
operator|.
name|put
argument_list|(
literal|"type"
operator|+
name|i
argument_list|,
name|ContextBuilder
operator|.
name|category
argument_list|(
literal|"type"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
operator|+
name|i
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
name|randomIntBetween
argument_list|(
literal|10
argument_list|,
literal|200
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|numDocs
operator|-
name|i
argument_list|)
operator|.
name|endObject
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|numContexts
condition|;
name|c
operator|++
control|)
block|{
name|source
operator|.
name|field
argument_list|(
literal|"type"
operator|+
name|c
argument_list|,
literal|"type"
operator|+
name|c
operator|+
name|i
operator|%
literal|4
argument_list|)
expr_stmt|;
block|}
name|source
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"suggestion0"
argument_list|,
literal|"suggestion1"
argument_list|,
literal|"suggestion2"
argument_list|,
literal|"suggestion3"
argument_list|,
literal|"suggestion4"
argument_list|)
expr_stmt|;
block|}
DECL|method|testSimpleGeoPrefix
specifier|public
name|void
name|testSimpleGeoPrefix
parameter_list|()
throws|throws
name|Exception
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"geo"
argument_list|,
name|ContextBuilder
operator|.
name|geo
argument_list|(
literal|"geo"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"contexts"
argument_list|)
operator|.
name|field
argument_list|(
literal|"geo"
argument_list|,
name|GeoHashUtils
operator|.
name|stringEncode
argument_list|(
literal|1.2
argument_list|,
literal|1.3
argument_list|)
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion7"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion5"
argument_list|)
expr_stmt|;
block|}
DECL|method|testGeoFiltering
specifier|public
name|void
name|testGeoFiltering
parameter_list|()
throws|throws
name|Exception
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"geo"
argument_list|,
name|ContextBuilder
operator|.
name|geo
argument_list|(
literal|"geo"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|GeoPoint
index|[]
name|geoPoints
init|=
operator|new
name|GeoPoint
index|[]
block|{
operator|new
name|GeoPoint
argument_list|(
literal|"ezs42e44yx96"
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|"u4pruydqqvj8"
argument_list|)
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"contexts"
argument_list|)
operator|.
name|field
argument_list|(
literal|"geo"
argument_list|,
operator|(
name|i
operator|%
literal|2
operator|==
literal|0
operator|)
condition|?
name|geoPoints
index|[
literal|0
index|]
operator|.
name|getGeohash
argument_list|()
else|:
name|geoPoints
index|[
literal|1
index|]
operator|.
name|getGeohash
argument_list|()
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion7"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion5"
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|geoFilteringPrefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
operator|.
name|contexts
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"geo"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|GeoQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setGeoPoint
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|geoPoints
index|[
literal|0
index|]
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|geoFilteringPrefix
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion4"
argument_list|,
literal|"suggestion2"
argument_list|,
literal|"suggestion0"
argument_list|)
expr_stmt|;
block|}
DECL|method|testGeoBoosting
specifier|public
name|void
name|testGeoBoosting
parameter_list|()
throws|throws
name|Exception
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"geo"
argument_list|,
name|ContextBuilder
operator|.
name|geo
argument_list|(
literal|"geo"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|GeoPoint
index|[]
name|geoPoints
init|=
operator|new
name|GeoPoint
index|[]
block|{
operator|new
name|GeoPoint
argument_list|(
literal|"ezs42e44yx96"
argument_list|)
block|,
operator|new
name|GeoPoint
argument_list|(
literal|"u4pruydqqvj8"
argument_list|)
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"contexts"
argument_list|)
operator|.
name|field
argument_list|(
literal|"geo"
argument_list|,
operator|(
name|i
operator|%
literal|2
operator|==
literal|0
operator|)
condition|?
name|geoPoints
index|[
literal|0
index|]
operator|.
name|getGeohash
argument_list|()
else|:
name|geoPoints
index|[
literal|1
index|]
operator|.
name|getGeohash
argument_list|()
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion7"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion5"
argument_list|)
expr_stmt|;
name|GeoQueryContext
name|context1
init|=
name|GeoQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setGeoPoint
argument_list|(
name|geoPoints
index|[
literal|0
index|]
argument_list|)
operator|.
name|setBoost
argument_list|(
literal|2
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|GeoQueryContext
name|context2
init|=
name|GeoQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setGeoPoint
argument_list|(
name|geoPoints
index|[
literal|1
index|]
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CompletionSuggestionBuilder
name|geoBoostingPrefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
operator|.
name|contexts
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"geo"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|context1
argument_list|,
name|context2
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|geoBoostingPrefix
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion4"
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion7"
argument_list|)
expr_stmt|;
block|}
DECL|method|testGeoPointContext
specifier|public
name|void
name|testGeoPointContext
parameter_list|()
throws|throws
name|Exception
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"geo"
argument_list|,
name|ContextBuilder
operator|.
name|geo
argument_list|(
literal|"geo"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"contexts"
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"geo"
argument_list|)
operator|.
name|field
argument_list|(
literal|"lat"
argument_list|,
literal|52.22
argument_list|)
operator|.
name|field
argument_list|(
literal|"lon"
argument_list|,
literal|4.53
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
operator|.
name|contexts
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"geo"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|GeoQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setGeoPoint
argument_list|(
operator|new
name|GeoPoint
argument_list|(
literal|52.2263
argument_list|,
literal|4.543
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion7"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion5"
argument_list|)
expr_stmt|;
block|}
DECL|method|testGeoNeighbours
specifier|public
name|void
name|testGeoNeighbours
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|geohash
init|=
literal|"gcpv"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|neighbours
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|neighbours
operator|.
name|add
argument_list|(
literal|"gcpw"
argument_list|)
expr_stmt|;
name|neighbours
operator|.
name|add
argument_list|(
literal|"gcpy"
argument_list|)
expr_stmt|;
name|neighbours
operator|.
name|add
argument_list|(
literal|"u10n"
argument_list|)
expr_stmt|;
name|neighbours
operator|.
name|add
argument_list|(
literal|"gcpt"
argument_list|)
expr_stmt|;
name|neighbours
operator|.
name|add
argument_list|(
literal|"u10j"
argument_list|)
expr_stmt|;
name|neighbours
operator|.
name|add
argument_list|(
literal|"gcps"
argument_list|)
expr_stmt|;
name|neighbours
operator|.
name|add
argument_list|(
literal|"gcpu"
argument_list|)
expr_stmt|;
name|neighbours
operator|.
name|add
argument_list|(
literal|"u10h"
argument_list|)
expr_stmt|;
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"geo"
argument_list|,
name|ContextBuilder
operator|.
name|geo
argument_list|(
literal|"geo"
argument_list|)
operator|.
name|precision
argument_list|(
literal|4
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|CompletionMappingBuilder
name|mapping
init|=
operator|new
name|CompletionMappingBuilder
argument_list|()
operator|.
name|context
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|createIndexAndMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|List
argument_list|<
name|IndexRequestBuilder
argument_list|>
name|indexRequestBuilders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|source
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"input"
argument_list|,
literal|"suggestion"
operator|+
name|i
argument_list|)
operator|.
name|field
argument_list|(
literal|"weight"
argument_list|,
name|i
operator|+
literal|1
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"contexts"
argument_list|)
operator|.
name|field
argument_list|(
literal|"geo"
argument_list|,
name|randomFrom
argument_list|(
name|neighbours
argument_list|)
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|indexRequestBuilders
operator|.
name|add
argument_list|(
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|""
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|indexRequestBuilders
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|(
name|INDEX
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|prefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|prefix
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion7"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion5"
argument_list|)
expr_stmt|;
name|CompletionSuggestionBuilder
name|geoNeighbourPrefix
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|prefix
argument_list|(
literal|"sugg"
argument_list|)
operator|.
name|contexts
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"geo"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|GeoQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setGeoPoint
argument_list|(
name|GeoPoint
operator|.
name|fromGeohash
argument_list|(
name|geohash
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
literal|"foo"
argument_list|,
name|geoNeighbourPrefix
argument_list|,
literal|"suggestion9"
argument_list|,
literal|"suggestion8"
argument_list|,
literal|"suggestion7"
argument_list|,
literal|"suggestion6"
argument_list|,
literal|"suggestion5"
argument_list|)
expr_stmt|;
block|}
DECL|method|testGeoField
specifier|public
name|void
name|testGeoField
parameter_list|()
throws|throws
name|Exception
block|{
name|XContentBuilder
name|mapping
init|=
name|jsonBuilder
argument_list|()
decl_stmt|;
name|mapping
operator|.
name|startObject
argument_list|()
expr_stmt|;
name|mapping
operator|.
name|startObject
argument_list|(
name|TYPE
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|startObject
argument_list|(
literal|"pin"
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"geo_point"
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mapping
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|field
argument_list|(
literal|"analyzer"
argument_list|,
literal|"simple"
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|startArray
argument_list|(
literal|"contexts"
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|startObject
argument_list|()
expr_stmt|;
name|mapping
operator|.
name|field
argument_list|(
literal|"name"
argument_list|,
literal|"st"
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"geo"
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|field
argument_list|(
literal|"path"
argument_list|,
literal|"pin"
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|field
argument_list|(
literal|"precision"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mapping
operator|.
name|endArray
argument_list|()
expr_stmt|;
name|mapping
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mapping
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mapping
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|mapping
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
name|INDEX
argument_list|)
operator|.
name|addMapping
argument_list|(
name|TYPE
argument_list|,
name|mapping
argument_list|)
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|XContentBuilder
name|source1
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|latlon
argument_list|(
literal|"pin"
argument_list|,
literal|52.529172
argument_list|,
literal|13.407333
argument_list|)
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|array
argument_list|(
literal|"input"
argument_list|,
literal|"Hotel Amsterdam in Berlin"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"1"
argument_list|)
operator|.
name|setSource
argument_list|(
name|source1
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|XContentBuilder
name|source2
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|latlon
argument_list|(
literal|"pin"
argument_list|,
literal|52.363389
argument_list|,
literal|4.888695
argument_list|)
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|array
argument_list|(
literal|"input"
argument_list|,
literal|"Hotel Berlin in Amsterdam"
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|INDEX
argument_list|,
name|TYPE
argument_list|,
literal|"2"
argument_list|)
operator|.
name|setSource
argument_list|(
name|source2
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
name|String
name|suggestionName
init|=
name|randomAsciiOfLength
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|CompletionSuggestionBuilder
name|context
init|=
name|SuggestBuilders
operator|.
name|completionSuggestion
argument_list|(
name|FIELD
argument_list|)
operator|.
name|text
argument_list|(
literal|"h"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
operator|.
name|contexts
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"st"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|GeoQueryContext
operator|.
name|builder
argument_list|()
operator|.
name|setGeoPoint
argument_list|(
operator|new
name|GeoPoint
argument_list|(
literal|52.52
argument_list|,
literal|13.4
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|INDEX
argument_list|)
operator|.
name|suggest
argument_list|(
operator|new
name|SuggestBuilder
argument_list|()
operator|.
name|addSuggestion
argument_list|(
name|suggestionName
argument_list|,
name|context
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|searchResponse
operator|.
name|getSuggest
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hotel Amsterdam in Berlin"
argument_list|,
name|searchResponse
operator|.
name|getSuggest
argument_list|()
operator|.
name|getSuggestion
argument_list|(
name|suggestionName
argument_list|)
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getOptions
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|string
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|assertSuggestions
specifier|public
name|void
name|assertSuggestions
parameter_list|(
name|String
name|suggestionName
parameter_list|,
name|SuggestionBuilder
name|suggestBuilder
parameter_list|,
name|String
modifier|...
name|suggestions
parameter_list|)
block|{
name|SearchResponse
name|searchResponse
init|=
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
name|INDEX
argument_list|)
operator|.
name|suggest
argument_list|(
operator|new
name|SuggestBuilder
argument_list|()
operator|.
name|addSuggestion
argument_list|(
name|suggestionName
argument_list|,
name|suggestBuilder
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|CompletionSuggestSearchIT
operator|.
name|assertSuggestions
argument_list|(
name|searchResponse
argument_list|,
name|suggestionName
argument_list|,
name|suggestions
argument_list|)
expr_stmt|;
block|}
DECL|method|createIndexAndMapping
specifier|private
name|void
name|createIndexAndMapping
parameter_list|(
name|CompletionMappingBuilder
name|completionMappingBuilder
parameter_list|)
throws|throws
name|IOException
block|{
name|createIndexAndMappingAndSettings
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|completionMappingBuilder
argument_list|)
expr_stmt|;
block|}
DECL|method|createIndexAndMappingAndSettings
specifier|private
name|void
name|createIndexAndMappingAndSettings
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|CompletionMappingBuilder
name|completionMappingBuilder
parameter_list|)
throws|throws
name|IOException
block|{
name|XContentBuilder
name|mapping
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startObject
argument_list|(
name|TYPE
argument_list|)
operator|.
name|startObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|startObject
argument_list|(
name|FIELD
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
literal|"completion"
argument_list|)
operator|.
name|field
argument_list|(
literal|"analyzer"
argument_list|,
name|completionMappingBuilder
operator|.
name|indexAnalyzer
argument_list|)
operator|.
name|field
argument_list|(
literal|"search_analyzer"
argument_list|,
name|completionMappingBuilder
operator|.
name|searchAnalyzer
argument_list|)
operator|.
name|field
argument_list|(
literal|"preserve_separators"
argument_list|,
name|completionMappingBuilder
operator|.
name|preserveSeparators
argument_list|)
operator|.
name|field
argument_list|(
literal|"preserve_position_increments"
argument_list|,
name|completionMappingBuilder
operator|.
name|preservePositionIncrements
argument_list|)
decl_stmt|;
if|if
condition|(
name|completionMappingBuilder
operator|.
name|contextMappings
operator|!=
literal|null
condition|)
block|{
name|mapping
operator|=
name|mapping
operator|.
name|startArray
argument_list|(
literal|"contexts"
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|ContextMapping
argument_list|>
name|contextMapping
range|:
name|completionMappingBuilder
operator|.
name|contextMappings
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|mapping
operator|=
name|mapping
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"name"
argument_list|,
name|contextMapping
operator|.
name|getValue
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|field
argument_list|(
literal|"type"
argument_list|,
name|contextMapping
operator|.
name|getValue
argument_list|()
operator|.
name|type
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|contextMapping
operator|.
name|getValue
argument_list|()
operator|.
name|type
argument_list|()
condition|)
block|{
case|case
name|CATEGORY
case|:
specifier|final
name|String
name|fieldName
init|=
operator|(
operator|(
name|CategoryContextMapping
operator|)
name|contextMapping
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|getFieldName
argument_list|()
decl_stmt|;
if|if
condition|(
name|fieldName
operator|!=
literal|null
condition|)
block|{
name|mapping
operator|=
name|mapping
operator|.
name|field
argument_list|(
literal|"path"
argument_list|,
name|fieldName
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|GEO
case|:
specifier|final
name|String
name|name
init|=
operator|(
operator|(
name|GeoContextMapping
operator|)
name|contextMapping
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|getFieldName
argument_list|()
decl_stmt|;
name|mapping
operator|=
name|mapping
operator|.
name|field
argument_list|(
literal|"precision"
argument_list|,
operator|(
operator|(
name|GeoContextMapping
operator|)
name|contextMapping
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|getPrecision
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
block|{
name|mapping
operator|.
name|field
argument_list|(
literal|"path"
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
name|mapping
operator|=
name|mapping
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
name|mapping
operator|=
name|mapping
operator|.
name|endArray
argument_list|()
expr_stmt|;
block|}
name|mapping
operator|=
name|mapping
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareCreate
argument_list|(
name|INDEX
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|settingsBuilder
argument_list|()
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|settings
argument_list|)
argument_list|)
operator|.
name|addMapping
argument_list|(
name|TYPE
argument_list|,
name|mapping
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

