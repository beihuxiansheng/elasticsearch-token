begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.bulk
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|create
operator|.
name|CreateIndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|delete
operator|.
name|DeleteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|ActionFilters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|update
operator|.
name|UpdateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|service
operator|.
name|ClusterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|VersionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|tasks
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptySet
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singleton
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
DECL|class|TransportBulkActionIndicesThatCannotBeCreatedTests
specifier|public
class|class
name|TransportBulkActionIndicesThatCannotBeCreatedTests
extends|extends
name|ESTestCase
block|{
DECL|method|testNonExceptional
specifier|public
name|void
name|testNonExceptional
parameter_list|()
block|{
name|BulkRequest
name|bulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
decl_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|IndexRequest
argument_list|(
name|randomAlphaOfLength
argument_list|(
literal|5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|IndexRequest
argument_list|(
name|randomAlphaOfLength
argument_list|(
literal|5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|DeleteRequest
argument_list|(
name|randomAlphaOfLength
argument_list|(
literal|5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|UpdateRequest
argument_list|(
name|randomAlphaOfLength
argument_list|(
literal|5
argument_list|)
argument_list|,
name|randomAlphaOfLength
argument_list|(
literal|5
argument_list|)
argument_list|,
name|randomAlphaOfLength
argument_list|(
literal|5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test emulating auto_create_index=false
name|indicesThatCannotBeCreatedTestCase
argument_list|(
name|emptySet
argument_list|()
argument_list|,
name|bulkRequest
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Test emulating auto_create_index=true
name|indicesThatCannotBeCreatedTestCase
argument_list|(
name|emptySet
argument_list|()
argument_list|,
name|bulkRequest
argument_list|,
name|index
lambda|->
literal|true
argument_list|)
expr_stmt|;
comment|// Test emulating all indices already created
name|indicesThatCannotBeCreatedTestCase
argument_list|(
name|emptySet
argument_list|()
argument_list|,
name|bulkRequest
argument_list|,
name|index
lambda|->
literal|false
argument_list|)
expr_stmt|;
comment|// Test emulating auto_create_index=true with some indices already created.
name|indicesThatCannotBeCreatedTestCase
argument_list|(
name|emptySet
argument_list|()
argument_list|,
name|bulkRequest
argument_list|,
name|index
lambda|->
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testAllFail
specifier|public
name|void
name|testAllFail
parameter_list|()
block|{
name|BulkRequest
name|bulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
decl_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"no"
argument_list|)
argument_list|)
expr_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"can't"
argument_list|)
argument_list|)
expr_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|DeleteRequest
argument_list|(
literal|"do"
argument_list|)
operator|.
name|version
argument_list|(
literal|0
argument_list|)
operator|.
name|versionType
argument_list|(
name|VersionType
operator|.
name|EXTERNAL
argument_list|)
argument_list|)
expr_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|UpdateRequest
argument_list|(
literal|"nothin"
argument_list|,
name|randomAlphaOfLength
argument_list|(
literal|5
argument_list|)
argument_list|,
name|randomAlphaOfLength
argument_list|(
literal|5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indicesThatCannotBeCreatedTestCase
argument_list|(
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"no"
argument_list|,
literal|"can't"
argument_list|,
literal|"do"
argument_list|,
literal|"nothin"
argument_list|)
argument_list|)
argument_list|,
name|bulkRequest
argument_list|,
name|index
lambda|->
block|{
throw|throw
operator|new
name|IndexNotFoundException
argument_list|(
literal|"Can't make it because I say so"
argument_list|)
throw|;
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|testSomeFail
specifier|public
name|void
name|testSomeFail
parameter_list|()
block|{
name|BulkRequest
name|bulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
decl_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"ok"
argument_list|)
argument_list|)
expr_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"bad"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Emulate auto_create_index=-bad,+*
name|indicesThatCannotBeCreatedTestCase
argument_list|(
name|singleton
argument_list|(
literal|"bad"
argument_list|)
argument_list|,
name|bulkRequest
argument_list|,
name|index
lambda|->
block|{
if|if
condition|(
name|index
operator|.
name|equals
argument_list|(
literal|"bad"
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IndexNotFoundException
argument_list|(
literal|"Can't make it because I say so"
argument_list|)
throw|;
block|}
return|return
literal|true
return|;
block|}
argument_list|)
expr_stmt|;
comment|// Emulate auto_create_index=false but the "ok" index already exists
name|indicesThatCannotBeCreatedTestCase
argument_list|(
name|singleton
argument_list|(
literal|"bad"
argument_list|)
argument_list|,
name|bulkRequest
argument_list|,
name|index
lambda|->
block|{
if|if
condition|(
name|index
operator|.
name|equals
argument_list|(
literal|"bad"
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IndexNotFoundException
argument_list|(
literal|"Can't make it because I say so"
argument_list|)
throw|;
block|}
return|return
literal|false
return|;
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|indicesThatCannotBeCreatedTestCase
specifier|private
name|void
name|indicesThatCannotBeCreatedTestCase
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|expected
parameter_list|,
name|BulkRequest
name|bulkRequest
parameter_list|,
name|Function
argument_list|<
name|String
argument_list|,
name|Boolean
argument_list|>
name|shouldAutoCreate
parameter_list|)
block|{
name|TransportBulkAction
name|action
init|=
operator|new
name|TransportBulkAction
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|null
argument_list|,
name|mock
argument_list|(
name|TransportService
operator|.
name|class
argument_list|)
argument_list|,
name|mock
argument_list|(
name|ClusterService
operator|.
name|class
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|mock
argument_list|(
name|ActionFilters
operator|.
name|class
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
block|{
annotation|@
name|Override
name|void
name|executeBulk
parameter_list|(
name|Task
name|task
parameter_list|,
name|BulkRequest
name|bulkRequest
parameter_list|,
name|long
name|startTimeNanos
parameter_list|,
name|ActionListener
argument_list|<
name|BulkResponse
argument_list|>
name|listener
parameter_list|,
name|AtomicArray
argument_list|<
name|BulkItemResponse
argument_list|>
name|responses
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|IndexNotFoundException
argument_list|>
name|indicesThatCannotBeCreated
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|indicesThatCannotBeCreated
operator|.
name|keySet
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|boolean
name|needToCheck
parameter_list|()
block|{
return|return
literal|null
operator|!=
name|shouldAutoCreate
return|;
comment|// Use "null" to mean "no indices can be created so don't bother checking"
block|}
annotation|@
name|Override
name|boolean
name|shouldAutoCreate
parameter_list|(
name|String
name|index
parameter_list|,
name|ClusterState
name|state
parameter_list|)
block|{
return|return
name|shouldAutoCreate
operator|.
name|apply
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
name|void
name|createIndex
parameter_list|(
name|String
name|index
parameter_list|,
name|TimeValue
name|timeout
parameter_list|,
name|ActionListener
argument_list|<
name|CreateIndexResponse
argument_list|>
name|listener
parameter_list|)
block|{
comment|// If we try to create an index just immediately assume it worked
name|listener
operator|.
name|onResponse
argument_list|(
operator|new
name|CreateIndexResponse
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
block|{}
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|action
operator|.
name|doExecute
argument_list|(
literal|null
argument_list|,
name|bulkRequest
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

