begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.bulk
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|create
operator|.
name|CreateIndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|TransportBulkActionTookTests
operator|.
name|Resolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|delete
operator|.
name|DeleteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|ActionFilters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|AutoCreateIndex
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|service
operator|.
name|ClusterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|IndexNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|VersionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|transport
operator|.
name|CapturingTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|TestThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ClusterServiceUtils
operator|.
name|createClusterService
import|;
end_import

begin_class
DECL|class|TransportBulkActionTests
specifier|public
class|class
name|TransportBulkActionTests
extends|extends
name|ESTestCase
block|{
comment|/** Services needed by bulk action */
DECL|field|transportService
specifier|private
name|TransportService
name|transportService
decl_stmt|;
DECL|field|clusterService
specifier|private
name|ClusterService
name|clusterService
decl_stmt|;
DECL|field|threadPool
specifier|private
name|ThreadPool
name|threadPool
decl_stmt|;
DECL|field|bulkAction
specifier|private
name|TestTransportBulkAction
name|bulkAction
decl_stmt|;
DECL|class|TestTransportBulkAction
class|class
name|TestTransportBulkAction
extends|extends
name|TransportBulkAction
block|{
DECL|field|indexCreated
name|boolean
name|indexCreated
init|=
literal|false
decl_stmt|;
comment|// set when the "real" index is created
DECL|method|TestTransportBulkAction
name|TestTransportBulkAction
parameter_list|()
block|{
name|super
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|TransportBulkActionTests
operator|.
name|this
operator|.
name|threadPool
argument_list|,
name|transportService
argument_list|,
name|clusterService
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ActionFilters
argument_list|(
name|Collections
operator|.
name|emptySet
argument_list|()
argument_list|)
argument_list|,
operator|new
name|Resolver
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
argument_list|,
operator|new
name|AutoCreateIndex
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|clusterService
operator|.
name|getClusterSettings
argument_list|()
argument_list|,
operator|new
name|Resolver
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|needToCheck
specifier|protected
name|boolean
name|needToCheck
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|createIndex
name|void
name|createIndex
parameter_list|(
name|String
name|index
parameter_list|,
name|TimeValue
name|timeout
parameter_list|,
name|ActionListener
argument_list|<
name|CreateIndexResponse
argument_list|>
name|listener
parameter_list|)
block|{
name|indexCreated
operator|=
literal|true
expr_stmt|;
name|listener
operator|.
name|onResponse
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Before
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|threadPool
operator|=
operator|new
name|TestThreadPool
argument_list|(
literal|"TransportBulkActionTookTests"
argument_list|)
expr_stmt|;
name|clusterService
operator|=
name|createClusterService
argument_list|(
name|threadPool
argument_list|)
expr_stmt|;
name|CapturingTransport
name|capturingTransport
init|=
operator|new
name|CapturingTransport
argument_list|()
decl_stmt|;
name|transportService
operator|=
operator|new
name|TransportService
argument_list|(
name|clusterService
operator|.
name|getSettings
argument_list|()
argument_list|,
name|capturingTransport
argument_list|,
name|threadPool
argument_list|,
name|TransportService
operator|.
name|NOOP_TRANSPORT_INTERCEPTOR
argument_list|,
name|boundAddress
lambda|->
name|clusterService
operator|.
name|localNode
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|transportService
operator|.
name|start
argument_list|()
expr_stmt|;
name|transportService
operator|.
name|acceptIncomingRequests
argument_list|()
expr_stmt|;
name|bulkAction
operator|=
operator|new
name|TestTransportBulkAction
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|ThreadPool
operator|.
name|terminate
argument_list|(
name|threadPool
argument_list|,
literal|30
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|threadPool
operator|=
literal|null
expr_stmt|;
name|clusterService
operator|.
name|close
argument_list|()
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
DECL|method|testDeleteNonExistingDocDoesNotCreateIndex
specifier|public
name|void
name|testDeleteNonExistingDocDoesNotCreateIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|BulkRequest
name|bulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|DeleteRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
argument_list|)
decl_stmt|;
name|bulkAction
operator|.
name|execute
argument_list|(
literal|null
argument_list|,
name|bulkRequest
argument_list|,
name|ActionListener
operator|.
name|wrap
argument_list|(
name|response
lambda|->
block|{
name|assertFalse
argument_list|(
name|bulkAction
operator|.
name|indexCreated
argument_list|)
expr_stmt|;
name|BulkItemResponse
index|[]
name|bulkResponses
init|=
operator|(
operator|(
name|BulkResponse
operator|)
name|response
operator|)
operator|.
name|getItems
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|bulkResponses
operator|.
name|length
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|bulkResponses
index|[
literal|0
index|]
operator|.
name|isFailed
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|bulkResponses
index|[
literal|0
index|]
operator|.
name|getFailure
argument_list|()
operator|.
name|getCause
argument_list|()
operator|instanceof
name|IndexNotFoundException
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|bulkResponses
index|[
literal|0
index|]
operator|.
name|getFailure
argument_list|()
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
argument_list|,
name|exception
lambda|->
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
name|exception
argument_list|)
throw|;
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDeleteNonExistingDocExternalVersionCreatesIndex
specifier|public
name|void
name|testDeleteNonExistingDocExternalVersionCreatesIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|BulkRequest
name|bulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|DeleteRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|versionType
argument_list|(
name|VersionType
operator|.
name|EXTERNAL
argument_list|)
operator|.
name|version
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|bulkAction
operator|.
name|execute
argument_list|(
literal|null
argument_list|,
name|bulkRequest
argument_list|,
name|ActionListener
operator|.
name|wrap
argument_list|(
name|response
lambda|->
block|{
name|assertTrue
argument_list|(
name|bulkAction
operator|.
name|indexCreated
argument_list|)
expr_stmt|;
block|}
argument_list|,
name|exception
lambda|->
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
name|exception
argument_list|)
throw|;
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDeleteNonExistingDocExternalGteVersionCreatesIndex
specifier|public
name|void
name|testDeleteNonExistingDocExternalGteVersionCreatesIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|BulkRequest
name|bulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|DeleteRequest
argument_list|(
literal|"index2"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|versionType
argument_list|(
name|VersionType
operator|.
name|EXTERNAL_GTE
argument_list|)
operator|.
name|version
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|bulkAction
operator|.
name|execute
argument_list|(
literal|null
argument_list|,
name|bulkRequest
argument_list|,
name|ActionListener
operator|.
name|wrap
argument_list|(
name|response
lambda|->
block|{
name|assertTrue
argument_list|(
name|bulkAction
operator|.
name|indexCreated
argument_list|)
expr_stmt|;
block|}
argument_list|,
name|exception
lambda|->
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
name|exception
argument_list|)
throw|;
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

