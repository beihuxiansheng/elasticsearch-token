begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.ingest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ingest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|RandomDocumentPicks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|IngestDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
operator|.
name|EMPTY_PARAMS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|IngestDocumentTests
operator|.
name|assertIngestDocument
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|not
import|;
end_import

begin_class
DECL|class|WriteableIngestDocumentTests
specifier|public
class|class
name|WriteableIngestDocumentTests
extends|extends
name|ESTestCase
block|{
DECL|method|testEqualsAndHashcode
specifier|public
name|void
name|testEqualsAndHashcode
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sourceAndMetadata
init|=
name|RandomDocumentPicks
operator|.
name|randomSource
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|numFields
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
name|IngestDocument
operator|.
name|MetaData
operator|.
name|values
argument_list|()
operator|.
name|length
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numFields
condition|;
name|i
operator|++
control|)
block|{
name|sourceAndMetadata
operator|.
name|put
argument_list|(
name|randomFrom
argument_list|(
name|IngestDocument
operator|.
name|MetaData
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|getFieldName
argument_list|()
argument_list|,
name|randomAsciiOfLengthBetween
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|ingestMetadata
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|numFields
operator|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numFields
condition|;
name|i
operator|++
control|)
block|{
name|ingestMetadata
operator|.
name|put
argument_list|(
name|randomAsciiOfLengthBetween
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|randomAsciiOfLengthBetween
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|WriteableIngestDocument
name|ingestDocument
init|=
operator|new
name|WriteableIngestDocument
argument_list|(
operator|new
name|IngestDocument
argument_list|(
name|sourceAndMetadata
argument_list|,
name|ingestMetadata
argument_list|)
argument_list|)
decl_stmt|;
name|boolean
name|changed
init|=
literal|false
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|otherSourceAndMetadata
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|otherSourceAndMetadata
operator|=
name|RandomDocumentPicks
operator|.
name|randomSource
argument_list|(
name|random
argument_list|()
argument_list|)
expr_stmt|;
name|changed
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|otherSourceAndMetadata
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|sourceAndMetadata
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|numFields
operator|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
name|IngestDocument
operator|.
name|MetaData
operator|.
name|values
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numFields
condition|;
name|i
operator|++
control|)
block|{
name|otherSourceAndMetadata
operator|.
name|put
argument_list|(
name|randomFrom
argument_list|(
name|IngestDocument
operator|.
name|MetaData
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|getFieldName
argument_list|()
argument_list|,
name|randomAsciiOfLengthBetween
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|changed
operator|=
literal|true
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|otherIngestMetadata
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|otherIngestMetadata
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|numFields
operator|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numFields
condition|;
name|i
operator|++
control|)
block|{
name|otherIngestMetadata
operator|.
name|put
argument_list|(
name|randomAsciiOfLengthBetween
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|randomAsciiOfLengthBetween
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|changed
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|otherIngestMetadata
operator|=
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|ingestMetadata
argument_list|)
expr_stmt|;
block|}
name|WriteableIngestDocument
name|otherIngestDocument
init|=
operator|new
name|WriteableIngestDocument
argument_list|(
operator|new
name|IngestDocument
argument_list|(
name|otherSourceAndMetadata
argument_list|,
name|otherIngestMetadata
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|changed
condition|)
block|{
name|assertThat
argument_list|(
name|ingestDocument
argument_list|,
name|not
argument_list|(
name|equalTo
argument_list|(
name|otherIngestDocument
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|otherIngestDocument
argument_list|,
name|not
argument_list|(
name|equalTo
argument_list|(
name|ingestDocument
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|ingestDocument
argument_list|,
name|equalTo
argument_list|(
name|otherIngestDocument
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|otherIngestDocument
argument_list|,
name|equalTo
argument_list|(
name|ingestDocument
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ingestDocument
operator|.
name|hashCode
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|otherIngestDocument
operator|.
name|hashCode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|WriteableIngestDocument
name|thirdIngestDocument
init|=
operator|new
name|WriteableIngestDocument
argument_list|(
operator|new
name|IngestDocument
argument_list|(
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|sourceAndMetadata
argument_list|)
argument_list|,
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|ingestMetadata
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thirdIngestDocument
argument_list|,
name|equalTo
argument_list|(
name|ingestDocument
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ingestDocument
argument_list|,
name|equalTo
argument_list|(
name|thirdIngestDocument
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ingestDocument
operator|.
name|hashCode
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|thirdIngestDocument
operator|.
name|hashCode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testSerialization
specifier|public
name|void
name|testSerialization
parameter_list|()
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sourceAndMetadata
init|=
name|RandomDocumentPicks
operator|.
name|randomSource
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|numFields
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
name|IngestDocument
operator|.
name|MetaData
operator|.
name|values
argument_list|()
operator|.
name|length
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numFields
condition|;
name|i
operator|++
control|)
block|{
name|sourceAndMetadata
operator|.
name|put
argument_list|(
name|randomFrom
argument_list|(
name|IngestDocument
operator|.
name|MetaData
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|getFieldName
argument_list|()
argument_list|,
name|randomAsciiOfLengthBetween
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|ingestMetadata
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|numFields
operator|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numFields
condition|;
name|i
operator|++
control|)
block|{
name|ingestMetadata
operator|.
name|put
argument_list|(
name|randomAsciiOfLengthBetween
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|randomAsciiOfLengthBetween
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|WriteableIngestDocument
name|writeableIngestDocument
init|=
operator|new
name|WriteableIngestDocument
argument_list|(
operator|new
name|IngestDocument
argument_list|(
name|sourceAndMetadata
argument_list|,
name|ingestMetadata
argument_list|)
argument_list|)
decl_stmt|;
name|BytesStreamOutput
name|out
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|writeableIngestDocument
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|StreamInput
name|streamInput
init|=
name|out
operator|.
name|bytes
argument_list|()
operator|.
name|streamInput
argument_list|()
decl_stmt|;
name|WriteableIngestDocument
name|otherWriteableIngestDocument
init|=
operator|new
name|WriteableIngestDocument
argument_list|(
name|streamInput
argument_list|)
decl_stmt|;
name|assertIngestDocument
argument_list|(
name|otherWriteableIngestDocument
operator|.
name|getIngestDocument
argument_list|()
argument_list|,
name|writeableIngestDocument
operator|.
name|getIngestDocument
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testToXContent
specifier|public
name|void
name|testToXContent
parameter_list|()
throws|throws
name|IOException
block|{
name|IngestDocument
name|ingestDocument
init|=
name|RandomDocumentPicks
operator|.
name|randomIngestDocument
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|WriteableIngestDocument
name|writeableIngestDocument
init|=
operator|new
name|WriteableIngestDocument
argument_list|(
operator|new
name|IngestDocument
argument_list|(
name|ingestDocument
argument_list|)
argument_list|)
decl_stmt|;
comment|// using a cbor builder here, so that byte arrays do not get converted, so equalTo() below works
name|XContentBuilder
name|builder
init|=
name|XContentFactory
operator|.
name|cborBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|startObject
argument_list|()
expr_stmt|;
name|writeableIngestDocument
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|EMPTY_PARAMS
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|toXContentMap
init|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
name|builder
operator|.
name|bytes
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|v2
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|toXContentDoc
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|toXContentMap
operator|.
name|get
argument_list|(
literal|"doc"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|toXContentSource
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|toXContentDoc
operator|.
name|get
argument_list|(
literal|"_source"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|toXContentIngestMetadata
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|toXContentDoc
operator|.
name|get
argument_list|(
literal|"_ingest"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|IngestDocument
operator|.
name|MetaData
argument_list|,
name|String
argument_list|>
name|metadataMap
init|=
name|ingestDocument
operator|.
name|extractMetadata
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|IngestDocument
operator|.
name|MetaData
argument_list|,
name|String
argument_list|>
name|metadata
range|:
name|metadataMap
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|fieldName
init|=
name|metadata
operator|.
name|getKey
argument_list|()
operator|.
name|getFieldName
argument_list|()
decl_stmt|;
if|if
condition|(
name|metadata
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertThat
argument_list|(
name|toXContentDoc
operator|.
name|containsKey
argument_list|(
name|fieldName
argument_list|)
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|toXContentDoc
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|metadata
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|IngestDocument
name|serializedIngestDocument
init|=
operator|new
name|IngestDocument
argument_list|(
name|toXContentSource
argument_list|,
name|toXContentIngestMetadata
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|serializedIngestDocument
argument_list|,
name|equalTo
argument_list|(
name|serializedIngestDocument
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

