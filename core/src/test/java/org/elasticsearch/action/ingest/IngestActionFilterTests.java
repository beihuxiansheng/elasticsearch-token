begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.ingest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ingest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|DocumentRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|delete
operator|.
name|DeleteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|ActionFilterChain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|update
operator|.
name|UpdateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|IngestService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|PipelineExecutionService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|PipelineStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|TestProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|CompoundProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|Pipeline
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|node
operator|.
name|service
operator|.
name|NodeService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|tasks
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|stubbing
operator|.
name|Answer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Consumer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|nullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|eq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|same
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doAnswer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verifyZeroInteractions
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|IngestActionFilterTests
specifier|public
class|class
name|IngestActionFilterTests
extends|extends
name|ESTestCase
block|{
DECL|field|filter
specifier|private
name|IngestActionFilter
name|filter
decl_stmt|;
DECL|field|executionService
specifier|private
name|PipelineExecutionService
name|executionService
decl_stmt|;
annotation|@
name|Before
DECL|method|setup
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|executionService
operator|=
name|mock
argument_list|(
name|PipelineExecutionService
operator|.
name|class
argument_list|)
expr_stmt|;
name|IngestService
name|ingestService
init|=
name|mock
argument_list|(
name|IngestService
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|ingestService
operator|.
name|getPipelineExecutionService
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|executionService
argument_list|)
expr_stmt|;
name|NodeService
name|nodeService
init|=
name|mock
argument_list|(
name|NodeService
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|nodeService
operator|.
name|getIngestService
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ingestService
argument_list|)
expr_stmt|;
name|filter
operator|=
operator|new
name|IngestActionFilter
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|nodeService
argument_list|)
expr_stmt|;
block|}
DECL|method|testApplyNoPipelineId
specifier|public
name|void
name|testApplyNoPipelineId
parameter_list|()
throws|throws
name|Exception
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|()
decl_stmt|;
name|Task
name|task
init|=
name|mock
argument_list|(
name|Task
operator|.
name|class
argument_list|)
decl_stmt|;
name|ActionListener
name|actionListener
init|=
name|mock
argument_list|(
name|ActionListener
operator|.
name|class
argument_list|)
decl_stmt|;
name|ActionFilterChain
name|actionFilterChain
init|=
name|mock
argument_list|(
name|ActionFilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|filter
operator|.
name|apply
argument_list|(
name|task
argument_list|,
name|IndexAction
operator|.
name|NAME
argument_list|,
name|indexRequest
argument_list|,
name|actionListener
argument_list|,
name|actionFilterChain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|actionFilterChain
argument_list|)
operator|.
name|proceed
argument_list|(
name|task
argument_list|,
name|IndexAction
operator|.
name|NAME
argument_list|,
name|indexRequest
argument_list|,
name|actionListener
argument_list|)
expr_stmt|;
name|verifyZeroInteractions
argument_list|(
name|executionService
argument_list|,
name|actionFilterChain
argument_list|)
expr_stmt|;
block|}
DECL|method|testApplyBulkNoPipelineId
specifier|public
name|void
name|testApplyBulkNoPipelineId
parameter_list|()
throws|throws
name|Exception
block|{
name|BulkRequest
name|bulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
decl_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|IndexRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Task
name|task
init|=
name|mock
argument_list|(
name|Task
operator|.
name|class
argument_list|)
decl_stmt|;
name|ActionListener
name|actionListener
init|=
name|mock
argument_list|(
name|ActionListener
operator|.
name|class
argument_list|)
decl_stmt|;
name|ActionFilterChain
name|actionFilterChain
init|=
name|mock
argument_list|(
name|ActionFilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|filter
operator|.
name|apply
argument_list|(
name|task
argument_list|,
name|BulkAction
operator|.
name|NAME
argument_list|,
name|bulkRequest
argument_list|,
name|actionListener
argument_list|,
name|actionFilterChain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|actionFilterChain
argument_list|)
operator|.
name|proceed
argument_list|(
name|task
argument_list|,
name|BulkAction
operator|.
name|NAME
argument_list|,
name|bulkRequest
argument_list|,
name|actionListener
argument_list|)
expr_stmt|;
name|verifyZeroInteractions
argument_list|(
name|executionService
argument_list|,
name|actionFilterChain
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testApplyIngestIdViaRequestParam
specifier|public
name|void
name|testApplyIngestIdViaRequestParam
parameter_list|()
throws|throws
name|Exception
block|{
name|Task
name|task
init|=
name|mock
argument_list|(
name|Task
operator|.
name|class
argument_list|)
decl_stmt|;
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"_index"
argument_list|,
literal|"_type"
argument_list|,
literal|"_id"
argument_list|)
operator|.
name|setPipeline
argument_list|(
literal|"_id"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|ActionListener
name|actionListener
init|=
name|mock
argument_list|(
name|ActionListener
operator|.
name|class
argument_list|)
decl_stmt|;
name|ActionFilterChain
name|actionFilterChain
init|=
name|mock
argument_list|(
name|ActionFilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|filter
operator|.
name|apply
argument_list|(
name|task
argument_list|,
name|IndexAction
operator|.
name|NAME
argument_list|,
name|indexRequest
argument_list|,
name|actionListener
argument_list|,
name|actionFilterChain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|executionService
argument_list|)
operator|.
name|executeIndexRequest
argument_list|(
name|same
argument_list|(
name|indexRequest
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verifyZeroInteractions
argument_list|(
name|actionFilterChain
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testApplyExecuted
specifier|public
name|void
name|testApplyExecuted
parameter_list|()
throws|throws
name|Exception
block|{
name|Task
name|task
init|=
name|mock
argument_list|(
name|Task
operator|.
name|class
argument_list|)
decl_stmt|;
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"_index"
argument_list|,
literal|"_type"
argument_list|,
literal|"_id"
argument_list|)
operator|.
name|setPipeline
argument_list|(
literal|"_id"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|ActionListener
name|actionListener
init|=
name|mock
argument_list|(
name|ActionListener
operator|.
name|class
argument_list|)
decl_stmt|;
name|ActionFilterChain
name|actionFilterChain
init|=
name|mock
argument_list|(
name|ActionFilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|Answer
name|answer
init|=
name|invocationOnMock
lambda|->
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Consumer
argument_list|<
name|Boolean
argument_list|>
name|listener
init|=
operator|(
name|Consumer
operator|)
name|invocationOnMock
operator|.
name|getArguments
argument_list|()
index|[
literal|2
index|]
decl_stmt|;
name|listener
operator|.
name|accept
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
decl_stmt|;
name|doAnswer
argument_list|(
name|answer
argument_list|)
operator|.
name|when
argument_list|(
name|executionService
argument_list|)
operator|.
name|executeIndexRequest
argument_list|(
name|any
argument_list|(
name|IndexRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|filter
operator|.
name|apply
argument_list|(
name|task
argument_list|,
name|IndexAction
operator|.
name|NAME
argument_list|,
name|indexRequest
argument_list|,
name|actionListener
argument_list|,
name|actionFilterChain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|executionService
argument_list|)
operator|.
name|executeIndexRequest
argument_list|(
name|same
argument_list|(
name|indexRequest
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|actionFilterChain
argument_list|)
operator|.
name|proceed
argument_list|(
name|task
argument_list|,
name|IndexAction
operator|.
name|NAME
argument_list|,
name|indexRequest
argument_list|,
name|actionListener
argument_list|)
expr_stmt|;
name|verifyZeroInteractions
argument_list|(
name|actionListener
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testApplyFailed
specifier|public
name|void
name|testApplyFailed
parameter_list|()
throws|throws
name|Exception
block|{
name|Task
name|task
init|=
name|mock
argument_list|(
name|Task
operator|.
name|class
argument_list|)
decl_stmt|;
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"_index"
argument_list|,
literal|"_type"
argument_list|,
literal|"_id"
argument_list|)
operator|.
name|setPipeline
argument_list|(
literal|"_id"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|ActionListener
name|actionListener
init|=
name|mock
argument_list|(
name|ActionListener
operator|.
name|class
argument_list|)
decl_stmt|;
name|ActionFilterChain
name|actionFilterChain
init|=
name|mock
argument_list|(
name|ActionFilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|RuntimeException
name|exception
init|=
operator|new
name|RuntimeException
argument_list|()
decl_stmt|;
name|Answer
name|answer
init|=
name|invocationOnMock
lambda|->
block|{
name|Consumer
argument_list|<
name|Throwable
argument_list|>
name|handler
init|=
operator|(
name|Consumer
operator|)
name|invocationOnMock
operator|.
name|getArguments
argument_list|()
index|[
literal|1
index|]
decl_stmt|;
name|handler
operator|.
name|accept
argument_list|(
name|exception
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
decl_stmt|;
name|doAnswer
argument_list|(
name|answer
argument_list|)
operator|.
name|when
argument_list|(
name|executionService
argument_list|)
operator|.
name|executeIndexRequest
argument_list|(
name|same
argument_list|(
name|indexRequest
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|filter
operator|.
name|apply
argument_list|(
name|task
argument_list|,
name|IndexAction
operator|.
name|NAME
argument_list|,
name|indexRequest
argument_list|,
name|actionListener
argument_list|,
name|actionFilterChain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|executionService
argument_list|)
operator|.
name|executeIndexRequest
argument_list|(
name|same
argument_list|(
name|indexRequest
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|actionListener
argument_list|)
operator|.
name|onFailure
argument_list|(
name|exception
argument_list|)
expr_stmt|;
name|verifyZeroInteractions
argument_list|(
name|actionFilterChain
argument_list|)
expr_stmt|;
block|}
DECL|method|testApplyWithBulkRequest
specifier|public
name|void
name|testApplyWithBulkRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|Task
name|task
init|=
name|mock
argument_list|(
name|Task
operator|.
name|class
argument_list|)
decl_stmt|;
name|ThreadPool
name|threadPool
init|=
name|mock
argument_list|(
name|ThreadPool
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|threadPool
operator|.
name|executor
argument_list|(
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Runnable
operator|::
name|run
argument_list|)
expr_stmt|;
name|PipelineStore
name|store
init|=
name|mock
argument_list|(
name|PipelineStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|Processor
name|processor
init|=
operator|new
name|TestProcessor
argument_list|(
name|ingestDocument
lambda|->
name|ingestDocument
operator|.
name|setFieldValue
argument_list|(
literal|"field2"
argument_list|,
literal|"value2"
argument_list|)
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|store
operator|.
name|get
argument_list|(
literal|"_id"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Pipeline
argument_list|(
literal|"_id"
argument_list|,
literal|"_description"
argument_list|,
operator|new
name|CompoundProcessor
argument_list|(
name|processor
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|executionService
operator|=
operator|new
name|PipelineExecutionService
argument_list|(
name|store
argument_list|,
name|threadPool
argument_list|)
expr_stmt|;
name|IngestService
name|ingestService
init|=
name|mock
argument_list|(
name|IngestService
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|ingestService
operator|.
name|getPipelineExecutionService
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|executionService
argument_list|)
expr_stmt|;
name|NodeService
name|nodeService
init|=
name|mock
argument_list|(
name|NodeService
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|nodeService
operator|.
name|getIngestService
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ingestService
argument_list|)
expr_stmt|;
name|filter
operator|=
operator|new
name|IngestActionFilter
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|nodeService
argument_list|)
expr_stmt|;
name|BulkRequest
name|bulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
decl_stmt|;
name|int
name|numRequest
init|=
name|scaledRandomIntBetween
argument_list|(
literal|8
argument_list|,
literal|64
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numRequest
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|rarely
argument_list|()
condition|)
block|{
name|DocumentRequest
name|request
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|request
operator|=
operator|new
name|DeleteRequest
argument_list|(
literal|"_index"
argument_list|,
literal|"_type"
argument_list|,
literal|"_id"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|request
operator|=
operator|new
name|UpdateRequest
argument_list|(
literal|"_index"
argument_list|,
literal|"_type"
argument_list|,
literal|"_id"
argument_list|)
expr_stmt|;
block|}
name|bulkRequest
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"_index"
argument_list|,
literal|"_type"
argument_list|,
literal|"_id"
argument_list|)
operator|.
name|setPipeline
argument_list|(
literal|"_id"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
expr_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
name|indexRequest
argument_list|)
expr_stmt|;
block|}
block|}
name|ActionListener
name|actionListener
init|=
name|mock
argument_list|(
name|ActionListener
operator|.
name|class
argument_list|)
decl_stmt|;
name|ActionFilterChain
name|actionFilterChain
init|=
name|mock
argument_list|(
name|ActionFilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|filter
operator|.
name|apply
argument_list|(
name|task
argument_list|,
name|BulkAction
operator|.
name|NAME
argument_list|,
name|bulkRequest
argument_list|,
name|actionListener
argument_list|,
name|actionFilterChain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|actionFilterChain
argument_list|)
operator|.
name|proceed
argument_list|(
name|eq
argument_list|(
name|task
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BulkAction
operator|.
name|NAME
argument_list|)
argument_list|,
name|eq
argument_list|(
name|bulkRequest
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|verifyZeroInteractions
argument_list|(
name|actionListener
argument_list|)
expr_stmt|;
name|int
name|assertedRequests
init|=
literal|0
decl_stmt|;
for|for
control|(
name|DocumentRequest
name|actionRequest
range|:
name|bulkRequest
operator|.
name|requests
argument_list|()
control|)
block|{
if|if
condition|(
name|actionRequest
operator|instanceof
name|IndexRequest
condition|)
block|{
name|IndexRequest
name|indexRequest
init|=
operator|(
name|IndexRequest
operator|)
name|actionRequest
decl_stmt|;
name|assertThat
argument_list|(
name|indexRequest
operator|.
name|sourceAsMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexRequest
operator|.
name|sourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexRequest
operator|.
name|sourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field2"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertedRequests
operator|++
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|assertedRequests
argument_list|,
name|equalTo
argument_list|(
name|numRequest
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testIndexApiSinglePipelineExecution
specifier|public
name|void
name|testIndexApiSinglePipelineExecution
parameter_list|()
block|{
name|Answer
name|answer
init|=
name|invocationOnMock
lambda|->
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Consumer
argument_list|<
name|Boolean
argument_list|>
name|listener
init|=
operator|(
name|Consumer
operator|)
name|invocationOnMock
operator|.
name|getArguments
argument_list|()
index|[
literal|2
index|]
decl_stmt|;
name|listener
operator|.
name|accept
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
decl_stmt|;
name|doAnswer
argument_list|(
name|answer
argument_list|)
operator|.
name|when
argument_list|(
name|executionService
argument_list|)
operator|.
name|executeIndexRequest
argument_list|(
name|any
argument_list|(
name|IndexRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Task
name|task
init|=
name|mock
argument_list|(
name|Task
operator|.
name|class
argument_list|)
decl_stmt|;
name|ActionListener
name|actionListener
init|=
name|mock
argument_list|(
name|ActionListener
operator|.
name|class
argument_list|)
decl_stmt|;
name|ActionFilterChain
name|actionFilterChain
init|=
name|mock
argument_list|(
name|ActionFilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"_index"
argument_list|,
literal|"_type"
argument_list|,
literal|"_id"
argument_list|)
operator|.
name|setPipeline
argument_list|(
literal|"_id"
argument_list|)
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|filter
operator|.
name|apply
argument_list|(
name|task
argument_list|,
name|IndexAction
operator|.
name|NAME
argument_list|,
name|indexRequest
argument_list|,
name|actionListener
argument_list|,
name|actionFilterChain
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indexRequest
operator|.
name|getPipeline
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|apply
argument_list|(
name|task
argument_list|,
name|IndexAction
operator|.
name|NAME
argument_list|,
name|indexRequest
argument_list|,
name|actionListener
argument_list|,
name|actionFilterChain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|executionService
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|executeIndexRequest
argument_list|(
name|same
argument_list|(
name|indexRequest
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Consumer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|actionFilterChain
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|proceed
argument_list|(
name|task
argument_list|,
name|IndexAction
operator|.
name|NAME
argument_list|,
name|indexRequest
argument_list|,
name|actionListener
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

