begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.action.ingest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ingest
package|;
end_package

begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkItemResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|nullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
DECL|class|BulkRequestModifierTests
specifier|public
class|class
name|BulkRequestModifierTests
extends|extends
name|ESTestCase
block|{
DECL|method|testBulkRequestModifier
specifier|public
name|void
name|testBulkRequestModifier
parameter_list|()
block|{
name|int
name|numRequests
init|=
name|scaledRandomIntBetween
argument_list|(
literal|8
argument_list|,
literal|64
argument_list|)
decl_stmt|;
name|BulkRequest
name|bulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numRequests
condition|;
name|i
operator|++
control|)
block|{
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"_index"
argument_list|,
literal|"_type"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|source
argument_list|(
literal|"{}"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|CaptureActionListener
name|actionListener
init|=
operator|new
name|CaptureActionListener
argument_list|()
decl_stmt|;
name|IngestActionFilter
operator|.
name|BulkRequestModifier
name|bulkRequestModifier
init|=
operator|new
name|IngestActionFilter
operator|.
name|BulkRequestModifier
argument_list|(
name|bulkRequest
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|Set
argument_list|<
name|Integer
argument_list|>
name|failedSlots
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
while|while
condition|(
name|bulkRequestModifier
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|bulkRequestModifier
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|bulkRequestModifier
operator|.
name|markCurrentItemAsFailed
argument_list|(
operator|new
name|RuntimeException
argument_list|()
argument_list|)
expr_stmt|;
name|failedSlots
operator|.
name|add
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|i
operator|++
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|bulkRequestModifier
operator|.
name|getBulkRequest
argument_list|()
operator|.
name|requests
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|numRequests
operator|-
name|failedSlots
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// simulate that we actually executed the modified bulk request:
name|long
name|ingestTook
init|=
name|randomLong
argument_list|()
decl_stmt|;
name|ActionListener
argument_list|<
name|BulkResponse
argument_list|>
name|result
init|=
name|bulkRequestModifier
operator|.
name|wrapActionListenerIfNeeded
argument_list|(
name|ingestTook
argument_list|,
name|actionListener
argument_list|)
decl_stmt|;
name|result
operator|.
name|onResponse
argument_list|(
operator|new
name|BulkResponse
argument_list|(
operator|new
name|BulkItemResponse
index|[
name|numRequests
operator|-
name|failedSlots
operator|.
name|size
argument_list|()
index|]
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|BulkResponse
name|bulkResponse
init|=
name|actionListener
operator|.
name|getResponse
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|bulkResponse
operator|.
name|getIngestTookInMillis
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|ingestTook
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|bulkResponse
operator|.
name|getItems
argument_list|()
operator|.
name|length
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|failedSlots
operator|.
name|contains
argument_list|(
name|j
argument_list|)
condition|)
block|{
name|BulkItemResponse
name|item
init|=
name|bulkResponse
operator|.
name|getItems
argument_list|()
index|[
name|j
index|]
decl_stmt|;
name|assertThat
argument_list|(
name|item
operator|.
name|isFailed
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|item
operator|.
name|getFailure
argument_list|()
operator|.
name|getIndex
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_index"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|item
operator|.
name|getFailure
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"_type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|item
operator|.
name|getFailure
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|j
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|item
operator|.
name|getFailure
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"java.lang.RuntimeException"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|bulkResponse
operator|.
name|getItems
argument_list|()
index|[
name|j
index|]
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testPipelineFailures
specifier|public
name|void
name|testPipelineFailures
parameter_list|()
block|{
name|BulkRequest
name|originalBulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|32
condition|;
name|i
operator|++
control|)
block|{
name|originalBulkRequest
operator|.
name|add
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|IngestActionFilter
operator|.
name|BulkRequestModifier
name|modifier
init|=
operator|new
name|IngestActionFilter
operator|.
name|BulkRequestModifier
argument_list|(
name|originalBulkRequest
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|modifier
operator|.
name|hasNext
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|modifier
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|i
operator|%
literal|2
operator|==
literal|0
condition|)
block|{
name|modifier
operator|.
name|markCurrentItemAsFailed
argument_list|(
operator|new
name|RuntimeException
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// So half of the requests have "failed", so only the successful requests are left:
name|BulkRequest
name|bulkRequest
init|=
name|modifier
operator|.
name|getBulkRequest
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|bulkRequest
operator|.
name|requests
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|BulkItemResponse
argument_list|>
name|responses
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|ActionListener
argument_list|<
name|BulkResponse
argument_list|>
name|bulkResponseListener
init|=
name|modifier
operator|.
name|wrapActionListenerIfNeeded
argument_list|(
literal|1L
argument_list|,
operator|new
name|ActionListener
argument_list|<
name|BulkResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|BulkResponse
name|bulkItemResponses
parameter_list|)
block|{
name|responses
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|bulkItemResponses
operator|.
name|getItems
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{             }
block|}
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|BulkItemResponse
argument_list|>
name|originalResponses
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|ActionRequest
name|actionRequest
range|:
name|bulkRequest
operator|.
name|requests
argument_list|()
control|)
block|{
name|IndexRequest
name|indexRequest
init|=
operator|(
name|IndexRequest
operator|)
name|actionRequest
decl_stmt|;
name|IndexResponse
name|indexResponse
init|=
operator|new
name|IndexResponse
argument_list|(
operator|new
name|ShardId
argument_list|(
literal|"index"
argument_list|,
literal|"_na_"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|indexRequest
operator|.
name|type
argument_list|()
argument_list|,
name|indexRequest
operator|.
name|id
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|originalResponses
operator|.
name|add
argument_list|(
operator|new
name|BulkItemResponse
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|indexRequest
operator|.
name|id
argument_list|()
argument_list|)
argument_list|,
name|indexRequest
operator|.
name|opType
argument_list|()
operator|.
name|lowercase
argument_list|()
argument_list|,
name|indexResponse
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|bulkResponseListener
operator|.
name|onResponse
argument_list|(
operator|new
name|BulkResponse
argument_list|(
name|originalResponses
operator|.
name|toArray
argument_list|(
operator|new
name|BulkItemResponse
index|[
name|originalResponses
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|responses
operator|.
name|size
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
literal|32
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|32
condition|;
name|i
operator|++
control|)
block|{
name|assertThat
argument_list|(
name|responses
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testNoFailures
specifier|public
name|void
name|testNoFailures
parameter_list|()
block|{
name|BulkRequest
name|originalBulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|32
condition|;
name|i
operator|++
control|)
block|{
name|originalBulkRequest
operator|.
name|add
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|IngestActionFilter
operator|.
name|BulkRequestModifier
name|modifier
init|=
operator|new
name|IngestActionFilter
operator|.
name|BulkRequestModifier
argument_list|(
name|originalBulkRequest
argument_list|)
decl_stmt|;
while|while
condition|(
name|modifier
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|modifier
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
name|BulkRequest
name|bulkRequest
init|=
name|modifier
operator|.
name|getBulkRequest
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|bulkRequest
argument_list|,
name|Matchers
operator|.
name|sameInstance
argument_list|(
name|originalBulkRequest
argument_list|)
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|ActionListener
argument_list|<
name|BulkResponse
argument_list|>
name|actionListener
init|=
name|mock
argument_list|(
name|ActionListener
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|modifier
operator|.
name|wrapActionListenerIfNeeded
argument_list|(
literal|1L
argument_list|,
name|actionListener
argument_list|)
operator|.
name|getClass
argument_list|()
operator|.
name|isAnonymousClass
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|class|CaptureActionListener
specifier|private
specifier|static
class|class
name|CaptureActionListener
implements|implements
name|ActionListener
argument_list|<
name|BulkResponse
argument_list|>
block|{
DECL|field|response
specifier|private
name|BulkResponse
name|response
decl_stmt|;
annotation|@
name|Override
DECL|method|onResponse
specifier|public
name|void
name|onResponse
parameter_list|(
name|BulkResponse
name|bulkItemResponses
parameter_list|)
block|{
name|this
operator|.
name|response
operator|=
name|bulkItemResponses
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onFailure
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{         }
DECL|method|getResponse
specifier|public
name|BulkResponse
name|getResponse
parameter_list|()
block|{
return|return
name|response
return|;
block|}
block|}
block|}
end_class

end_unit

