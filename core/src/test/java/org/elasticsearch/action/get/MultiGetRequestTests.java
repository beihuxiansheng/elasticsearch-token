begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.get
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|get
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|subphase
operator|.
name|FetchSourceContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_class
DECL|class|MultiGetRequestTests
specifier|public
class|class
name|MultiGetRequestTests
extends|extends
name|ESTestCase
block|{
DECL|method|testAddWithInvalidSourceValueIsRejected
specifier|public
name|void
name|testAddWithInvalidSourceValueIsRejected
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|sourceValue
init|=
name|randomFrom
argument_list|(
literal|"on"
argument_list|,
literal|"off"
argument_list|,
literal|"0"
argument_list|,
literal|"1"
argument_list|)
decl_stmt|;
name|XContentParser
name|parser
init|=
name|createParser
argument_list|(
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startArray
argument_list|(
literal|"docs"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"_source"
argument_list|,
name|sourceValue
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
decl_stmt|;
name|MultiGetRequest
name|multiGetRequest
init|=
operator|new
name|MultiGetRequest
argument_list|()
decl_stmt|;
name|IllegalArgumentException
name|ex
init|=
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|multiGetRequest
operator|.
name|add
argument_list|(
name|randomAsciiOfLength
argument_list|(
literal|5
argument_list|)
argument_list|,
name|randomAsciiOfLength
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|null
argument_list|,
name|FetchSourceContext
operator|.
name|FETCH_SOURCE
argument_list|,
literal|null
argument_list|,
name|parser
argument_list|,
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Failed to parse value ["
operator|+
name|sourceValue
operator|+
literal|"] as only [true] or [false] are allowed."
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testAddWithValidSourceValueIsAccepted
specifier|public
name|void
name|testAddWithValidSourceValueIsAccepted
parameter_list|()
throws|throws
name|Exception
block|{
name|XContentParser
name|parser
init|=
name|createParser
argument_list|(
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|startArray
argument_list|(
literal|"docs"
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"_source"
argument_list|,
name|randomFrom
argument_list|(
literal|"false"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"_source"
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|endArray
argument_list|()
operator|.
name|endObject
argument_list|()
argument_list|)
decl_stmt|;
name|MultiGetRequest
name|multiGetRequest
init|=
operator|new
name|MultiGetRequest
argument_list|()
decl_stmt|;
name|multiGetRequest
operator|.
name|add
argument_list|(
name|randomAsciiOfLength
argument_list|(
literal|5
argument_list|)
argument_list|,
name|randomAsciiOfLength
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|null
argument_list|,
name|FetchSourceContext
operator|.
name|FETCH_SOURCE
argument_list|,
literal|null
argument_list|,
name|parser
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|multiGetRequest
operator|.
name|getItems
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

