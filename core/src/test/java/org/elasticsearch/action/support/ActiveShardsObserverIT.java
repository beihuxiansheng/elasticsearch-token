begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.support
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ListenableActionFuture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|create
operator|.
name|CreateIndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
operator|.
name|INDEX_NUMBER_OF_REPLICAS_SETTING
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
operator|.
name|INDEX_NUMBER_OF_SHARDS_SETTING
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertAcked
import|;
end_import

begin_comment
comment|/**  * Tests that the index creation operation waits for the appropriate  * number of active shards to be started before returning.  */
end_comment

begin_class
DECL|class|ActiveShardsObserverIT
specifier|public
class|class
name|ActiveShardsObserverIT
extends|extends
name|ESIntegTestCase
block|{
DECL|method|testCreateIndexNoActiveShardsTimesOut
specifier|public
name|void
name|testCreateIndexNoActiveShardsTimesOut
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
operator|.
name|Builder
name|settingsBuilder
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_SHARDS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_REPLICAS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|internalCluster
argument_list|()
operator|.
name|getNodeNames
argument_list|()
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|String
name|exclude
init|=
name|String
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|getNodeNames
argument_list|()
argument_list|)
decl_stmt|;
name|settingsBuilder
operator|.
name|put
argument_list|(
literal|"index.routing.allocation.exclude._name"
argument_list|,
name|exclude
argument_list|)
expr_stmt|;
block|}
name|Settings
name|settings
init|=
name|settingsBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|String
name|indexName
init|=
literal|"test-idx"
decl_stmt|;
name|assertFalse
argument_list|(
name|prepareCreate
argument_list|(
name|indexName
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|setWaitForActiveShards
argument_list|(
name|randomBoolean
argument_list|()
condition|?
name|ActiveShardCount
operator|.
name|from
argument_list|(
literal|1
argument_list|)
else|:
name|ActiveShardCount
operator|.
name|ALL
argument_list|)
operator|.
name|setTimeout
argument_list|(
literal|"100ms"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isShardsAcked
argument_list|()
argument_list|)
expr_stmt|;
name|waitForIndexCreationToComplete
argument_list|(
name|indexName
argument_list|)
expr_stmt|;
block|}
DECL|method|testCreateIndexNoActiveShardsNoWaiting
specifier|public
name|void
name|testCreateIndexNoActiveShardsNoWaiting
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
operator|.
name|Builder
name|settingsBuilder
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_SHARDS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_REPLICAS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|internalCluster
argument_list|()
operator|.
name|getNodeNames
argument_list|()
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|String
name|exclude
init|=
name|String
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|getNodeNames
argument_list|()
argument_list|)
decl_stmt|;
name|settingsBuilder
operator|.
name|put
argument_list|(
literal|"index.routing.allocation.exclude._name"
argument_list|,
name|exclude
argument_list|)
expr_stmt|;
block|}
name|Settings
name|settings
init|=
name|settingsBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
name|CreateIndexResponse
name|response
init|=
name|prepareCreate
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|setWaitForActiveShards
argument_list|(
name|ActiveShardCount
operator|.
name|NONE
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|response
operator|.
name|isAcknowledged
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testCreateIndexNotEnoughActiveShardsTimesOut
specifier|public
name|void
name|testCreateIndexNotEnoughActiveShardsTimesOut
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|numDataNodes
init|=
name|internalCluster
argument_list|()
operator|.
name|numDataNodes
argument_list|()
decl_stmt|;
specifier|final
name|int
name|numReplicas
init|=
name|numDataNodes
operator|+
name|randomInt
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_SHARDS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_REPLICAS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|numReplicas
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|String
name|indexName
init|=
literal|"test-idx"
decl_stmt|;
name|assertFalse
argument_list|(
name|prepareCreate
argument_list|(
name|indexName
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|setWaitForActiveShards
argument_list|(
name|randomIntBetween
argument_list|(
name|numDataNodes
operator|+
literal|1
argument_list|,
name|numReplicas
operator|+
literal|1
argument_list|)
argument_list|)
operator|.
name|setTimeout
argument_list|(
literal|"100ms"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isShardsAcked
argument_list|()
argument_list|)
expr_stmt|;
name|waitForIndexCreationToComplete
argument_list|(
name|indexName
argument_list|)
expr_stmt|;
block|}
DECL|method|testCreateIndexEnoughActiveShards
specifier|public
name|void
name|testCreateIndexEnoughActiveShards
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|indexName
init|=
literal|"test-idx"
decl_stmt|;
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_SHARDS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_REPLICAS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|numDataNodes
argument_list|()
operator|+
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
name|indexName
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|setWaitForActiveShards
argument_list|(
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|numDataNodes
argument_list|()
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testCreateIndexWaitsForAllActiveShards
specifier|public
name|void
name|testCreateIndexWaitsForAllActiveShards
parameter_list|()
throws|throws
name|Exception
block|{
comment|// not enough data nodes, index creation times out
specifier|final
name|int
name|numReplicas
init|=
name|internalCluster
argument_list|()
operator|.
name|numDataNodes
argument_list|()
operator|+
name|randomInt
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_SHARDS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_REPLICAS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|numReplicas
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|String
name|indexName
init|=
literal|"test-idx"
decl_stmt|;
name|assertFalse
argument_list|(
name|prepareCreate
argument_list|(
name|indexName
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|setWaitForActiveShards
argument_list|(
name|ActiveShardCount
operator|.
name|ALL
argument_list|)
operator|.
name|setTimeout
argument_list|(
literal|"100ms"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isShardsAcked
argument_list|()
argument_list|)
expr_stmt|;
name|waitForIndexCreationToComplete
argument_list|(
name|indexName
argument_list|)
expr_stmt|;
if|if
condition|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
name|indexName
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
condition|)
block|{
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
name|indexName
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
comment|// enough data nodes, all shards are active
name|settings
operator|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_SHARDS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|7
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_REPLICAS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|numDataNodes
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
name|indexName
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|setWaitForActiveShards
argument_list|(
name|ActiveShardCount
operator|.
name|ALL
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testCreateIndexStopsWaitingWhenIndexDeleted
specifier|public
name|void
name|testCreateIndexStopsWaitingWhenIndexDeleted
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|indexName
init|=
literal|"test-idx"
decl_stmt|;
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|indexSettings
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_SHARDS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|INDEX_NUMBER_OF_REPLICAS_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|numDataNodes
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> start the index creation process"
argument_list|)
expr_stmt|;
name|ListenableActionFuture
argument_list|<
name|CreateIndexResponse
argument_list|>
name|responseListener
init|=
name|prepareCreate
argument_list|(
name|indexName
argument_list|)
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
operator|.
name|setWaitForActiveShards
argument_list|(
name|ActiveShardCount
operator|.
name|ALL
argument_list|)
operator|.
name|execute
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> wait until the cluster state contains the new index"
argument_list|)
expr_stmt|;
name|assertBusy
argument_list|(
parameter_list|()
lambda|->
name|assertTrue
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
operator|.
name|metaData
argument_list|()
operator|.
name|hasIndex
argument_list|(
name|indexName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> delete the index"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
name|indexName
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> ensure the create index request completes"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|responseListener
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Its possible that the cluster state update task that includes the create index hasn't processed before we timeout,
comment|// and subsequently the test cleanup process does not delete the index in question because it does not see it, and
comment|// only after the test cleanup does the index creation manifest in the cluster state.  To take care of this problem
comment|// and its potential ramifications, we wait here for the index creation cluster state update task to finish
DECL|method|waitForIndexCreationToComplete
specifier|private
name|void
name|waitForIndexCreationToComplete
parameter_list|(
specifier|final
name|String
name|indexName
parameter_list|)
block|{
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|(
name|indexName
argument_list|)
operator|.
name|setWaitForEvents
argument_list|(
name|Priority
operator|.
name|URGENT
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

