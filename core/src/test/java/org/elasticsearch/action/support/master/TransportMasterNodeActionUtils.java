begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.support.master
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|master
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterState
import|;
end_import

begin_class
DECL|class|TransportMasterNodeActionUtils
specifier|public
class|class
name|TransportMasterNodeActionUtils
block|{
comment|/**      * Allows to directly call {@link TransportMasterNodeAction#masterOperation(MasterNodeRequest, ClusterState, ActionListener)} which is      * a protected method.      */
DECL|method|runMasterOperation
specifier|public
specifier|static
parameter_list|<
name|Request
extends|extends
name|MasterNodeRequest
argument_list|<
name|Request
argument_list|>
parameter_list|,
name|Response
extends|extends
name|ActionResponse
parameter_list|>
name|void
name|runMasterOperation
parameter_list|(
name|TransportMasterNodeAction
argument_list|<
name|Request
argument_list|,
name|Response
argument_list|>
name|masterNodeAction
parameter_list|,
name|Request
name|request
parameter_list|,
name|ClusterState
name|clusterState
parameter_list|,
name|ActionListener
argument_list|<
name|Response
argument_list|>
name|actionListener
parameter_list|)
throws|throws
name|Exception
block|{
assert|assert
name|masterNodeAction
operator|.
name|checkBlock
argument_list|(
name|request
argument_list|,
name|clusterState
argument_list|)
operator|==
literal|null
assert|;
name|masterNodeAction
operator|.
name|masterOperation
argument_list|(
name|request
argument_list|,
name|clusterState
argument_list|,
name|actionListener
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

