begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.cluster.allocation
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|allocation
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_class
DECL|class|ClusterAllocationExplainRequestTests
specifier|public
class|class
name|ClusterAllocationExplainRequestTests
extends|extends
name|ESTestCase
block|{
DECL|method|testSerialization
specifier|public
name|void
name|testSerialization
parameter_list|()
throws|throws
name|Exception
block|{
name|ClusterAllocationExplainRequest
name|request
init|=
operator|new
name|ClusterAllocationExplainRequest
argument_list|(
name|randomAsciiOfLength
argument_list|(
literal|4
argument_list|)
argument_list|,
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
decl_stmt|;
name|request
operator|.
name|includeYesDecisions
argument_list|(
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|includeDiskInfo
argument_list|(
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|BytesStreamOutput
name|output
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|request
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|ClusterAllocationExplainRequest
name|actual
init|=
operator|new
name|ClusterAllocationExplainRequest
argument_list|()
decl_stmt|;
name|actual
operator|.
name|readFrom
argument_list|(
name|output
operator|.
name|bytes
argument_list|()
operator|.
name|streamInput
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|request
operator|.
name|getIndex
argument_list|()
argument_list|,
name|actual
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|request
operator|.
name|getShard
argument_list|()
argument_list|,
name|actual
operator|.
name|getShard
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|request
operator|.
name|isPrimary
argument_list|()
argument_list|,
name|actual
operator|.
name|isPrimary
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|request
operator|.
name|includeYesDecisions
argument_list|()
argument_list|,
name|actual
operator|.
name|includeYesDecisions
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|request
operator|.
name|includeDiskInfo
argument_list|()
argument_list|,
name|actual
operator|.
name|includeDiskInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

