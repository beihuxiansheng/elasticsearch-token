begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.indices.create
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|create
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|NoOpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|CreateIndexRequestBuilderTests
specifier|public
class|class
name|CreateIndexRequestBuilderTests
extends|extends
name|ESTestCase
block|{
DECL|field|KEY
specifier|private
specifier|static
specifier|final
name|String
name|KEY
init|=
literal|"my.settings.key"
decl_stmt|;
DECL|field|VALUE
specifier|private
specifier|static
specifier|final
name|String
name|VALUE
init|=
literal|"my.settings.value"
decl_stmt|;
DECL|field|testClient
specifier|private
name|NoOpClient
name|testClient
decl_stmt|;
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|this
operator|.
name|testClient
operator|=
operator|new
name|NoOpClient
argument_list|(
name|getTestName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|After
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|testClient
operator|.
name|close
argument_list|()
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
comment|/**      * test setting the source with available setters      */
annotation|@
name|Test
DECL|method|testSetSource
specifier|public
name|void
name|testSetSource
parameter_list|()
throws|throws
name|IOException
block|{
name|CreateIndexRequestBuilder
name|builder
init|=
operator|new
name|CreateIndexRequestBuilder
argument_list|(
name|this
operator|.
name|testClient
argument_list|,
name|CreateIndexAction
operator|.
name|INSTANCE
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setSource
argument_list|(
literal|"{\""
operator|+
name|KEY
operator|+
literal|"\" : \""
operator|+
name|VALUE
operator|+
literal|"\"}"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE
argument_list|,
name|builder
operator|.
name|request
argument_list|()
operator|.
name|settings
argument_list|()
operator|.
name|get
argument_list|(
name|KEY
argument_list|)
argument_list|)
expr_stmt|;
name|XContentBuilder
name|xContent
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
name|KEY
argument_list|,
name|VALUE
argument_list|)
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|xContent
operator|.
name|close
argument_list|()
expr_stmt|;
name|builder
operator|.
name|setSource
argument_list|(
name|xContent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE
argument_list|,
name|builder
operator|.
name|request
argument_list|()
operator|.
name|settings
argument_list|()
operator|.
name|get
argument_list|(
name|KEY
argument_list|)
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|docOut
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XContentBuilder
name|doc
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|(
name|docOut
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
name|KEY
argument_list|,
name|VALUE
argument_list|)
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|doc
operator|.
name|close
argument_list|()
expr_stmt|;
name|builder
operator|.
name|setSource
argument_list|(
name|docOut
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE
argument_list|,
name|builder
operator|.
name|request
argument_list|()
operator|.
name|settings
argument_list|()
operator|.
name|get
argument_list|(
name|KEY
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|settingsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|settingsMap
operator|.
name|put
argument_list|(
name|KEY
argument_list|,
name|VALUE
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setSettings
argument_list|(
name|settingsMap
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE
argument_list|,
name|builder
operator|.
name|request
argument_list|()
operator|.
name|settings
argument_list|()
operator|.
name|get
argument_list|(
name|KEY
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * test setting the settings with available setters      */
annotation|@
name|Test
DECL|method|testSetSettings
specifier|public
name|void
name|testSetSettings
parameter_list|()
throws|throws
name|IOException
block|{
name|CreateIndexRequestBuilder
name|builder
init|=
operator|new
name|CreateIndexRequestBuilder
argument_list|(
name|this
operator|.
name|testClient
argument_list|,
name|CreateIndexAction
operator|.
name|INSTANCE
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setSettings
argument_list|(
name|KEY
argument_list|,
name|VALUE
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE
argument_list|,
name|builder
operator|.
name|request
argument_list|()
operator|.
name|settings
argument_list|()
operator|.
name|get
argument_list|(
name|KEY
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setSettings
argument_list|(
literal|"{\""
operator|+
name|KEY
operator|+
literal|"\" : \""
operator|+
name|VALUE
operator|+
literal|"\"}"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE
argument_list|,
name|builder
operator|.
name|request
argument_list|()
operator|.
name|settings
argument_list|()
operator|.
name|get
argument_list|(
name|KEY
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|KEY
argument_list|,
name|VALUE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE
argument_list|,
name|builder
operator|.
name|request
argument_list|()
operator|.
name|settings
argument_list|()
operator|.
name|get
argument_list|(
name|KEY
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|KEY
argument_list|,
name|VALUE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE
argument_list|,
name|builder
operator|.
name|request
argument_list|()
operator|.
name|settings
argument_list|()
operator|.
name|get
argument_list|(
name|KEY
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|settingsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|settingsMap
operator|.
name|put
argument_list|(
name|KEY
argument_list|,
name|VALUE
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setSettings
argument_list|(
name|settingsMap
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE
argument_list|,
name|builder
operator|.
name|request
argument_list|()
operator|.
name|settings
argument_list|()
operator|.
name|get
argument_list|(
name|KEY
argument_list|)
argument_list|)
expr_stmt|;
name|XContentBuilder
name|xContent
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
name|KEY
argument_list|,
name|VALUE
argument_list|)
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|xContent
operator|.
name|close
argument_list|()
expr_stmt|;
name|builder
operator|.
name|setSettings
argument_list|(
name|xContent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE
argument_list|,
name|builder
operator|.
name|request
argument_list|()
operator|.
name|settings
argument_list|()
operator|.
name|get
argument_list|(
name|KEY
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

