begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.cluster.node.stats
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|stats
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|discovery
operator|.
name|DiscoveryStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|discovery
operator|.
name|zen
operator|.
name|PendingClusterStateStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|http
operator|.
name|HttpStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|breaker
operator|.
name|AllCircuitBreakerStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|breaker
operator|.
name|CircuitBreakerStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|IngestStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|fs
operator|.
name|FsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|jvm
operator|.
name|JvmStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|os
operator|.
name|OsStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|process
operator|.
name|ProcessStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|VersionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPoolStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportStats
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyMap
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptySet
import|;
end_import

begin_class
DECL|class|NodeStatsTests
specifier|public
class|class
name|NodeStatsTests
extends|extends
name|ESTestCase
block|{
DECL|method|testSerialization
specifier|public
name|void
name|testSerialization
parameter_list|()
throws|throws
name|IOException
block|{
name|NodeStats
name|nodeStats
init|=
name|createNodeStats
argument_list|()
decl_stmt|;
try|try
init|(
name|BytesStreamOutput
name|out
init|=
operator|new
name|BytesStreamOutput
argument_list|()
init|)
block|{
name|nodeStats
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
try|try
init|(
name|StreamInput
name|in
init|=
name|out
operator|.
name|bytes
argument_list|()
operator|.
name|streamInput
argument_list|()
init|)
block|{
name|NodeStats
name|deserializedNodeStats
init|=
name|NodeStats
operator|.
name|readNodeStats
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getNode
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getNode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getTimestamp
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getTimestamp
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getSwap
argument_list|()
operator|.
name|getFree
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getSwap
argument_list|()
operator|.
name|getFree
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getSwap
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getSwap
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getSwap
argument_list|()
operator|.
name|getUsed
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getSwap
argument_list|()
operator|.
name|getUsed
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getFree
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getFree
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getUsed
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getUsed
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getFreePercent
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getFreePercent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getUsedPercent
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getUsedPercent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCpu
argument_list|()
operator|.
name|getPercent
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCpu
argument_list|()
operator|.
name|getPercent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuAcctControlGroup
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuAcctControlGroup
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuAcctUsageNanos
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuAcctUsageNanos
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuControlGroup
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuControlGroup
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuCfsPeriodMicros
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuCfsPeriodMicros
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuCfsQuotaMicros
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuCfsQuotaMicros
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuStat
argument_list|()
operator|.
name|getNumberOfElapsedPeriods
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuStat
argument_list|()
operator|.
name|getNumberOfElapsedPeriods
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuStat
argument_list|()
operator|.
name|getNumberOfTimesThrottled
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuStat
argument_list|()
operator|.
name|getNumberOfTimesThrottled
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuStat
argument_list|()
operator|.
name|getTimeThrottledNanos
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCgroup
argument_list|()
operator|.
name|getCpuStat
argument_list|()
operator|.
name|getTimeThrottledNanos
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|nodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCpu
argument_list|()
operator|.
name|getLoadAverage
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getOs
argument_list|()
operator|.
name|getCpu
argument_list|()
operator|.
name|getLoadAverage
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|nodeStats
operator|.
name|getProcess
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedNodeStats
operator|.
name|getProcess
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getTimestamp
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getCpu
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getCpu
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getCpu
argument_list|()
operator|.
name|getPercent
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getCpu
argument_list|()
operator|.
name|getPercent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getTotalVirtual
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getMem
argument_list|()
operator|.
name|getTotalVirtual
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getMaxFileDescriptors
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getMaxFileDescriptors
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getOpenFileDescriptors
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getProcess
argument_list|()
operator|.
name|getOpenFileDescriptors
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|JvmStats
name|jvm
init|=
name|nodeStats
operator|.
name|getJvm
argument_list|()
decl_stmt|;
name|JvmStats
name|deserializedJvm
init|=
name|deserializedNodeStats
operator|.
name|getJvm
argument_list|()
decl_stmt|;
if|if
condition|(
name|jvm
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedJvm
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|JvmStats
operator|.
name|Mem
name|mem
init|=
name|jvm
operator|.
name|getMem
argument_list|()
decl_stmt|;
name|JvmStats
operator|.
name|Mem
name|deserializedMem
init|=
name|deserializedJvm
operator|.
name|getMem
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|jvm
operator|.
name|getTimestamp
argument_list|()
argument_list|,
name|deserializedJvm
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mem
operator|.
name|getHeapUsedPercent
argument_list|()
argument_list|,
name|deserializedMem
operator|.
name|getHeapUsedPercent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mem
operator|.
name|getHeapUsed
argument_list|()
argument_list|,
name|deserializedMem
operator|.
name|getHeapUsed
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mem
operator|.
name|getHeapCommitted
argument_list|()
argument_list|,
name|deserializedMem
operator|.
name|getHeapCommitted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mem
operator|.
name|getNonHeapCommitted
argument_list|()
argument_list|,
name|deserializedMem
operator|.
name|getNonHeapCommitted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mem
operator|.
name|getNonHeapUsed
argument_list|()
argument_list|,
name|deserializedMem
operator|.
name|getNonHeapUsed
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mem
operator|.
name|getHeapMax
argument_list|()
argument_list|,
name|deserializedMem
operator|.
name|getHeapMax
argument_list|()
argument_list|)
expr_stmt|;
name|JvmStats
operator|.
name|Classes
name|classes
init|=
name|jvm
operator|.
name|getClasses
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|classes
operator|.
name|getLoadedClassCount
argument_list|()
argument_list|,
name|deserializedJvm
operator|.
name|getClasses
argument_list|()
operator|.
name|getLoadedClassCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|classes
operator|.
name|getTotalLoadedClassCount
argument_list|()
argument_list|,
name|deserializedJvm
operator|.
name|getClasses
argument_list|()
operator|.
name|getTotalLoadedClassCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|classes
operator|.
name|getUnloadedClassCount
argument_list|()
argument_list|,
name|deserializedJvm
operator|.
name|getClasses
argument_list|()
operator|.
name|getUnloadedClassCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|jvm
operator|.
name|getGc
argument_list|()
operator|.
name|getCollectors
argument_list|()
operator|.
name|length
argument_list|,
name|deserializedJvm
operator|.
name|getGc
argument_list|()
operator|.
name|getCollectors
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|jvm
operator|.
name|getGc
argument_list|()
operator|.
name|getCollectors
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|JvmStats
operator|.
name|GarbageCollector
name|garbageCollector
init|=
name|jvm
operator|.
name|getGc
argument_list|()
operator|.
name|getCollectors
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|JvmStats
operator|.
name|GarbageCollector
name|deserializedGarbageCollector
init|=
name|deserializedJvm
operator|.
name|getGc
argument_list|()
operator|.
name|getCollectors
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|assertEquals
argument_list|(
name|garbageCollector
operator|.
name|getName
argument_list|()
argument_list|,
name|deserializedGarbageCollector
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|garbageCollector
operator|.
name|getCollectionCount
argument_list|()
argument_list|,
name|deserializedGarbageCollector
operator|.
name|getCollectionCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|garbageCollector
operator|.
name|getCollectionTime
argument_list|()
argument_list|,
name|deserializedGarbageCollector
operator|.
name|getCollectionTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|jvm
operator|.
name|getThreads
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|,
name|deserializedJvm
operator|.
name|getThreads
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|jvm
operator|.
name|getThreads
argument_list|()
operator|.
name|getPeakCount
argument_list|()
argument_list|,
name|deserializedJvm
operator|.
name|getThreads
argument_list|()
operator|.
name|getPeakCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|jvm
operator|.
name|getUptime
argument_list|()
argument_list|,
name|deserializedJvm
operator|.
name|getUptime
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|jvm
operator|.
name|getBufferPools
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedJvm
operator|.
name|getBufferPools
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|jvm
operator|.
name|getBufferPools
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|deserializedJvm
operator|.
name|getBufferPools
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|jvm
operator|.
name|getBufferPools
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|JvmStats
operator|.
name|BufferPool
name|bufferPool
init|=
name|jvm
operator|.
name|getBufferPools
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|JvmStats
operator|.
name|BufferPool
name|deserializedBufferPool
init|=
name|deserializedJvm
operator|.
name|getBufferPools
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|bufferPool
operator|.
name|getName
argument_list|()
argument_list|,
name|deserializedBufferPool
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bufferPool
operator|.
name|getCount
argument_list|()
argument_list|,
name|deserializedBufferPool
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bufferPool
operator|.
name|getTotalCapacity
argument_list|()
argument_list|,
name|deserializedBufferPool
operator|.
name|getTotalCapacity
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bufferPool
operator|.
name|getUsed
argument_list|()
argument_list|,
name|deserializedBufferPool
operator|.
name|getUsed
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|nodeStats
operator|.
name|getThreadPool
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedNodeStats
operator|.
name|getThreadPool
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Iterator
argument_list|<
name|ThreadPoolStats
operator|.
name|Stats
argument_list|>
name|threadPoolIterator
init|=
name|nodeStats
operator|.
name|getThreadPool
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|ThreadPoolStats
operator|.
name|Stats
argument_list|>
name|deserializedThreadPoolIterator
init|=
name|deserializedNodeStats
operator|.
name|getThreadPool
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|threadPoolIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ThreadPoolStats
operator|.
name|Stats
name|stats
init|=
name|threadPoolIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|ThreadPoolStats
operator|.
name|Stats
name|deserializedStats
init|=
name|deserializedThreadPoolIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getName
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getThreads
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|getThreads
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getActive
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|getActive
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getLargest
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|getLargest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getCompleted
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|getCompleted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getQueue
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|getQueue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getRejected
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|getRejected
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|FsInfo
name|fs
init|=
name|nodeStats
operator|.
name|getFs
argument_list|()
decl_stmt|;
name|FsInfo
name|deserializedFs
init|=
name|deserializedNodeStats
operator|.
name|getFs
argument_list|()
decl_stmt|;
if|if
condition|(
name|fs
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedFs
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|fs
operator|.
name|getTimestamp
argument_list|()
argument_list|,
name|deserializedFs
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|fs
operator|.
name|getTotal
argument_list|()
operator|.
name|getAvailable
argument_list|()
argument_list|,
name|deserializedFs
operator|.
name|getTotal
argument_list|()
operator|.
name|getAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|fs
operator|.
name|getTotal
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|,
name|deserializedFs
operator|.
name|getTotal
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|fs
operator|.
name|getTotal
argument_list|()
operator|.
name|getFree
argument_list|()
argument_list|,
name|deserializedFs
operator|.
name|getTotal
argument_list|()
operator|.
name|getFree
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|fs
operator|.
name|getTotal
argument_list|()
operator|.
name|getMount
argument_list|()
argument_list|,
name|deserializedFs
operator|.
name|getTotal
argument_list|()
operator|.
name|getMount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|fs
operator|.
name|getTotal
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
name|deserializedFs
operator|.
name|getTotal
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|fs
operator|.
name|getTotal
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|,
name|deserializedFs
operator|.
name|getTotal
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|FsInfo
operator|.
name|IoStats
name|ioStats
init|=
name|fs
operator|.
name|getIoStats
argument_list|()
decl_stmt|;
name|FsInfo
operator|.
name|IoStats
name|deserializedIoStats
init|=
name|deserializedFs
operator|.
name|getIoStats
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|ioStats
operator|.
name|getTotalOperations
argument_list|()
argument_list|,
name|deserializedIoStats
operator|.
name|getTotalOperations
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ioStats
operator|.
name|getTotalReadKilobytes
argument_list|()
argument_list|,
name|deserializedIoStats
operator|.
name|getTotalReadKilobytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ioStats
operator|.
name|getTotalReadOperations
argument_list|()
argument_list|,
name|deserializedIoStats
operator|.
name|getTotalReadOperations
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ioStats
operator|.
name|getTotalWriteKilobytes
argument_list|()
argument_list|,
name|deserializedIoStats
operator|.
name|getTotalWriteKilobytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ioStats
operator|.
name|getTotalWriteOperations
argument_list|()
argument_list|,
name|deserializedIoStats
operator|.
name|getTotalWriteOperations
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ioStats
operator|.
name|getDevicesStats
argument_list|()
operator|.
name|length
argument_list|,
name|deserializedIoStats
operator|.
name|getDevicesStats
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|ioStats
operator|.
name|getDevicesStats
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|FsInfo
operator|.
name|DeviceStats
name|deviceStats
init|=
name|ioStats
operator|.
name|getDevicesStats
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|FsInfo
operator|.
name|DeviceStats
name|deserializedDeviceStats
init|=
name|deserializedIoStats
operator|.
name|getDevicesStats
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|assertEquals
argument_list|(
name|deviceStats
operator|.
name|operations
argument_list|()
argument_list|,
name|deserializedDeviceStats
operator|.
name|operations
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|deviceStats
operator|.
name|readKilobytes
argument_list|()
argument_list|,
name|deserializedDeviceStats
operator|.
name|readKilobytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|deviceStats
operator|.
name|readOperations
argument_list|()
argument_list|,
name|deserializedDeviceStats
operator|.
name|readOperations
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|deviceStats
operator|.
name|writeKilobytes
argument_list|()
argument_list|,
name|deserializedDeviceStats
operator|.
name|writeKilobytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|deviceStats
operator|.
name|writeOperations
argument_list|()
argument_list|,
name|deserializedDeviceStats
operator|.
name|writeOperations
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|nodeStats
operator|.
name|getTransport
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedNodeStats
operator|.
name|getTransport
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getTransport
argument_list|()
operator|.
name|getRxCount
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getTransport
argument_list|()
operator|.
name|getRxCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getTransport
argument_list|()
operator|.
name|getRxSize
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getTransport
argument_list|()
operator|.
name|getRxSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getTransport
argument_list|()
operator|.
name|getServerOpen
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getTransport
argument_list|()
operator|.
name|getServerOpen
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getTransport
argument_list|()
operator|.
name|getTxCount
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getTransport
argument_list|()
operator|.
name|getTxCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getTransport
argument_list|()
operator|.
name|getTxSize
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getTransport
argument_list|()
operator|.
name|getTxSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|nodeStats
operator|.
name|getHttp
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedNodeStats
operator|.
name|getHttp
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getHttp
argument_list|()
operator|.
name|getServerOpen
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getHttp
argument_list|()
operator|.
name|getServerOpen
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getHttp
argument_list|()
operator|.
name|getTotalOpen
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getHttp
argument_list|()
operator|.
name|getTotalOpen
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|nodeStats
operator|.
name|getBreaker
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedNodeStats
operator|.
name|getBreaker
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|nodeStats
operator|.
name|getBreaker
argument_list|()
operator|.
name|getAllStats
argument_list|()
operator|.
name|length
argument_list|,
name|deserializedNodeStats
operator|.
name|getBreaker
argument_list|()
operator|.
name|getAllStats
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nodeStats
operator|.
name|getBreaker
argument_list|()
operator|.
name|getAllStats
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|CircuitBreakerStats
name|circuitBreakerStats
init|=
name|nodeStats
operator|.
name|getBreaker
argument_list|()
operator|.
name|getAllStats
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|CircuitBreakerStats
name|deserializedCircuitBreakerStats
init|=
name|deserializedNodeStats
operator|.
name|getBreaker
argument_list|()
operator|.
name|getAllStats
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|assertEquals
argument_list|(
name|circuitBreakerStats
operator|.
name|getEstimated
argument_list|()
argument_list|,
name|deserializedCircuitBreakerStats
operator|.
name|getEstimated
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|circuitBreakerStats
operator|.
name|getLimit
argument_list|()
argument_list|,
name|deserializedCircuitBreakerStats
operator|.
name|getLimit
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|circuitBreakerStats
operator|.
name|getName
argument_list|()
argument_list|,
name|deserializedCircuitBreakerStats
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|circuitBreakerStats
operator|.
name|getOverhead
argument_list|()
argument_list|,
name|deserializedCircuitBreakerStats
operator|.
name|getOverhead
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|circuitBreakerStats
operator|.
name|getTrippedCount
argument_list|()
argument_list|,
name|deserializedCircuitBreakerStats
operator|.
name|getTrippedCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
name|ScriptStats
name|scriptStats
init|=
name|nodeStats
operator|.
name|getScriptStats
argument_list|()
decl_stmt|;
if|if
condition|(
name|scriptStats
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedNodeStats
operator|.
name|getScriptStats
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|scriptStats
operator|.
name|getCacheEvictions
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getScriptStats
argument_list|()
operator|.
name|getCacheEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|scriptStats
operator|.
name|getCompilations
argument_list|()
argument_list|,
name|deserializedNodeStats
operator|.
name|getScriptStats
argument_list|()
operator|.
name|getCompilations
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|DiscoveryStats
name|discoveryStats
init|=
name|nodeStats
operator|.
name|getDiscoveryStats
argument_list|()
decl_stmt|;
name|DiscoveryStats
name|deserializedDiscoveryStats
init|=
name|deserializedNodeStats
operator|.
name|getDiscoveryStats
argument_list|()
decl_stmt|;
if|if
condition|(
name|discoveryStats
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedDiscoveryStats
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|PendingClusterStateStats
name|queueStats
init|=
name|discoveryStats
operator|.
name|getQueueStats
argument_list|()
decl_stmt|;
if|if
condition|(
name|queueStats
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedDiscoveryStats
operator|.
name|getQueueStats
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|queueStats
operator|.
name|getCommitted
argument_list|()
argument_list|,
name|deserializedDiscoveryStats
operator|.
name|getQueueStats
argument_list|()
operator|.
name|getCommitted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|queueStats
operator|.
name|getTotal
argument_list|()
argument_list|,
name|deserializedDiscoveryStats
operator|.
name|getQueueStats
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|queueStats
operator|.
name|getPending
argument_list|()
argument_list|,
name|deserializedDiscoveryStats
operator|.
name|getQueueStats
argument_list|()
operator|.
name|getPending
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|IngestStats
name|ingestStats
init|=
name|nodeStats
operator|.
name|getIngestStats
argument_list|()
decl_stmt|;
name|IngestStats
name|deserializedIngestStats
init|=
name|deserializedNodeStats
operator|.
name|getIngestStats
argument_list|()
decl_stmt|;
if|if
condition|(
name|ingestStats
operator|==
literal|null
condition|)
block|{
name|assertNull
argument_list|(
name|deserializedIngestStats
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|IngestStats
operator|.
name|Stats
name|totalStats
init|=
name|ingestStats
operator|.
name|getTotalStats
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|totalStats
operator|.
name|getIngestCount
argument_list|()
argument_list|,
name|deserializedIngestStats
operator|.
name|getTotalStats
argument_list|()
operator|.
name|getIngestCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|totalStats
operator|.
name|getIngestCurrent
argument_list|()
argument_list|,
name|deserializedIngestStats
operator|.
name|getTotalStats
argument_list|()
operator|.
name|getIngestCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|totalStats
operator|.
name|getIngestFailedCount
argument_list|()
argument_list|,
name|deserializedIngestStats
operator|.
name|getTotalStats
argument_list|()
operator|.
name|getIngestFailedCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|totalStats
operator|.
name|getIngestTimeInMillis
argument_list|()
argument_list|,
name|deserializedIngestStats
operator|.
name|getTotalStats
argument_list|()
operator|.
name|getIngestTimeInMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ingestStats
operator|.
name|getStatsPerPipeline
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|deserializedIngestStats
operator|.
name|getStatsPerPipeline
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|IngestStats
operator|.
name|Stats
argument_list|>
name|entry
range|:
name|ingestStats
operator|.
name|getStatsPerPipeline
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|IngestStats
operator|.
name|Stats
name|stats
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|IngestStats
operator|.
name|Stats
name|deserializedStats
init|=
name|deserializedIngestStats
operator|.
name|getStatsPerPipeline
argument_list|()
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getIngestFailedCount
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|getIngestFailedCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getIngestTimeInMillis
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|getIngestTimeInMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getIngestCurrent
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|getIngestCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stats
operator|.
name|getIngestCount
argument_list|()
argument_list|,
name|deserializedStats
operator|.
name|getIngestCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
DECL|method|createNodeStats
specifier|private
specifier|static
name|NodeStats
name|createNodeStats
parameter_list|()
block|{
name|DiscoveryNode
name|node
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"test_node"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
name|emptySet
argument_list|()
argument_list|,
name|VersionUtils
operator|.
name|randomVersion
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|OsStats
name|osStats
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|frequently
argument_list|()
condition|)
block|{
name|double
name|loadAverages
index|[]
init|=
operator|new
name|double
index|[
literal|3
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|loadAverages
index|[
name|i
index|]
operator|=
name|randomBoolean
argument_list|()
condition|?
name|randomDouble
argument_list|()
else|:
operator|-
literal|1
expr_stmt|;
block|}
name|osStats
operator|=
operator|new
name|OsStats
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
operator|new
name|OsStats
operator|.
name|Cpu
argument_list|(
name|randomShort
argument_list|()
argument_list|,
name|loadAverages
argument_list|)
argument_list|,
operator|new
name|OsStats
operator|.
name|Mem
argument_list|(
name|randomLong
argument_list|()
argument_list|,
name|randomLong
argument_list|()
argument_list|)
argument_list|,
operator|new
name|OsStats
operator|.
name|Swap
argument_list|(
name|randomLong
argument_list|()
argument_list|,
name|randomLong
argument_list|()
argument_list|)
argument_list|,
operator|new
name|OsStats
operator|.
name|Cgroup
argument_list|(
name|randomAlphaOfLength
argument_list|(
literal|8
argument_list|)
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomAlphaOfLength
argument_list|(
literal|8
argument_list|)
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
operator|new
name|OsStats
operator|.
name|Cgroup
operator|.
name|CpuStat
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ProcessStats
name|processStats
init|=
name|frequently
argument_list|()
condition|?
operator|new
name|ProcessStats
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
operator|new
name|ProcessStats
operator|.
name|Cpu
argument_list|(
name|randomShort
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
argument_list|,
operator|new
name|ProcessStats
operator|.
name|Mem
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|)
argument_list|)
else|:
literal|null
decl_stmt|;
name|JvmStats
name|jvmStats
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|frequently
argument_list|()
condition|)
block|{
name|int
name|numMemoryPools
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|JvmStats
operator|.
name|MemoryPool
argument_list|>
name|memoryPools
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|numMemoryPools
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numMemoryPools
condition|;
name|i
operator|++
control|)
block|{
name|memoryPools
operator|.
name|add
argument_list|(
operator|new
name|JvmStats
operator|.
name|MemoryPool
argument_list|(
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|JvmStats
operator|.
name|Threads
name|threads
init|=
operator|new
name|JvmStats
operator|.
name|Threads
argument_list|(
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1000
argument_list|)
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1000
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|numGarbageCollectors
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|JvmStats
operator|.
name|GarbageCollector
index|[]
name|garbageCollectorsArray
init|=
operator|new
name|JvmStats
operator|.
name|GarbageCollector
index|[
name|numGarbageCollectors
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numGarbageCollectors
condition|;
name|i
operator|++
control|)
block|{
name|garbageCollectorsArray
index|[
name|i
index|]
operator|=
operator|new
name|JvmStats
operator|.
name|GarbageCollector
argument_list|(
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|JvmStats
operator|.
name|GarbageCollectors
name|garbageCollectors
init|=
operator|new
name|JvmStats
operator|.
name|GarbageCollectors
argument_list|(
name|garbageCollectorsArray
argument_list|)
decl_stmt|;
name|int
name|numBufferPools
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|JvmStats
operator|.
name|BufferPool
argument_list|>
name|bufferPoolList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numBufferPools
condition|;
name|i
operator|++
control|)
block|{
name|bufferPoolList
operator|.
name|add
argument_list|(
operator|new
name|JvmStats
operator|.
name|BufferPool
argument_list|(
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|JvmStats
operator|.
name|Classes
name|classes
init|=
operator|new
name|JvmStats
operator|.
name|Classes
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
decl_stmt|;
name|jvmStats
operator|=
name|frequently
argument_list|()
condition|?
operator|new
name|JvmStats
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
operator|new
name|JvmStats
operator|.
name|Mem
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|memoryPools
argument_list|)
argument_list|,
name|threads
argument_list|,
name|garbageCollectors
argument_list|,
name|randomBoolean
argument_list|()
condition|?
name|Collections
operator|.
name|emptyList
argument_list|()
else|:
name|bufferPoolList
argument_list|,
name|classes
argument_list|)
else|:
literal|null
expr_stmt|;
block|}
name|ThreadPoolStats
name|threadPoolStats
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|frequently
argument_list|()
condition|)
block|{
name|int
name|numThreadPoolStats
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ThreadPoolStats
operator|.
name|Stats
argument_list|>
name|threadPoolStatsList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numThreadPoolStats
condition|;
name|i
operator|++
control|)
block|{
name|threadPoolStatsList
operator|.
name|add
argument_list|(
operator|new
name|ThreadPoolStats
operator|.
name|Stats
argument_list|(
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1000
argument_list|)
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1000
argument_list|)
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1000
argument_list|)
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1000
argument_list|)
argument_list|,
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|1000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|threadPoolStats
operator|=
operator|new
name|ThreadPoolStats
argument_list|(
name|threadPoolStatsList
argument_list|)
expr_stmt|;
block|}
name|FsInfo
name|fsInfo
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|frequently
argument_list|()
condition|)
block|{
name|int
name|numDeviceStats
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|FsInfo
operator|.
name|DeviceStats
index|[]
name|deviceStatsArray
init|=
operator|new
name|FsInfo
operator|.
name|DeviceStats
index|[
name|numDeviceStats
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDeviceStats
condition|;
name|i
operator|++
control|)
block|{
name|FsInfo
operator|.
name|DeviceStats
name|previousDeviceStats
init|=
name|randomBoolean
argument_list|()
condition|?
literal|null
else|:
operator|new
name|FsInfo
operator|.
name|DeviceStats
argument_list|(
name|randomInt
argument_list|()
argument_list|,
name|randomInt
argument_list|()
argument_list|,
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|deviceStatsArray
index|[
name|i
index|]
operator|=
operator|new
name|FsInfo
operator|.
name|DeviceStats
argument_list|(
name|randomInt
argument_list|()
argument_list|,
name|randomInt
argument_list|()
argument_list|,
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|previousDeviceStats
argument_list|)
expr_stmt|;
block|}
name|FsInfo
operator|.
name|IoStats
name|ioStats
init|=
operator|new
name|FsInfo
operator|.
name|IoStats
argument_list|(
name|deviceStatsArray
argument_list|)
decl_stmt|;
name|int
name|numPaths
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|FsInfo
operator|.
name|Path
index|[]
name|paths
init|=
operator|new
name|FsInfo
operator|.
name|Path
index|[
name|numPaths
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numPaths
condition|;
name|i
operator|++
control|)
block|{
name|paths
index|[
name|i
index|]
operator|=
operator|new
name|FsInfo
operator|.
name|Path
argument_list|(
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
argument_list|,
name|randomBoolean
argument_list|()
condition|?
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
else|:
literal|null
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|fsInfo
operator|=
operator|new
name|FsInfo
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|ioStats
argument_list|,
name|paths
argument_list|)
expr_stmt|;
block|}
name|TransportStats
name|transportStats
init|=
name|frequently
argument_list|()
condition|?
operator|new
name|TransportStats
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
else|:
literal|null
decl_stmt|;
name|HttpStats
name|httpStats
init|=
name|frequently
argument_list|()
condition|?
operator|new
name|HttpStats
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
else|:
literal|null
decl_stmt|;
name|AllCircuitBreakerStats
name|allCircuitBreakerStats
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|frequently
argument_list|()
condition|)
block|{
name|int
name|numCircuitBreakerStats
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|CircuitBreakerStats
index|[]
name|circuitBreakerStatsArray
init|=
operator|new
name|CircuitBreakerStats
index|[
name|numCircuitBreakerStats
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numCircuitBreakerStats
condition|;
name|i
operator|++
control|)
block|{
name|circuitBreakerStatsArray
index|[
name|i
index|]
operator|=
operator|new
name|CircuitBreakerStats
argument_list|(
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomDouble
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|allCircuitBreakerStats
operator|=
operator|new
name|AllCircuitBreakerStats
argument_list|(
name|circuitBreakerStatsArray
argument_list|)
expr_stmt|;
block|}
name|ScriptStats
name|scriptStats
init|=
name|frequently
argument_list|()
condition|?
operator|new
name|ScriptStats
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
else|:
literal|null
decl_stmt|;
name|DiscoveryStats
name|discoveryStats
init|=
name|frequently
argument_list|()
condition|?
operator|new
name|DiscoveryStats
argument_list|(
name|randomBoolean
argument_list|()
condition|?
operator|new
name|PendingClusterStateStats
argument_list|(
name|randomInt
argument_list|()
argument_list|,
name|randomInt
argument_list|()
argument_list|,
name|randomInt
argument_list|()
argument_list|)
else|:
literal|null
argument_list|)
else|:
literal|null
decl_stmt|;
name|IngestStats
name|ingestStats
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|frequently
argument_list|()
condition|)
block|{
name|IngestStats
operator|.
name|Stats
name|totalStats
init|=
operator|new
name|IngestStats
operator|.
name|Stats
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|numStatsPerPipeline
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|IngestStats
operator|.
name|Stats
argument_list|>
name|statsPerPipeline
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numStatsPerPipeline
condition|;
name|i
operator|++
control|)
block|{
name|statsPerPipeline
operator|.
name|put
argument_list|(
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
argument_list|,
operator|new
name|IngestStats
operator|.
name|Stats
argument_list|(
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ingestStats
operator|=
operator|new
name|IngestStats
argument_list|(
name|totalStats
argument_list|,
name|statsPerPipeline
argument_list|)
expr_stmt|;
block|}
comment|//TODO NodeIndicesStats are not tested here, way too complicated to create, also they need to be migrated to Writeable yet
return|return
operator|new
name|NodeStats
argument_list|(
name|node
argument_list|,
name|randomNonNegativeLong
argument_list|()
argument_list|,
literal|null
argument_list|,
name|osStats
argument_list|,
name|processStats
argument_list|,
name|jvmStats
argument_list|,
name|threadPoolStats
argument_list|,
name|fsInfo
argument_list|,
name|transportStats
argument_list|,
name|httpStats
argument_list|,
name|allCircuitBreakerStats
argument_list|,
name|scriptStats
argument_list|,
name|discoveryStats
argument_list|,
name|ingestStats
argument_list|)
return|;
block|}
block|}
end_class

end_unit

