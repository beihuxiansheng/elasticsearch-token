begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.cluster.health
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|health
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|health
operator|.
name|ClusterStateHealth
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|MetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|allOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThanOrEqualTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|lessThanOrEqualTo
import|;
end_import

begin_class
DECL|class|ClusterHealthResponsesTests
specifier|public
class|class
name|ClusterHealthResponsesTests
extends|extends
name|ESTestCase
block|{
DECL|method|testIsTimeout
specifier|public
name|void
name|testIsTimeout
parameter_list|()
throws|throws
name|IOException
block|{
name|ClusterHealthResponse
name|res
init|=
operator|new
name|ClusterHealthResponse
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
name|res
operator|.
name|setTimedOut
argument_list|(
name|randomBoolean
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|res
operator|.
name|isTimedOut
argument_list|()
condition|)
block|{
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|REQUEST_TIMEOUT
argument_list|,
name|res
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|res
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testClusterHealth
specifier|public
name|void
name|testClusterHealth
parameter_list|()
throws|throws
name|IOException
block|{
name|ClusterState
name|clusterState
init|=
name|ClusterState
operator|.
name|builder
argument_list|(
name|ClusterName
operator|.
name|DEFAULT
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|int
name|pendingTasks
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|200
argument_list|)
decl_stmt|;
name|int
name|inFlight
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|200
argument_list|)
decl_stmt|;
name|int
name|delayedUnassigned
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|200
argument_list|)
decl_stmt|;
name|TimeValue
name|pendingTaskInQueueTime
init|=
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|randomIntBetween
argument_list|(
literal|1000
argument_list|,
literal|100000
argument_list|)
argument_list|)
decl_stmt|;
name|ClusterHealthResponse
name|clusterHealth
init|=
operator|new
name|ClusterHealthResponse
argument_list|(
literal|"bla"
argument_list|,
operator|new
name|String
index|[]
block|{
name|MetaData
operator|.
name|ALL
block|}
argument_list|,
name|clusterState
argument_list|,
name|pendingTasks
argument_list|,
name|inFlight
argument_list|,
name|delayedUnassigned
argument_list|,
name|pendingTaskInQueueTime
argument_list|)
decl_stmt|;
name|clusterHealth
operator|=
name|maybeSerialize
argument_list|(
name|clusterHealth
argument_list|)
expr_stmt|;
name|assertClusterHealth
argument_list|(
name|clusterHealth
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getNumberOfPendingTasks
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|pendingTasks
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getNumberOfInFlightFetch
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|inFlight
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getDelayedUnassignedShards
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|delayedUnassigned
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getTaskMaxWaitingTime
argument_list|()
operator|.
name|millis
argument_list|()
argument_list|,
name|is
argument_list|(
name|pendingTaskInQueueTime
operator|.
name|millis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getActiveShardsPercent
argument_list|()
argument_list|,
name|is
argument_list|(
name|allOf
argument_list|(
name|greaterThanOrEqualTo
argument_list|(
literal|0.0
argument_list|)
argument_list|,
name|lessThanOrEqualTo
argument_list|(
literal|100.0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|assertClusterHealth
specifier|private
name|void
name|assertClusterHealth
parameter_list|(
name|ClusterHealthResponse
name|clusterHealth
parameter_list|)
block|{
name|ClusterStateHealth
name|clusterStateHealth
init|=
name|clusterHealth
operator|.
name|getClusterStateHealth
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getValidationFailures
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|clusterStateHealth
operator|.
name|getValidationFailures
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getActiveShards
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|clusterStateHealth
operator|.
name|getActiveShards
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getRelocatingShards
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|clusterStateHealth
operator|.
name|getRelocatingShards
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getActivePrimaryShards
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|clusterStateHealth
operator|.
name|getActivePrimaryShards
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getInitializingShards
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|clusterStateHealth
operator|.
name|getInitializingShards
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getUnassignedShards
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|clusterStateHealth
operator|.
name|getUnassignedShards
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getNumberOfNodes
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|clusterStateHealth
operator|.
name|getNumberOfNodes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|getNumberOfDataNodes
argument_list|()
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
name|clusterStateHealth
operator|.
name|getNumberOfDataNodes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|maybeSerialize
name|ClusterHealthResponse
name|maybeSerialize
parameter_list|(
name|ClusterHealthResponse
name|clusterHealth
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|BytesStreamOutput
name|out
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|clusterHealth
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|StreamInput
name|in
init|=
name|StreamInput
operator|.
name|wrap
argument_list|(
name|out
operator|.
name|bytes
argument_list|()
argument_list|)
decl_stmt|;
name|clusterHealth
operator|=
name|ClusterHealthResponse
operator|.
name|readResponseFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
return|return
name|clusterHealth
return|;
block|}
block|}
end_class

end_unit

