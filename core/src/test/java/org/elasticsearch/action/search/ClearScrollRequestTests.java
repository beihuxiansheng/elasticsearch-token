begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.search
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|json
operator|.
name|JsonXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertToXContentEquivalent
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|contains
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|startsWith
import|;
end_import

begin_class
DECL|class|ClearScrollRequestTests
specifier|public
class|class
name|ClearScrollRequestTests
extends|extends
name|ESTestCase
block|{
DECL|method|testFromXContent
specifier|public
name|void
name|testFromXContent
parameter_list|()
throws|throws
name|Exception
block|{
name|ClearScrollRequest
name|clearScrollRequest
init|=
operator|new
name|ClearScrollRequest
argument_list|()
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
comment|//test that existing values get overridden
name|clearScrollRequest
operator|=
name|createClearScrollRequest
argument_list|()
expr_stmt|;
block|}
try|try
init|(
name|XContentParser
name|parser
init|=
name|createParser
argument_list|(
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|array
argument_list|(
literal|"scroll_id"
argument_list|,
literal|"value_1"
argument_list|,
literal|"value_2"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
init|)
block|{
name|clearScrollRequest
operator|.
name|fromXContent
argument_list|(
name|parser
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|clearScrollRequest
operator|.
name|scrollIds
argument_list|()
argument_list|,
name|contains
argument_list|(
literal|"value_1"
argument_list|,
literal|"value_2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testFromXContentWithoutArray
specifier|public
name|void
name|testFromXContentWithoutArray
parameter_list|()
throws|throws
name|Exception
block|{
name|ClearScrollRequest
name|clearScrollRequest
init|=
operator|new
name|ClearScrollRequest
argument_list|()
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
comment|//test that existing values get overridden
name|clearScrollRequest
operator|=
name|createClearScrollRequest
argument_list|()
expr_stmt|;
block|}
try|try
init|(
name|XContentParser
name|parser
init|=
name|createParser
argument_list|(
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"scroll_id"
argument_list|,
literal|"value_1"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
init|)
block|{
name|clearScrollRequest
operator|.
name|fromXContent
argument_list|(
name|parser
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|clearScrollRequest
operator|.
name|scrollIds
argument_list|()
argument_list|,
name|contains
argument_list|(
literal|"value_1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testFromXContentWithUnknownParamThrowsException
specifier|public
name|void
name|testFromXContentWithUnknownParamThrowsException
parameter_list|()
throws|throws
name|Exception
block|{
name|XContentParser
name|invalidContent
init|=
name|createParser
argument_list|(
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|array
argument_list|(
literal|"scroll_id"
argument_list|,
literal|"value_1"
argument_list|,
literal|"value_2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"unknown"
argument_list|,
literal|"keyword"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
decl_stmt|;
name|ClearScrollRequest
name|clearScrollRequest
init|=
operator|new
name|ClearScrollRequest
argument_list|()
decl_stmt|;
name|Exception
name|e
init|=
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|clearScrollRequest
operator|.
name|fromXContent
argument_list|(
name|invalidContent
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|startsWith
argument_list|(
literal|"Unknown parameter [unknown]"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testToXContent
specifier|public
name|void
name|testToXContent
parameter_list|()
throws|throws
name|IOException
block|{
name|ClearScrollRequest
name|clearScrollRequest
init|=
operator|new
name|ClearScrollRequest
argument_list|()
decl_stmt|;
name|clearScrollRequest
operator|.
name|addScrollId
argument_list|(
literal|"SCROLL_ID"
argument_list|)
expr_stmt|;
try|try
init|(
name|XContentBuilder
name|builder
init|=
name|JsonXContent
operator|.
name|contentBuilder
argument_list|()
init|)
block|{
name|clearScrollRequest
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|ToXContent
operator|.
name|EMPTY_PARAMS
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"{\"scroll_id\":[\"SCROLL_ID\"]}"
argument_list|,
name|builder
operator|.
name|string
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testFromAndToXContent
specifier|public
name|void
name|testFromAndToXContent
parameter_list|()
throws|throws
name|IOException
block|{
name|XContentType
name|xContentType
init|=
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|ClearScrollRequest
name|originalRequest
init|=
name|createClearScrollRequest
argument_list|()
decl_stmt|;
name|BytesReference
name|originalBytes
init|=
name|toShuffledXContent
argument_list|(
name|originalRequest
argument_list|,
name|xContentType
argument_list|,
name|ToXContent
operator|.
name|EMPTY_PARAMS
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
decl_stmt|;
name|ClearScrollRequest
name|parsedRequest
init|=
operator|new
name|ClearScrollRequest
argument_list|()
decl_stmt|;
try|try
init|(
name|XContentParser
name|parser
init|=
name|createParser
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|,
name|originalBytes
argument_list|)
init|)
block|{
name|parsedRequest
operator|.
name|fromXContent
argument_list|(
name|parser
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|originalRequest
operator|.
name|scrollIds
argument_list|()
argument_list|,
name|parsedRequest
operator|.
name|scrollIds
argument_list|()
argument_list|)
expr_stmt|;
name|BytesReference
name|parsedBytes
init|=
name|XContentHelper
operator|.
name|toXContent
argument_list|(
name|parsedRequest
argument_list|,
name|xContentType
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
decl_stmt|;
name|assertToXContentEquivalent
argument_list|(
name|originalBytes
argument_list|,
name|parsedBytes
argument_list|,
name|xContentType
argument_list|)
expr_stmt|;
block|}
DECL|method|createClearScrollRequest
specifier|public
specifier|static
name|ClearScrollRequest
name|createClearScrollRequest
parameter_list|()
block|{
name|ClearScrollRequest
name|clearScrollRequest
init|=
operator|new
name|ClearScrollRequest
argument_list|()
decl_stmt|;
name|int
name|numScrolls
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numScrolls
condition|;
name|i
operator|++
control|)
block|{
name|clearScrollRequest
operator|.
name|addScrollId
argument_list|(
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|clearScrollRequest
return|;
block|}
block|}
end_class

end_unit

