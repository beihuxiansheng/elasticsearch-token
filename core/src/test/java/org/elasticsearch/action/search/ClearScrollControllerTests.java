begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.search
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchPhaseResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchShardTarget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|NodeNotConnectedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|Transport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_class
DECL|class|ClearScrollControllerTests
specifier|public
class|class
name|ClearScrollControllerTests
extends|extends
name|ESTestCase
block|{
DECL|method|testClearAll
specifier|public
name|void
name|testClearAll
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|DiscoveryNode
name|node1
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_1"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node2
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_2"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node3
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_3"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|DiscoveryNodes
name|nodes
init|=
name|DiscoveryNodes
operator|.
name|builder
argument_list|()
operator|.
name|add
argument_list|(
name|node1
argument_list|)
operator|.
name|add
argument_list|(
name|node2
argument_list|)
operator|.
name|add
argument_list|(
name|node3
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|ActionListener
argument_list|<
name|ClearScrollResponse
argument_list|>
name|listener
init|=
operator|new
name|ActionListener
argument_list|<
name|ClearScrollResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|ClearScrollResponse
name|clearScrollResponse
parameter_list|)
block|{
try|try
block|{
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|clearScrollResponse
operator|.
name|getNumFreed
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|clearScrollResponse
operator|.
name|isSucceeded
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
try|try
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|List
argument_list|<
name|DiscoveryNode
argument_list|>
name|nodesInvoked
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|SearchTransportService
name|searchTransportService
init|=
operator|new
name|SearchTransportService
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|null
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|sendClearAllScrollContexts
parameter_list|(
name|Transport
operator|.
name|Connection
name|connection
parameter_list|,
name|ActionListener
argument_list|<
name|TransportResponse
argument_list|>
name|listener
parameter_list|)
block|{
name|nodesInvoked
operator|.
name|add
argument_list|(
name|connection
operator|.
name|getNode
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
name|t
init|=
operator|new
name|Thread
argument_list|(
parameter_list|()
lambda|->
name|listener
operator|.
name|onResponse
argument_list|(
name|TransportResponse
operator|.
name|Empty
operator|.
name|INSTANCE
argument_list|)
argument_list|)
decl_stmt|;
comment|// response is unused
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
name|Transport
operator|.
name|Connection
name|getConnection
parameter_list|(
name|String
name|clusterAlias
parameter_list|,
name|DiscoveryNode
name|node
parameter_list|)
block|{
return|return
operator|new
name|SearchAsyncActionTests
operator|.
name|MockConnection
argument_list|(
name|node
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|ClearScrollRequest
name|clearScrollRequest
init|=
operator|new
name|ClearScrollRequest
argument_list|()
decl_stmt|;
name|clearScrollRequest
operator|.
name|scrollIds
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"_all"
argument_list|)
argument_list|)
expr_stmt|;
name|ClearScrollController
name|controller
init|=
operator|new
name|ClearScrollController
argument_list|(
name|clearScrollRequest
argument_list|,
name|listener
argument_list|,
name|nodes
argument_list|,
name|logger
argument_list|,
name|searchTransportService
argument_list|)
decl_stmt|;
name|controller
operator|.
name|run
argument_list|()
expr_stmt|;
name|latch
operator|.
name|await
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|nodesInvoked
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|nodesInvoked
argument_list|,
name|Comparator
operator|.
name|comparing
argument_list|(
name|DiscoveryNode
operator|::
name|getId
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodesInvoked
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|node1
argument_list|,
name|node2
argument_list|,
name|node3
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testClearScrollIds
specifier|public
name|void
name|testClearScrollIds
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|DiscoveryNode
name|node1
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_1"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node2
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_2"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node3
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_3"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|AtomicArray
argument_list|<
name|SearchPhaseResult
argument_list|>
name|array
init|=
operator|new
name|AtomicArray
argument_list|<>
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
name|testSearchPhaseResult1
init|=
operator|new
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
argument_list|(
literal|1
argument_list|,
name|node1
argument_list|)
decl_stmt|;
name|testSearchPhaseResult1
operator|.
name|setSearchShardTarget
argument_list|(
operator|new
name|SearchShardTarget
argument_list|(
literal|"node_1"
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"idx"
argument_list|,
literal|"uuid1"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
name|testSearchPhaseResult2
init|=
operator|new
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
argument_list|(
literal|12
argument_list|,
name|node2
argument_list|)
decl_stmt|;
name|testSearchPhaseResult2
operator|.
name|setSearchShardTarget
argument_list|(
operator|new
name|SearchShardTarget
argument_list|(
literal|"node_2"
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"idy"
argument_list|,
literal|"uuid2"
argument_list|,
literal|42
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
name|testSearchPhaseResult3
init|=
operator|new
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
argument_list|(
literal|42
argument_list|,
name|node3
argument_list|)
decl_stmt|;
name|testSearchPhaseResult3
operator|.
name|setSearchShardTarget
argument_list|(
operator|new
name|SearchShardTarget
argument_list|(
literal|"node_3"
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"idy"
argument_list|,
literal|"uuid2"
argument_list|,
literal|43
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|setOnce
argument_list|(
literal|0
argument_list|,
name|testSearchPhaseResult1
argument_list|)
expr_stmt|;
name|array
operator|.
name|setOnce
argument_list|(
literal|1
argument_list|,
name|testSearchPhaseResult2
argument_list|)
expr_stmt|;
name|array
operator|.
name|setOnce
argument_list|(
literal|2
argument_list|,
name|testSearchPhaseResult3
argument_list|)
expr_stmt|;
name|AtomicInteger
name|numFreed
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|String
name|scrollId
init|=
name|TransportSearchHelper
operator|.
name|buildScrollId
argument_list|(
name|array
argument_list|)
decl_stmt|;
name|DiscoveryNodes
name|nodes
init|=
name|DiscoveryNodes
operator|.
name|builder
argument_list|()
operator|.
name|add
argument_list|(
name|node1
argument_list|)
operator|.
name|add
argument_list|(
name|node2
argument_list|)
operator|.
name|add
argument_list|(
name|node3
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|ActionListener
argument_list|<
name|ClearScrollResponse
argument_list|>
name|listener
init|=
operator|new
name|ActionListener
argument_list|<
name|ClearScrollResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|ClearScrollResponse
name|clearScrollResponse
parameter_list|)
block|{
try|try
block|{
name|assertEquals
argument_list|(
name|numFreed
operator|.
name|get
argument_list|()
argument_list|,
name|clearScrollResponse
operator|.
name|getNumFreed
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|clearScrollResponse
operator|.
name|isSucceeded
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
try|try
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|List
argument_list|<
name|DiscoveryNode
argument_list|>
name|nodesInvoked
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|SearchTransportService
name|searchTransportService
init|=
operator|new
name|SearchTransportService
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|null
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|sendFreeContext
parameter_list|(
name|Transport
operator|.
name|Connection
name|connection
parameter_list|,
name|long
name|contextId
parameter_list|,
name|ActionListener
argument_list|<
name|SearchFreeContextResponse
argument_list|>
name|listener
parameter_list|)
block|{
name|nodesInvoked
operator|.
name|add
argument_list|(
name|connection
operator|.
name|getNode
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|freed
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
if|if
condition|(
name|freed
condition|)
block|{
name|numFreed
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
block|}
name|Thread
name|t
init|=
operator|new
name|Thread
argument_list|(
parameter_list|()
lambda|->
name|listener
operator|.
name|onResponse
argument_list|(
operator|new
name|SearchFreeContextResponse
argument_list|(
name|freed
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
name|Transport
operator|.
name|Connection
name|getConnection
parameter_list|(
name|String
name|clusterAlias
parameter_list|,
name|DiscoveryNode
name|node
parameter_list|)
block|{
return|return
operator|new
name|SearchAsyncActionTests
operator|.
name|MockConnection
argument_list|(
name|node
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|ClearScrollRequest
name|clearScrollRequest
init|=
operator|new
name|ClearScrollRequest
argument_list|()
decl_stmt|;
name|clearScrollRequest
operator|.
name|scrollIds
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|scrollId
argument_list|)
argument_list|)
expr_stmt|;
name|ClearScrollController
name|controller
init|=
operator|new
name|ClearScrollController
argument_list|(
name|clearScrollRequest
argument_list|,
name|listener
argument_list|,
name|nodes
argument_list|,
name|logger
argument_list|,
name|searchTransportService
argument_list|)
decl_stmt|;
name|controller
operator|.
name|run
argument_list|()
expr_stmt|;
name|latch
operator|.
name|await
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|nodesInvoked
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|nodesInvoked
argument_list|,
name|Comparator
operator|.
name|comparing
argument_list|(
name|DiscoveryNode
operator|::
name|getId
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nodesInvoked
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|node1
argument_list|,
name|node2
argument_list|,
name|node3
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testClearScrollIdsWithFailure
specifier|public
name|void
name|testClearScrollIdsWithFailure
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|DiscoveryNode
name|node1
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_1"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node2
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_2"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node3
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_3"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|AtomicArray
argument_list|<
name|SearchPhaseResult
argument_list|>
name|array
init|=
operator|new
name|AtomicArray
argument_list|<>
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
name|testSearchPhaseResult1
init|=
operator|new
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
argument_list|(
literal|1
argument_list|,
name|node1
argument_list|)
decl_stmt|;
name|testSearchPhaseResult1
operator|.
name|setSearchShardTarget
argument_list|(
operator|new
name|SearchShardTarget
argument_list|(
literal|"node_1"
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"idx"
argument_list|,
literal|"uuid1"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
name|testSearchPhaseResult2
init|=
operator|new
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
argument_list|(
literal|12
argument_list|,
name|node2
argument_list|)
decl_stmt|;
name|testSearchPhaseResult2
operator|.
name|setSearchShardTarget
argument_list|(
operator|new
name|SearchShardTarget
argument_list|(
literal|"node_2"
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"idy"
argument_list|,
literal|"uuid2"
argument_list|,
literal|42
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
name|testSearchPhaseResult3
init|=
operator|new
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
argument_list|(
literal|42
argument_list|,
name|node3
argument_list|)
decl_stmt|;
name|testSearchPhaseResult3
operator|.
name|setSearchShardTarget
argument_list|(
operator|new
name|SearchShardTarget
argument_list|(
literal|"node_3"
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"idy"
argument_list|,
literal|"uuid2"
argument_list|,
literal|43
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|setOnce
argument_list|(
literal|0
argument_list|,
name|testSearchPhaseResult1
argument_list|)
expr_stmt|;
name|array
operator|.
name|setOnce
argument_list|(
literal|1
argument_list|,
name|testSearchPhaseResult2
argument_list|)
expr_stmt|;
name|array
operator|.
name|setOnce
argument_list|(
literal|2
argument_list|,
name|testSearchPhaseResult3
argument_list|)
expr_stmt|;
name|AtomicInteger
name|numFreed
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|AtomicInteger
name|numFailures
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|AtomicInteger
name|numConnectionFailures
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|String
name|scrollId
init|=
name|TransportSearchHelper
operator|.
name|buildScrollId
argument_list|(
name|array
argument_list|)
decl_stmt|;
name|DiscoveryNodes
name|nodes
init|=
name|DiscoveryNodes
operator|.
name|builder
argument_list|()
operator|.
name|add
argument_list|(
name|node1
argument_list|)
operator|.
name|add
argument_list|(
name|node2
argument_list|)
operator|.
name|add
argument_list|(
name|node3
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|ActionListener
argument_list|<
name|ClearScrollResponse
argument_list|>
name|listener
init|=
operator|new
name|ActionListener
argument_list|<
name|ClearScrollResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|ClearScrollResponse
name|clearScrollResponse
parameter_list|)
block|{
try|try
block|{
name|assertEquals
argument_list|(
name|numFreed
operator|.
name|get
argument_list|()
argument_list|,
name|clearScrollResponse
operator|.
name|getNumFreed
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|numFailures
operator|.
name|get
argument_list|()
operator|>
literal|0
condition|)
block|{
name|assertFalse
argument_list|(
name|clearScrollResponse
operator|.
name|isSucceeded
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertTrue
argument_list|(
name|clearScrollResponse
operator|.
name|isSucceeded
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
try|try
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|List
argument_list|<
name|DiscoveryNode
argument_list|>
name|nodesInvoked
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|SearchTransportService
name|searchTransportService
init|=
operator|new
name|SearchTransportService
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
literal|null
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|sendFreeContext
parameter_list|(
name|Transport
operator|.
name|Connection
name|connection
parameter_list|,
name|long
name|contextId
parameter_list|,
name|ActionListener
argument_list|<
name|SearchFreeContextResponse
argument_list|>
name|listener
parameter_list|)
block|{
name|nodesInvoked
operator|.
name|add
argument_list|(
name|connection
operator|.
name|getNode
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|freed
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
name|boolean
name|fail
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
name|Thread
name|t
init|=
operator|new
name|Thread
argument_list|(
parameter_list|()
lambda|->
block|{
if|if
condition|(
name|fail
condition|)
block|{
name|numFailures
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
name|listener
operator|.
name|onFailure
argument_list|(
operator|new
name|IllegalArgumentException
argument_list|(
literal|"boom"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|freed
condition|)
block|{
name|numFreed
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
block|}
name|listener
operator|.
name|onResponse
argument_list|(
operator|new
name|SearchFreeContextResponse
argument_list|(
name|freed
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
name|Transport
operator|.
name|Connection
name|getConnection
parameter_list|(
name|String
name|clusterAlias
parameter_list|,
name|DiscoveryNode
name|node
parameter_list|)
block|{
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|numFailures
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
name|numConnectionFailures
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|NodeNotConnectedException
argument_list|(
name|node
argument_list|,
literal|"boom"
argument_list|)
throw|;
block|}
return|return
operator|new
name|SearchAsyncActionTests
operator|.
name|MockConnection
argument_list|(
name|node
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|ClearScrollRequest
name|clearScrollRequest
init|=
operator|new
name|ClearScrollRequest
argument_list|()
decl_stmt|;
name|clearScrollRequest
operator|.
name|scrollIds
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|scrollId
argument_list|)
argument_list|)
expr_stmt|;
name|ClearScrollController
name|controller
init|=
operator|new
name|ClearScrollController
argument_list|(
name|clearScrollRequest
argument_list|,
name|listener
argument_list|,
name|nodes
argument_list|,
name|logger
argument_list|,
name|searchTransportService
argument_list|)
decl_stmt|;
name|controller
operator|.
name|run
argument_list|()
expr_stmt|;
name|latch
operator|.
name|await
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
operator|-
name|numConnectionFailures
operator|.
name|get
argument_list|()
argument_list|,
name|nodesInvoked
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

