begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.search
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|ScoreDoc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TopDocs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|MockDirectoryWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|BigArrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|DocValueFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchHit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchHits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchPhaseResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchShardTarget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|FetchSearchResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|QueryFetchSearchResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|ShardFetchSearchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|InternalSearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|query
operator|.
name|QuerySearchResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|Transport
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicReference
import|;
end_import

begin_class
DECL|class|FetchSearchPhaseTests
specifier|public
class|class
name|FetchSearchPhaseTests
extends|extends
name|ESTestCase
block|{
DECL|method|testShortcutQueryAndFetchOptimization
specifier|public
name|void
name|testShortcutQueryAndFetchOptimization
parameter_list|()
throws|throws
name|IOException
block|{
name|SearchPhaseController
name|controller
init|=
operator|new
name|SearchPhaseController
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|BigArrays
operator|.
name|NON_RECYCLING_INSTANCE
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|MockSearchPhaseContext
name|mockSearchPhaseContext
init|=
operator|new
name|MockSearchPhaseContext
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|InitialSearchPhase
operator|.
name|SearchPhaseResults
argument_list|<
name|SearchPhaseResult
argument_list|>
name|results
init|=
name|controller
operator|.
name|newSearchPhaseResults
argument_list|(
name|mockSearchPhaseContext
operator|.
name|getRequest
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|AtomicReference
argument_list|<
name|SearchResponse
argument_list|>
name|responseRef
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|boolean
name|hasHits
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
specifier|final
name|int
name|numHits
decl_stmt|;
if|if
condition|(
name|hasHits
condition|)
block|{
name|QuerySearchResult
name|queryResult
init|=
operator|new
name|QuerySearchResult
argument_list|()
decl_stmt|;
name|queryResult
operator|.
name|topDocs
argument_list|(
operator|new
name|TopDocs
argument_list|(
literal|1
argument_list|,
operator|new
name|ScoreDoc
index|[]
block|{
operator|new
name|ScoreDoc
argument_list|(
literal|42
argument_list|,
literal|1.0F
argument_list|)
block|}
argument_list|,
literal|1.0F
argument_list|)
argument_list|,
operator|new
name|DocValueFormat
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|size
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|FetchSearchResult
name|fetchResult
init|=
operator|new
name|FetchSearchResult
argument_list|()
decl_stmt|;
name|fetchResult
operator|.
name|hits
argument_list|(
operator|new
name|SearchHits
argument_list|(
operator|new
name|SearchHit
index|[]
block|{
operator|new
name|SearchHit
argument_list|(
literal|42
argument_list|)
block|}
argument_list|,
literal|1
argument_list|,
literal|1.0F
argument_list|)
argument_list|)
expr_stmt|;
name|QueryFetchSearchResult
name|fetchSearchResult
init|=
operator|new
name|QueryFetchSearchResult
argument_list|(
name|queryResult
argument_list|,
name|fetchResult
argument_list|)
decl_stmt|;
name|fetchSearchResult
operator|.
name|setShardIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|results
operator|.
name|consumeResult
argument_list|(
name|fetchSearchResult
argument_list|)
expr_stmt|;
name|numHits
operator|=
literal|1
expr_stmt|;
block|}
else|else
block|{
name|numHits
operator|=
literal|0
expr_stmt|;
block|}
name|FetchSearchPhase
name|phase
init|=
operator|new
name|FetchSearchPhase
argument_list|(
name|results
argument_list|,
name|controller
argument_list|,
name|mockSearchPhaseContext
argument_list|,
parameter_list|(
name|searchResponse
parameter_list|,
name|scrollId
parameter_list|)
lambda|->
operator|new
name|SearchPhase
argument_list|(
literal|"test"
argument_list|)
block|{
block|@Override             public void run(
argument_list|)
throws|throws
name|IOException
block|{
name|responseRef
operator|.
name|set
argument_list|(
name|mockSearchPhaseContext
operator|.
name|buildSearchResponse
argument_list|(
name|searchResponse
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
block|}
block|}
end_class

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|"fetch"
argument_list|,
name|phase
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|phase
operator|.
name|run
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|mockSearchPhaseContext
operator|.
name|assertNoFailure
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertNotNull
argument_list|(
name|responseRef
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
name|numHits
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|)
expr_stmt|;
end_expr_stmt

begin_if
if|if
condition|(
name|numHits
operator|!=
literal|0
condition|)
block|{
name|assertEquals
argument_list|(
literal|42
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|docId
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_if

begin_expr_stmt
name|assertTrue
argument_list|(
name|mockSearchPhaseContext
operator|.
name|releasedSearchContexts
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function
unit|}      public
DECL|method|testFetchTwoDocument
name|void
name|testFetchTwoDocument
parameter_list|()
throws|throws
name|IOException
block|{
name|MockSearchPhaseContext
name|mockSearchPhaseContext
init|=
operator|new
name|MockSearchPhaseContext
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|SearchPhaseController
name|controller
init|=
operator|new
name|SearchPhaseController
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|BigArrays
operator|.
name|NON_RECYCLING_INSTANCE
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|InitialSearchPhase
operator|.
name|SearchPhaseResults
argument_list|<
name|SearchPhaseResult
argument_list|>
name|results
init|=
name|controller
operator|.
name|newSearchPhaseResults
argument_list|(
name|mockSearchPhaseContext
operator|.
name|getRequest
argument_list|()
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|AtomicReference
argument_list|<
name|SearchResponse
argument_list|>
name|responseRef
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|resultSetSize
init|=
name|randomIntBetween
argument_list|(
literal|2
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QuerySearchResult
name|queryResult
init|=
operator|new
name|QuerySearchResult
argument_list|(
literal|123
argument_list|,
operator|new
name|SearchShardTarget
argument_list|(
literal|"node1"
argument_list|,
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|,
literal|"na"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|queryResult
operator|.
name|topDocs
argument_list|(
operator|new
name|TopDocs
argument_list|(
literal|1
argument_list|,
operator|new
name|ScoreDoc
index|[]
block|{
operator|new
name|ScoreDoc
argument_list|(
literal|42
argument_list|,
literal|1.0F
argument_list|)
block|}
argument_list|,
literal|2.0F
argument_list|)
argument_list|,
operator|new
name|DocValueFormat
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|size
argument_list|(
name|resultSetSize
argument_list|)
expr_stmt|;
comment|// the size of the result set
name|queryResult
operator|.
name|setShardIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|results
operator|.
name|consumeResult
argument_list|(
name|queryResult
argument_list|)
expr_stmt|;
name|queryResult
operator|=
operator|new
name|QuerySearchResult
argument_list|(
literal|321
argument_list|,
operator|new
name|SearchShardTarget
argument_list|(
literal|"node2"
argument_list|,
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|,
literal|"na"
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|topDocs
argument_list|(
operator|new
name|TopDocs
argument_list|(
literal|1
argument_list|,
operator|new
name|ScoreDoc
index|[]
block|{
operator|new
name|ScoreDoc
argument_list|(
literal|84
argument_list|,
literal|2.0F
argument_list|)
block|}
argument_list|,
literal|2.0F
argument_list|)
argument_list|,
operator|new
name|DocValueFormat
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|size
argument_list|(
name|resultSetSize
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|setShardIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|consumeResult
argument_list|(
name|queryResult
argument_list|)
expr_stmt|;
name|SearchTransportService
name|searchTransportService
init|=
operator|new
name|SearchTransportService
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"search.remote.connect"
argument_list|,
literal|false
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|null
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|sendExecuteFetch
parameter_list|(
name|Transport
operator|.
name|Connection
name|connection
parameter_list|,
name|ShardFetchSearchRequest
name|request
parameter_list|,
name|SearchTask
name|task
parameter_list|,
name|SearchActionListener
argument_list|<
name|FetchSearchResult
argument_list|>
name|listener
parameter_list|)
block|{
name|FetchSearchResult
name|fetchResult
init|=
operator|new
name|FetchSearchResult
argument_list|()
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|id
argument_list|()
operator|==
literal|321
condition|)
block|{
name|fetchResult
operator|.
name|hits
argument_list|(
operator|new
name|SearchHits
argument_list|(
operator|new
name|SearchHit
index|[]
block|{
operator|new
name|SearchHit
argument_list|(
literal|84
argument_list|)
block|}
argument_list|,
literal|1
argument_list|,
literal|2.0F
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|request
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|fetchResult
operator|.
name|hits
argument_list|(
operator|new
name|SearchHits
argument_list|(
operator|new
name|SearchHit
index|[]
block|{
operator|new
name|SearchHit
argument_list|(
literal|42
argument_list|)
block|}
argument_list|,
literal|1
argument_list|,
literal|1.0F
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|listener
operator|.
name|onResponse
argument_list|(
name|fetchResult
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|mockSearchPhaseContext
operator|.
name|searchTransport
operator|=
name|searchTransportService
expr_stmt|;
name|FetchSearchPhase
name|phase
init|=
operator|new
name|FetchSearchPhase
argument_list|(
name|results
argument_list|,
name|controller
argument_list|,
name|mockSearchPhaseContext
argument_list|,
parameter_list|(
name|searchResponse
parameter_list|,
name|scrollId
parameter_list|)
lambda|->
operator|new
name|SearchPhase
argument_list|(
literal|"test"
argument_list|)
block|{
block|@Override                 public void run(
argument_list|)
throws|throws
name|IOException
block|{
name|responseRef
operator|.
name|set
argument_list|(
name|mockSearchPhaseContext
operator|.
name|buildSearchResponse
argument_list|(
name|searchResponse
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
block|}
end_function

begin_empty_stmt
unit|})
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|"fetch"
argument_list|,
name|phase
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|phase
operator|.
name|run
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|mockSearchPhaseContext
operator|.
name|assertNoFailure
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertNotNull
argument_list|(
name|responseRef
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|84
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|docId
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|42
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|1
argument_list|)
operator|.
name|docId
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getFailedShards
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getSuccessfulShards
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertTrue
argument_list|(
name|mockSearchPhaseContext
operator|.
name|releasedSearchContexts
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function
unit|}      public
DECL|method|testFailFetchOneDoc
name|void
name|testFailFetchOneDoc
parameter_list|()
throws|throws
name|IOException
block|{
name|MockSearchPhaseContext
name|mockSearchPhaseContext
init|=
operator|new
name|MockSearchPhaseContext
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|SearchPhaseController
name|controller
init|=
operator|new
name|SearchPhaseController
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|BigArrays
operator|.
name|NON_RECYCLING_INSTANCE
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|InitialSearchPhase
operator|.
name|SearchPhaseResults
argument_list|<
name|SearchPhaseResult
argument_list|>
name|results
init|=
name|controller
operator|.
name|newSearchPhaseResults
argument_list|(
name|mockSearchPhaseContext
operator|.
name|getRequest
argument_list|()
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|AtomicReference
argument_list|<
name|SearchResponse
argument_list|>
name|responseRef
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|resultSetSize
init|=
name|randomIntBetween
argument_list|(
literal|2
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QuerySearchResult
name|queryResult
init|=
operator|new
name|QuerySearchResult
argument_list|(
literal|123
argument_list|,
operator|new
name|SearchShardTarget
argument_list|(
literal|"node1"
argument_list|,
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|,
literal|"na"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|queryResult
operator|.
name|topDocs
argument_list|(
operator|new
name|TopDocs
argument_list|(
literal|1
argument_list|,
operator|new
name|ScoreDoc
index|[]
block|{
operator|new
name|ScoreDoc
argument_list|(
literal|42
argument_list|,
literal|1.0F
argument_list|)
block|}
argument_list|,
literal|2.0F
argument_list|)
argument_list|,
operator|new
name|DocValueFormat
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|size
argument_list|(
name|resultSetSize
argument_list|)
expr_stmt|;
comment|// the size of the result set
name|queryResult
operator|.
name|setShardIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|results
operator|.
name|consumeResult
argument_list|(
name|queryResult
argument_list|)
expr_stmt|;
name|queryResult
operator|=
operator|new
name|QuerySearchResult
argument_list|(
literal|321
argument_list|,
operator|new
name|SearchShardTarget
argument_list|(
literal|"node2"
argument_list|,
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|,
literal|"na"
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|topDocs
argument_list|(
operator|new
name|TopDocs
argument_list|(
literal|1
argument_list|,
operator|new
name|ScoreDoc
index|[]
block|{
operator|new
name|ScoreDoc
argument_list|(
literal|84
argument_list|,
literal|2.0F
argument_list|)
block|}
argument_list|,
literal|2.0F
argument_list|)
argument_list|,
operator|new
name|DocValueFormat
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|size
argument_list|(
name|resultSetSize
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|setShardIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|consumeResult
argument_list|(
name|queryResult
argument_list|)
expr_stmt|;
name|SearchTransportService
name|searchTransportService
init|=
operator|new
name|SearchTransportService
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"search.remote.connect"
argument_list|,
literal|false
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|null
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|sendExecuteFetch
parameter_list|(
name|Transport
operator|.
name|Connection
name|connection
parameter_list|,
name|ShardFetchSearchRequest
name|request
parameter_list|,
name|SearchTask
name|task
parameter_list|,
name|SearchActionListener
argument_list|<
name|FetchSearchResult
argument_list|>
name|listener
parameter_list|)
block|{
if|if
condition|(
name|request
operator|.
name|id
argument_list|()
operator|==
literal|321
condition|)
block|{
name|FetchSearchResult
name|fetchResult
init|=
operator|new
name|FetchSearchResult
argument_list|()
decl_stmt|;
name|fetchResult
operator|.
name|hits
argument_list|(
operator|new
name|SearchHits
argument_list|(
operator|new
name|SearchHit
index|[]
block|{
operator|new
name|SearchHit
argument_list|(
literal|84
argument_list|)
block|}
argument_list|,
literal|1
argument_list|,
literal|2.0F
argument_list|)
argument_list|)
expr_stmt|;
name|listener
operator|.
name|onResponse
argument_list|(
name|fetchResult
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|listener
operator|.
name|onFailure
argument_list|(
operator|new
name|MockDirectoryWrapper
operator|.
name|FakeIOException
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|mockSearchPhaseContext
operator|.
name|searchTransport
operator|=
name|searchTransportService
expr_stmt|;
name|FetchSearchPhase
name|phase
init|=
operator|new
name|FetchSearchPhase
argument_list|(
name|results
argument_list|,
name|controller
argument_list|,
name|mockSearchPhaseContext
argument_list|,
parameter_list|(
name|searchResponse
parameter_list|,
name|scrollId
parameter_list|)
lambda|->
operator|new
name|SearchPhase
argument_list|(
literal|"test"
argument_list|)
block|{
block|@Override                 public void run(
argument_list|)
throws|throws
name|IOException
block|{
name|responseRef
operator|.
name|set
argument_list|(
name|mockSearchPhaseContext
operator|.
name|buildSearchResponse
argument_list|(
name|searchResponse
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
block|}
end_function

begin_empty_stmt
unit|})
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|"fetch"
argument_list|,
name|phase
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|phase
operator|.
name|run
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|mockSearchPhaseContext
operator|.
name|assertNoFailure
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertNotNull
argument_list|(
name|responseRef
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|84
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|docId
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getFailedShards
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getSuccessfulShards
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getShardFailures
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertTrue
argument_list|(
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getShardFailures
argument_list|()
index|[
literal|0
index|]
operator|.
name|getCause
argument_list|()
operator|instanceof
name|MockDirectoryWrapper
operator|.
name|FakeIOException
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|mockSearchPhaseContext
operator|.
name|releasedSearchContexts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertTrue
argument_list|(
name|mockSearchPhaseContext
operator|.
name|releasedSearchContexts
operator|.
name|contains
argument_list|(
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function
unit|}      public
DECL|method|testFetchDocsConcurrently
name|void
name|testFetchDocsConcurrently
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|int
name|resultSetSize
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
decl_stmt|;
comment|// we use at least 2 hits otherwise this is subject to single shard optimization and we trip an assert...
name|int
name|numHits
init|=
name|randomIntBetween
argument_list|(
literal|2
argument_list|,
literal|100
argument_list|)
decl_stmt|;
comment|// also numshards --> 1 hit per shard
name|SearchPhaseController
name|controller
init|=
operator|new
name|SearchPhaseController
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|BigArrays
operator|.
name|NON_RECYCLING_INSTANCE
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|MockSearchPhaseContext
name|mockSearchPhaseContext
init|=
operator|new
name|MockSearchPhaseContext
argument_list|(
name|numHits
argument_list|)
decl_stmt|;
name|InitialSearchPhase
operator|.
name|SearchPhaseResults
argument_list|<
name|SearchPhaseResult
argument_list|>
name|results
init|=
name|controller
operator|.
name|newSearchPhaseResults
argument_list|(
name|mockSearchPhaseContext
operator|.
name|getRequest
argument_list|()
argument_list|,
name|numHits
argument_list|)
decl_stmt|;
name|AtomicReference
argument_list|<
name|SearchResponse
argument_list|>
name|responseRef
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numHits
condition|;
name|i
operator|++
control|)
block|{
name|QuerySearchResult
name|queryResult
init|=
operator|new
name|QuerySearchResult
argument_list|(
name|i
argument_list|,
operator|new
name|SearchShardTarget
argument_list|(
literal|"node1"
argument_list|,
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|,
literal|"na"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|queryResult
operator|.
name|topDocs
argument_list|(
operator|new
name|TopDocs
argument_list|(
literal|1
argument_list|,
operator|new
name|ScoreDoc
index|[]
block|{
operator|new
name|ScoreDoc
argument_list|(
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|)
block|}
argument_list|,
name|i
argument_list|)
argument_list|,
operator|new
name|DocValueFormat
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|size
argument_list|(
name|resultSetSize
argument_list|)
expr_stmt|;
comment|// the size of the result set
name|queryResult
operator|.
name|setShardIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|results
operator|.
name|consumeResult
argument_list|(
name|queryResult
argument_list|)
expr_stmt|;
block|}
name|SearchTransportService
name|searchTransportService
init|=
operator|new
name|SearchTransportService
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"search.remote.connect"
argument_list|,
literal|false
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|null
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|sendExecuteFetch
parameter_list|(
name|Transport
operator|.
name|Connection
name|connection
parameter_list|,
name|ShardFetchSearchRequest
name|request
parameter_list|,
name|SearchTask
name|task
parameter_list|,
name|SearchActionListener
argument_list|<
name|FetchSearchResult
argument_list|>
name|listener
parameter_list|)
block|{
operator|new
name|Thread
argument_list|(
parameter_list|()
lambda|->
block|{
name|FetchSearchResult
name|fetchResult
init|=
operator|new
name|FetchSearchResult
argument_list|()
decl_stmt|;
name|fetchResult
operator|.
name|hits
argument_list|(
operator|new
name|SearchHits
argument_list|(
operator|new
name|SearchHit
index|[]
block|{
operator|new
name|SearchHit
argument_list|(
call|(
name|int
call|)
argument_list|(
name|request
operator|.
name|id
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
block|}
operator|,
literal|1
operator|,
literal|100F
argument_list|)
block|)
function|;
name|listener
operator|.
name|onResponse
parameter_list|(
name|fetchResult
parameter_list|)
constructor_decl|;
block|}
init|)
decl|.
name|start
argument_list|()
decl_stmt|;
block|}
end_function

begin_expr_stmt
unit|};
name|mockSearchPhaseContext
operator|.
name|searchTransport
operator|=
name|searchTransportService
expr_stmt|;
end_expr_stmt

begin_decl_stmt
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|FetchSearchPhase
name|phase
init|=
operator|new
name|FetchSearchPhase
argument_list|(
name|results
argument_list|,
name|controller
argument_list|,
name|mockSearchPhaseContext
argument_list|,
parameter_list|(
name|searchResponse
parameter_list|,
name|scrollId
parameter_list|)
lambda|->
operator|new
name|SearchPhase
argument_list|(
literal|"test"
argument_list|)
block|{
block|@Override                 public void run(
argument_list|)
throws|throws
name|IOException
block|{
name|responseRef
operator|.
name|set
argument_list|(
name|mockSearchPhaseContext
operator|.
name|buildSearchResponse
argument_list|(
name|searchResponse
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
end_expr_stmt

begin_empty_stmt
unit|}             })
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|"fetch"
argument_list|,
name|phase
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|phase
operator|.
name|run
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|latch
operator|.
name|await
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|mockSearchPhaseContext
operator|.
name|assertNoFailure
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertNotNull
argument_list|(
name|responseRef
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
name|numHits
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
name|Math
operator|.
name|min
argument_list|(
name|numHits
argument_list|,
name|resultSetSize
argument_list|)
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
end_expr_stmt

begin_decl_stmt
name|SearchHit
index|[]
name|hits
init|=
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
decl_stmt|;
end_decl_stmt

begin_for
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|hits
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|assertNotNull
argument_list|(
name|hits
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index: "
operator|+
name|i
argument_list|,
name|numHits
operator|-
name|i
argument_list|,
name|hits
index|[
name|i
index|]
operator|.
name|docId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index: "
operator|+
name|i
argument_list|,
name|numHits
operator|-
literal|1
operator|-
name|i
argument_list|,
operator|(
name|int
operator|)
name|hits
index|[
name|i
index|]
operator|.
name|getScore
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_for

begin_expr_stmt
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getFailedShards
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
name|numHits
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getSuccessfulShards
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_decl_stmt
name|int
name|sizeReleasedContexts
init|=
name|Math
operator|.
name|max
argument_list|(
literal|0
argument_list|,
name|numHits
operator|-
name|resultSetSize
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|// all non fetched results will be freed
end_comment

begin_expr_stmt
name|assertEquals
argument_list|(
name|mockSearchPhaseContext
operator|.
name|releasedSearchContexts
operator|.
name|toString
argument_list|()
argument_list|,
name|sizeReleasedContexts
argument_list|,
name|mockSearchPhaseContext
operator|.
name|releasedSearchContexts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function
unit|}      public
DECL|method|testExceptionFailsPhase
name|void
name|testExceptionFailsPhase
parameter_list|()
throws|throws
name|IOException
block|{
name|MockSearchPhaseContext
name|mockSearchPhaseContext
init|=
operator|new
name|MockSearchPhaseContext
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|SearchPhaseController
name|controller
init|=
operator|new
name|SearchPhaseController
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|BigArrays
operator|.
name|NON_RECYCLING_INSTANCE
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|InitialSearchPhase
operator|.
name|SearchPhaseResults
argument_list|<
name|SearchPhaseResult
argument_list|>
name|results
init|=
name|controller
operator|.
name|newSearchPhaseResults
argument_list|(
name|mockSearchPhaseContext
operator|.
name|getRequest
argument_list|()
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|AtomicReference
argument_list|<
name|SearchResponse
argument_list|>
name|responseRef
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|resultSetSize
init|=
name|randomIntBetween
argument_list|(
literal|2
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QuerySearchResult
name|queryResult
init|=
operator|new
name|QuerySearchResult
argument_list|(
literal|123
argument_list|,
operator|new
name|SearchShardTarget
argument_list|(
literal|"node1"
argument_list|,
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|,
literal|"na"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|queryResult
operator|.
name|topDocs
argument_list|(
operator|new
name|TopDocs
argument_list|(
literal|1
argument_list|,
operator|new
name|ScoreDoc
index|[]
block|{
operator|new
name|ScoreDoc
argument_list|(
literal|42
argument_list|,
literal|1.0F
argument_list|)
block|}
argument_list|,
literal|2.0F
argument_list|)
argument_list|,
operator|new
name|DocValueFormat
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|size
argument_list|(
name|resultSetSize
argument_list|)
expr_stmt|;
comment|// the size of the result set
name|queryResult
operator|.
name|setShardIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|results
operator|.
name|consumeResult
argument_list|(
name|queryResult
argument_list|)
expr_stmt|;
name|queryResult
operator|=
operator|new
name|QuerySearchResult
argument_list|(
literal|321
argument_list|,
operator|new
name|SearchShardTarget
argument_list|(
literal|"node2"
argument_list|,
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|,
literal|"na"
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|topDocs
argument_list|(
operator|new
name|TopDocs
argument_list|(
literal|1
argument_list|,
operator|new
name|ScoreDoc
index|[]
block|{
operator|new
name|ScoreDoc
argument_list|(
literal|84
argument_list|,
literal|2.0F
argument_list|)
block|}
argument_list|,
literal|2.0F
argument_list|)
argument_list|,
operator|new
name|DocValueFormat
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|size
argument_list|(
name|resultSetSize
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|setShardIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|consumeResult
argument_list|(
name|queryResult
argument_list|)
expr_stmt|;
name|AtomicInteger
name|numFetches
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SearchTransportService
name|searchTransportService
init|=
operator|new
name|SearchTransportService
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"search.remote.connect"
argument_list|,
literal|false
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|null
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|sendExecuteFetch
parameter_list|(
name|Transport
operator|.
name|Connection
name|connection
parameter_list|,
name|ShardFetchSearchRequest
name|request
parameter_list|,
name|SearchTask
name|task
parameter_list|,
name|SearchActionListener
argument_list|<
name|FetchSearchResult
argument_list|>
name|listener
parameter_list|)
block|{
name|FetchSearchResult
name|fetchResult
init|=
operator|new
name|FetchSearchResult
argument_list|()
decl_stmt|;
if|if
condition|(
name|numFetches
operator|.
name|incrementAndGet
argument_list|()
operator|==
literal|1
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"BOOM"
argument_list|)
throw|;
block|}
if|if
condition|(
name|request
operator|.
name|id
argument_list|()
operator|==
literal|321
condition|)
block|{
name|fetchResult
operator|.
name|hits
argument_list|(
operator|new
name|SearchHits
argument_list|(
operator|new
name|SearchHit
index|[]
block|{
operator|new
name|SearchHit
argument_list|(
literal|84
argument_list|)
block|}
argument_list|,
literal|1
argument_list|,
literal|2.0F
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|request
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|fetchResult
operator|.
name|hits
argument_list|(
operator|new
name|SearchHits
argument_list|(
operator|new
name|SearchHit
index|[]
block|{
operator|new
name|SearchHit
argument_list|(
literal|42
argument_list|)
block|}
argument_list|,
literal|1
argument_list|,
literal|1.0F
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|listener
operator|.
name|onResponse
argument_list|(
name|fetchResult
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|mockSearchPhaseContext
operator|.
name|searchTransport
operator|=
name|searchTransportService
expr_stmt|;
name|FetchSearchPhase
name|phase
init|=
operator|new
name|FetchSearchPhase
argument_list|(
name|results
argument_list|,
name|controller
argument_list|,
name|mockSearchPhaseContext
argument_list|,
parameter_list|(
name|searchResponse
parameter_list|,
name|scrollId
parameter_list|)
lambda|->
operator|new
name|SearchPhase
argument_list|(
literal|"test"
argument_list|)
block|{
block|@Override                 public void run(
argument_list|)
throws|throws
name|IOException
block|{
name|responseRef
operator|.
name|set
argument_list|(
name|mockSearchPhaseContext
operator|.
name|buildSearchResponse
argument_list|(
name|searchResponse
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
block|}
end_function

begin_empty_stmt
unit|})
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|"fetch"
argument_list|,
name|phase
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|phase
operator|.
name|run
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertNotNull
argument_list|(
name|mockSearchPhaseContext
operator|.
name|phaseFailure
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
name|mockSearchPhaseContext
operator|.
name|phaseFailure
operator|.
name|get
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"BOOM"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertNull
argument_list|(
name|responseRef
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertTrue
argument_list|(
name|mockSearchPhaseContext
operator|.
name|releasedSearchContexts
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function
unit|}      public
DECL|method|testCleanupIrrelevantContexts
name|void
name|testCleanupIrrelevantContexts
parameter_list|()
throws|throws
name|IOException
block|{
comment|// contexts that are not fetched should be cleaned up
name|MockSearchPhaseContext
name|mockSearchPhaseContext
init|=
operator|new
name|MockSearchPhaseContext
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|SearchPhaseController
name|controller
init|=
operator|new
name|SearchPhaseController
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|BigArrays
operator|.
name|NON_RECYCLING_INSTANCE
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|InitialSearchPhase
operator|.
name|SearchPhaseResults
argument_list|<
name|SearchPhaseResult
argument_list|>
name|results
init|=
name|controller
operator|.
name|newSearchPhaseResults
argument_list|(
name|mockSearchPhaseContext
operator|.
name|getRequest
argument_list|()
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|AtomicReference
argument_list|<
name|SearchResponse
argument_list|>
name|responseRef
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|resultSetSize
init|=
literal|1
decl_stmt|;
name|QuerySearchResult
name|queryResult
init|=
operator|new
name|QuerySearchResult
argument_list|(
literal|123
argument_list|,
operator|new
name|SearchShardTarget
argument_list|(
literal|"node1"
argument_list|,
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|,
literal|"na"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|queryResult
operator|.
name|topDocs
argument_list|(
operator|new
name|TopDocs
argument_list|(
literal|1
argument_list|,
operator|new
name|ScoreDoc
index|[]
block|{
operator|new
name|ScoreDoc
argument_list|(
literal|42
argument_list|,
literal|1.0F
argument_list|)
block|}
argument_list|,
literal|2.0F
argument_list|)
argument_list|,
operator|new
name|DocValueFormat
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|size
argument_list|(
name|resultSetSize
argument_list|)
expr_stmt|;
comment|// the size of the result set
name|queryResult
operator|.
name|setShardIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|results
operator|.
name|consumeResult
argument_list|(
name|queryResult
argument_list|)
expr_stmt|;
name|queryResult
operator|=
operator|new
name|QuerySearchResult
argument_list|(
literal|321
argument_list|,
operator|new
name|SearchShardTarget
argument_list|(
literal|"node2"
argument_list|,
operator|new
name|Index
argument_list|(
literal|"test"
argument_list|,
literal|"na"
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|topDocs
argument_list|(
operator|new
name|TopDocs
argument_list|(
literal|1
argument_list|,
operator|new
name|ScoreDoc
index|[]
block|{
operator|new
name|ScoreDoc
argument_list|(
literal|84
argument_list|,
literal|2.0F
argument_list|)
block|}
argument_list|,
literal|2.0F
argument_list|)
argument_list|,
operator|new
name|DocValueFormat
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|size
argument_list|(
name|resultSetSize
argument_list|)
expr_stmt|;
name|queryResult
operator|.
name|setShardIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|consumeResult
argument_list|(
name|queryResult
argument_list|)
expr_stmt|;
name|SearchTransportService
name|searchTransportService
init|=
operator|new
name|SearchTransportService
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"search.remote.connect"
argument_list|,
literal|false
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
literal|null
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|sendExecuteFetch
parameter_list|(
name|Transport
operator|.
name|Connection
name|connection
parameter_list|,
name|ShardFetchSearchRequest
name|request
parameter_list|,
name|SearchTask
name|task
parameter_list|,
name|SearchActionListener
argument_list|<
name|FetchSearchResult
argument_list|>
name|listener
parameter_list|)
block|{
name|FetchSearchResult
name|fetchResult
init|=
operator|new
name|FetchSearchResult
argument_list|()
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|id
argument_list|()
operator|==
literal|321
condition|)
block|{
name|fetchResult
operator|.
name|hits
argument_list|(
operator|new
name|SearchHits
argument_list|(
operator|new
name|SearchHit
index|[]
block|{
operator|new
name|SearchHit
argument_list|(
literal|84
argument_list|)
block|}
argument_list|,
literal|1
argument_list|,
literal|2.0F
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|fail
argument_list|(
literal|"requestID 123 should not be fetched but was"
argument_list|)
expr_stmt|;
block|}
name|listener
operator|.
name|onResponse
argument_list|(
name|fetchResult
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|mockSearchPhaseContext
operator|.
name|searchTransport
operator|=
name|searchTransportService
expr_stmt|;
name|FetchSearchPhase
name|phase
init|=
operator|new
name|FetchSearchPhase
argument_list|(
name|results
argument_list|,
name|controller
argument_list|,
name|mockSearchPhaseContext
argument_list|,
parameter_list|(
name|searchResponse
parameter_list|,
name|scrollId
parameter_list|)
lambda|->
operator|new
name|SearchPhase
argument_list|(
literal|"test"
argument_list|)
block|{
block|@Override                 public void run(
argument_list|)
throws|throws
name|IOException
block|{
name|responseRef
operator|.
name|set
argument_list|(
name|mockSearchPhaseContext
operator|.
name|buildSearchResponse
argument_list|(
name|searchResponse
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
block|}
end_function

begin_empty_stmt
unit|})
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|"fetch"
argument_list|,
name|phase
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|phase
operator|.
name|run
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|mockSearchPhaseContext
operator|.
name|assertNoFailure
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertNotNull
argument_list|(
name|responseRef
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|internalHits
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|84
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getAt
argument_list|(
literal|0
argument_list|)
operator|.
name|docId
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getFailedShards
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|responseRef
operator|.
name|get
argument_list|()
operator|.
name|getSuccessfulShards
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|mockSearchPhaseContext
operator|.
name|releasedSearchContexts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertTrue
argument_list|(
name|mockSearchPhaseContext
operator|.
name|releasedSearchContexts
operator|.
name|contains
argument_list|(
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

unit|} }
end_unit

