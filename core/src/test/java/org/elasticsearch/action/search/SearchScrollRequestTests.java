begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.search
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|json
operator|.
name|JsonXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|InternalScrollSearchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|EqualsHashCodeTestUtils
operator|.
name|checkEqualsAndHashCode
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertToXContentEquivalent
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|startsWith
import|;
end_import

begin_class
DECL|class|SearchScrollRequestTests
specifier|public
class|class
name|SearchScrollRequestTests
extends|extends
name|ESTestCase
block|{
DECL|method|testSerialization
specifier|public
name|void
name|testSerialization
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchScrollRequest
name|searchScrollRequest
init|=
name|createSearchScrollRequest
argument_list|()
decl_stmt|;
try|try
init|(
name|BytesStreamOutput
name|output
init|=
operator|new
name|BytesStreamOutput
argument_list|()
init|)
block|{
name|searchScrollRequest
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
try|try
init|(
name|StreamInput
name|in
init|=
name|output
operator|.
name|bytes
argument_list|()
operator|.
name|streamInput
argument_list|()
init|)
block|{
name|SearchScrollRequest
name|deserializedRequest
init|=
operator|new
name|SearchScrollRequest
argument_list|()
decl_stmt|;
name|deserializedRequest
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|deserializedRequest
argument_list|,
name|searchScrollRequest
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|deserializedRequest
operator|.
name|hashCode
argument_list|()
argument_list|,
name|searchScrollRequest
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|deserializedRequest
argument_list|,
name|searchScrollRequest
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testInternalScrollSearchRequestSerialization
specifier|public
name|void
name|testInternalScrollSearchRequestSerialization
parameter_list|()
throws|throws
name|IOException
block|{
name|SearchScrollRequest
name|searchScrollRequest
init|=
name|createSearchScrollRequest
argument_list|()
decl_stmt|;
name|InternalScrollSearchRequest
name|internalScrollSearchRequest
init|=
operator|new
name|InternalScrollSearchRequest
argument_list|(
name|searchScrollRequest
argument_list|,
name|randomLong
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|BytesStreamOutput
name|output
init|=
operator|new
name|BytesStreamOutput
argument_list|()
init|)
block|{
name|internalScrollSearchRequest
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
try|try
init|(
name|StreamInput
name|in
init|=
name|output
operator|.
name|bytes
argument_list|()
operator|.
name|streamInput
argument_list|()
init|)
block|{
name|InternalScrollSearchRequest
name|deserializedRequest
init|=
operator|new
name|InternalScrollSearchRequest
argument_list|()
decl_stmt|;
name|deserializedRequest
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|deserializedRequest
operator|.
name|id
argument_list|()
argument_list|,
name|internalScrollSearchRequest
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|deserializedRequest
operator|.
name|scroll
argument_list|()
argument_list|,
name|internalScrollSearchRequest
operator|.
name|scroll
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|deserializedRequest
argument_list|,
name|internalScrollSearchRequest
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testFromXContent
specifier|public
name|void
name|testFromXContent
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchScrollRequest
name|searchScrollRequest
init|=
operator|new
name|SearchScrollRequest
argument_list|()
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
comment|//test that existing values get overridden
name|searchScrollRequest
operator|=
name|createSearchScrollRequest
argument_list|()
expr_stmt|;
block|}
try|try
init|(
name|XContentParser
name|parser
init|=
name|createParser
argument_list|(
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"scroll_id"
argument_list|,
literal|"SCROLL_ID"
argument_list|)
operator|.
name|field
argument_list|(
literal|"scroll"
argument_list|,
literal|"1m"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
init|)
block|{
name|searchScrollRequest
operator|.
name|fromXContent
argument_list|(
name|parser
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|"SCROLL_ID"
argument_list|,
name|searchScrollRequest
operator|.
name|scrollId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimeValue
operator|.
name|parseTimeValue
argument_list|(
literal|"1m"
argument_list|,
literal|null
argument_list|,
literal|"scroll"
argument_list|)
argument_list|,
name|searchScrollRequest
operator|.
name|scroll
argument_list|()
operator|.
name|keepAlive
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testFromXContentWithUnknownParamThrowsException
specifier|public
name|void
name|testFromXContentWithUnknownParamThrowsException
parameter_list|()
throws|throws
name|Exception
block|{
name|SearchScrollRequest
name|searchScrollRequest
init|=
operator|new
name|SearchScrollRequest
argument_list|()
decl_stmt|;
name|XContentParser
name|invalidContent
init|=
name|createParser
argument_list|(
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"scroll_id"
argument_list|,
literal|"value_2"
argument_list|)
operator|.
name|field
argument_list|(
literal|"unknown"
argument_list|,
literal|"keyword"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
decl_stmt|;
name|Exception
name|e
init|=
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|searchScrollRequest
operator|.
name|fromXContent
argument_list|(
name|invalidContent
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|startsWith
argument_list|(
literal|"Unknown parameter [unknown]"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testToXContent
specifier|public
name|void
name|testToXContent
parameter_list|()
throws|throws
name|IOException
block|{
name|SearchScrollRequest
name|searchScrollRequest
init|=
operator|new
name|SearchScrollRequest
argument_list|()
decl_stmt|;
name|searchScrollRequest
operator|.
name|scrollId
argument_list|(
literal|"SCROLL_ID"
argument_list|)
expr_stmt|;
name|searchScrollRequest
operator|.
name|scroll
argument_list|(
literal|"1m"
argument_list|)
expr_stmt|;
try|try
init|(
name|XContentBuilder
name|builder
init|=
name|JsonXContent
operator|.
name|contentBuilder
argument_list|()
init|)
block|{
name|searchScrollRequest
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|ToXContent
operator|.
name|EMPTY_PARAMS
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"{\"scroll_id\":\"SCROLL_ID\",\"scroll\":\"1m\"}"
argument_list|,
name|builder
operator|.
name|string
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testToAndFromXContent
specifier|public
name|void
name|testToAndFromXContent
parameter_list|()
throws|throws
name|IOException
block|{
name|XContentType
name|xContentType
init|=
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|humanReadable
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
name|SearchScrollRequest
name|originalRequest
init|=
name|createSearchScrollRequest
argument_list|()
decl_stmt|;
name|BytesReference
name|originalBytes
init|=
name|toShuffledXContent
argument_list|(
name|originalRequest
argument_list|,
name|xContentType
argument_list|,
name|ToXContent
operator|.
name|EMPTY_PARAMS
argument_list|,
name|humanReadable
argument_list|)
decl_stmt|;
name|SearchScrollRequest
name|parsedRequest
init|=
operator|new
name|SearchScrollRequest
argument_list|()
decl_stmt|;
try|try
init|(
name|XContentParser
name|parser
init|=
name|createParser
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|,
name|originalBytes
argument_list|)
init|)
block|{
name|parsedRequest
operator|.
name|fromXContent
argument_list|(
name|parser
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|originalRequest
argument_list|,
name|parsedRequest
argument_list|)
expr_stmt|;
name|BytesReference
name|parsedBytes
init|=
name|XContentHelper
operator|.
name|toXContent
argument_list|(
name|parsedRequest
argument_list|,
name|xContentType
argument_list|,
name|humanReadable
argument_list|)
decl_stmt|;
name|assertToXContentEquivalent
argument_list|(
name|originalBytes
argument_list|,
name|parsedBytes
argument_list|,
name|xContentType
argument_list|)
expr_stmt|;
block|}
DECL|method|testEqualsAndHashcode
specifier|public
name|void
name|testEqualsAndHashcode
parameter_list|()
block|{
name|checkEqualsAndHashCode
argument_list|(
name|createSearchScrollRequest
argument_list|()
argument_list|,
name|SearchScrollRequestTests
operator|::
name|copyRequest
argument_list|,
name|SearchScrollRequestTests
operator|::
name|mutate
argument_list|)
expr_stmt|;
block|}
DECL|method|createSearchScrollRequest
specifier|public
specifier|static
name|SearchScrollRequest
name|createSearchScrollRequest
parameter_list|()
block|{
name|SearchScrollRequest
name|searchScrollRequest
init|=
operator|new
name|SearchScrollRequest
argument_list|(
name|randomAlphaOfLengthBetween
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|searchScrollRequest
operator|.
name|scroll
argument_list|(
name|randomPositiveTimeValue
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|searchScrollRequest
return|;
block|}
DECL|method|copyRequest
specifier|private
specifier|static
name|SearchScrollRequest
name|copyRequest
parameter_list|(
name|SearchScrollRequest
name|searchScrollRequest
parameter_list|)
block|{
name|SearchScrollRequest
name|result
init|=
operator|new
name|SearchScrollRequest
argument_list|()
decl_stmt|;
name|result
operator|.
name|scrollId
argument_list|(
name|searchScrollRequest
operator|.
name|scrollId
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|scroll
argument_list|(
name|searchScrollRequest
operator|.
name|scroll
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
DECL|method|mutate
specifier|private
specifier|static
name|SearchScrollRequest
name|mutate
parameter_list|(
name|SearchScrollRequest
name|original
parameter_list|)
block|{
name|SearchScrollRequest
name|copy
init|=
name|copyRequest
argument_list|(
name|original
argument_list|)
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
return|return
name|copy
operator|.
name|scrollId
argument_list|(
name|original
operator|.
name|scrollId
argument_list|()
operator|+
literal|"xyz"
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|copy
operator|.
name|scroll
argument_list|(
operator|new
name|TimeValue
argument_list|(
name|original
operator|.
name|scroll
argument_list|()
operator|.
name|keepAlive
argument_list|()
operator|.
name|getMillis
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

