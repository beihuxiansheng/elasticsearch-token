begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.search
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchPhaseResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchShardTarget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|TransportSearchHelperTests
specifier|public
class|class
name|TransportSearchHelperTests
extends|extends
name|ESTestCase
block|{
DECL|method|testParseScrollId
specifier|public
name|void
name|testParseScrollId
parameter_list|()
throws|throws
name|IOException
block|{
name|AtomicArray
argument_list|<
name|SearchPhaseResult
argument_list|>
name|array
init|=
operator|new
name|AtomicArray
argument_list|<>
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node1
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_1"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node2
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_2"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|DiscoveryNode
name|node3
init|=
operator|new
name|DiscoveryNode
argument_list|(
literal|"node_3"
argument_list|,
name|buildNewFakeTransportAddress
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
name|testSearchPhaseResult1
init|=
operator|new
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
argument_list|(
literal|1
argument_list|,
name|node1
argument_list|)
decl_stmt|;
name|testSearchPhaseResult1
operator|.
name|setSearchShardTarget
argument_list|(
operator|new
name|SearchShardTarget
argument_list|(
literal|"node_1"
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"idx"
argument_list|,
literal|"uuid1"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|"cluster_x"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
name|testSearchPhaseResult2
init|=
operator|new
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
argument_list|(
literal|12
argument_list|,
name|node2
argument_list|)
decl_stmt|;
name|testSearchPhaseResult2
operator|.
name|setSearchShardTarget
argument_list|(
operator|new
name|SearchShardTarget
argument_list|(
literal|"node_2"
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"idy"
argument_list|,
literal|"uuid2"
argument_list|,
literal|42
argument_list|)
argument_list|,
literal|"cluster_y"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
name|testSearchPhaseResult3
init|=
operator|new
name|SearchAsyncActionTests
operator|.
name|TestSearchPhaseResult
argument_list|(
literal|42
argument_list|,
name|node3
argument_list|)
decl_stmt|;
name|testSearchPhaseResult3
operator|.
name|setSearchShardTarget
argument_list|(
operator|new
name|SearchShardTarget
argument_list|(
literal|"node_3"
argument_list|,
operator|new
name|ShardId
argument_list|(
literal|"idy"
argument_list|,
literal|"uuid2"
argument_list|,
literal|43
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|setOnce
argument_list|(
literal|0
argument_list|,
name|testSearchPhaseResult1
argument_list|)
expr_stmt|;
name|array
operator|.
name|setOnce
argument_list|(
literal|1
argument_list|,
name|testSearchPhaseResult2
argument_list|)
expr_stmt|;
name|array
operator|.
name|setOnce
argument_list|(
literal|2
argument_list|,
name|testSearchPhaseResult3
argument_list|)
expr_stmt|;
name|String
name|scrollId
init|=
name|TransportSearchHelper
operator|.
name|buildScrollId
argument_list|(
name|array
argument_list|)
decl_stmt|;
name|ParsedScrollId
name|parseScrollId
init|=
name|TransportSearchHelper
operator|.
name|parseScrollId
argument_list|(
name|scrollId
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|parseScrollId
operator|.
name|getContext
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"node_1"
argument_list|,
name|parseScrollId
operator|.
name|getContext
argument_list|()
index|[
literal|0
index|]
operator|.
name|getNode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cluster_x"
argument_list|,
name|parseScrollId
operator|.
name|getContext
argument_list|()
index|[
literal|0
index|]
operator|.
name|getClusterAlias
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|parseScrollId
operator|.
name|getContext
argument_list|()
index|[
literal|0
index|]
operator|.
name|getScrollId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"node_2"
argument_list|,
name|parseScrollId
operator|.
name|getContext
argument_list|()
index|[
literal|1
index|]
operator|.
name|getNode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cluster_y"
argument_list|,
name|parseScrollId
operator|.
name|getContext
argument_list|()
index|[
literal|1
index|]
operator|.
name|getClusterAlias
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|parseScrollId
operator|.
name|getContext
argument_list|()
index|[
literal|1
index|]
operator|.
name|getScrollId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"node_3"
argument_list|,
name|parseScrollId
operator|.
name|getContext
argument_list|()
index|[
literal|2
index|]
operator|.
name|getNode
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|parseScrollId
operator|.
name|getContext
argument_list|()
index|[
literal|2
index|]
operator|.
name|getClusterAlias
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|42
argument_list|,
name|parseScrollId
operator|.
name|getContext
argument_list|()
index|[
literal|2
index|]
operator|.
name|getScrollId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

