begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.fieldstats
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|json
operator|.
name|JsonXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|fieldstats
operator|.
name|FieldStatsTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|StreamsUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|VersionUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|GT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|GTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|LT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Comparison
operator|.
name|LTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Property
operator|.
name|MAX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|fieldstats
operator|.
name|IndexConstraint
operator|.
name|Property
operator|.
name|MIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_class
DECL|class|FieldStatsRequestTests
specifier|public
class|class
name|FieldStatsRequestTests
extends|extends
name|ESTestCase
block|{
DECL|method|testFieldsParsing
specifier|public
name|void
name|testFieldsParsing
parameter_list|()
throws|throws
name|Exception
block|{
name|BytesArray
name|data
init|=
operator|new
name|BytesArray
argument_list|(
name|StreamsUtils
operator|.
name|copyToBytesFromClasspath
argument_list|(
literal|"/org/elasticsearch/action/fieldstats/"
operator|+
literal|"fieldstats-index-constraints-request.json"
argument_list|)
argument_list|)
decl_stmt|;
name|FieldStatsRequest
name|request
init|=
operator|new
name|FieldStatsRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|source
argument_list|(
name|createParser
argument_list|(
name|JsonXContent
operator|.
name|jsonXContent
argument_list|,
name|data
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getFields
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getFields
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|equalTo
argument_list|(
literal|"field1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getFields
argument_list|()
index|[
literal|1
index|]
argument_list|,
name|equalTo
argument_list|(
literal|"field2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getFields
argument_list|()
index|[
literal|2
index|]
argument_list|,
name|equalTo
argument_list|(
literal|"field3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getFields
argument_list|()
index|[
literal|3
index|]
argument_list|,
name|equalTo
argument_list|(
literal|"field4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getFields
argument_list|()
index|[
literal|4
index|]
argument_list|,
name|equalTo
argument_list|(
literal|"field5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|0
index|]
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"field2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"9"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|0
index|]
operator|.
name|getProperty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|MAX
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|0
index|]
operator|.
name|getComparison
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|GTE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|1
index|]
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"field3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|1
index|]
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|1
index|]
operator|.
name|getProperty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|MIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|1
index|]
operator|.
name|getComparison
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|GT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|2
index|]
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"field4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|2
index|]
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|2
index|]
operator|.
name|getProperty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|MIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|2
index|]
operator|.
name|getComparison
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|GTE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|3
index|]
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"field4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|3
index|]
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"g"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|3
index|]
operator|.
name|getProperty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|MAX
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|3
index|]
operator|.
name|getComparison
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|LTE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|4
index|]
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"field5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|4
index|]
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|4
index|]
operator|.
name|getProperty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|MIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|4
index|]
operator|.
name|getComparison
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|GT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|5
index|]
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"field5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|5
index|]
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"9"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|5
index|]
operator|.
name|getProperty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|MAX
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|5
index|]
operator|.
name|getComparison
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|LT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|6
index|]
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"field1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|6
index|]
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2014-01-01"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|6
index|]
operator|.
name|getProperty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|MIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|6
index|]
operator|.
name|getComparison
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|GTE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|6
index|]
operator|.
name|getOptionalFormat
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"date_optional_time"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|7
index|]
operator|.
name|getField
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"field1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|7
index|]
operator|.
name|getValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"2015-01-01"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|7
index|]
operator|.
name|getProperty
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|MAX
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|7
index|]
operator|.
name|getComparison
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|LT
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|request
operator|.
name|getIndexConstraints
argument_list|()
index|[
literal|7
index|]
operator|.
name|getOptionalFormat
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"date_optional_time"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testFieldStatsBWC
specifier|public
name|void
name|testFieldStatsBWC
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|size
init|=
name|randomIntBetween
argument_list|(
literal|5
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|FieldStats
argument_list|<
name|?
argument_list|>
argument_list|>
name|stats
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|stats
operator|.
name|put
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
name|FieldStatsTests
operator|.
name|randomFieldStats
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|FieldStatsShardResponse
name|response
init|=
operator|new
name|FieldStatsShardResponse
argument_list|(
operator|new
name|ShardId
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|stats
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|Version
name|version
init|=
name|VersionUtils
operator|.
name|randomVersionBetween
argument_list|(
name|random
argument_list|()
argument_list|,
name|Version
operator|.
name|V_5_0_0
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|BytesStreamOutput
name|output
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|output
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|response
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|output
operator|.
name|flush
argument_list|()
expr_stmt|;
name|StreamInput
name|input
init|=
name|output
operator|.
name|bytes
argument_list|()
operator|.
name|streamInput
argument_list|()
decl_stmt|;
name|input
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|FieldStatsShardResponse
name|deserialized
init|=
operator|new
name|FieldStatsShardResponse
argument_list|()
decl_stmt|;
name|deserialized
operator|.
name|readFrom
argument_list|(
name|input
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|FieldStats
argument_list|<
name|?
argument_list|>
argument_list|>
name|expected
decl_stmt|;
if|if
condition|(
name|version
operator|.
name|before
argument_list|(
name|Version
operator|.
name|V_5_2_0
argument_list|)
condition|)
block|{
name|expected
operator|=
name|deserialized
operator|.
name|filterNullMinMax
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|expected
operator|=
name|deserialized
operator|.
name|getFieldStats
argument_list|()
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|expected
operator|.
name|size
argument_list|()
argument_list|,
name|deserialized
operator|.
name|getFieldStats
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|expected
argument_list|,
name|equalTo
argument_list|(
name|deserialized
operator|.
name|getFieldStats
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

