begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.snapshots
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|snapshots
package|;
end_package

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|hppc
operator|.
name|IntHashSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|hppc
operator|.
name|IntSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionFuture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|repositories
operator|.
name|put
operator|.
name|PutRepositoryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|snapshots
operator|.
name|create
operator|.
name|CreateSnapshotResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|snapshots
operator|.
name|delete
operator|.
name|DeleteSnapshotResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|snapshots
operator|.
name|get
operator|.
name|GetSnapshotsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|snapshots
operator|.
name|restore
operator|.
name|RestoreSnapshotResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|snapshots
operator|.
name|status
operator|.
name|SnapshotStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|snapshots
operator|.
name|status
operator|.
name|SnapshotsStatusResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|ActiveShardCount
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|node
operator|.
name|NodeClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterStateUpdateTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|NamedDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|SnapshotsInProgress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|health
operator|.
name|ClusterHealthStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|MetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|MetaDataIndexStateService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|decider
operator|.
name|EnableAllocationDecider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|service
operator|.
name|ClusterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|CheckedFunction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|ParseField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|NamedWriteableRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Writeable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|SettingsFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|NamedXContentRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|discovery
operator|.
name|zen
operator|.
name|ElectMasterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|Environment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|recovery
operator|.
name|RecoveryState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|node
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|repositories
operator|.
name|RepositoryMissingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|AbstractRestChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|RestClusterStateAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|RestGetRepositoriesAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|snapshots
operator|.
name|mockstore
operator|.
name|MockRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
operator|.
name|ClusterScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|InternalTestCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|TestCustomMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|FakeRestRequest
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicReference
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertAcked
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertBlocked
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertThrows
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|allOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|containsString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThan
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThanOrEqualTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|lessThan
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|not
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|nullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
annotation|@
name|ClusterScope
argument_list|(
name|scope
operator|=
name|Scope
operator|.
name|TEST
argument_list|,
name|numDataNodes
operator|=
literal|0
argument_list|,
name|transportClientRatio
operator|=
literal|0
argument_list|)
DECL|class|DedicatedClusterSnapshotRestoreIT
specifier|public
class|class
name|DedicatedClusterSnapshotRestoreIT
extends|extends
name|AbstractSnapshotIntegTestCase
block|{
DECL|class|TestCustomMetaDataPlugin
specifier|public
specifier|static
class|class
name|TestCustomMetaDataPlugin
extends|extends
name|Plugin
block|{
DECL|field|namedWritables
specifier|private
specifier|final
name|List
argument_list|<
name|NamedWriteableRegistry
operator|.
name|Entry
argument_list|>
name|namedWritables
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|namedXContents
specifier|private
specifier|final
name|List
argument_list|<
name|NamedXContentRegistry
operator|.
name|Entry
argument_list|>
name|namedXContents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|TestCustomMetaDataPlugin
specifier|public
name|TestCustomMetaDataPlugin
parameter_list|()
block|{
name|registerBuiltinWritables
argument_list|()
expr_stmt|;
block|}
DECL|method|registerMetaDataCustom
specifier|private
parameter_list|<
name|T
extends|extends
name|MetaData
operator|.
name|Custom
parameter_list|>
name|void
name|registerMetaDataCustom
parameter_list|(
name|String
name|name
parameter_list|,
name|Writeable
operator|.
name|Reader
argument_list|<
name|T
argument_list|>
name|reader
parameter_list|,
name|Writeable
operator|.
name|Reader
argument_list|<
name|NamedDiff
argument_list|>
name|diffReader
parameter_list|,
name|CheckedFunction
argument_list|<
name|XContentParser
argument_list|,
name|T
argument_list|,
name|IOException
argument_list|>
name|parser
parameter_list|)
block|{
name|namedWritables
operator|.
name|add
argument_list|(
operator|new
name|NamedWriteableRegistry
operator|.
name|Entry
argument_list|(
name|MetaData
operator|.
name|Custom
operator|.
name|class
argument_list|,
name|name
argument_list|,
name|reader
argument_list|)
argument_list|)
expr_stmt|;
name|namedWritables
operator|.
name|add
argument_list|(
operator|new
name|NamedWriteableRegistry
operator|.
name|Entry
argument_list|(
name|NamedDiff
operator|.
name|class
argument_list|,
name|name
argument_list|,
name|diffReader
argument_list|)
argument_list|)
expr_stmt|;
name|namedXContents
operator|.
name|add
argument_list|(
operator|new
name|NamedXContentRegistry
operator|.
name|Entry
argument_list|(
name|MetaData
operator|.
name|Custom
operator|.
name|class
argument_list|,
operator|new
name|ParseField
argument_list|(
name|name
argument_list|)
argument_list|,
name|parser
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|registerBuiltinWritables
specifier|private
name|void
name|registerBuiltinWritables
parameter_list|()
block|{
name|registerMetaDataCustom
argument_list|(
name|SnapshottableMetadata
operator|.
name|TYPE
argument_list|,
name|SnapshottableMetadata
operator|::
name|readFrom
argument_list|,
name|SnapshottableMetadata
operator|::
name|readDiffFrom
argument_list|,
name|SnapshottableMetadata
operator|::
name|fromXContent
argument_list|)
expr_stmt|;
name|registerMetaDataCustom
argument_list|(
name|NonSnapshottableMetadata
operator|.
name|TYPE
argument_list|,
name|NonSnapshottableMetadata
operator|::
name|readFrom
argument_list|,
name|NonSnapshottableMetadata
operator|::
name|readDiffFrom
argument_list|,
name|NonSnapshottableMetadata
operator|::
name|fromXContent
argument_list|)
expr_stmt|;
name|registerMetaDataCustom
argument_list|(
name|SnapshottableGatewayMetadata
operator|.
name|TYPE
argument_list|,
name|SnapshottableGatewayMetadata
operator|::
name|readFrom
argument_list|,
name|SnapshottableGatewayMetadata
operator|::
name|readDiffFrom
argument_list|,
name|SnapshottableGatewayMetadata
operator|::
name|fromXContent
argument_list|)
expr_stmt|;
name|registerMetaDataCustom
argument_list|(
name|NonSnapshottableGatewayMetadata
operator|.
name|TYPE
argument_list|,
name|NonSnapshottableGatewayMetadata
operator|::
name|readFrom
argument_list|,
name|NonSnapshottableGatewayMetadata
operator|::
name|readDiffFrom
argument_list|,
name|NonSnapshottableGatewayMetadata
operator|::
name|fromXContent
argument_list|)
expr_stmt|;
name|registerMetaDataCustom
argument_list|(
name|SnapshotableGatewayNoApiMetadata
operator|.
name|TYPE
argument_list|,
name|SnapshotableGatewayNoApiMetadata
operator|::
name|readFrom
argument_list|,
name|NonSnapshottableGatewayMetadata
operator|::
name|readDiffFrom
argument_list|,
name|SnapshotableGatewayNoApiMetadata
operator|::
name|fromXContent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getNamedWriteables
specifier|public
name|List
argument_list|<
name|NamedWriteableRegistry
operator|.
name|Entry
argument_list|>
name|getNamedWriteables
parameter_list|()
block|{
return|return
name|namedWritables
return|;
block|}
annotation|@
name|Override
DECL|method|getNamedXContent
specifier|public
name|List
argument_list|<
name|NamedXContentRegistry
operator|.
name|Entry
argument_list|>
name|getNamedXContent
parameter_list|()
block|{
return|return
name|namedXContents
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|nodePlugins
specifier|protected
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|Plugin
argument_list|>
argument_list|>
name|nodePlugins
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|MockRepository
operator|.
name|Plugin
operator|.
name|class
argument_list|,
name|TestCustomMetaDataPlugin
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|testRestorePersistentSettings
specifier|public
name|void
name|testRestorePersistentSettings
parameter_list|()
throws|throws
name|Exception
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"--> start 2 nodes"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startNode
argument_list|()
expr_stmt|;
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|String
name|secondNode
init|=
name|internalCluster
argument_list|()
operator|.
name|startNode
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> wait for the second node to join the cluster"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setWaitForNodes
argument_list|(
literal|"2"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isTimedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> set test persistent setting"
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareUpdateSettings
argument_list|()
operator|.
name|setPersistentSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|ElectMasterService
operator|.
name|DISCOVERY_ZEN_MINIMUM_MASTER_NODES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|setRoutingTable
argument_list|(
literal|false
argument_list|)
operator|.
name|setNodes
argument_list|(
literal|false
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
operator|.
name|getState
argument_list|()
operator|.
name|getMetaData
argument_list|()
operator|.
name|persistentSettings
argument_list|()
operator|.
name|getAsInt
argument_list|(
name|ElectMasterService
operator|.
name|DISCOVERY_ZEN_MINIMUM_MASTER_NODES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> create repository"
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"fs"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|randomRepoPath
argument_list|()
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> start snapshot"
argument_list|)
expr_stmt|;
name|CreateSnapshotResponse
name|createSnapshotResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
operator|.
name|getSnapshots
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|state
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|SnapshotState
operator|.
name|SUCCESS
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> clean the test persistent setting"
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareUpdateSettings
argument_list|()
operator|.
name|setPersistentSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|ElectMasterService
operator|.
name|DISCOVERY_ZEN_MINIMUM_MASTER_NODES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|setRoutingTable
argument_list|(
literal|false
argument_list|)
operator|.
name|setNodes
argument_list|(
literal|false
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
operator|.
name|getState
argument_list|()
operator|.
name|getMetaData
argument_list|()
operator|.
name|persistentSettings
argument_list|()
operator|.
name|getAsInt
argument_list|(
name|ElectMasterService
operator|.
name|DISCOVERY_ZEN_MINIMUM_MASTER_NODES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|stopNode
argument_list|(
name|secondNode
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setWaitForNodes
argument_list|(
literal|"1"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isTimedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore snapshot"
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setRestoreGlobalState
argument_list|(
literal|true
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"can't restore minimum master nodes"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"illegal value can't update [discovery.zen.minimum_master_nodes] from [1] to [2]"
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cannot set discovery.zen.minimum_master_nodes to more than the current master nodes count [1]"
argument_list|,
name|ex
operator|.
name|getCause
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|logger
operator|.
name|info
argument_list|(
literal|"--> ensure that zen discovery minimum master nodes wasn't restored"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|setRoutingTable
argument_list|(
literal|false
argument_list|)
operator|.
name|setNodes
argument_list|(
literal|false
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
operator|.
name|getState
argument_list|()
operator|.
name|getMetaData
argument_list|()
operator|.
name|persistentSettings
argument_list|()
operator|.
name|getAsInt
argument_list|(
name|ElectMasterService
operator|.
name|DISCOVERY_ZEN_MINIMUM_MASTER_NODES_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|not
argument_list|(
name|equalTo
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testRestoreCustomMetadata
specifier|public
name|void
name|testRestoreCustomMetadata
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|tempDir
init|=
name|randomRepoPath
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> start node"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startNode
argument_list|()
expr_stmt|;
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|createIndex
argument_list|(
literal|"test-idx"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> add custom persistent metadata"
argument_list|)
expr_stmt|;
name|updateClusterState
argument_list|(
operator|new
name|ClusterStateUpdater
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ClusterState
name|execute
parameter_list|(
name|ClusterState
name|currentState
parameter_list|)
throws|throws
name|Exception
block|{
name|ClusterState
operator|.
name|Builder
name|builder
init|=
name|ClusterState
operator|.
name|builder
argument_list|(
name|currentState
argument_list|)
decl_stmt|;
name|MetaData
operator|.
name|Builder
name|metadataBuilder
init|=
name|MetaData
operator|.
name|builder
argument_list|(
name|currentState
operator|.
name|metaData
argument_list|()
argument_list|)
decl_stmt|;
name|metadataBuilder
operator|.
name|putCustom
argument_list|(
name|SnapshottableMetadata
operator|.
name|TYPE
argument_list|,
operator|new
name|SnapshottableMetadata
argument_list|(
literal|"before_snapshot_s"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataBuilder
operator|.
name|putCustom
argument_list|(
name|NonSnapshottableMetadata
operator|.
name|TYPE
argument_list|,
operator|new
name|NonSnapshottableMetadata
argument_list|(
literal|"before_snapshot_ns"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataBuilder
operator|.
name|putCustom
argument_list|(
name|SnapshottableGatewayMetadata
operator|.
name|TYPE
argument_list|,
operator|new
name|SnapshottableGatewayMetadata
argument_list|(
literal|"before_snapshot_s_gw"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataBuilder
operator|.
name|putCustom
argument_list|(
name|NonSnapshottableGatewayMetadata
operator|.
name|TYPE
argument_list|,
operator|new
name|NonSnapshottableGatewayMetadata
argument_list|(
literal|"before_snapshot_ns_gw"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataBuilder
operator|.
name|putCustom
argument_list|(
name|SnapshotableGatewayNoApiMetadata
operator|.
name|TYPE
argument_list|,
operator|new
name|SnapshotableGatewayNoApiMetadata
argument_list|(
literal|"before_snapshot_s_gw_noapi"
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|metaData
argument_list|(
name|metadataBuilder
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> create repository"
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"fs"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|tempDir
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> start snapshot"
argument_list|)
expr_stmt|;
name|CreateSnapshotResponse
name|createSnapshotResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
operator|.
name|getSnapshots
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|state
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|SnapshotState
operator|.
name|SUCCESS
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> change custom persistent metadata"
argument_list|)
expr_stmt|;
name|updateClusterState
argument_list|(
operator|new
name|ClusterStateUpdater
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ClusterState
name|execute
parameter_list|(
name|ClusterState
name|currentState
parameter_list|)
throws|throws
name|Exception
block|{
name|ClusterState
operator|.
name|Builder
name|builder
init|=
name|ClusterState
operator|.
name|builder
argument_list|(
name|currentState
argument_list|)
decl_stmt|;
name|MetaData
operator|.
name|Builder
name|metadataBuilder
init|=
name|MetaData
operator|.
name|builder
argument_list|(
name|currentState
operator|.
name|metaData
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|metadataBuilder
operator|.
name|putCustom
argument_list|(
name|SnapshottableMetadata
operator|.
name|TYPE
argument_list|,
operator|new
name|SnapshottableMetadata
argument_list|(
literal|"after_snapshot_s"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder
operator|.
name|removeCustom
argument_list|(
name|SnapshottableMetadata
operator|.
name|TYPE
argument_list|)
expr_stmt|;
block|}
name|metadataBuilder
operator|.
name|putCustom
argument_list|(
name|NonSnapshottableMetadata
operator|.
name|TYPE
argument_list|,
operator|new
name|NonSnapshottableMetadata
argument_list|(
literal|"after_snapshot_ns"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|metadataBuilder
operator|.
name|putCustom
argument_list|(
name|SnapshottableGatewayMetadata
operator|.
name|TYPE
argument_list|,
operator|new
name|SnapshottableGatewayMetadata
argument_list|(
literal|"after_snapshot_s_gw"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder
operator|.
name|removeCustom
argument_list|(
name|SnapshottableGatewayMetadata
operator|.
name|TYPE
argument_list|)
expr_stmt|;
block|}
name|metadataBuilder
operator|.
name|putCustom
argument_list|(
name|NonSnapshottableGatewayMetadata
operator|.
name|TYPE
argument_list|,
operator|new
name|NonSnapshottableGatewayMetadata
argument_list|(
literal|"after_snapshot_ns_gw"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataBuilder
operator|.
name|removeCustom
argument_list|(
name|SnapshotableGatewayNoApiMetadata
operator|.
name|TYPE
argument_list|)
expr_stmt|;
name|builder
operator|.
name|metaData
argument_list|(
name|metadataBuilder
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> delete repository"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareDeleteRepository
argument_list|(
literal|"test-repo"
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> create repository"
argument_list|)
expr_stmt|;
name|putRepositoryResponse
operator|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo-2"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"fs"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|tempDir
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore snapshot"
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo-2"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setRestoreGlobalState
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"-*"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> make sure old repository wasn't restored"
argument_list|)
expr_stmt|;
name|assertThrows
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetRepositories
argument_list|(
literal|"test-repo"
argument_list|)
argument_list|,
name|RepositoryMissingException
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetRepositories
argument_list|(
literal|"test-repo-2"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|repositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> check that custom persistent metadata was restored"
argument_list|)
expr_stmt|;
name|ClusterState
name|clusterState
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Cluster state: {}"
argument_list|,
name|clusterState
argument_list|)
expr_stmt|;
name|MetaData
name|metaData
init|=
name|clusterState
operator|.
name|getMetaData
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|SnapshottableMetadata
operator|)
name|metaData
operator|.
name|custom
argument_list|(
name|SnapshottableMetadata
operator|.
name|TYPE
argument_list|)
operator|)
operator|.
name|getData
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"before_snapshot_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|NonSnapshottableMetadata
operator|)
name|metaData
operator|.
name|custom
argument_list|(
name|NonSnapshottableMetadata
operator|.
name|TYPE
argument_list|)
operator|)
operator|.
name|getData
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"after_snapshot_ns"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|SnapshottableGatewayMetadata
operator|)
name|metaData
operator|.
name|custom
argument_list|(
name|SnapshottableGatewayMetadata
operator|.
name|TYPE
argument_list|)
operator|)
operator|.
name|getData
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"before_snapshot_s_gw"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|NonSnapshottableGatewayMetadata
operator|)
name|metaData
operator|.
name|custom
argument_list|(
name|NonSnapshottableGatewayMetadata
operator|.
name|TYPE
argument_list|)
operator|)
operator|.
name|getData
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"after_snapshot_ns_gw"
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restart all nodes"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|fullRestart
argument_list|()
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> check that gateway-persistent custom metadata survived full cluster restart"
argument_list|)
expr_stmt|;
name|clusterState
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Cluster state: {}"
argument_list|,
name|clusterState
argument_list|)
expr_stmt|;
name|metaData
operator|=
name|clusterState
operator|.
name|getMetaData
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|metaData
operator|.
name|custom
argument_list|(
name|SnapshottableMetadata
operator|.
name|TYPE
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|metaData
operator|.
name|custom
argument_list|(
name|NonSnapshottableMetadata
operator|.
name|TYPE
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|SnapshottableGatewayMetadata
operator|)
name|metaData
operator|.
name|custom
argument_list|(
name|SnapshottableGatewayMetadata
operator|.
name|TYPE
argument_list|)
operator|)
operator|.
name|getData
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"before_snapshot_s_gw"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|NonSnapshottableGatewayMetadata
operator|)
name|metaData
operator|.
name|custom
argument_list|(
name|NonSnapshottableGatewayMetadata
operator|.
name|TYPE
argument_list|)
operator|)
operator|.
name|getData
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"after_snapshot_ns_gw"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Shouldn't be returned as part of API response
name|assertThat
argument_list|(
name|metaData
operator|.
name|custom
argument_list|(
name|SnapshotableGatewayNoApiMetadata
operator|.
name|TYPE
argument_list|)
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// But should still be in state
name|metaData
operator|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|ClusterService
operator|.
name|class
argument_list|)
operator|.
name|state
argument_list|()
operator|.
name|metaData
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|SnapshotableGatewayNoApiMetadata
operator|)
name|metaData
operator|.
name|custom
argument_list|(
name|SnapshotableGatewayNoApiMetadata
operator|.
name|TYPE
argument_list|)
operator|)
operator|.
name|getData
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"before_snapshot_s_gw_noapi"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|updateClusterState
specifier|private
name|void
name|updateClusterState
parameter_list|(
specifier|final
name|ClusterStateUpdater
name|updater
parameter_list|)
throws|throws
name|InterruptedException
block|{
specifier|final
name|CountDownLatch
name|countDownLatch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|ClusterService
name|clusterService
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|ClusterService
operator|.
name|class
argument_list|)
decl_stmt|;
name|clusterService
operator|.
name|submitStateUpdateTask
argument_list|(
literal|"test"
argument_list|,
operator|new
name|ClusterStateUpdateTask
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ClusterState
name|execute
parameter_list|(
name|ClusterState
name|currentState
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|updater
operator|.
name|execute
argument_list|(
name|currentState
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|String
name|source
parameter_list|,
annotation|@
name|Nullable
name|Exception
name|e
parameter_list|)
block|{
name|countDownLatch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clusterStateProcessed
parameter_list|(
name|String
name|source
parameter_list|,
name|ClusterState
name|oldState
parameter_list|,
name|ClusterState
name|newState
parameter_list|)
block|{
name|countDownLatch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|countDownLatch
operator|.
name|await
argument_list|()
expr_stmt|;
block|}
DECL|interface|ClusterStateUpdater
specifier|private
interface|interface
name|ClusterStateUpdater
block|{
DECL|method|execute
name|ClusterState
name|execute
parameter_list|(
name|ClusterState
name|currentState
parameter_list|)
throws|throws
name|Exception
function_decl|;
block|}
DECL|method|testSnapshotDuringNodeShutdown
specifier|public
name|void
name|testSnapshotDuringNodeShutdown
parameter_list|()
throws|throws
name|Exception
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"--> start 2 nodes"
argument_list|)
expr_stmt|;
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test-idx"
argument_list|,
literal|2
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
literal|2
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> indexing some data"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|index
argument_list|(
literal|"test-idx"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> create repository"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> creating repository"
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"mock"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|randomRepoPath
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"random"
argument_list|,
name|randomAlphaOfLength
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"wait_after_unblock"
argument_list|,
literal|200
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
comment|// Pick one node and block it
name|String
name|blockedNode
init|=
name|blockNodeWithIndex
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-idx"
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> snapshot"
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|false
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> waiting for block to kick in"
argument_list|)
expr_stmt|;
name|waitForBlock
argument_list|(
name|blockedNode
argument_list|,
literal|"test-repo"
argument_list|,
name|TimeValue
operator|.
name|timeValueSeconds
argument_list|(
literal|60
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> execution was blocked on node [{}], shutting it down"
argument_list|,
name|blockedNode
argument_list|)
expr_stmt|;
name|unblockNode
argument_list|(
literal|"test-repo"
argument_list|,
name|blockedNode
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> stopping node [{}]"
argument_list|,
name|blockedNode
argument_list|)
expr_stmt|;
name|stopNode
argument_list|(
name|blockedNode
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> waiting for completion"
argument_list|)
expr_stmt|;
name|SnapshotInfo
name|snapshotInfo
init|=
name|waitForCompletion
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|,
name|TimeValue
operator|.
name|timeValueSeconds
argument_list|(
literal|60
argument_list|)
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Number of failed shards [{}]"
argument_list|,
name|snapshotInfo
operator|.
name|shardFailures
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> done"
argument_list|)
expr_stmt|;
block|}
DECL|method|testSnapshotWithStuckNode
specifier|public
name|void
name|testSnapshotWithStuckNode
parameter_list|()
throws|throws
name|Exception
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"--> start 2 nodes"
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|nodes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|nodes
operator|.
name|add
argument_list|(
name|internalCluster
argument_list|()
operator|.
name|startNode
argument_list|()
argument_list|)
expr_stmt|;
name|nodes
operator|.
name|add
argument_list|(
name|internalCluster
argument_list|()
operator|.
name|startNode
argument_list|()
argument_list|)
expr_stmt|;
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test-idx"
argument_list|,
literal|2
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
literal|2
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> indexing some data"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|index
argument_list|(
literal|"test-idx"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> creating repository"
argument_list|)
expr_stmt|;
name|Path
name|repo
init|=
name|randomRepoPath
argument_list|()
decl_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"mock"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|repo
argument_list|)
operator|.
name|put
argument_list|(
literal|"random"
argument_list|,
name|randomAlphaOfLength
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"wait_after_unblock"
argument_list|,
literal|200
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
comment|// Pick one node and block it
name|String
name|blockedNode
init|=
name|blockNodeWithIndex
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-idx"
argument_list|)
decl_stmt|;
comment|// Remove it from the list of available nodes
name|nodes
operator|.
name|remove
argument_list|(
name|blockedNode
argument_list|)
expr_stmt|;
name|int
name|numberOfFilesBeforeSnapshot
init|=
name|numberOfFiles
argument_list|(
name|repo
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> snapshot"
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|false
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> waiting for block to kick in"
argument_list|)
expr_stmt|;
name|waitForBlock
argument_list|(
name|blockedNode
argument_list|,
literal|"test-repo"
argument_list|,
name|TimeValue
operator|.
name|timeValueSeconds
argument_list|(
literal|60
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> execution was blocked on node [{}], aborting snapshot"
argument_list|,
name|blockedNode
argument_list|)
expr_stmt|;
name|ActionFuture
argument_list|<
name|DeleteSnapshotResponse
argument_list|>
name|deleteSnapshotResponseFuture
init|=
name|internalCluster
argument_list|()
operator|.
name|client
argument_list|(
name|nodes
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareDeleteSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|execute
argument_list|()
decl_stmt|;
comment|// Make sure that abort makes some progress
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|unblockNode
argument_list|(
literal|"test-repo"
argument_list|,
name|blockedNode
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> stopping node [{}]"
argument_list|,
name|blockedNode
argument_list|)
expr_stmt|;
name|stopNode
argument_list|(
name|blockedNode
argument_list|)
expr_stmt|;
try|try
block|{
name|DeleteSnapshotResponse
name|deleteSnapshotResponse
init|=
name|deleteSnapshotResponseFuture
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|deleteSnapshotResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SnapshotMissingException
name|ex
parameter_list|)
block|{
comment|// When master node is closed during this test, it sometime manages to delete the snapshot files before
comment|// completely stopping. In this case the retried delete snapshot operation on the new master can fail
comment|// with SnapshotMissingException
block|}
name|logger
operator|.
name|info
argument_list|(
literal|"--> making sure that snapshot no longer exists"
argument_list|)
expr_stmt|;
name|assertThrows
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap"
argument_list|)
operator|.
name|execute
argument_list|()
argument_list|,
name|SnapshotMissingException
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Subtract four files that will remain in the repository:
comment|//   (1) index-1
comment|//   (2) index-0 (because we keep the previous version) and
comment|//   (3) index-latest
comment|//   (4) incompatible-snapshots
name|assertThat
argument_list|(
literal|"not all files were deleted during snapshot cancellation"
argument_list|,
name|numberOfFilesBeforeSnapshot
argument_list|,
name|equalTo
argument_list|(
name|numberOfFiles
argument_list|(
name|repo
argument_list|)
operator|-
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> done"
argument_list|)
expr_stmt|;
block|}
DECL|method|testRestoreIndexWithMissingShards
specifier|public
name|void
name|testRestoreIndexWithMissingShards
parameter_list|()
throws|throws
name|Exception
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"--> start 2 nodes"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startNode
argument_list|()
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startNode
argument_list|()
expr_stmt|;
name|cluster
argument_list|()
operator|.
name|wipeIndices
argument_list|(
literal|"_all"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> create an index that will have some unallocated shards"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test-idx-some"
argument_list|,
literal|2
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
literal|6
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> indexing some data into test-idx-some"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|index
argument_list|(
literal|"test-idx-some"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-some"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> shutdown one of the nodes"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|stopRandomDataNode
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setWaitForEvents
argument_list|(
name|Priority
operator|.
name|LANGUID
argument_list|)
operator|.
name|setTimeout
argument_list|(
literal|"1m"
argument_list|)
operator|.
name|setWaitForNodes
argument_list|(
literal|"<2"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
operator|.
name|isTimedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> create an index that will have all allocated shards"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test-idx-all"
argument_list|,
literal|1
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
literal|6
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|(
literal|"test-idx-all"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> create an index that will be closed"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test-idx-closed"
argument_list|,
literal|1
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
literal|4
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|(
literal|"test-idx-closed"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> indexing some data into test-idx-all"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|index
argument_list|(
literal|"test-idx-all"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
operator|+
name|i
argument_list|)
expr_stmt|;
name|index
argument_list|(
literal|"test-idx-closed"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|refresh
argument_list|(
literal|"test-idx-closed"
argument_list|,
literal|"test-idx-all"
argument_list|)
expr_stmt|;
comment|// don't refresh test-idx-some it will take 30 sec until it times out...
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-all"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"test-idx-closed"
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> create an index that will have no allocated shards"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test-idx-none"
argument_list|,
literal|1
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
literal|6
argument_list|)
operator|.
name|put
argument_list|(
literal|"index.routing.allocation.include.tag"
argument_list|,
literal|"nowhere"
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|setWaitForActiveShards
argument_list|(
name|ActiveShardCount
operator|.
name|NONE
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareExists
argument_list|(
literal|"test-idx-none"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|isExists
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> creating repository"
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"fs"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|randomRepoPath
argument_list|()
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> start snapshot with default settings and closed index - should be blocked"
argument_list|)
expr_stmt|;
name|assertBlocked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap-1"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-all"
argument_list|,
literal|"test-idx-none"
argument_list|,
literal|"test-idx-some"
argument_list|,
literal|"test-idx-closed"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
argument_list|,
name|MetaDataIndexStateService
operator|.
name|INDEX_CLOSED_BLOCK
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> start snapshot with default settings without a closed index - should fail"
argument_list|)
expr_stmt|;
name|CreateSnapshotResponse
name|createSnapshotResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap-1"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-all"
argument_list|,
literal|"test-idx-none"
argument_list|,
literal|"test-idx-some"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|state
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|SnapshotState
operator|.
name|FAILED
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|reason
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"Indices don't have primary shards"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"checking snapshot completion using status"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap-2"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-all"
argument_list|,
literal|"test-idx-none"
argument_list|,
literal|"test-idx-some"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|false
argument_list|)
operator|.
name|setPartial
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|assertBusy
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|SnapshotsStatusResponse
name|snapshotsStatusResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareSnapshotStatus
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap-2"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SnapshotStatus
argument_list|>
name|snapshotStatuses
init|=
name|snapshotsStatusResponse
operator|.
name|getSnapshots
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|snapshotStatuses
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|logger
operator|.
name|trace
argument_list|(
literal|"current snapshot status [{}]"
argument_list|,
name|snapshotStatuses
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|snapshotStatuses
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
operator|.
name|completed
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|,
literal|1
argument_list|,
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
expr_stmt|;
name|SnapshotsStatusResponse
name|snapshotsStatusResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareSnapshotStatus
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap-2"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SnapshotStatus
argument_list|>
name|snapshotStatuses
init|=
name|snapshotsStatusResponse
operator|.
name|getSnapshots
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|snapshotStatuses
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|SnapshotStatus
name|snapshotStatus
init|=
name|snapshotStatuses
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"State: [{}], Reason: [{}]"
argument_list|,
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|state
argument_list|()
argument_list|,
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|reason
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|snapshotStatus
operator|.
name|getShardsStats
argument_list|()
operator|.
name|getTotalShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|18
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|snapshotStatus
operator|.
name|getShardsStats
argument_list|()
operator|.
name|getDoneShards
argument_list|()
argument_list|,
name|lessThan
argument_list|(
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|snapshotStatus
operator|.
name|getShardsStats
argument_list|()
operator|.
name|getDoneShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
comment|// There is slight delay between snapshot being marked as completed in the cluster state and on the file system
comment|// After it was marked as completed in the cluster state - we need to check if it's completed on the file system as well
name|assertBusy
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|GetSnapshotsResponse
name|response
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap-2"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getSnapshots
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|SnapshotInfo
name|snapshotInfo
init|=
name|response
operator|.
name|getSnapshots
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|snapshotInfo
operator|.
name|state
argument_list|()
operator|.
name|completed
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SnapshotState
operator|.
name|PARTIAL
argument_list|,
name|snapshotInfo
operator|.
name|state
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|,
literal|1
argument_list|,
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"checking snapshot completion using wait_for_completion flag"
argument_list|)
expr_stmt|;
name|createSnapshotResponse
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap-2"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-all"
argument_list|,
literal|"test-idx-none"
argument_list|,
literal|"test-idx-some"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setPartial
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"State: [{}], Reason: [{}]"
argument_list|,
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|state
argument_list|()
argument_list|,
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|reason
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|18
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|lessThan
argument_list|(
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createSnapshotResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap-2"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
operator|.
name|getSnapshots
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|state
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|SnapshotState
operator|.
name|PARTIAL
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"test-idx-some"
argument_list|,
literal|"test-idx-all"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore incomplete snapshot - should fail"
argument_list|)
expr_stmt|;
name|assertThrows
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap-2"
argument_list|)
operator|.
name|setRestoreGlobalState
argument_list|(
literal|false
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
argument_list|,
name|SnapshotRestoreException
operator|.
name|class
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore snapshot for the index that was snapshotted completely"
argument_list|)
expr_stmt|;
name|RestoreSnapshotResponse
name|restoreSnapshotResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap-2"
argument_list|)
operator|.
name|setRestoreGlobalState
argument_list|(
literal|false
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-all"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|failedShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-all"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore snapshot for the partial index"
argument_list|)
expr_stmt|;
name|cluster
argument_list|()
operator|.
name|wipeIndices
argument_list|(
literal|"test-idx-some"
argument_list|)
expr_stmt|;
name|restoreSnapshotResponse
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap-2"
argument_list|)
operator|.
name|setRestoreGlobalState
argument_list|(
literal|false
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-some"
argument_list|)
operator|.
name|setPartial
argument_list|(
literal|true
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|allOf
argument_list|(
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|,
name|lessThan
argument_list|(
literal|6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|failedShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-some"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|allOf
argument_list|(
name|greaterThan
argument_list|(
literal|0L
argument_list|)
argument_list|,
name|lessThan
argument_list|(
literal|100L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore snapshot for the index that didn't have any shards snapshotted successfully"
argument_list|)
expr_stmt|;
name|cluster
argument_list|()
operator|.
name|wipeIndices
argument_list|(
literal|"test-idx-none"
argument_list|)
expr_stmt|;
name|restoreSnapshotResponse
operator|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap-2"
argument_list|)
operator|.
name|setRestoreGlobalState
argument_list|(
literal|false
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx-none"
argument_list|)
operator|.
name|setPartial
argument_list|(
literal|true
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|restoreSnapshotResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|failedShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx-some"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|allOf
argument_list|(
name|greaterThan
argument_list|(
literal|0L
argument_list|)
argument_list|,
name|lessThan
argument_list|(
literal|100L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testRestoreIndexWithShardsMissingInLocalGateway
specifier|public
name|void
name|testRestoreIndexWithShardsMissingInLocalGateway
parameter_list|()
throws|throws
name|Exception
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"--> start 2 nodes"
argument_list|)
expr_stmt|;
name|Settings
name|nodeSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|EnableAllocationDecider
operator|.
name|CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|EnableAllocationDecider
operator|.
name|Rebalance
operator|.
name|NONE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startNode
argument_list|(
name|nodeSettings
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startNode
argument_list|(
name|nodeSettings
argument_list|)
expr_stmt|;
name|cluster
argument_list|()
operator|.
name|wipeIndices
argument_list|(
literal|"_all"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> create repository"
argument_list|)
expr_stmt|;
name|PutRepositoryResponse
name|putRepositoryResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"fs"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|randomRepoPath
argument_list|()
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|putRepositoryResponse
operator|.
name|isAcknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|numberOfShards
init|=
literal|6
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> create an index that will have some unallocated shards"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test-idx"
argument_list|,
literal|2
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
name|numberOfShards
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> indexing some data into test-idx"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|index
argument_list|(
literal|"test-idx"
argument_list|,
literal|"doc"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> start snapshot"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap-1"
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|state
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|SnapshotState
operator|.
name|SUCCESS
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> close the index"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareClose
argument_list|(
literal|"test-idx"
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> shutdown one of the nodes that should make half of the shards unavailable"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|restartRandomDataNode
argument_list|(
operator|new
name|InternalTestCluster
operator|.
name|RestartCallback
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|clearData
parameter_list|(
name|String
name|nodeName
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setWaitForEvents
argument_list|(
name|Priority
operator|.
name|LANGUID
argument_list|)
operator|.
name|setTimeout
argument_list|(
literal|"1m"
argument_list|)
operator|.
name|setWaitForNodes
argument_list|(
literal|"2"
argument_list|)
operator|.
name|execute
argument_list|()
operator|.
name|actionGet
argument_list|()
operator|.
name|isTimedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore index snapshot"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap-1"
argument_list|)
operator|.
name|setRestoreGlobalState
argument_list|(
literal|false
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|(
literal|"test-idx"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|client
argument_list|()
operator|.
name|prepareSearch
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|IntSet
name|reusedShards
init|=
operator|new
name|IntHashSet
argument_list|()
decl_stmt|;
for|for
control|(
name|RecoveryState
name|recoveryState
range|:
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareRecoveries
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|shardRecoveryStates
argument_list|()
operator|.
name|get
argument_list|(
literal|"test-idx"
argument_list|)
control|)
block|{
if|if
condition|(
name|recoveryState
operator|.
name|getIndex
argument_list|()
operator|.
name|reusedBytes
argument_list|()
operator|>
literal|0
condition|)
block|{
name|reusedShards
operator|.
name|add
argument_list|(
name|recoveryState
operator|.
name|getShardId
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|logger
operator|.
name|info
argument_list|(
literal|"--> check that at least half of the shards had some reuse: [{}]"
argument_list|,
name|reusedShards
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reusedShards
operator|.
name|size
argument_list|()
argument_list|,
name|greaterThanOrEqualTo
argument_list|(
name|numberOfShards
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testRegistrationFailure
specifier|public
name|void
name|testRegistrationFailure
parameter_list|()
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"--> start first node"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startNode
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> start second node"
argument_list|)
expr_stmt|;
comment|// Make sure the first node is elected as master
name|internalCluster
argument_list|()
operator|.
name|startNode
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|Node
operator|.
name|NODE_MASTER_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
comment|// Register mock repositories
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
operator|+
name|i
argument_list|)
operator|.
name|setType
argument_list|(
literal|"mock"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|randomRepoPath
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setVerify
argument_list|(
literal|false
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|logger
operator|.
name|info
argument_list|(
literal|"--> make sure that properly setup repository can be registered on all nodes"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo-0"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"fs"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|randomRepoPath
argument_list|()
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
DECL|method|testThatSensitiveRepositorySettingsAreNotExposed
specifier|public
name|void
name|testThatSensitiveRepositorySettingsAreNotExposed
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
name|nodeSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> start two nodes"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startNodes
argument_list|(
literal|2
argument_list|,
name|nodeSettings
argument_list|)
expr_stmt|;
comment|// Register mock repositories
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"mock"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|randomRepoPath
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|MockRepository
operator|.
name|Plugin
operator|.
name|USERNAME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"notsecretusername"
argument_list|)
operator|.
name|put
argument_list|(
name|MockRepository
operator|.
name|Plugin
operator|.
name|PASSWORD_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
literal|"verysecretpassword"
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|NodeClient
name|nodeClient
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|NodeClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|RestGetRepositoriesAction
name|getRepoAction
init|=
operator|new
name|RestGetRepositoriesAction
argument_list|(
name|nodeSettings
argument_list|,
name|mock
argument_list|(
name|RestController
operator|.
name|class
argument_list|)
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|SettingsFilter
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|RestRequest
name|getRepoRequest
init|=
operator|new
name|FakeRestRequest
argument_list|()
decl_stmt|;
name|getRepoRequest
operator|.
name|params
argument_list|()
operator|.
name|put
argument_list|(
literal|"repository"
argument_list|,
literal|"test-repo"
argument_list|)
expr_stmt|;
specifier|final
name|CountDownLatch
name|getRepoLatch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|AtomicReference
argument_list|<
name|AssertionError
argument_list|>
name|getRepoError
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|getRepoAction
operator|.
name|handleRequest
argument_list|(
name|getRepoRequest
argument_list|,
operator|new
name|AbstractRestChannel
argument_list|(
name|getRepoRequest
argument_list|,
literal|true
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|sendResponse
parameter_list|(
name|RestResponse
name|response
parameter_list|)
block|{
try|try
block|{
name|assertThat
argument_list|(
name|response
operator|.
name|content
argument_list|()
operator|.
name|utf8ToString
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"notsecretusername"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|content
argument_list|()
operator|.
name|utf8ToString
argument_list|()
argument_list|,
name|not
argument_list|(
name|containsString
argument_list|(
literal|"verysecretpassword"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AssertionError
name|ex
parameter_list|)
block|{
name|getRepoError
operator|.
name|set
argument_list|(
name|ex
argument_list|)
expr_stmt|;
block|}
name|getRepoLatch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|,
name|nodeClient
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getRepoLatch
operator|.
name|await
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|getRepoError
operator|.
name|get
argument_list|()
operator|!=
literal|null
condition|)
block|{
throw|throw
name|getRepoError
operator|.
name|get
argument_list|()
throw|;
block|}
name|RestClusterStateAction
name|clusterStateAction
init|=
operator|new
name|RestClusterStateAction
argument_list|(
name|nodeSettings
argument_list|,
name|mock
argument_list|(
name|RestController
operator|.
name|class
argument_list|)
argument_list|,
name|internalCluster
argument_list|()
operator|.
name|getInstance
argument_list|(
name|SettingsFilter
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|RestRequest
name|clusterStateRequest
init|=
operator|new
name|FakeRestRequest
argument_list|()
decl_stmt|;
specifier|final
name|CountDownLatch
name|clusterStateLatch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|AtomicReference
argument_list|<
name|AssertionError
argument_list|>
name|clusterStateError
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|clusterStateAction
operator|.
name|handleRequest
argument_list|(
name|clusterStateRequest
argument_list|,
operator|new
name|AbstractRestChannel
argument_list|(
name|clusterStateRequest
argument_list|,
literal|true
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|sendResponse
parameter_list|(
name|RestResponse
name|response
parameter_list|)
block|{
try|try
block|{
name|assertThat
argument_list|(
name|response
operator|.
name|content
argument_list|()
operator|.
name|utf8ToString
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"notsecretusername"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|content
argument_list|()
operator|.
name|utf8ToString
argument_list|()
argument_list|,
name|not
argument_list|(
name|containsString
argument_list|(
literal|"verysecretpassword"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AssertionError
name|ex
parameter_list|)
block|{
name|clusterStateError
operator|.
name|set
argument_list|(
name|ex
argument_list|)
expr_stmt|;
block|}
name|clusterStateLatch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|,
name|nodeClient
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|clusterStateLatch
operator|.
name|await
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|clusterStateError
operator|.
name|get
argument_list|()
operator|!=
literal|null
condition|)
block|{
throw|throw
name|clusterStateError
operator|.
name|get
argument_list|()
throw|;
block|}
block|}
DECL|method|testMasterShutdownDuringSnapshot
specifier|public
name|void
name|testMasterShutdownDuringSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"-->  starting two master nodes and two data nodes"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startMasterOnlyNodes
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startDataOnlyNodes
argument_list|(
literal|2
argument_list|)
expr_stmt|;
specifier|final
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  creating repository"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"fs"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|randomRepoPath
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"compress"
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"chunk_size"
argument_list|,
name|randomIntBetween
argument_list|(
literal|100
argument_list|,
literal|1000
argument_list|)
argument_list|,
name|ByteSizeUnit
operator|.
name|BYTES
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test-idx"
argument_list|,
literal|0
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
name|between
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> indexing some data"
argument_list|)
expr_stmt|;
specifier|final
name|int
name|numdocs
init|=
name|randomIntBetween
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|IndexRequestBuilder
index|[]
name|builders
init|=
operator|new
name|IndexRequestBuilder
index|[
name|numdocs
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|builders
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|builders
index|[
name|i
index|]
operator|=
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test-idx"
argument_list|,
literal|"type1"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field1"
argument_list|,
literal|"bar "
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|builders
argument_list|)
expr_stmt|;
name|flushAndRefresh
argument_list|()
expr_stmt|;
specifier|final
name|int
name|numberOfShards
init|=
name|getNumShards
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|numPrimaries
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"number of shards: {}"
argument_list|,
name|numberOfShards
argument_list|)
expr_stmt|;
name|dataNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|false
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> stopping master node"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|stopCurrentMasterNode
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> wait until the snapshot is done"
argument_list|)
expr_stmt|;
name|assertBusy
argument_list|(
parameter_list|()
lambda|->
block|{
name|GetSnapshotsResponse
name|snapshotsStatusResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|SnapshotInfo
name|snapshotInfo
init|=
name|snapshotsStatusResponse
operator|.
name|getSnapshots
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|snapshotInfo
operator|.
name|state
argument_list|()
operator|.
name|completed
argument_list|()
argument_list|)
expr_stmt|;
block|}
argument_list|,
literal|1
argument_list|,
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> verify that snapshot was succesful"
argument_list|)
expr_stmt|;
name|GetSnapshotsResponse
name|snapshotsStatusResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|SnapshotInfo
name|snapshotInfo
init|=
name|snapshotsStatusResponse
operator|.
name|getSnapshots
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|SnapshotState
operator|.
name|SUCCESS
argument_list|,
name|snapshotInfo
operator|.
name|state
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|snapshotInfo
operator|.
name|totalShards
argument_list|()
argument_list|,
name|snapshotInfo
operator|.
name|successfulShards
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|snapshotInfo
operator|.
name|failedShards
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testMasterShutdownDuringFailedSnapshot
specifier|public
name|void
name|testMasterShutdownDuringFailedSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"-->  starting two master nodes and two data nodes"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startMasterOnlyNodes
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startDataOnlyNodes
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  creating repository"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setType
argument_list|(
literal|"mock"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|randomRepoPath
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"compress"
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"chunk_size"
argument_list|,
name|randomIntBetween
argument_list|(
literal|100
argument_list|,
literal|1000
argument_list|)
argument_list|,
name|ByteSizeUnit
operator|.
name|BYTES
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
literal|"test-idx"
argument_list|,
literal|0
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
literal|6
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  indexing some data"
argument_list|)
expr_stmt|;
specifier|final
name|int
name|numdocs
init|=
name|randomIntBetween
argument_list|(
literal|50
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|IndexRequestBuilder
index|[]
name|builders
init|=
operator|new
name|IndexRequestBuilder
index|[
name|numdocs
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|builders
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|builders
index|[
name|i
index|]
operator|=
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
literal|"test-idx"
argument_list|,
literal|"type1"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field1"
argument_list|,
literal|"bar "
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|builders
argument_list|)
expr_stmt|;
name|flushAndRefresh
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  stopping random data node, which should cause shards to go missing"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|stopRandomDataNode
argument_list|()
expr_stmt|;
name|assertBusy
argument_list|(
parameter_list|()
lambda|->
name|assertEquals
argument_list|(
name|ClusterHealthStatus
operator|.
name|RED
argument_list|,
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|,
literal|30
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
specifier|final
name|String
name|masterNode
init|=
name|blockMasterFromFinalizingSnapshot
argument_list|(
literal|"test-repo"
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  snapshot"
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
literal|"test-repo"
argument_list|,
literal|"test-snap"
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|false
argument_list|)
operator|.
name|setIndices
argument_list|(
literal|"test-idx"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> waiting for block to kick in on "
operator|+
name|masterNode
argument_list|)
expr_stmt|;
name|waitForBlock
argument_list|(
name|masterNode
argument_list|,
literal|"test-repo"
argument_list|,
name|TimeValue
operator|.
name|timeValueSeconds
argument_list|(
literal|60
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  stopping master node"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|stopCurrentMasterNode
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  wait until the snapshot is done"
argument_list|)
expr_stmt|;
name|assertBusy
argument_list|(
parameter_list|()
lambda|->
block|{
name|GetSnapshotsResponse
name|snapshotsStatusResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap"
argument_list|)
operator|.
name|setIgnoreUnavailable
argument_list|(
literal|true
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|snapshotsStatusResponse
operator|.
name|getSnapshots
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SnapshotInfo
name|snapshotInfo
init|=
name|snapshotsStatusResponse
operator|.
name|getSnapshots
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|snapshotInfo
operator|.
name|state
argument_list|()
operator|.
name|completed
argument_list|()
argument_list|)
expr_stmt|;
name|ClusterState
name|clusterState
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
decl_stmt|;
name|SnapshotsInProgress
name|snapshotsInProgress
init|=
name|clusterState
operator|.
name|custom
argument_list|(
name|SnapshotsInProgress
operator|.
name|TYPE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|snapshotsInProgress
operator|.
name|entries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
argument_list|,
literal|30
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  verify that snapshot failed"
argument_list|)
expr_stmt|;
name|GetSnapshotsResponse
name|snapshotsStatusResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareGetSnapshots
argument_list|(
literal|"test-repo"
argument_list|)
operator|.
name|setSnapshots
argument_list|(
literal|"test-snap"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|SnapshotInfo
name|snapshotInfo
init|=
name|snapshotsStatusResponse
operator|.
name|getSnapshots
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|SnapshotState
operator|.
name|FAILED
argument_list|,
name|snapshotInfo
operator|.
name|state
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Tests that a shrunken index (created via the shrink APIs) and subsequently snapshotted      * can be restored when the node the shrunken index was created on is no longer part of      * the cluster.      */
DECL|method|testRestoreShrinkIndex
specifier|public
name|void
name|testRestoreShrinkIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"-->  starting a master node and a data node"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startMasterOnlyNode
argument_list|()
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startDataOnlyNode
argument_list|()
expr_stmt|;
specifier|final
name|Client
name|client
init|=
name|client
argument_list|()
decl_stmt|;
specifier|final
name|String
name|repo
init|=
literal|"test-repo"
decl_stmt|;
specifier|final
name|String
name|snapshot
init|=
literal|"test-snap"
decl_stmt|;
specifier|final
name|String
name|sourceIdx
init|=
literal|"test-idx"
decl_stmt|;
specifier|final
name|String
name|shrunkIdx
init|=
literal|"test-idx-shrunk"
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"-->  creating repository"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|preparePutRepository
argument_list|(
name|repo
argument_list|)
operator|.
name|setType
argument_list|(
literal|"fs"
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"location"
argument_list|,
name|randomRepoPath
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"compress"
argument_list|,
name|randomBoolean
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
name|sourceIdx
argument_list|,
literal|0
argument_list|,
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"number_of_shards"
argument_list|,
name|between
argument_list|(
literal|2
argument_list|,
literal|10
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"number_of_replicas"
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ensureGreen
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> indexing some data"
argument_list|)
expr_stmt|;
name|IndexRequestBuilder
index|[]
name|builders
init|=
operator|new
name|IndexRequestBuilder
index|[
name|randomIntBetween
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|builders
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|builders
index|[
name|i
index|]
operator|=
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|sourceIdx
argument_list|,
literal|"type1"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field1"
argument_list|,
literal|"bar "
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|indexRandom
argument_list|(
literal|true
argument_list|,
name|builders
argument_list|)
expr_stmt|;
name|flushAndRefresh
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> shrink the index"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareUpdateSettings
argument_list|(
name|sourceIdx
argument_list|)
operator|.
name|setSettings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"index.blocks.write"
argument_list|,
literal|true
argument_list|)
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareShrinkIndex
argument_list|(
name|sourceIdx
argument_list|,
name|shrunkIdx
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> snapshot the shrunk index"
argument_list|)
expr_stmt|;
name|CreateSnapshotResponse
name|createResponse
init|=
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareCreateSnapshot
argument_list|(
name|repo
argument_list|,
name|snapshot
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
name|shrunkIdx
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|SnapshotState
operator|.
name|SUCCESS
argument_list|,
name|createResponse
operator|.
name|getSnapshotInfo
argument_list|()
operator|.
name|state
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> delete index and stop the data node"
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
name|sourceIdx
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertAcked
argument_list|(
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareDelete
argument_list|(
name|shrunkIdx
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|stopRandomDataNode
argument_list|()
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setTimeout
argument_list|(
literal|"30s"
argument_list|)
operator|.
name|setWaitForNodes
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> start a new data node"
argument_list|)
expr_stmt|;
specifier|final
name|Settings
name|dataSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|Node
operator|.
name|NODE_NAME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|randomAlphaOfLength
argument_list|(
literal|5
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|Environment
operator|.
name|PATH_HOME_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|createTempDir
argument_list|()
argument_list|)
comment|// to get a new node id
operator|.
name|build
argument_list|()
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|startDataOnlyNode
argument_list|(
name|dataSettings
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareHealth
argument_list|()
operator|.
name|setTimeout
argument_list|(
literal|"30s"
argument_list|)
operator|.
name|setWaitForNodes
argument_list|(
literal|"2"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"--> restore the shrunk index and ensure all shards are allocated"
argument_list|)
expr_stmt|;
name|RestoreSnapshotResponse
name|restoreResponse
init|=
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareRestoreSnapshot
argument_list|(
name|repo
argument_list|,
name|snapshot
argument_list|)
operator|.
name|setWaitForCompletion
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndices
argument_list|(
name|shrunkIdx
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|restoreResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|totalShards
argument_list|()
argument_list|,
name|restoreResponse
operator|.
name|getRestoreInfo
argument_list|()
operator|.
name|successfulShards
argument_list|()
argument_list|)
expr_stmt|;
name|ensureYellow
argument_list|()
expr_stmt|;
block|}
DECL|class|SnapshottableMetadata
specifier|public
specifier|static
class|class
name|SnapshottableMetadata
extends|extends
name|TestCustomMetaData
block|{
DECL|field|TYPE
specifier|public
specifier|static
specifier|final
name|String
name|TYPE
init|=
literal|"test_snapshottable"
decl_stmt|;
DECL|method|SnapshottableMetadata
specifier|public
name|SnapshottableMetadata
parameter_list|(
name|String
name|data
parameter_list|)
block|{
name|super
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getWriteableName
specifier|public
name|String
name|getWriteableName
parameter_list|()
block|{
return|return
name|TYPE
return|;
block|}
DECL|method|readFrom
specifier|public
specifier|static
name|SnapshottableMetadata
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|readFrom
argument_list|(
name|SnapshottableMetadata
operator|::
operator|new
argument_list|,
name|in
argument_list|)
return|;
block|}
DECL|method|readDiffFrom
specifier|public
specifier|static
name|NamedDiff
argument_list|<
name|MetaData
operator|.
name|Custom
argument_list|>
name|readDiffFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|readDiffFrom
argument_list|(
name|TYPE
argument_list|,
name|in
argument_list|)
return|;
block|}
DECL|method|fromXContent
specifier|public
specifier|static
name|SnapshottableMetadata
name|fromXContent
parameter_list|(
name|XContentParser
name|parser
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|fromXContent
argument_list|(
name|SnapshottableMetadata
operator|::
operator|new
argument_list|,
name|parser
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|context
specifier|public
name|EnumSet
argument_list|<
name|MetaData
operator|.
name|XContentContext
argument_list|>
name|context
parameter_list|()
block|{
return|return
name|MetaData
operator|.
name|API_AND_SNAPSHOT
return|;
block|}
block|}
DECL|class|NonSnapshottableMetadata
specifier|public
specifier|static
class|class
name|NonSnapshottableMetadata
extends|extends
name|TestCustomMetaData
block|{
DECL|field|TYPE
specifier|public
specifier|static
specifier|final
name|String
name|TYPE
init|=
literal|"test_non_snapshottable"
decl_stmt|;
DECL|method|NonSnapshottableMetadata
specifier|public
name|NonSnapshottableMetadata
parameter_list|(
name|String
name|data
parameter_list|)
block|{
name|super
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getWriteableName
specifier|public
name|String
name|getWriteableName
parameter_list|()
block|{
return|return
name|TYPE
return|;
block|}
DECL|method|readFrom
specifier|public
specifier|static
name|NonSnapshottableMetadata
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|readFrom
argument_list|(
name|NonSnapshottableMetadata
operator|::
operator|new
argument_list|,
name|in
argument_list|)
return|;
block|}
DECL|method|readDiffFrom
specifier|public
specifier|static
name|NamedDiff
argument_list|<
name|MetaData
operator|.
name|Custom
argument_list|>
name|readDiffFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|readDiffFrom
argument_list|(
name|TYPE
argument_list|,
name|in
argument_list|)
return|;
block|}
DECL|method|fromXContent
specifier|public
specifier|static
name|NonSnapshottableMetadata
name|fromXContent
parameter_list|(
name|XContentParser
name|parser
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|fromXContent
argument_list|(
name|NonSnapshottableMetadata
operator|::
operator|new
argument_list|,
name|parser
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|context
specifier|public
name|EnumSet
argument_list|<
name|MetaData
operator|.
name|XContentContext
argument_list|>
name|context
parameter_list|()
block|{
return|return
name|MetaData
operator|.
name|API_ONLY
return|;
block|}
block|}
DECL|class|SnapshottableGatewayMetadata
specifier|public
specifier|static
class|class
name|SnapshottableGatewayMetadata
extends|extends
name|TestCustomMetaData
block|{
DECL|field|TYPE
specifier|public
specifier|static
specifier|final
name|String
name|TYPE
init|=
literal|"test_snapshottable_gateway"
decl_stmt|;
DECL|method|SnapshottableGatewayMetadata
specifier|public
name|SnapshottableGatewayMetadata
parameter_list|(
name|String
name|data
parameter_list|)
block|{
name|super
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getWriteableName
specifier|public
name|String
name|getWriteableName
parameter_list|()
block|{
return|return
name|TYPE
return|;
block|}
DECL|method|readFrom
specifier|public
specifier|static
name|SnapshottableGatewayMetadata
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|readFrom
argument_list|(
name|SnapshottableGatewayMetadata
operator|::
operator|new
argument_list|,
name|in
argument_list|)
return|;
block|}
DECL|method|readDiffFrom
specifier|public
specifier|static
name|NamedDiff
argument_list|<
name|MetaData
operator|.
name|Custom
argument_list|>
name|readDiffFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|readDiffFrom
argument_list|(
name|TYPE
argument_list|,
name|in
argument_list|)
return|;
block|}
DECL|method|fromXContent
specifier|public
specifier|static
name|SnapshottableGatewayMetadata
name|fromXContent
parameter_list|(
name|XContentParser
name|parser
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|fromXContent
argument_list|(
name|SnapshottableGatewayMetadata
operator|::
operator|new
argument_list|,
name|parser
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|context
specifier|public
name|EnumSet
argument_list|<
name|MetaData
operator|.
name|XContentContext
argument_list|>
name|context
parameter_list|()
block|{
return|return
name|EnumSet
operator|.
name|of
argument_list|(
name|MetaData
operator|.
name|XContentContext
operator|.
name|API
argument_list|,
name|MetaData
operator|.
name|XContentContext
operator|.
name|SNAPSHOT
argument_list|,
name|MetaData
operator|.
name|XContentContext
operator|.
name|GATEWAY
argument_list|)
return|;
block|}
block|}
DECL|class|NonSnapshottableGatewayMetadata
specifier|public
specifier|static
class|class
name|NonSnapshottableGatewayMetadata
extends|extends
name|TestCustomMetaData
block|{
DECL|field|TYPE
specifier|public
specifier|static
specifier|final
name|String
name|TYPE
init|=
literal|"test_non_snapshottable_gateway"
decl_stmt|;
DECL|method|NonSnapshottableGatewayMetadata
specifier|public
name|NonSnapshottableGatewayMetadata
parameter_list|(
name|String
name|data
parameter_list|)
block|{
name|super
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getWriteableName
specifier|public
name|String
name|getWriteableName
parameter_list|()
block|{
return|return
name|TYPE
return|;
block|}
DECL|method|readFrom
specifier|public
specifier|static
name|NonSnapshottableGatewayMetadata
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|readFrom
argument_list|(
name|NonSnapshottableGatewayMetadata
operator|::
operator|new
argument_list|,
name|in
argument_list|)
return|;
block|}
DECL|method|readDiffFrom
specifier|public
specifier|static
name|NamedDiff
argument_list|<
name|MetaData
operator|.
name|Custom
argument_list|>
name|readDiffFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|readDiffFrom
argument_list|(
name|TYPE
argument_list|,
name|in
argument_list|)
return|;
block|}
DECL|method|fromXContent
specifier|public
specifier|static
name|NonSnapshottableGatewayMetadata
name|fromXContent
parameter_list|(
name|XContentParser
name|parser
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|fromXContent
argument_list|(
name|NonSnapshottableGatewayMetadata
operator|::
operator|new
argument_list|,
name|parser
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|context
specifier|public
name|EnumSet
argument_list|<
name|MetaData
operator|.
name|XContentContext
argument_list|>
name|context
parameter_list|()
block|{
return|return
name|MetaData
operator|.
name|API_AND_GATEWAY
return|;
block|}
block|}
DECL|class|SnapshotableGatewayNoApiMetadata
specifier|public
specifier|static
class|class
name|SnapshotableGatewayNoApiMetadata
extends|extends
name|TestCustomMetaData
block|{
DECL|field|TYPE
specifier|public
specifier|static
specifier|final
name|String
name|TYPE
init|=
literal|"test_snapshottable_gateway_no_api"
decl_stmt|;
DECL|method|SnapshotableGatewayNoApiMetadata
specifier|public
name|SnapshotableGatewayNoApiMetadata
parameter_list|(
name|String
name|data
parameter_list|)
block|{
name|super
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getWriteableName
specifier|public
name|String
name|getWriteableName
parameter_list|()
block|{
return|return
name|TYPE
return|;
block|}
DECL|method|readFrom
specifier|public
specifier|static
name|SnapshotableGatewayNoApiMetadata
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|readFrom
argument_list|(
name|SnapshotableGatewayNoApiMetadata
operator|::
operator|new
argument_list|,
name|in
argument_list|)
return|;
block|}
DECL|method|fromXContent
specifier|public
specifier|static
name|SnapshotableGatewayNoApiMetadata
name|fromXContent
parameter_list|(
name|XContentParser
name|parser
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|fromXContent
argument_list|(
name|SnapshotableGatewayNoApiMetadata
operator|::
operator|new
argument_list|,
name|parser
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|context
specifier|public
name|EnumSet
argument_list|<
name|MetaData
operator|.
name|XContentContext
argument_list|>
name|context
parameter_list|()
block|{
return|return
name|EnumSet
operator|.
name|of
argument_list|(
name|MetaData
operator|.
name|XContentContext
operator|.
name|GATEWAY
argument_list|,
name|MetaData
operator|.
name|XContentContext
operator|.
name|SNAPSHOT
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

