begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.http
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|http
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|transport
operator|.
name|BoundTransportAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilderString
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|HttpInfo
specifier|public
class|class
name|HttpInfo
implements|implements
name|Streamable
implements|,
name|ToXContent
block|{
DECL|field|address
specifier|private
name|BoundTransportAddress
name|address
decl_stmt|;
DECL|field|maxContentLength
specifier|private
name|long
name|maxContentLength
decl_stmt|;
DECL|method|HttpInfo
name|HttpInfo
parameter_list|()
block|{     }
DECL|method|HttpInfo
specifier|public
name|HttpInfo
parameter_list|(
name|BoundTransportAddress
name|address
parameter_list|,
name|long
name|maxContentLength
parameter_list|)
block|{
name|this
operator|.
name|address
operator|=
name|address
expr_stmt|;
name|this
operator|.
name|maxContentLength
operator|=
name|maxContentLength
expr_stmt|;
block|}
DECL|class|Fields
specifier|static
specifier|final
class|class
name|Fields
block|{
DECL|field|HTTP
specifier|static
specifier|final
name|XContentBuilderString
name|HTTP
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"http"
argument_list|)
decl_stmt|;
DECL|field|BOUND_ADDRESS
specifier|static
specifier|final
name|XContentBuilderString
name|BOUND_ADDRESS
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"bound_address"
argument_list|)
decl_stmt|;
DECL|field|PUBLISH_ADDRESS
specifier|static
specifier|final
name|XContentBuilderString
name|PUBLISH_ADDRESS
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"publish_address"
argument_list|)
decl_stmt|;
DECL|field|MAX_CONTENT_LENGTH
specifier|static
specifier|final
name|XContentBuilderString
name|MAX_CONTENT_LENGTH
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"max_content_length"
argument_list|)
decl_stmt|;
DECL|field|MAX_CONTENT_LENGTH_IN_BYTES
specifier|static
specifier|final
name|XContentBuilderString
name|MAX_CONTENT_LENGTH_IN_BYTES
init|=
operator|new
name|XContentBuilderString
argument_list|(
literal|"max_content_length_in_bytes"
argument_list|)
decl_stmt|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|Fields
operator|.
name|HTTP
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|BOUND_ADDRESS
argument_list|,
name|address
operator|.
name|boundAddress
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|PUBLISH_ADDRESS
argument_list|,
name|address
operator|.
name|publishAddress
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|byteSizeField
argument_list|(
name|Fields
operator|.
name|MAX_CONTENT_LENGTH_IN_BYTES
argument_list|,
name|Fields
operator|.
name|MAX_CONTENT_LENGTH
argument_list|,
name|maxContentLength
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|builder
return|;
block|}
DECL|method|readHttpInfo
specifier|public
specifier|static
name|HttpInfo
name|readHttpInfo
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|HttpInfo
name|info
init|=
operator|new
name|HttpInfo
argument_list|()
decl_stmt|;
name|info
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|info
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|address
operator|=
name|BoundTransportAddress
operator|.
name|readBoundTransportAddress
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|maxContentLength
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|address
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|maxContentLength
argument_list|)
expr_stmt|;
block|}
DECL|method|address
specifier|public
name|BoundTransportAddress
name|address
parameter_list|()
block|{
return|return
name|address
return|;
block|}
DECL|method|getAddress
specifier|public
name|BoundTransportAddress
name|getAddress
parameter_list|()
block|{
return|return
name|address
argument_list|()
return|;
block|}
DECL|method|maxContentLength
specifier|public
name|ByteSizeValue
name|maxContentLength
parameter_list|()
block|{
return|return
operator|new
name|ByteSizeValue
argument_list|(
name|maxContentLength
argument_list|)
return|;
block|}
DECL|method|getMaxContentLength
specifier|public
name|ByteSizeValue
name|getMaxContentLength
parameter_list|()
block|{
return|return
name|maxContentLength
argument_list|()
return|;
block|}
block|}
end_class

end_unit

