begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.transport
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Wrapper around transport channel that delegates all requests to the  * underlying channel  */
end_comment

begin_class
DECL|class|DelegatingTransportChannel
specifier|public
class|class
name|DelegatingTransportChannel
implements|implements
name|TransportChannel
block|{
DECL|field|channel
specifier|private
specifier|final
name|TransportChannel
name|channel
decl_stmt|;
DECL|method|DelegatingTransportChannel
specifier|protected
name|DelegatingTransportChannel
parameter_list|(
name|TransportChannel
name|channel
parameter_list|)
block|{
name|this
operator|.
name|channel
operator|=
name|channel
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|action
specifier|public
name|String
name|action
parameter_list|()
block|{
return|return
name|channel
operator|.
name|action
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getProfileName
specifier|public
name|String
name|getProfileName
parameter_list|()
block|{
return|return
name|channel
operator|.
name|getProfileName
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getRequestId
specifier|public
name|long
name|getRequestId
parameter_list|()
block|{
return|return
name|channel
operator|.
name|getRequestId
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getChannelType
specifier|public
name|String
name|getChannelType
parameter_list|()
block|{
return|return
name|channel
operator|.
name|getChannelType
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|sendResponse
specifier|public
name|void
name|sendResponse
parameter_list|(
name|TransportResponse
name|response
parameter_list|)
throws|throws
name|IOException
block|{
name|channel
operator|.
name|sendResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|sendResponse
specifier|public
name|void
name|sendResponse
parameter_list|(
name|TransportResponse
name|response
parameter_list|,
name|TransportResponseOptions
name|options
parameter_list|)
throws|throws
name|IOException
block|{
name|channel
operator|.
name|sendResponse
argument_list|(
name|response
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|sendResponse
specifier|public
name|void
name|sendResponse
parameter_list|(
name|Exception
name|exception
parameter_list|)
throws|throws
name|IOException
block|{
name|channel
operator|.
name|sendResponse
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
DECL|method|getChannel
specifier|public
name|TransportChannel
name|getChannel
parameter_list|()
block|{
return|return
name|channel
return|;
block|}
annotation|@
name|Override
DECL|method|getVersion
specifier|public
name|Version
name|getVersion
parameter_list|()
block|{
return|return
name|channel
operator|.
name|getVersion
argument_list|()
return|;
block|}
block|}
end_class

end_unit

