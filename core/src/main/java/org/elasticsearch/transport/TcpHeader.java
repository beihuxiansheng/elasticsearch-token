begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.transport
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|TcpHeader
specifier|public
class|class
name|TcpHeader
block|{
DECL|field|MARKER_BYTES_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|MARKER_BYTES_SIZE
init|=
literal|2
operator|*
literal|1
decl_stmt|;
DECL|field|MESSAGE_LENGTH_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|MESSAGE_LENGTH_SIZE
init|=
literal|4
decl_stmt|;
DECL|field|REQUEST_ID_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|REQUEST_ID_SIZE
init|=
literal|8
decl_stmt|;
DECL|field|STATUS_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|STATUS_SIZE
init|=
literal|1
decl_stmt|;
DECL|field|VERSION_ID_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|VERSION_ID_SIZE
init|=
literal|4
decl_stmt|;
DECL|field|HEADER_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|HEADER_SIZE
init|=
name|MARKER_BYTES_SIZE
operator|+
name|MESSAGE_LENGTH_SIZE
operator|+
name|REQUEST_ID_SIZE
operator|+
name|STATUS_SIZE
operator|+
name|VERSION_ID_SIZE
decl_stmt|;
DECL|method|writeHeader
specifier|public
specifier|static
name|void
name|writeHeader
parameter_list|(
name|StreamOutput
name|output
parameter_list|,
name|long
name|requestId
parameter_list|,
name|byte
name|status
parameter_list|,
name|Version
name|version
parameter_list|,
name|int
name|messageSize
parameter_list|)
throws|throws
name|IOException
block|{
name|output
operator|.
name|writeByte
argument_list|(
operator|(
name|byte
operator|)
literal|'E'
argument_list|)
expr_stmt|;
name|output
operator|.
name|writeByte
argument_list|(
operator|(
name|byte
operator|)
literal|'S'
argument_list|)
expr_stmt|;
comment|// write the size, the size indicates the remaining message size, not including the size int
name|output
operator|.
name|writeInt
argument_list|(
name|messageSize
operator|+
name|REQUEST_ID_SIZE
operator|+
name|STATUS_SIZE
operator|+
name|VERSION_ID_SIZE
argument_list|)
expr_stmt|;
name|output
operator|.
name|writeLong
argument_list|(
name|requestId
argument_list|)
expr_stmt|;
name|output
operator|.
name|writeByte
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|output
operator|.
name|writeInt
argument_list|(
name|version
operator|.
name|id
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

