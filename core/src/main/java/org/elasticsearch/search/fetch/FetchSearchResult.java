begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.fetch
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchHit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchShardTarget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|InternalSearchHits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|query
operator|.
name|QuerySearchResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|query
operator|.
name|QuerySearchResultProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|FetchSearchResult
specifier|public
class|class
name|FetchSearchResult
extends|extends
name|QuerySearchResultProvider
block|{
DECL|field|id
specifier|private
name|long
name|id
decl_stmt|;
DECL|field|shardTarget
specifier|private
name|SearchShardTarget
name|shardTarget
decl_stmt|;
DECL|field|hits
specifier|private
name|InternalSearchHits
name|hits
decl_stmt|;
comment|// client side counter
DECL|field|counter
specifier|private
specifier|transient
name|int
name|counter
decl_stmt|;
DECL|method|FetchSearchResult
specifier|public
name|FetchSearchResult
parameter_list|()
block|{      }
DECL|method|FetchSearchResult
specifier|public
name|FetchSearchResult
parameter_list|(
name|long
name|id
parameter_list|,
name|SearchShardTarget
name|shardTarget
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|shardTarget
operator|=
name|shardTarget
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|queryResult
specifier|public
name|QuerySearchResult
name|queryResult
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|fetchResult
specifier|public
name|FetchSearchResult
name|fetchResult
parameter_list|()
block|{
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|id
specifier|public
name|long
name|id
parameter_list|()
block|{
return|return
name|this
operator|.
name|id
return|;
block|}
annotation|@
name|Override
DECL|method|shardTarget
specifier|public
name|SearchShardTarget
name|shardTarget
parameter_list|()
block|{
return|return
name|this
operator|.
name|shardTarget
return|;
block|}
annotation|@
name|Override
DECL|method|shardTarget
specifier|public
name|void
name|shardTarget
parameter_list|(
name|SearchShardTarget
name|shardTarget
parameter_list|)
block|{
name|this
operator|.
name|shardTarget
operator|=
name|shardTarget
expr_stmt|;
block|}
DECL|method|hits
specifier|public
name|void
name|hits
parameter_list|(
name|InternalSearchHits
name|hits
parameter_list|)
block|{
assert|assert
name|assertNoSearchTarget
argument_list|(
name|hits
argument_list|)
assert|;
name|this
operator|.
name|hits
operator|=
name|hits
expr_stmt|;
block|}
DECL|method|assertNoSearchTarget
specifier|private
name|boolean
name|assertNoSearchTarget
parameter_list|(
name|InternalSearchHits
name|hits
parameter_list|)
block|{
for|for
control|(
name|SearchHit
name|hit
range|:
name|hits
operator|.
name|hits
argument_list|()
control|)
block|{
assert|assert
name|hit
operator|.
name|getShard
argument_list|()
operator|==
literal|null
operator|:
literal|"expected null but got: "
operator|+
name|hit
operator|.
name|getShard
argument_list|()
assert|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|hits
specifier|public
name|InternalSearchHits
name|hits
parameter_list|()
block|{
return|return
name|hits
return|;
block|}
DECL|method|initCounter
specifier|public
name|FetchSearchResult
name|initCounter
parameter_list|()
block|{
name|counter
operator|=
literal|0
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|counterGetAndIncrement
specifier|public
name|int
name|counterGetAndIncrement
parameter_list|()
block|{
return|return
name|counter
operator|++
return|;
block|}
DECL|method|readFetchSearchResult
specifier|public
specifier|static
name|FetchSearchResult
name|readFetchSearchResult
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|FetchSearchResult
name|result
init|=
operator|new
name|FetchSearchResult
argument_list|()
decl_stmt|;
name|result
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|id
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|hits
operator|=
name|InternalSearchHits
operator|.
name|readSearchHits
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|hits
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

