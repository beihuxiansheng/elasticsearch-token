begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.internal
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|HasContextAndHeaders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|Template
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|Scroll
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|builder
operator|.
name|SearchSourceBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Shard level request that represents a search.  * It provides all the methods that the {@link org.elasticsearch.search.internal.SearchContext} needs.  * Provides a cache key based on its content that can be used to cache shard level response.  */
end_comment

begin_interface
DECL|interface|ShardSearchRequest
specifier|public
interface|interface
name|ShardSearchRequest
extends|extends
name|HasContextAndHeaders
block|{
DECL|method|index
name|String
name|index
parameter_list|()
function_decl|;
DECL|method|shardId
name|int
name|shardId
parameter_list|()
function_decl|;
DECL|method|types
name|String
index|[]
name|types
parameter_list|()
function_decl|;
DECL|method|source
name|SearchSourceBuilder
name|source
parameter_list|()
function_decl|;
DECL|method|source
name|void
name|source
parameter_list|(
name|SearchSourceBuilder
name|source
parameter_list|)
function_decl|;
DECL|method|extraSource
name|BytesReference
name|extraSource
parameter_list|()
function_decl|;
DECL|method|numberOfShards
name|int
name|numberOfShards
parameter_list|()
function_decl|;
DECL|method|searchType
name|SearchType
name|searchType
parameter_list|()
function_decl|;
DECL|method|filteringAliases
name|String
index|[]
name|filteringAliases
parameter_list|()
function_decl|;
DECL|method|nowInMillis
name|long
name|nowInMillis
parameter_list|()
function_decl|;
DECL|method|template
name|Template
name|template
parameter_list|()
function_decl|;
DECL|method|templateSource
name|BytesReference
name|templateSource
parameter_list|()
function_decl|;
DECL|method|requestCache
name|Boolean
name|requestCache
parameter_list|()
function_decl|;
DECL|method|scroll
name|Scroll
name|scroll
parameter_list|()
function_decl|;
comment|/**      * Returns the cache key for this shard search request, based on its content      */
DECL|method|cacheKey
name|BytesReference
name|cacheKey
parameter_list|()
throws|throws
name|IOException
function_decl|;
block|}
end_interface

end_unit

