begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.suggest.term
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|term
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryShardContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|DirectSpellcheckerSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|SuggestionSearchContext
operator|.
name|SuggestionContext
import|;
end_import

begin_class
DECL|class|TermSuggestionContext
specifier|final
class|class
name|TermSuggestionContext
extends|extends
name|SuggestionContext
block|{
DECL|field|settings
specifier|private
specifier|final
name|DirectSpellcheckerSettings
name|settings
init|=
operator|new
name|DirectSpellcheckerSettings
argument_list|()
decl_stmt|;
DECL|method|TermSuggestionContext
specifier|public
name|TermSuggestionContext
parameter_list|(
name|QueryShardContext
name|shardContext
parameter_list|)
block|{
name|super
argument_list|(
name|TermSuggester
operator|.
name|INSTANCE
argument_list|,
name|shardContext
argument_list|)
expr_stmt|;
block|}
DECL|method|getDirectSpellCheckerSettings
specifier|public
name|DirectSpellcheckerSettings
name|getDirectSpellCheckerSettings
parameter_list|()
block|{
return|return
name|settings
return|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"SpellcheckerSettings"
operator|+
name|settings
operator|+
literal|", BaseSettings"
operator|+
name|super
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

