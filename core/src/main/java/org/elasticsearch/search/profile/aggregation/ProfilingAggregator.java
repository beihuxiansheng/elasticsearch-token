begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.profile.aggregation
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|profile
operator|.
name|aggregation
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|LeafReaderContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|Aggregator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|InternalAggregation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|LeafBucketCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|SearchContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|ProfilingAggregator
specifier|public
class|class
name|ProfilingAggregator
extends|extends
name|Aggregator
block|{
DECL|field|delegate
specifier|private
specifier|final
name|Aggregator
name|delegate
decl_stmt|;
DECL|field|profiler
specifier|private
specifier|final
name|AggregationProfiler
name|profiler
decl_stmt|;
DECL|field|profileBreakdown
specifier|private
name|AggregationProfileBreakdown
name|profileBreakdown
decl_stmt|;
DECL|method|ProfilingAggregator
specifier|public
name|ProfilingAggregator
parameter_list|(
name|Aggregator
name|delegate
parameter_list|,
name|AggregationProfiler
name|profiler
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|profiler
operator|=
name|profiler
expr_stmt|;
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
block|{
name|delegate
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|needsScores
specifier|public
name|boolean
name|needsScores
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|needsScores
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|name
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|name
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|context
specifier|public
name|SearchContext
name|context
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|context
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|parent
specifier|public
name|Aggregator
name|parent
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|parent
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|subAggregator
specifier|public
name|Aggregator
name|subAggregator
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|subAggregator
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|buildAggregation
specifier|public
name|InternalAggregation
name|buildAggregation
parameter_list|(
name|long
name|bucket
parameter_list|)
throws|throws
name|IOException
block|{
name|profileBreakdown
operator|.
name|startTime
argument_list|(
name|AggregationTimingType
operator|.
name|BUILD_AGGREGATION
argument_list|)
expr_stmt|;
name|InternalAggregation
name|result
init|=
name|delegate
operator|.
name|buildAggregation
argument_list|(
name|bucket
argument_list|)
decl_stmt|;
name|profileBreakdown
operator|.
name|stopAndRecordTime
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
DECL|method|buildEmptyAggregation
specifier|public
name|InternalAggregation
name|buildEmptyAggregation
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|buildEmptyAggregation
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getLeafCollector
specifier|public
name|LeafBucketCollector
name|getLeafCollector
parameter_list|(
name|LeafReaderContext
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|ProfilingLeafBucketCollector
argument_list|(
name|delegate
operator|.
name|getLeafCollector
argument_list|(
name|ctx
argument_list|)
argument_list|,
name|profileBreakdown
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|preCollection
specifier|public
name|void
name|preCollection
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|profileBreakdown
operator|=
name|profiler
operator|.
name|getQueryBreakdown
argument_list|(
name|delegate
argument_list|)
expr_stmt|;
name|profileBreakdown
operator|.
name|startTime
argument_list|(
name|AggregationTimingType
operator|.
name|INITIALIZE
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|preCollection
argument_list|()
expr_stmt|;
name|profileBreakdown
operator|.
name|stopAndRecordTime
argument_list|()
expr_stmt|;
name|profiler
operator|.
name|pollLastElement
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|postCollection
specifier|public
name|void
name|postCollection
parameter_list|()
throws|throws
name|IOException
block|{
name|delegate
operator|.
name|postCollection
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

