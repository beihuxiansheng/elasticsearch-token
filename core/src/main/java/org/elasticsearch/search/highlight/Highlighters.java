begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.highlight
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|highlight
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|ExtensionPoint
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * An extensions point and registry for all the highlighters a node supports.  */
end_comment

begin_class
DECL|class|Highlighters
specifier|public
class|class
name|Highlighters
extends|extends
name|ExtensionPoint
operator|.
name|ClassMap
argument_list|<
name|Highlighter
argument_list|>
block|{
DECL|field|FVH
specifier|private
specifier|static
specifier|final
name|String
name|FVH
init|=
literal|"fvh"
decl_stmt|;
DECL|field|PLAIN
specifier|private
specifier|static
specifier|final
name|String
name|PLAIN
init|=
literal|"plain"
decl_stmt|;
DECL|field|POSTINGS
specifier|private
specifier|static
specifier|final
name|String
name|POSTINGS
init|=
literal|"postings"
decl_stmt|;
DECL|field|parsers
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Highlighter
argument_list|>
name|parsers
decl_stmt|;
DECL|method|Highlighters
specifier|public
name|Highlighters
parameter_list|()
block|{
name|this
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|Highlighters
specifier|private
name|Highlighters
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Highlighter
argument_list|>
name|parsers
parameter_list|)
block|{
name|super
argument_list|(
literal|"highlighter"
argument_list|,
name|Highlighter
operator|.
name|class
argument_list|,
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|FVH
argument_list|,
name|PLAIN
argument_list|,
name|POSTINGS
argument_list|)
argument_list|)
argument_list|,
name|Highlighters
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|parsers
operator|=
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|parsers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Inject
DECL|method|Highlighters
specifier|public
name|Highlighters
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Highlighter
argument_list|>
name|parsers
parameter_list|)
block|{
name|this
argument_list|(
name|addBuiltIns
argument_list|(
name|settings
argument_list|,
name|parsers
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|addBuiltIns
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|Highlighter
argument_list|>
name|addBuiltIns
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Highlighter
argument_list|>
name|parsers
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Highlighter
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|FVH
argument_list|,
operator|new
name|FastVectorHighlighter
argument_list|(
name|settings
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|PLAIN
argument_list|,
operator|new
name|PlainHighlighter
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|POSTINGS
argument_list|,
operator|new
name|PostingsHighlighter
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|putAll
argument_list|(
name|parsers
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|method|get
specifier|public
name|Highlighter
name|get
parameter_list|(
name|String
name|type
parameter_list|)
block|{
return|return
name|parsers
operator|.
name|get
argument_list|(
name|type
argument_list|)
return|;
block|}
block|}
end_class

end_unit

