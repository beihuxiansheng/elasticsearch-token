begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.metrics.tophits
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|tophits
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|ParsingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|SearchScript
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|Aggregator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregatorFactories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|InternalAggregation
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
operator|.
name|PipelineAggregator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|support
operator|.
name|AggregationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|builder
operator|.
name|SearchSourceBuilder
operator|.
name|ScriptField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|fielddata
operator|.
name|FieldDataFieldsContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|fielddata
operator|.
name|FieldDataFieldsFetchSubPhase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|fielddata
operator|.
name|FieldDataFieldsContext
operator|.
name|FieldDataField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|source
operator|.
name|FetchSourceContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|highlight
operator|.
name|HighlightBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|SubSearchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|sort
operator|.
name|SortParseElement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|TopHitsAggregatorFactory
specifier|public
class|class
name|TopHitsAggregatorFactory
extends|extends
name|AggregatorFactory
argument_list|<
name|TopHitsAggregatorFactory
argument_list|>
block|{
DECL|field|sortParseElement
specifier|private
specifier|static
specifier|final
name|SortParseElement
name|sortParseElement
init|=
operator|new
name|SortParseElement
argument_list|()
decl_stmt|;
DECL|field|from
specifier|private
specifier|final
name|int
name|from
decl_stmt|;
DECL|field|size
specifier|private
specifier|final
name|int
name|size
decl_stmt|;
DECL|field|explain
specifier|private
specifier|final
name|boolean
name|explain
decl_stmt|;
DECL|field|version
specifier|private
specifier|final
name|boolean
name|version
decl_stmt|;
DECL|field|trackScores
specifier|private
specifier|final
name|boolean
name|trackScores
decl_stmt|;
DECL|field|sorts
specifier|private
specifier|final
name|List
argument_list|<
name|BytesReference
argument_list|>
name|sorts
decl_stmt|;
DECL|field|highlightBuilder
specifier|private
specifier|final
name|HighlightBuilder
name|highlightBuilder
decl_stmt|;
DECL|field|fieldNames
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|fieldNames
decl_stmt|;
DECL|field|fieldDataFields
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|fieldDataFields
decl_stmt|;
DECL|field|scriptFields
specifier|private
specifier|final
name|List
argument_list|<
name|ScriptField
argument_list|>
name|scriptFields
decl_stmt|;
DECL|field|fetchSourceContext
specifier|private
specifier|final
name|FetchSourceContext
name|fetchSourceContext
decl_stmt|;
DECL|method|TopHitsAggregatorFactory
specifier|public
name|TopHitsAggregatorFactory
parameter_list|(
name|String
name|name
parameter_list|,
name|Type
name|type
parameter_list|,
name|int
name|from
parameter_list|,
name|int
name|size
parameter_list|,
name|boolean
name|explain
parameter_list|,
name|boolean
name|version
parameter_list|,
name|boolean
name|trackScores
parameter_list|,
name|List
argument_list|<
name|BytesReference
argument_list|>
name|sorts
parameter_list|,
name|HighlightBuilder
name|highlightBuilder
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|fieldNames
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|fieldDataFields
parameter_list|,
name|List
argument_list|<
name|ScriptField
argument_list|>
name|scriptFields
parameter_list|,
name|FetchSourceContext
name|fetchSourceContext
parameter_list|,
name|AggregationContext
name|context
parameter_list|,
name|AggregatorFactory
argument_list|<
name|?
argument_list|>
name|parent
parameter_list|,
name|AggregatorFactories
operator|.
name|Builder
name|subFactories
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|metaData
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|name
argument_list|,
name|type
argument_list|,
name|context
argument_list|,
name|parent
argument_list|,
name|subFactories
argument_list|,
name|metaData
argument_list|)
expr_stmt|;
name|this
operator|.
name|from
operator|=
name|from
expr_stmt|;
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
name|this
operator|.
name|explain
operator|=
name|explain
expr_stmt|;
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
name|this
operator|.
name|trackScores
operator|=
name|trackScores
expr_stmt|;
name|this
operator|.
name|sorts
operator|=
name|sorts
expr_stmt|;
name|this
operator|.
name|highlightBuilder
operator|=
name|highlightBuilder
expr_stmt|;
name|this
operator|.
name|fieldNames
operator|=
name|fieldNames
expr_stmt|;
name|this
operator|.
name|fieldDataFields
operator|=
name|fieldDataFields
expr_stmt|;
name|this
operator|.
name|scriptFields
operator|=
name|scriptFields
expr_stmt|;
name|this
operator|.
name|fetchSourceContext
operator|=
name|fetchSourceContext
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createInternal
specifier|public
name|Aggregator
name|createInternal
parameter_list|(
name|AggregationContext
name|aggregationContext
parameter_list|,
name|Aggregator
name|parent
parameter_list|,
name|boolean
name|collectsFromSingleBucket
parameter_list|,
name|List
argument_list|<
name|PipelineAggregator
argument_list|>
name|pipelineAggregators
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|metaData
parameter_list|)
throws|throws
name|IOException
block|{
name|SubSearchContext
name|subSearchContext
init|=
operator|new
name|SubSearchContext
argument_list|(
name|aggregationContext
operator|.
name|searchContext
argument_list|()
argument_list|)
decl_stmt|;
name|subSearchContext
operator|.
name|explain
argument_list|(
name|explain
argument_list|)
expr_stmt|;
name|subSearchContext
operator|.
name|version
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|subSearchContext
operator|.
name|trackScores
argument_list|(
name|trackScores
argument_list|)
expr_stmt|;
name|subSearchContext
operator|.
name|from
argument_list|(
name|from
argument_list|)
expr_stmt|;
name|subSearchContext
operator|.
name|size
argument_list|(
name|size
argument_list|)
expr_stmt|;
if|if
condition|(
name|sorts
operator|!=
literal|null
condition|)
block|{
name|XContentParser
name|completeSortParser
init|=
literal|null
decl_stmt|;
try|try
block|{
name|XContentBuilder
name|completeSortBuilder
init|=
name|XContentFactory
operator|.
name|jsonBuilder
argument_list|()
decl_stmt|;
name|completeSortBuilder
operator|.
name|startObject
argument_list|()
expr_stmt|;
name|completeSortBuilder
operator|.
name|startArray
argument_list|(
literal|"sort"
argument_list|)
expr_stmt|;
for|for
control|(
name|BytesReference
name|sort
range|:
name|sorts
control|)
block|{
name|XContentParser
name|parser
init|=
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|sort
argument_list|)
operator|.
name|createParser
argument_list|(
name|sort
argument_list|)
decl_stmt|;
name|parser
operator|.
name|nextToken
argument_list|()
expr_stmt|;
name|completeSortBuilder
operator|.
name|copyCurrentStructure
argument_list|(
name|parser
argument_list|)
expr_stmt|;
block|}
name|completeSortBuilder
operator|.
name|endArray
argument_list|()
expr_stmt|;
name|completeSortBuilder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|BytesReference
name|completeSortBytes
init|=
name|completeSortBuilder
operator|.
name|bytes
argument_list|()
decl_stmt|;
name|completeSortParser
operator|=
name|XContentFactory
operator|.
name|xContent
argument_list|(
name|completeSortBytes
argument_list|)
operator|.
name|createParser
argument_list|(
name|completeSortBytes
argument_list|)
expr_stmt|;
name|completeSortParser
operator|.
name|nextToken
argument_list|()
expr_stmt|;
name|completeSortParser
operator|.
name|nextToken
argument_list|()
expr_stmt|;
name|completeSortParser
operator|.
name|nextToken
argument_list|()
expr_stmt|;
name|sortParseElement
operator|.
name|parse
argument_list|(
name|completeSortParser
argument_list|,
name|subSearchContext
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|XContentLocation
name|location
init|=
name|completeSortParser
operator|!=
literal|null
condition|?
name|completeSortParser
operator|.
name|getTokenLocation
argument_list|()
else|:
literal|null
decl_stmt|;
throw|throw
operator|new
name|ParsingException
argument_list|(
name|location
argument_list|,
literal|"failed to parse sort source in aggregation ["
operator|+
name|name
operator|+
literal|"]"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
if|if
condition|(
name|fieldNames
operator|!=
literal|null
condition|)
block|{
name|subSearchContext
operator|.
name|fieldNames
argument_list|()
operator|.
name|addAll
argument_list|(
name|fieldNames
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fieldDataFields
operator|!=
literal|null
condition|)
block|{
name|FieldDataFieldsContext
name|fieldDataFieldsContext
init|=
name|subSearchContext
operator|.
name|getFetchSubPhaseContext
argument_list|(
name|FieldDataFieldsFetchSubPhase
operator|.
name|CONTEXT_FACTORY
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|field
range|:
name|fieldDataFields
control|)
block|{
name|fieldDataFieldsContext
operator|.
name|add
argument_list|(
operator|new
name|FieldDataField
argument_list|(
name|field
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|fieldDataFieldsContext
operator|.
name|setHitExecutionNeeded
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|scriptFields
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ScriptField
name|field
range|:
name|scriptFields
control|)
block|{
name|SearchScript
name|searchScript
init|=
name|subSearchContext
operator|.
name|scriptService
argument_list|()
operator|.
name|search
argument_list|(
name|subSearchContext
operator|.
name|lookup
argument_list|()
argument_list|,
name|field
operator|.
name|script
argument_list|()
argument_list|,
name|ScriptContext
operator|.
name|Standard
operator|.
name|SEARCH
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
decl_stmt|;
name|subSearchContext
operator|.
name|scriptFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|script
operator|.
name|ScriptFieldsContext
operator|.
name|ScriptField
argument_list|(
name|field
operator|.
name|fieldName
argument_list|()
argument_list|,
name|searchScript
argument_list|,
name|field
operator|.
name|ignoreFailure
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|fetchSourceContext
operator|!=
literal|null
condition|)
block|{
name|subSearchContext
operator|.
name|fetchSourceContext
argument_list|(
name|fetchSourceContext
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|highlightBuilder
operator|!=
literal|null
condition|)
block|{
name|subSearchContext
operator|.
name|highlight
argument_list|(
name|highlightBuilder
operator|.
name|build
argument_list|(
name|aggregationContext
operator|.
name|searchContext
argument_list|()
operator|.
name|indexShard
argument_list|()
operator|.
name|getQueryShardContext
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|TopHitsAggregator
argument_list|(
name|aggregationContext
operator|.
name|searchContext
argument_list|()
operator|.
name|fetchPhase
argument_list|()
argument_list|,
name|subSearchContext
argument_list|,
name|name
argument_list|,
name|aggregationContext
argument_list|,
name|parent
argument_list|,
name|pipelineAggregators
argument_list|,
name|metaData
argument_list|)
return|;
block|}
block|}
end_class

end_unit

