begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.bucket.geogrid
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|geogrid
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|ParseField
import|;
end_import

begin_comment
comment|/**  * Encapsulates relevant parameter defaults and validations for the geo hash grid aggregation.  */
end_comment

begin_class
DECL|class|GeoHashGridParams
specifier|final
class|class
name|GeoHashGridParams
block|{
comment|/* default values */
DECL|field|DEFAULT_PRECISION
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_PRECISION
init|=
literal|5
decl_stmt|;
DECL|field|DEFAULT_MAX_NUM_CELLS
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MAX_NUM_CELLS
init|=
literal|10000
decl_stmt|;
comment|/* recognized field names in JSON */
DECL|field|FIELD_PRECISION
specifier|public
specifier|static
specifier|final
name|ParseField
name|FIELD_PRECISION
init|=
operator|new
name|ParseField
argument_list|(
literal|"precision"
argument_list|)
decl_stmt|;
DECL|field|FIELD_SIZE
specifier|public
specifier|static
specifier|final
name|ParseField
name|FIELD_SIZE
init|=
operator|new
name|ParseField
argument_list|(
literal|"size"
argument_list|)
decl_stmt|;
DECL|field|FIELD_SHARD_SIZE
specifier|public
specifier|static
specifier|final
name|ParseField
name|FIELD_SHARD_SIZE
init|=
operator|new
name|ParseField
argument_list|(
literal|"shard_size"
argument_list|)
decl_stmt|;
DECL|method|checkPrecision
specifier|public
specifier|static
name|int
name|checkPrecision
parameter_list|(
name|int
name|precision
parameter_list|)
block|{
if|if
condition|(
operator|(
name|precision
operator|<
literal|1
operator|)
operator|||
operator|(
name|precision
operator|>
literal|12
operator|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid geohash aggregation precision of "
operator|+
name|precision
operator|+
literal|". Must be between 1 and 12."
argument_list|)
throw|;
block|}
return|return
name|precision
return|;
block|}
DECL|method|GeoHashGridParams
specifier|private
name|GeoHashGridParams
parameter_list|()
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
literal|"No instances intended"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

