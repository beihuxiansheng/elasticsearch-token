begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.bucket.filters
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|filters
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Weight
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|Aggregator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|InternalAggregation
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|filters
operator|.
name|FiltersAggregator
operator|.
name|KeyedFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
operator|.
name|PipelineAggregator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|support
operator|.
name|AggregationContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|FiltersAggregatorFactory
specifier|public
class|class
name|FiltersAggregatorFactory
extends|extends
name|AggregatorFactory
argument_list|<
name|FiltersAggregatorFactory
argument_list|>
block|{
DECL|field|keys
specifier|private
specifier|final
name|String
index|[]
name|keys
decl_stmt|;
DECL|field|weights
specifier|private
specifier|final
name|Weight
index|[]
name|weights
decl_stmt|;
DECL|field|keyed
specifier|private
specifier|final
name|boolean
name|keyed
decl_stmt|;
DECL|field|otherBucket
specifier|private
specifier|final
name|boolean
name|otherBucket
decl_stmt|;
DECL|field|otherBucketKey
specifier|private
specifier|final
name|String
name|otherBucketKey
decl_stmt|;
DECL|method|FiltersAggregatorFactory
specifier|public
name|FiltersAggregatorFactory
parameter_list|(
name|String
name|name
parameter_list|,
name|Type
name|type
parameter_list|,
name|List
argument_list|<
name|KeyedFilter
argument_list|>
name|filters
parameter_list|,
name|boolean
name|keyed
parameter_list|,
name|boolean
name|otherBucket
parameter_list|,
name|String
name|otherBucketKey
parameter_list|,
name|AggregationContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|name
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|this
operator|.
name|keyed
operator|=
name|keyed
expr_stmt|;
name|this
operator|.
name|otherBucket
operator|=
name|otherBucket
expr_stmt|;
name|this
operator|.
name|otherBucketKey
operator|=
name|otherBucketKey
expr_stmt|;
name|IndexSearcher
name|contextSearcher
init|=
name|context
operator|.
name|searchContext
argument_list|()
operator|.
name|searcher
argument_list|()
decl_stmt|;
name|weights
operator|=
operator|new
name|Weight
index|[
name|filters
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
name|keys
operator|=
operator|new
name|String
index|[
name|filters
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|filters
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|KeyedFilter
name|keyedFilter
init|=
name|filters
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|this
operator|.
name|keys
index|[
name|i
index|]
operator|=
name|keyedFilter
operator|.
name|key
argument_list|()
expr_stmt|;
name|Query
name|filter
init|=
name|keyedFilter
operator|.
name|filter
argument_list|()
operator|.
name|toFilter
argument_list|(
name|context
operator|.
name|searchContext
argument_list|()
operator|.
name|indexShard
argument_list|()
operator|.
name|getQueryShardContext
argument_list|()
argument_list|)
decl_stmt|;
name|this
operator|.
name|weights
index|[
name|i
index|]
operator|=
name|contextSearcher
operator|.
name|createNormalizedWeight
argument_list|(
name|filter
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createInternal
specifier|public
name|Aggregator
name|createInternal
parameter_list|(
name|AggregationContext
name|context
parameter_list|,
name|Aggregator
name|parent
parameter_list|,
name|boolean
name|collectsFromSingleBucket
parameter_list|,
name|List
argument_list|<
name|PipelineAggregator
argument_list|>
name|pipelineAggregators
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|metaData
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|FiltersAggregator
argument_list|(
name|name
argument_list|,
name|factories
argument_list|,
name|keys
argument_list|,
name|weights
argument_list|,
name|keyed
argument_list|,
name|otherBucket
condition|?
name|otherBucketKey
else|:
literal|null
argument_list|,
name|context
argument_list|,
name|parent
argument_list|,
name|pipelineAggregators
argument_list|,
name|metaData
argument_list|)
return|;
block|}
block|}
end_class

end_unit

