begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.threadpool
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|SettingsModule
import|;
end_import

begin_class
DECL|class|ThreadPoolModule
specifier|public
class|class
name|ThreadPoolModule
extends|extends
name|AbstractModule
block|{
DECL|field|threadPool
specifier|private
specifier|final
name|ThreadPool
name|threadPool
decl_stmt|;
DECL|method|ThreadPoolModule
specifier|public
name|ThreadPoolModule
parameter_list|(
specifier|final
name|ThreadPool
name|threadPool
parameter_list|)
block|{
name|this
operator|.
name|threadPool
operator|=
name|threadPool
expr_stmt|;
block|}
DECL|method|prepareSettings
specifier|public
name|void
name|prepareSettings
parameter_list|(
name|SettingsModule
name|settingsModule
parameter_list|)
block|{
for|for
control|(
specifier|final
name|ExecutorBuilder
argument_list|<
name|?
argument_list|>
name|builder
range|:
name|threadPool
operator|.
name|builders
argument_list|()
control|)
block|{
name|builder
operator|.
name|getRegisteredSettings
argument_list|()
operator|.
name|forEach
argument_list|(
name|settingsModule
operator|::
name|registerSetting
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|configure
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|bind
argument_list|(
name|ThreadPool
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|threadPool
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

