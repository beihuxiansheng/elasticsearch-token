begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.ingest.processor
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
package|;
end_package

begin_comment
comment|/**  * Exception class thrown by processor factories.  */
end_comment

begin_class
DECL|class|ConfigurationPropertyException
specifier|public
class|class
name|ConfigurationPropertyException
extends|extends
name|RuntimeException
block|{
DECL|field|processorType
specifier|private
name|String
name|processorType
decl_stmt|;
DECL|field|processorTag
specifier|private
name|String
name|processorTag
decl_stmt|;
DECL|field|propertyName
specifier|private
name|String
name|propertyName
decl_stmt|;
DECL|method|ConfigurationPropertyException
specifier|public
name|ConfigurationPropertyException
parameter_list|(
name|String
name|processorType
parameter_list|,
name|String
name|processorTag
parameter_list|,
name|String
name|propertyName
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|super
argument_list|(
literal|"["
operator|+
name|propertyName
operator|+
literal|"] "
operator|+
name|message
argument_list|)
expr_stmt|;
name|this
operator|.
name|processorTag
operator|=
name|processorTag
expr_stmt|;
name|this
operator|.
name|processorType
operator|=
name|processorType
expr_stmt|;
name|this
operator|.
name|propertyName
operator|=
name|propertyName
expr_stmt|;
block|}
DECL|method|ConfigurationPropertyException
specifier|public
name|ConfigurationPropertyException
parameter_list|(
name|String
name|errorMessage
parameter_list|)
block|{
name|super
argument_list|(
name|errorMessage
argument_list|)
expr_stmt|;
block|}
DECL|method|getPropertyName
specifier|public
name|String
name|getPropertyName
parameter_list|()
block|{
return|return
name|propertyName
return|;
block|}
DECL|method|getProcessorType
specifier|public
name|String
name|getProcessorType
parameter_list|()
block|{
return|return
name|processorType
return|;
block|}
DECL|method|getProcessorTag
specifier|public
name|String
name|getProcessorTag
parameter_list|()
block|{
return|return
name|processorTag
return|;
block|}
block|}
end_class

end_unit

