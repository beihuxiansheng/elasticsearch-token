begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.ingest.core
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|core
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * A processor implementation may modify the data belonging to a document.  * Whether changes are made and what exactly is modified is up to the implementation.  */
end_comment

begin_class
DECL|class|AbstractProcessorFactory
specifier|public
specifier|abstract
class|class
name|AbstractProcessorFactory
parameter_list|<
name|P
extends|extends
name|Processor
parameter_list|>
implements|implements
name|Processor
operator|.
name|Factory
argument_list|<
name|P
argument_list|>
block|{
DECL|field|PROCESSOR_TAG_KEY
specifier|static
specifier|final
name|String
name|PROCESSOR_TAG_KEY
init|=
literal|"processor_tag"
decl_stmt|;
annotation|@
name|Override
DECL|method|create
specifier|public
name|P
name|create
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|tag
init|=
name|ConfigurationUtils
operator|.
name|readOptionalStringProperty
argument_list|(
name|config
argument_list|,
name|PROCESSOR_TAG_KEY
argument_list|)
decl_stmt|;
return|return
name|doCreate
argument_list|(
name|tag
argument_list|,
name|config
argument_list|)
return|;
block|}
DECL|method|doCreate
specifier|protected
specifier|abstract
name|P
name|doCreate
parameter_list|(
name|String
name|tag
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
parameter_list|)
throws|throws
name|Exception
function_decl|;
block|}
end_class

end_unit

