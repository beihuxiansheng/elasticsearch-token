begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.script
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|script
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|lookup
operator|.
name|SearchLookup
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_interface
DECL|interface|ScriptEngineService
specifier|public
interface|interface
name|ScriptEngineService
extends|extends
name|Closeable
block|{
DECL|method|getType
name|String
name|getType
parameter_list|()
function_decl|;
DECL|method|getExtension
name|String
name|getExtension
parameter_list|()
function_decl|;
comment|/**      * Compiles a script.      * @param scriptName name of the script. {@code null} if it is anonymous (inline).      *                                        For a file script, its the file name (with extension).      *                                        For a stored script, its the identifier.      * @param scriptSource actual source of the script      * @param params compile-time parameters (such as flags to the compiler)      */
DECL|method|compile
name|Object
name|compile
parameter_list|(
name|String
name|scriptName
parameter_list|,
name|String
name|scriptSource
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
parameter_list|)
function_decl|;
DECL|method|executable
name|ExecutableScript
name|executable
parameter_list|(
name|CompiledScript
name|compiledScript
parameter_list|,
annotation|@
name|Nullable
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|vars
parameter_list|)
function_decl|;
DECL|method|search
name|SearchScript
name|search
parameter_list|(
name|CompiledScript
name|compiledScript
parameter_list|,
name|SearchLookup
name|lookup
parameter_list|,
annotation|@
name|Nullable
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|vars
parameter_list|)
function_decl|;
comment|/**      * Returns<code>true</code> if this scripting engine can safely accept inline scripts by default. The default is<code>false</code>      */
DECL|method|isInlineScriptEnabled
specifier|default
name|boolean
name|isInlineScriptEnabled
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
end_interface

end_unit

