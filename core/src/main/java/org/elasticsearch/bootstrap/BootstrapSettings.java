begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.bootstrap
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|bootstrap
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
operator|.
name|Scope
import|;
end_import

begin_class
DECL|class|BootstrapSettings
specifier|public
class|class
name|BootstrapSettings
block|{
comment|// TODO: remove this: http://www.openbsd.org/papers/hackfest2015-pledge/mgp00005.jpg
comment|/**      * option to turn off our security manager completely, for example      * if you want to have your own configuration or just disable      */
DECL|field|SECURITY_MANAGER_ENABLED_SETTING
specifier|public
specifier|static
specifier|final
name|Setting
argument_list|<
name|Boolean
argument_list|>
name|SECURITY_MANAGER_ENABLED_SETTING
init|=
name|Setting
operator|.
name|boolSetting
argument_list|(
literal|"security.manager.enabled"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|Scope
operator|.
name|CLUSTER
argument_list|)
decl_stmt|;
comment|// TODO: remove this hack when insecure defaults are removed from java
DECL|field|SECURITY_FILTER_BAD_DEFAULTS_SETTING
specifier|public
specifier|static
specifier|final
name|Setting
argument_list|<
name|Boolean
argument_list|>
name|SECURITY_FILTER_BAD_DEFAULTS_SETTING
init|=
name|Setting
operator|.
name|boolSetting
argument_list|(
literal|"security.manager.filter_bad_defaults"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|Scope
operator|.
name|CLUSTER
argument_list|)
decl_stmt|;
DECL|field|MLOCKALL_SETTING
specifier|public
specifier|static
specifier|final
name|Setting
argument_list|<
name|Boolean
argument_list|>
name|MLOCKALL_SETTING
init|=
name|Setting
operator|.
name|boolSetting
argument_list|(
literal|"bootstrap.mlockall"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|Scope
operator|.
name|CLUSTER
argument_list|)
decl_stmt|;
DECL|field|SECCOMP_SETTING
specifier|public
specifier|static
specifier|final
name|Setting
argument_list|<
name|Boolean
argument_list|>
name|SECCOMP_SETTING
init|=
name|Setting
operator|.
name|boolSetting
argument_list|(
literal|"bootstrap.seccomp"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|Scope
operator|.
name|CLUSTER
argument_list|)
decl_stmt|;
DECL|field|CTRLHANDLER_SETTING
specifier|public
specifier|static
specifier|final
name|Setting
argument_list|<
name|Boolean
argument_list|>
name|CTRLHANDLER_SETTING
init|=
name|Setting
operator|.
name|boolSetting
argument_list|(
literal|"bootstrap.ctrlhandler"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|Scope
operator|.
name|CLUSTER
argument_list|)
decl_stmt|;
block|}
end_class

end_unit

