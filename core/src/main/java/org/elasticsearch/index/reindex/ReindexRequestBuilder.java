begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.reindex
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|reindex
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|ElasticsearchClient
import|;
end_import

begin_class
DECL|class|ReindexRequestBuilder
specifier|public
class|class
name|ReindexRequestBuilder
extends|extends
name|AbstractBulkIndexByScrollRequestBuilder
argument_list|<
name|ReindexRequest
argument_list|,
name|ReindexRequestBuilder
argument_list|>
block|{
DECL|field|destination
specifier|private
specifier|final
name|IndexRequestBuilder
name|destination
decl_stmt|;
DECL|method|ReindexRequestBuilder
specifier|public
name|ReindexRequestBuilder
parameter_list|(
name|ElasticsearchClient
name|client
parameter_list|,
name|Action
argument_list|<
name|ReindexRequest
argument_list|,
name|BulkByScrollResponse
argument_list|,
name|ReindexRequestBuilder
argument_list|>
name|action
parameter_list|)
block|{
name|this
argument_list|(
name|client
argument_list|,
name|action
argument_list|,
operator|new
name|SearchRequestBuilder
argument_list|(
name|client
argument_list|,
name|SearchAction
operator|.
name|INSTANCE
argument_list|)
argument_list|,
operator|new
name|IndexRequestBuilder
argument_list|(
name|client
argument_list|,
name|IndexAction
operator|.
name|INSTANCE
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|ReindexRequestBuilder
specifier|private
name|ReindexRequestBuilder
parameter_list|(
name|ElasticsearchClient
name|client
parameter_list|,
name|Action
argument_list|<
name|ReindexRequest
argument_list|,
name|BulkByScrollResponse
argument_list|,
name|ReindexRequestBuilder
argument_list|>
name|action
parameter_list|,
name|SearchRequestBuilder
name|search
parameter_list|,
name|IndexRequestBuilder
name|destination
parameter_list|)
block|{
name|super
argument_list|(
name|client
argument_list|,
name|action
argument_list|,
name|search
argument_list|,
operator|new
name|ReindexRequest
argument_list|(
name|search
operator|.
name|request
argument_list|()
argument_list|,
name|destination
operator|.
name|request
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|destination
operator|=
name|destination
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|self
specifier|protected
name|ReindexRequestBuilder
name|self
parameter_list|()
block|{
return|return
name|this
return|;
block|}
DECL|method|destination
specifier|public
name|IndexRequestBuilder
name|destination
parameter_list|()
block|{
return|return
name|destination
return|;
block|}
comment|/**      * Set the destination index.      */
DECL|method|destination
specifier|public
name|ReindexRequestBuilder
name|destination
parameter_list|(
name|String
name|index
parameter_list|)
block|{
name|destination
operator|.
name|setIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Set the destination index and type.      */
DECL|method|destination
specifier|public
name|ReindexRequestBuilder
name|destination
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|destination
operator|.
name|setIndex
argument_list|(
name|index
argument_list|)
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Setup reindexing from a remote cluster.      */
DECL|method|setRemoteInfo
specifier|public
name|ReindexRequestBuilder
name|setRemoteInfo
parameter_list|(
name|RemoteInfo
name|remoteInfo
parameter_list|)
block|{
name|request
argument_list|()
operator|.
name|setRemoteInfo
argument_list|(
name|remoteInfo
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

