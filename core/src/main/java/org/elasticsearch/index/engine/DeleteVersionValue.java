begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.engine
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
operator|.
name|Translog
import|;
end_import

begin_comment
comment|/** Holds a deleted version, which just adds a timestamp to {@link VersionValue} so we know when we can expire the deletion. */
end_comment

begin_class
DECL|class|DeleteVersionValue
class|class
name|DeleteVersionValue
extends|extends
name|VersionValue
block|{
DECL|field|time
specifier|private
specifier|final
name|long
name|time
decl_stmt|;
DECL|method|DeleteVersionValue
specifier|public
name|DeleteVersionValue
parameter_list|(
name|long
name|version
parameter_list|,
name|long
name|time
parameter_list|,
name|Translog
operator|.
name|Location
name|translogLocation
parameter_list|)
block|{
name|super
argument_list|(
name|version
argument_list|,
name|translogLocation
argument_list|)
expr_stmt|;
name|this
operator|.
name|time
operator|=
name|time
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|time
specifier|public
name|long
name|time
parameter_list|()
block|{
return|return
name|this
operator|.
name|time
return|;
block|}
annotation|@
name|Override
DECL|method|delete
specifier|public
name|boolean
name|delete
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|ramBytesUsed
specifier|public
name|long
name|ramBytesUsed
parameter_list|()
block|{
return|return
name|super
operator|.
name|ramBytesUsed
argument_list|()
operator|+
name|Long
operator|.
name|BYTES
return|;
block|}
block|}
end_class

end_unit

