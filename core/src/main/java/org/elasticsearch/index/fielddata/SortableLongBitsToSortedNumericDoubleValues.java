begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.fielddata
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SortedNumericDocValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|NumericUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * {@link SortedNumericDoubleValues} instance that wraps a {@link SortedNumericDocValues}  * and converts the doubles to sortable long bits using  * {@link NumericUtils#sortableLongToDouble(long)}.  */
end_comment

begin_class
DECL|class|SortableLongBitsToSortedNumericDoubleValues
specifier|final
class|class
name|SortableLongBitsToSortedNumericDoubleValues
extends|extends
name|SortedNumericDoubleValues
block|{
DECL|field|values
specifier|private
specifier|final
name|SortedNumericDocValues
name|values
decl_stmt|;
DECL|method|SortableLongBitsToSortedNumericDoubleValues
name|SortableLongBitsToSortedNumericDoubleValues
parameter_list|(
name|SortedNumericDocValues
name|values
parameter_list|)
block|{
name|this
operator|.
name|values
operator|=
name|values
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|advanceExact
specifier|public
name|boolean
name|advanceExact
parameter_list|(
name|int
name|target
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|values
operator|.
name|advanceExact
argument_list|(
name|target
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|nextValue
specifier|public
name|double
name|nextValue
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|NumericUtils
operator|.
name|sortableLongToDouble
argument_list|(
name|values
operator|.
name|nextValue
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|docValueCount
specifier|public
name|int
name|docValueCount
parameter_list|()
block|{
return|return
name|values
operator|.
name|docValueCount
argument_list|()
return|;
block|}
comment|/** Return the wrapped values. */
DECL|method|getLongValues
specifier|public
name|SortedNumericDocValues
name|getLongValues
parameter_list|()
block|{
return|return
name|values
return|;
block|}
block|}
end_class

end_unit

