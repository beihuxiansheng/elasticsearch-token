begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.similarity
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|similarity
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|similarities
operator|.
name|DFISimilarity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|similarities
operator|.
name|Independence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|similarities
operator|.
name|IndependenceChiSquared
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|similarities
operator|.
name|IndependenceSaturated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|similarities
operator|.
name|IndependenceStandardized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|similarities
operator|.
name|Similarity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableMap
import|;
end_import

begin_comment
comment|/**  * {@link SimilarityProvider} for the {@link DFISimilarity}.  *<p>  * Configuration options available:  *<ul>  *<li>independence_measure</li>  *<li>discount_overlaps</li>  *</ul>  * @see DFISimilarity For more information about configuration  */
end_comment

begin_class
DECL|class|DFISimilarityProvider
specifier|public
class|class
name|DFISimilarityProvider
extends|extends
name|AbstractSimilarityProvider
block|{
comment|// the "basic models" of divergence from independence
DECL|field|INDEPENDENCE_MEASURES
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Independence
argument_list|>
name|INDEPENDENCE_MEASURES
decl_stmt|;
static|static
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Independence
argument_list|>
name|measures
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|measures
operator|.
name|put
argument_list|(
literal|"standardized"
argument_list|,
operator|new
name|IndependenceStandardized
argument_list|()
argument_list|)
expr_stmt|;
name|measures
operator|.
name|put
argument_list|(
literal|"saturated"
argument_list|,
operator|new
name|IndependenceSaturated
argument_list|()
argument_list|)
expr_stmt|;
name|measures
operator|.
name|put
argument_list|(
literal|"chisquared"
argument_list|,
operator|new
name|IndependenceChiSquared
argument_list|()
argument_list|)
expr_stmt|;
name|INDEPENDENCE_MEASURES
operator|=
name|unmodifiableMap
argument_list|(
name|measures
argument_list|)
expr_stmt|;
block|}
DECL|field|similarity
specifier|private
specifier|final
name|DFISimilarity
name|similarity
decl_stmt|;
DECL|method|DFISimilarityProvider
specifier|public
name|DFISimilarityProvider
parameter_list|(
name|String
name|name
parameter_list|,
name|Settings
name|settings
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|boolean
name|discountOverlaps
init|=
name|settings
operator|.
name|getAsBoolean
argument_list|(
literal|"discount_overlaps"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Independence
name|measure
init|=
name|parseIndependence
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|this
operator|.
name|similarity
operator|=
operator|new
name|DFISimilarity
argument_list|(
name|measure
argument_list|)
expr_stmt|;
name|this
operator|.
name|similarity
operator|.
name|setDiscountOverlaps
argument_list|(
name|discountOverlaps
argument_list|)
expr_stmt|;
block|}
DECL|method|parseIndependence
specifier|private
name|Independence
name|parseIndependence
parameter_list|(
name|Settings
name|settings
parameter_list|)
block|{
name|String
name|name
init|=
name|settings
operator|.
name|get
argument_list|(
literal|"independence_measure"
argument_list|)
decl_stmt|;
name|Independence
name|measure
init|=
name|INDEPENDENCE_MEASURES
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|measure
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unsupported IndependenceMeasure ["
operator|+
name|name
operator|+
literal|"]"
argument_list|)
throw|;
block|}
return|return
name|measure
return|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|Similarity
name|get
parameter_list|()
block|{
return|return
name|similarity
return|;
block|}
block|}
end_class

end_unit

