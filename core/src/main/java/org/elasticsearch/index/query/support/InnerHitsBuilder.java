begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.query.support
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|support
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|ToXContentToBytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|ParsingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Writeable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryParseContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_class
DECL|class|InnerHitsBuilder
specifier|public
specifier|final
class|class
name|InnerHitsBuilder
extends|extends
name|ToXContentToBytes
implements|implements
name|Writeable
argument_list|<
name|InnerHitsBuilder
argument_list|>
block|{
DECL|field|PROTO
specifier|public
specifier|final
specifier|static
name|InnerHitsBuilder
name|PROTO
init|=
operator|new
name|InnerHitsBuilder
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|innerHitsBuilders
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|InnerHitBuilder
argument_list|>
name|innerHitsBuilders
decl_stmt|;
DECL|method|InnerHitsBuilder
specifier|public
name|InnerHitsBuilder
parameter_list|()
block|{
name|this
operator|.
name|innerHitsBuilders
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
DECL|method|InnerHitsBuilder
specifier|public
name|InnerHitsBuilder
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|InnerHitBuilder
argument_list|>
name|innerHitsBuilders
parameter_list|)
block|{
name|this
operator|.
name|innerHitsBuilders
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|innerHitsBuilders
argument_list|)
expr_stmt|;
block|}
DECL|method|addInnerHit
specifier|public
name|InnerHitsBuilder
name|addInnerHit
parameter_list|(
name|String
name|name
parameter_list|,
name|InnerHitBuilder
name|builder
parameter_list|)
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|innerHitsBuilders
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|builder
operator|.
name|setName
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|getInnerHitsBuilders
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|InnerHitBuilder
argument_list|>
name|getInnerHitsBuilders
parameter_list|()
block|{
return|return
name|innerHitsBuilders
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|InnerHitsBuilder
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|size
init|=
name|in
operator|.
name|readVInt
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|InnerHitBuilder
argument_list|>
name|innerHitsBuilders
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|size
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|innerHitsBuilders
operator|.
name|put
argument_list|(
name|in
operator|.
name|readString
argument_list|()
argument_list|,
operator|new
name|InnerHitBuilder
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|InnerHitsBuilder
argument_list|(
name|innerHitsBuilders
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|()
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|InnerHitBuilder
argument_list|>
name|entry
range|:
name|innerHitsBuilders
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|builder
operator|.
name|field
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|builder
return|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVInt
argument_list|(
name|innerHitsBuilders
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|InnerHitBuilder
argument_list|>
name|entry
range|:
name|innerHitsBuilders
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|out
operator|.
name|writeString
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|equals
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
return|return
literal|false
return|;
name|InnerHitsBuilder
name|that
init|=
operator|(
name|InnerHitsBuilder
operator|)
name|o
decl_stmt|;
return|return
name|innerHitsBuilders
operator|.
name|equals
argument_list|(
name|that
operator|.
name|innerHitsBuilders
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|innerHitsBuilders
operator|.
name|hashCode
argument_list|()
return|;
block|}
DECL|method|fromXContent
specifier|public
specifier|static
name|InnerHitsBuilder
name|fromXContent
parameter_list|(
name|XContentParser
name|parser
parameter_list|,
name|QueryParseContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|InnerHitBuilder
argument_list|>
name|innerHitBuilders
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|innerHitName
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Token
name|token
init|=
name|parser
operator|.
name|nextToken
argument_list|()
init|;
name|token
operator|!=
name|Token
operator|.
name|END_OBJECT
condition|;
name|token
operator|=
name|parser
operator|.
name|nextToken
argument_list|()
control|)
block|{
switch|switch
condition|(
name|token
condition|)
block|{
case|case
name|START_OBJECT
case|:
name|InnerHitBuilder
name|innerHitBuilder
init|=
name|InnerHitBuilder
operator|.
name|fromXContent
argument_list|(
name|parser
argument_list|,
name|context
argument_list|)
decl_stmt|;
name|innerHitBuilder
operator|.
name|setName
argument_list|(
name|innerHitName
argument_list|)
expr_stmt|;
name|innerHitBuilders
operator|.
name|put
argument_list|(
name|innerHitName
argument_list|,
name|innerHitBuilder
argument_list|)
expr_stmt|;
break|break;
case|case
name|FIELD_NAME
case|:
name|innerHitName
operator|=
name|parser
operator|.
name|currentName
argument_list|()
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|ParsingException
argument_list|(
name|parser
operator|.
name|getTokenLocation
argument_list|()
argument_list|,
literal|"Expected ["
operator|+
name|XContentParser
operator|.
name|Token
operator|.
name|START_OBJECT
operator|+
literal|"] in ["
operator|+
name|parser
operator|.
name|currentName
argument_list|()
operator|+
literal|"] but found ["
operator|+
name|token
operator|+
literal|"]"
argument_list|,
name|parser
operator|.
name|getTokenLocation
argument_list|()
argument_list|)
throw|;
block|}
block|}
return|return
operator|new
name|InnerHitsBuilder
argument_list|(
name|innerHitBuilders
argument_list|)
return|;
block|}
block|}
end_class

end_unit

