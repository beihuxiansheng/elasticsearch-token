begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch
package|package
name|org
operator|.
name|elasticsearch
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|SuppressForbidden
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|Lucene
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|jvm
operator|.
name|JvmInfo
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|class|Version
specifier|public
class|class
name|Version
block|{
comment|// The logic for ID is: XXYYZZAA, where XX is major version, YY is minor version, ZZ is revision, and AA is Beta/RC indicator
comment|// AA values below 50 are beta builds, and below 99 are RC builds, with 99 indicating a release
comment|// the (internal) format of the id is there so we can easily do after/before checks on the id
comment|// NOTE: indexes created with 3.6 use this constant for e.g. analysis chain emulation (imperfect)
DECL|field|LUCENE_3_EMULATION_VERSION
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
name|LUCENE_3_EMULATION_VERSION
init|=
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_0_0
decl_stmt|;
DECL|field|V_0_18_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_18_0_ID
init|=
comment|/*00*/
literal|180099
decl_stmt|;
DECL|field|V_0_18_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_18_0
init|=
operator|new
name|Version
argument_list|(
name|V_0_18_0_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_18_1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_18_1_ID
init|=
comment|/*00*/
literal|180199
decl_stmt|;
DECL|field|V_0_18_1
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_18_1
init|=
operator|new
name|Version
argument_list|(
name|V_0_18_1_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_18_2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_18_2_ID
init|=
comment|/*00*/
literal|180299
decl_stmt|;
DECL|field|V_0_18_2
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_18_2
init|=
operator|new
name|Version
argument_list|(
name|V_0_18_2_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_18_3_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_18_3_ID
init|=
comment|/*00*/
literal|180399
decl_stmt|;
DECL|field|V_0_18_3
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_18_3
init|=
operator|new
name|Version
argument_list|(
name|V_0_18_3_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_18_4_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_18_4_ID
init|=
comment|/*00*/
literal|180499
decl_stmt|;
DECL|field|V_0_18_4
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_18_4
init|=
operator|new
name|Version
argument_list|(
name|V_0_18_4_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_18_5_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_18_5_ID
init|=
comment|/*00*/
literal|180599
decl_stmt|;
DECL|field|V_0_18_5
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_18_5
init|=
operator|new
name|Version
argument_list|(
name|V_0_18_5_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_18_6_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_18_6_ID
init|=
comment|/*00*/
literal|180699
decl_stmt|;
DECL|field|V_0_18_6
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_18_6
init|=
operator|new
name|Version
argument_list|(
name|V_0_18_6_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_18_7_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_18_7_ID
init|=
comment|/*00*/
literal|180799
decl_stmt|;
DECL|field|V_0_18_7
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_18_7
init|=
operator|new
name|Version
argument_list|(
name|V_0_18_7_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_18_8_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_18_8_ID
init|=
comment|/*00*/
literal|180899
decl_stmt|;
DECL|field|V_0_18_8
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_18_8
init|=
operator|new
name|Version
argument_list|(
name|V_0_18_8_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_0_RC1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_0_RC1_ID
init|=
comment|/*00*/
literal|190051
decl_stmt|;
DECL|field|V_0_19_0_RC1
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_0_RC1
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_0_RC1_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_0_RC2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_0_RC2_ID
init|=
comment|/*00*/
literal|190052
decl_stmt|;
DECL|field|V_0_19_0_RC2
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_0_RC2
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_0_RC2_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_0_RC3_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_0_RC3_ID
init|=
comment|/*00*/
literal|190053
decl_stmt|;
DECL|field|V_0_19_0_RC3
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_0_RC3
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_0_RC3_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_0_ID
init|=
comment|/*00*/
literal|190099
decl_stmt|;
DECL|field|V_0_19_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_0
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_0_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_1_ID
init|=
comment|/*00*/
literal|190199
decl_stmt|;
DECL|field|V_0_19_1
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_1
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_1_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_2_ID
init|=
comment|/*00*/
literal|190299
decl_stmt|;
DECL|field|V_0_19_2
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_2
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_2_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_3_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_3_ID
init|=
comment|/*00*/
literal|190399
decl_stmt|;
DECL|field|V_0_19_3
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_3
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_3_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_4_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_4_ID
init|=
comment|/*00*/
literal|190499
decl_stmt|;
DECL|field|V_0_19_4
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_4
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_4_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_5_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_5_ID
init|=
comment|/*00*/
literal|190599
decl_stmt|;
DECL|field|V_0_19_5
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_5
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_5_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_6_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_6_ID
init|=
comment|/*00*/
literal|190699
decl_stmt|;
DECL|field|V_0_19_6
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_6
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_6_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_7_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_7_ID
init|=
comment|/*00*/
literal|190799
decl_stmt|;
DECL|field|V_0_19_7
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_7
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_7_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_8_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_8_ID
init|=
comment|/*00*/
literal|190899
decl_stmt|;
DECL|field|V_0_19_8
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_8
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_8_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_9_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_9_ID
init|=
comment|/*00*/
literal|190999
decl_stmt|;
DECL|field|V_0_19_9
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_9
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_9_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_10_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_10_ID
init|=
comment|/*00*/
literal|191099
decl_stmt|;
DECL|field|V_0_19_10
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_10
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_10_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_11_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_11_ID
init|=
comment|/*00*/
literal|191199
decl_stmt|;
DECL|field|V_0_19_11
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_11
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_11_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_12_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_12_ID
init|=
comment|/*00*/
literal|191299
decl_stmt|;
DECL|field|V_0_19_12
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_12
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_12_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_19_13_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_19_13_ID
init|=
comment|/*00*/
literal|191399
decl_stmt|;
DECL|field|V_0_19_13
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_19_13
init|=
operator|new
name|Version
argument_list|(
name|V_0_19_13_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_20_0_RC1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_20_0_RC1_ID
init|=
comment|/*00*/
literal|200051
decl_stmt|;
DECL|field|V_0_20_0_RC1
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_20_0_RC1
init|=
operator|new
name|Version
argument_list|(
name|V_0_20_0_RC1_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_20_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_20_0_ID
init|=
comment|/*00*/
literal|200099
decl_stmt|;
DECL|field|V_0_20_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_20_0
init|=
operator|new
name|Version
argument_list|(
name|V_0_20_0_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_20_1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_20_1_ID
init|=
comment|/*00*/
literal|200199
decl_stmt|;
DECL|field|V_0_20_1
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_20_1
init|=
operator|new
name|Version
argument_list|(
name|V_0_20_1_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_20_2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_20_2_ID
init|=
comment|/*00*/
literal|200299
decl_stmt|;
DECL|field|V_0_20_2
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_20_2
init|=
operator|new
name|Version
argument_list|(
name|V_0_20_2_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_20_3_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_20_3_ID
init|=
comment|/*00*/
literal|200399
decl_stmt|;
DECL|field|V_0_20_3
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_20_3
init|=
operator|new
name|Version
argument_list|(
name|V_0_20_3_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_20_4_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_20_4_ID
init|=
comment|/*00*/
literal|200499
decl_stmt|;
DECL|field|V_0_20_4
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_20_4
init|=
operator|new
name|Version
argument_list|(
name|V_0_20_4_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_20_5_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_20_5_ID
init|=
comment|/*00*/
literal|200599
decl_stmt|;
DECL|field|V_0_20_5
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_20_5
init|=
operator|new
name|Version
argument_list|(
name|V_0_20_5_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_20_6_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_20_6_ID
init|=
comment|/*00*/
literal|200699
decl_stmt|;
DECL|field|V_0_20_6
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_20_6
init|=
operator|new
name|Version
argument_list|(
name|V_0_20_6_ID
argument_list|,
literal|false
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_20_7_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_20_7_ID
init|=
comment|/*00*/
literal|200799
decl_stmt|;
DECL|field|V_0_20_7
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_20_7
init|=
operator|new
name|Version
argument_list|(
name|V_0_20_7_ID
argument_list|,
literal|true
argument_list|,
name|LUCENE_3_EMULATION_VERSION
argument_list|)
decl_stmt|;
DECL|field|V_0_90_0_Beta1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_0_Beta1_ID
init|=
comment|/*00*/
literal|900001
decl_stmt|;
DECL|field|V_0_90_0_Beta1
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_0_Beta1
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_0_Beta1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_1
argument_list|)
decl_stmt|;
DECL|field|V_0_90_0_RC1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_0_RC1_ID
init|=
comment|/*00*/
literal|900051
decl_stmt|;
DECL|field|V_0_90_0_RC1
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_0_RC1
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_0_RC1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_1
argument_list|)
decl_stmt|;
DECL|field|V_0_90_0_RC2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_0_RC2_ID
init|=
comment|/*00*/
literal|900052
decl_stmt|;
DECL|field|V_0_90_0_RC2
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_0_RC2
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_0_RC2_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_2
argument_list|)
decl_stmt|;
DECL|field|V_0_90_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_0_ID
init|=
comment|/*00*/
literal|900099
decl_stmt|;
DECL|field|V_0_90_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_0
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_0_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_2
argument_list|)
decl_stmt|;
DECL|field|V_0_90_1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_1_ID
init|=
comment|/*00*/
literal|900199
decl_stmt|;
DECL|field|V_0_90_1
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_1
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_3
argument_list|)
decl_stmt|;
DECL|field|V_0_90_2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_2_ID
init|=
comment|/*00*/
literal|900299
decl_stmt|;
DECL|field|V_0_90_2
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_2
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_2_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_3
argument_list|)
decl_stmt|;
DECL|field|V_0_90_3_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_3_ID
init|=
comment|/*00*/
literal|900399
decl_stmt|;
DECL|field|V_0_90_3
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_3
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_3_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_4
argument_list|)
decl_stmt|;
DECL|field|V_0_90_4_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_4_ID
init|=
comment|/*00*/
literal|900499
decl_stmt|;
DECL|field|V_0_90_4
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_4
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_4_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_4
argument_list|)
decl_stmt|;
DECL|field|V_0_90_5_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_5_ID
init|=
comment|/*00*/
literal|900599
decl_stmt|;
DECL|field|V_0_90_5
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_5
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_5_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_4
argument_list|)
decl_stmt|;
DECL|field|V_0_90_6_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_6_ID
init|=
comment|/*00*/
literal|900699
decl_stmt|;
DECL|field|V_0_90_6
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_6
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_6_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_5
argument_list|)
decl_stmt|;
DECL|field|V_0_90_7_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_7_ID
init|=
comment|/*00*/
literal|900799
decl_stmt|;
DECL|field|V_0_90_7
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_7
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_7_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_5
argument_list|)
decl_stmt|;
DECL|field|V_0_90_8_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_8_ID
init|=
comment|/*00*/
literal|900899
decl_stmt|;
DECL|field|V_0_90_8
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_8
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_8_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_0_90_9_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_9_ID
init|=
comment|/*00*/
literal|900999
decl_stmt|;
DECL|field|V_0_90_9
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_9
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_9_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_0_90_10_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_10_ID
init|=
comment|/*00*/
literal|901099
decl_stmt|;
DECL|field|V_0_90_10
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_10
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_10_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_0_90_11_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_11_ID
init|=
comment|/*00*/
literal|901199
decl_stmt|;
DECL|field|V_0_90_11
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_11
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_11_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_0_90_12_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_12_ID
init|=
comment|/*00*/
literal|901299
decl_stmt|;
DECL|field|V_0_90_12
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_12
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_12_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_0_90_13_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_13_ID
init|=
comment|/*00*/
literal|901399
decl_stmt|;
DECL|field|V_0_90_13
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_13
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_13_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_0_90_14_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_0_90_14_ID
init|=
comment|/*00*/
literal|901499
decl_stmt|;
DECL|field|V_0_90_14
specifier|public
specifier|static
specifier|final
name|Version
name|V_0_90_14
init|=
operator|new
name|Version
argument_list|(
name|V_0_90_14_ID
argument_list|,
literal|true
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_1_0_0_Beta1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_0_0_Beta1_ID
init|=
literal|1000001
decl_stmt|;
DECL|field|V_1_0_0_Beta1
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_0_0_Beta1
init|=
operator|new
name|Version
argument_list|(
name|V_1_0_0_Beta1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_5
argument_list|)
decl_stmt|;
DECL|field|V_1_0_0_Beta2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_0_0_Beta2_ID
init|=
literal|1000002
decl_stmt|;
DECL|field|V_1_0_0_Beta2
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_0_0_Beta2
init|=
operator|new
name|Version
argument_list|(
name|V_1_0_0_Beta2_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_1_0_0_RC1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_0_0_RC1_ID
init|=
literal|1000051
decl_stmt|;
DECL|field|V_1_0_0_RC1
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_0_0_RC1
init|=
operator|new
name|Version
argument_list|(
name|V_1_0_0_RC1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_1_0_0_RC2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_0_0_RC2_ID
init|=
literal|1000052
decl_stmt|;
DECL|field|V_1_0_0_RC2
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_0_0_RC2
init|=
operator|new
name|Version
argument_list|(
name|V_1_0_0_RC2_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_1_0_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_0_0_ID
init|=
literal|1000099
decl_stmt|;
DECL|field|V_1_0_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_0_0
init|=
operator|new
name|Version
argument_list|(
name|V_1_0_0_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_1_0_1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_0_1_ID
init|=
literal|1000199
decl_stmt|;
DECL|field|V_1_0_1
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_0_1
init|=
operator|new
name|Version
argument_list|(
name|V_1_0_1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_1_0_2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_0_2_ID
init|=
literal|1000299
decl_stmt|;
DECL|field|V_1_0_2
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_0_2
init|=
operator|new
name|Version
argument_list|(
name|V_1_0_2_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_1_0_3_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_0_3_ID
init|=
literal|1000399
decl_stmt|;
DECL|field|V_1_0_3
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_0_3
init|=
operator|new
name|Version
argument_list|(
name|V_1_0_3_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_1_0_4_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_0_4_ID
init|=
literal|1000499
decl_stmt|;
DECL|field|V_1_0_4
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_0_4
init|=
operator|new
name|Version
argument_list|(
name|V_1_0_4_ID
argument_list|,
literal|true
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_6
argument_list|)
decl_stmt|;
DECL|field|V_1_1_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_1_0_ID
init|=
literal|1010099
decl_stmt|;
DECL|field|V_1_1_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_1_0
init|=
operator|new
name|Version
argument_list|(
name|V_1_1_0_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_7
argument_list|)
decl_stmt|;
DECL|field|V_1_1_1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_1_1_ID
init|=
literal|1010199
decl_stmt|;
DECL|field|V_1_1_1
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_1_1
init|=
operator|new
name|Version
argument_list|(
name|V_1_1_1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_7
argument_list|)
decl_stmt|;
DECL|field|V_1_1_2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_1_2_ID
init|=
literal|1010299
decl_stmt|;
DECL|field|V_1_1_2
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_1_2
init|=
operator|new
name|Version
argument_list|(
name|V_1_1_2_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_7
argument_list|)
decl_stmt|;
DECL|field|V_1_2_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_2_0_ID
init|=
literal|1020099
decl_stmt|;
DECL|field|V_1_2_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_2_0
init|=
operator|new
name|Version
argument_list|(
name|V_1_2_0_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_8
argument_list|)
decl_stmt|;
DECL|field|V_1_2_1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_2_1_ID
init|=
literal|1020199
decl_stmt|;
DECL|field|V_1_2_1
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_2_1
init|=
operator|new
name|Version
argument_list|(
name|V_1_2_1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_8
argument_list|)
decl_stmt|;
DECL|field|V_1_2_2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_2_2_ID
init|=
literal|1020299
decl_stmt|;
DECL|field|V_1_2_2
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_2_2
init|=
operator|new
name|Version
argument_list|(
name|V_1_2_2_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_8
argument_list|)
decl_stmt|;
DECL|field|V_1_2_3_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_2_3_ID
init|=
literal|1020399
decl_stmt|;
DECL|field|V_1_2_3
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_2_3
init|=
operator|new
name|Version
argument_list|(
name|V_1_2_3_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_8
argument_list|)
decl_stmt|;
DECL|field|V_1_2_4_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_2_4_ID
init|=
literal|1020499
decl_stmt|;
DECL|field|V_1_2_4
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_2_4
init|=
operator|new
name|Version
argument_list|(
name|V_1_2_4_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_8
argument_list|)
decl_stmt|;
DECL|field|V_1_2_5_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_2_5_ID
init|=
literal|1020599
decl_stmt|;
DECL|field|V_1_2_5
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_2_5
init|=
operator|new
name|Version
argument_list|(
name|V_1_2_5_ID
argument_list|,
literal|true
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_8
argument_list|)
decl_stmt|;
DECL|field|V_1_3_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_3_0_ID
init|=
literal|1030099
decl_stmt|;
DECL|field|V_1_3_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_3_0
init|=
operator|new
name|Version
argument_list|(
name|V_1_3_0_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_9
argument_list|)
decl_stmt|;
DECL|field|V_1_3_1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_3_1_ID
init|=
literal|1030199
decl_stmt|;
DECL|field|V_1_3_1
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_3_1
init|=
operator|new
name|Version
argument_list|(
name|V_1_3_1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_9
argument_list|)
decl_stmt|;
DECL|field|V_1_3_2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_3_2_ID
init|=
literal|1030299
decl_stmt|;
DECL|field|V_1_3_2
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_3_2
init|=
operator|new
name|Version
argument_list|(
name|V_1_3_2_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_9
argument_list|)
decl_stmt|;
DECL|field|V_1_3_3_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_3_3_ID
init|=
literal|1030399
decl_stmt|;
DECL|field|V_1_3_3
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_3_3
init|=
operator|new
name|Version
argument_list|(
name|V_1_3_3_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_9
argument_list|)
decl_stmt|;
DECL|field|V_1_3_4_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_3_4_ID
init|=
literal|1030499
decl_stmt|;
DECL|field|V_1_3_4
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_3_4
init|=
operator|new
name|Version
argument_list|(
name|V_1_3_4_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_9
argument_list|)
decl_stmt|;
DECL|field|V_1_3_5_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_3_5_ID
init|=
literal|1030599
decl_stmt|;
DECL|field|V_1_3_5
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_3_5
init|=
operator|new
name|Version
argument_list|(
name|V_1_3_5_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_9
argument_list|)
decl_stmt|;
DECL|field|V_1_3_6_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_3_6_ID
init|=
literal|1030699
decl_stmt|;
DECL|field|V_1_3_6
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_3_6
init|=
operator|new
name|Version
argument_list|(
name|V_1_3_6_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_9
argument_list|)
decl_stmt|;
DECL|field|V_1_3_7_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_3_7_ID
init|=
literal|1030799
decl_stmt|;
DECL|field|V_1_3_7
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_3_7
init|=
operator|new
name|Version
argument_list|(
name|V_1_3_7_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_9
argument_list|)
decl_stmt|;
DECL|field|V_1_3_8_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_3_8_ID
init|=
literal|1030899
decl_stmt|;
DECL|field|V_1_3_8
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_3_8
init|=
operator|new
name|Version
argument_list|(
name|V_1_3_8_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_9
argument_list|)
decl_stmt|;
DECL|field|V_1_3_9_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_3_9_ID
init|=
literal|1030999
decl_stmt|;
DECL|field|V_1_3_9
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_3_9
init|=
operator|new
name|Version
argument_list|(
name|V_1_3_9_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_9
argument_list|)
decl_stmt|;
DECL|field|V_1_3_10_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_3_10_ID
init|=
comment|/*00*/
literal|1031099
decl_stmt|;
DECL|field|V_1_3_10
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_3_10
init|=
operator|new
name|Version
argument_list|(
name|V_1_3_10_ID
argument_list|,
literal|true
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_9
argument_list|)
decl_stmt|;
DECL|field|V_1_4_0_Beta1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_4_0_Beta1_ID
init|=
literal|1040001
decl_stmt|;
DECL|field|V_1_4_0_Beta1
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_4_0_Beta1
init|=
operator|new
name|Version
argument_list|(
name|V_1_4_0_Beta1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_1
argument_list|)
decl_stmt|;
DECL|field|V_1_4_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_4_0_ID
init|=
literal|1040099
decl_stmt|;
DECL|field|V_1_4_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_4_0
init|=
operator|new
name|Version
argument_list|(
name|V_1_4_0_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_2
argument_list|)
decl_stmt|;
DECL|field|V_1_4_1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_4_1_ID
init|=
literal|1040199
decl_stmt|;
DECL|field|V_1_4_1
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_4_1
init|=
operator|new
name|Version
argument_list|(
name|V_1_4_1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_2
argument_list|)
decl_stmt|;
DECL|field|V_1_4_2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_4_2_ID
init|=
literal|1040299
decl_stmt|;
DECL|field|V_1_4_2
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_4_2
init|=
operator|new
name|Version
argument_list|(
name|V_1_4_2_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_2
argument_list|)
decl_stmt|;
DECL|field|V_1_4_3_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_4_3_ID
init|=
literal|1040399
decl_stmt|;
DECL|field|V_1_4_3
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_4_3
init|=
operator|new
name|Version
argument_list|(
name|V_1_4_3_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_3
argument_list|)
decl_stmt|;
DECL|field|V_1_4_4_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_4_4_ID
init|=
literal|1040499
decl_stmt|;
DECL|field|V_1_4_4
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_4_4
init|=
operator|new
name|Version
argument_list|(
name|V_1_4_4_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_3
argument_list|)
decl_stmt|;
DECL|field|V_1_4_5_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_4_5_ID
init|=
literal|1040599
decl_stmt|;
DECL|field|V_1_4_5
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_4_5
init|=
operator|new
name|Version
argument_list|(
name|V_1_4_5_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_4
argument_list|)
decl_stmt|;
DECL|field|V_1_4_6_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_4_6_ID
init|=
literal|1040699
decl_stmt|;
DECL|field|V_1_4_6
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_4_6
init|=
operator|new
name|Version
argument_list|(
name|V_1_4_6_ID
argument_list|,
literal|true
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_4
argument_list|)
decl_stmt|;
DECL|field|V_1_5_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_5_0_ID
init|=
literal|1050099
decl_stmt|;
DECL|field|V_1_5_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_5_0
init|=
operator|new
name|Version
argument_list|(
name|V_1_5_0_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_4
argument_list|)
decl_stmt|;
DECL|field|V_1_5_1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_5_1_ID
init|=
literal|1050199
decl_stmt|;
DECL|field|V_1_5_1
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_5_1
init|=
operator|new
name|Version
argument_list|(
name|V_1_5_1_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_4
argument_list|)
decl_stmt|;
DECL|field|V_1_5_2_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_5_2_ID
init|=
literal|1050299
decl_stmt|;
DECL|field|V_1_5_2
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_5_2
init|=
operator|new
name|Version
argument_list|(
name|V_1_5_2_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_4
argument_list|)
decl_stmt|;
DECL|field|V_1_5_3_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_5_3_ID
init|=
literal|1050399
decl_stmt|;
DECL|field|V_1_5_3
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_5_3
init|=
operator|new
name|Version
argument_list|(
name|V_1_5_3_ID
argument_list|,
literal|true
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_4
argument_list|)
decl_stmt|;
DECL|field|V_1_6_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_6_0_ID
init|=
literal|1060099
decl_stmt|;
DECL|field|V_1_6_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_6_0
init|=
operator|new
name|Version
argument_list|(
name|V_1_6_0_ID
argument_list|,
literal|false
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_4
argument_list|)
decl_stmt|;
DECL|field|V_1_6_1_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_1_6_1_ID
init|=
literal|1060199
decl_stmt|;
DECL|field|V_1_6_1
specifier|public
specifier|static
specifier|final
name|Version
name|V_1_6_1
init|=
operator|new
name|Version
argument_list|(
name|V_1_6_1_ID
argument_list|,
literal|true
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_4_10_4
argument_list|)
decl_stmt|;
DECL|field|V_2_0_0_ID
specifier|public
specifier|static
specifier|final
name|int
name|V_2_0_0_ID
init|=
literal|2000099
decl_stmt|;
DECL|field|V_2_0_0
specifier|public
specifier|static
specifier|final
name|Version
name|V_2_0_0
init|=
operator|new
name|Version
argument_list|(
name|V_2_0_0_ID
argument_list|,
literal|true
argument_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
operator|.
name|LUCENE_5_2_0
argument_list|)
decl_stmt|;
DECL|field|CURRENT
specifier|public
specifier|static
specifier|final
name|Version
name|CURRENT
init|=
name|V_2_0_0
decl_stmt|;
static|static
block|{
assert|assert
name|CURRENT
operator|.
name|luceneVersion
operator|.
name|equals
argument_list|(
name|Lucene
operator|.
name|VERSION
argument_list|)
operator|:
literal|"Version must be upgraded to ["
operator|+
name|Lucene
operator|.
name|VERSION
operator|+
literal|"] is still set to ["
operator|+
name|CURRENT
operator|.
name|luceneVersion
operator|+
literal|"]"
assert|;
block|}
DECL|method|readVersion
specifier|public
specifier|static
name|Version
name|readVersion
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|fromId
argument_list|(
name|in
operator|.
name|readVInt
argument_list|()
argument_list|)
return|;
block|}
DECL|method|fromId
specifier|public
specifier|static
name|Version
name|fromId
parameter_list|(
name|int
name|id
parameter_list|)
block|{
switch|switch
condition|(
name|id
condition|)
block|{
case|case
name|V_2_0_0_ID
case|:
return|return
name|V_2_0_0
return|;
case|case
name|V_1_6_1_ID
case|:
return|return
name|V_1_6_1
return|;
case|case
name|V_1_6_0_ID
case|:
return|return
name|V_1_6_0
return|;
case|case
name|V_1_5_3_ID
case|:
return|return
name|V_1_5_3
return|;
case|case
name|V_1_5_2_ID
case|:
return|return
name|V_1_5_2
return|;
case|case
name|V_1_5_1_ID
case|:
return|return
name|V_1_5_1
return|;
case|case
name|V_1_5_0_ID
case|:
return|return
name|V_1_5_0
return|;
case|case
name|V_1_4_6_ID
case|:
return|return
name|V_1_4_6
return|;
case|case
name|V_1_4_5_ID
case|:
return|return
name|V_1_4_5
return|;
case|case
name|V_1_4_4_ID
case|:
return|return
name|V_1_4_4
return|;
case|case
name|V_1_4_3_ID
case|:
return|return
name|V_1_4_3
return|;
case|case
name|V_1_4_2_ID
case|:
return|return
name|V_1_4_2
return|;
case|case
name|V_1_4_1_ID
case|:
return|return
name|V_1_4_1
return|;
case|case
name|V_1_4_0_ID
case|:
return|return
name|V_1_4_0
return|;
case|case
name|V_1_4_0_Beta1_ID
case|:
return|return
name|V_1_4_0_Beta1
return|;
case|case
name|V_1_3_10_ID
case|:
return|return
name|V_1_3_10
return|;
case|case
name|V_1_3_9_ID
case|:
return|return
name|V_1_3_9
return|;
case|case
name|V_1_3_8_ID
case|:
return|return
name|V_1_3_8
return|;
case|case
name|V_1_3_7_ID
case|:
return|return
name|V_1_3_7
return|;
case|case
name|V_1_3_6_ID
case|:
return|return
name|V_1_3_6
return|;
case|case
name|V_1_3_5_ID
case|:
return|return
name|V_1_3_5
return|;
case|case
name|V_1_3_4_ID
case|:
return|return
name|V_1_3_4
return|;
case|case
name|V_1_3_3_ID
case|:
return|return
name|V_1_3_3
return|;
case|case
name|V_1_3_2_ID
case|:
return|return
name|V_1_3_2
return|;
case|case
name|V_1_3_1_ID
case|:
return|return
name|V_1_3_1
return|;
case|case
name|V_1_3_0_ID
case|:
return|return
name|V_1_3_0
return|;
case|case
name|V_1_2_5_ID
case|:
return|return
name|V_1_2_5
return|;
case|case
name|V_1_2_4_ID
case|:
return|return
name|V_1_2_4
return|;
case|case
name|V_1_2_3_ID
case|:
return|return
name|V_1_2_3
return|;
case|case
name|V_1_2_2_ID
case|:
return|return
name|V_1_2_2
return|;
case|case
name|V_1_2_1_ID
case|:
return|return
name|V_1_2_1
return|;
case|case
name|V_1_2_0_ID
case|:
return|return
name|V_1_2_0
return|;
case|case
name|V_1_1_2_ID
case|:
return|return
name|V_1_1_2
return|;
case|case
name|V_1_1_1_ID
case|:
return|return
name|V_1_1_1
return|;
case|case
name|V_1_1_0_ID
case|:
return|return
name|V_1_1_0
return|;
case|case
name|V_1_0_4_ID
case|:
return|return
name|V_1_0_4
return|;
case|case
name|V_1_0_3_ID
case|:
return|return
name|V_1_0_3
return|;
case|case
name|V_1_0_2_ID
case|:
return|return
name|V_1_0_2
return|;
case|case
name|V_1_0_1_ID
case|:
return|return
name|V_1_0_1
return|;
case|case
name|V_1_0_0_ID
case|:
return|return
name|V_1_0_0
return|;
case|case
name|V_1_0_0_RC2_ID
case|:
return|return
name|V_1_0_0_RC2
return|;
case|case
name|V_1_0_0_RC1_ID
case|:
return|return
name|V_1_0_0_RC1
return|;
case|case
name|V_1_0_0_Beta2_ID
case|:
return|return
name|V_1_0_0_Beta2
return|;
case|case
name|V_1_0_0_Beta1_ID
case|:
return|return
name|V_1_0_0_Beta1
return|;
case|case
name|V_0_90_14_ID
case|:
return|return
name|V_0_90_14
return|;
case|case
name|V_0_90_13_ID
case|:
return|return
name|V_0_90_13
return|;
case|case
name|V_0_90_12_ID
case|:
return|return
name|V_0_90_12
return|;
case|case
name|V_0_90_11_ID
case|:
return|return
name|V_0_90_11
return|;
case|case
name|V_0_90_10_ID
case|:
return|return
name|V_0_90_10
return|;
case|case
name|V_0_90_9_ID
case|:
return|return
name|V_0_90_9
return|;
case|case
name|V_0_90_8_ID
case|:
return|return
name|V_0_90_8
return|;
case|case
name|V_0_90_7_ID
case|:
return|return
name|V_0_90_7
return|;
case|case
name|V_0_90_6_ID
case|:
return|return
name|V_0_90_6
return|;
case|case
name|V_0_90_5_ID
case|:
return|return
name|V_0_90_5
return|;
case|case
name|V_0_90_4_ID
case|:
return|return
name|V_0_90_4
return|;
case|case
name|V_0_90_3_ID
case|:
return|return
name|V_0_90_3
return|;
case|case
name|V_0_90_2_ID
case|:
return|return
name|V_0_90_2
return|;
case|case
name|V_0_90_1_ID
case|:
return|return
name|V_0_90_1
return|;
case|case
name|V_0_90_0_ID
case|:
return|return
name|V_0_90_0
return|;
case|case
name|V_0_90_0_RC2_ID
case|:
return|return
name|V_0_90_0_RC2
return|;
case|case
name|V_0_90_0_RC1_ID
case|:
return|return
name|V_0_90_0_RC1
return|;
case|case
name|V_0_90_0_Beta1_ID
case|:
return|return
name|V_0_90_0_Beta1
return|;
case|case
name|V_0_20_7_ID
case|:
return|return
name|V_0_20_7
return|;
case|case
name|V_0_20_6_ID
case|:
return|return
name|V_0_20_6
return|;
case|case
name|V_0_20_5_ID
case|:
return|return
name|V_0_20_5
return|;
case|case
name|V_0_20_4_ID
case|:
return|return
name|V_0_20_4
return|;
case|case
name|V_0_20_3_ID
case|:
return|return
name|V_0_20_3
return|;
case|case
name|V_0_20_2_ID
case|:
return|return
name|V_0_20_2
return|;
case|case
name|V_0_20_1_ID
case|:
return|return
name|V_0_20_1
return|;
case|case
name|V_0_20_0_ID
case|:
return|return
name|V_0_20_0
return|;
case|case
name|V_0_20_0_RC1_ID
case|:
return|return
name|V_0_20_0_RC1
return|;
case|case
name|V_0_19_0_RC1_ID
case|:
return|return
name|V_0_19_0_RC1
return|;
case|case
name|V_0_19_0_RC2_ID
case|:
return|return
name|V_0_19_0_RC2
return|;
case|case
name|V_0_19_0_RC3_ID
case|:
return|return
name|V_0_19_0_RC3
return|;
case|case
name|V_0_19_0_ID
case|:
return|return
name|V_0_19_0
return|;
case|case
name|V_0_19_1_ID
case|:
return|return
name|V_0_19_1
return|;
case|case
name|V_0_19_2_ID
case|:
return|return
name|V_0_19_2
return|;
case|case
name|V_0_19_3_ID
case|:
return|return
name|V_0_19_3
return|;
case|case
name|V_0_19_4_ID
case|:
return|return
name|V_0_19_4
return|;
case|case
name|V_0_19_5_ID
case|:
return|return
name|V_0_19_5
return|;
case|case
name|V_0_19_6_ID
case|:
return|return
name|V_0_19_6
return|;
case|case
name|V_0_19_7_ID
case|:
return|return
name|V_0_19_7
return|;
case|case
name|V_0_19_8_ID
case|:
return|return
name|V_0_19_8
return|;
case|case
name|V_0_19_9_ID
case|:
return|return
name|V_0_19_9
return|;
case|case
name|V_0_19_10_ID
case|:
return|return
name|V_0_19_10
return|;
case|case
name|V_0_19_11_ID
case|:
return|return
name|V_0_19_11
return|;
case|case
name|V_0_19_12_ID
case|:
return|return
name|V_0_19_12
return|;
case|case
name|V_0_19_13_ID
case|:
return|return
name|V_0_19_13
return|;
case|case
name|V_0_18_0_ID
case|:
return|return
name|V_0_18_0
return|;
case|case
name|V_0_18_1_ID
case|:
return|return
name|V_0_18_1
return|;
case|case
name|V_0_18_2_ID
case|:
return|return
name|V_0_18_2
return|;
case|case
name|V_0_18_3_ID
case|:
return|return
name|V_0_18_3
return|;
case|case
name|V_0_18_4_ID
case|:
return|return
name|V_0_18_4
return|;
case|case
name|V_0_18_5_ID
case|:
return|return
name|V_0_18_5
return|;
case|case
name|V_0_18_6_ID
case|:
return|return
name|V_0_18_6
return|;
case|case
name|V_0_18_7_ID
case|:
return|return
name|V_0_18_7
return|;
case|case
name|V_0_18_8_ID
case|:
return|return
name|V_0_18_8
return|;
default|default:
return|return
operator|new
name|Version
argument_list|(
name|id
argument_list|,
literal|false
argument_list|,
name|Lucene
operator|.
name|VERSION
argument_list|)
return|;
block|}
block|}
comment|/**      * Return the {@link Version} of Elasticsearch that has been used to create an index given its settings.      *      * @throws IllegalStateException if the given index settings doesn't contain a value for the key {@value IndexMetaData#SETTING_VERSION_CREATED}      */
DECL|method|indexCreated
specifier|public
specifier|static
name|Version
name|indexCreated
parameter_list|(
name|Settings
name|indexSettings
parameter_list|)
block|{
specifier|final
name|Version
name|indexVersion
init|=
name|indexSettings
operator|.
name|getAsVersion
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|indexVersion
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"["
operator|+
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
operator|+
literal|"] is not present in the index settings for index with uuid: ["
operator|+
name|indexSettings
operator|.
name|get
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_UUID
argument_list|)
operator|+
literal|"]"
argument_list|)
throw|;
block|}
return|return
name|indexVersion
return|;
block|}
DECL|method|writeVersion
specifier|public
specifier|static
name|void
name|writeVersion
parameter_list|(
name|Version
name|version
parameter_list|,
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVInt
argument_list|(
name|version
operator|.
name|id
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns the smallest version between the 2.      */
DECL|method|smallest
specifier|public
specifier|static
name|Version
name|smallest
parameter_list|(
name|Version
name|version1
parameter_list|,
name|Version
name|version2
parameter_list|)
block|{
return|return
name|version1
operator|.
name|id
operator|<
name|version2
operator|.
name|id
condition|?
name|version1
else|:
name|version2
return|;
block|}
comment|/**      * Returns the version given its string representation, current version if the argument is null or empty      */
DECL|method|fromString
specifier|public
specifier|static
name|Version
name|fromString
parameter_list|(
name|String
name|version
parameter_list|)
block|{
if|if
condition|(
operator|!
name|Strings
operator|.
name|hasLength
argument_list|(
name|version
argument_list|)
condition|)
block|{
return|return
name|Version
operator|.
name|CURRENT
return|;
block|}
specifier|final
name|boolean
name|snapshot
decl_stmt|;
if|if
condition|(
name|snapshot
operator|=
name|version
operator|.
name|endsWith
argument_list|(
literal|"-SNAPSHOT"
argument_list|)
condition|)
block|{
name|version
operator|=
name|version
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|version
operator|.
name|length
argument_list|()
operator|-
literal|9
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|parts
init|=
name|version
operator|.
name|split
argument_list|(
literal|"\\."
argument_list|)
decl_stmt|;
if|if
condition|(
name|parts
operator|.
name|length
argument_list|<
literal|3
operator|||
name|parts
operator|.
name|length
argument_list|>
literal|4
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"the version needs to contain major, minor and revision, and optionally the build: "
operator|+
name|version
argument_list|)
throw|;
block|}
try|try
block|{
comment|//we reverse the version id calculation based on some assumption as we can't reliably reverse the modulo
specifier|final
name|int
name|major
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|parts
index|[
literal|0
index|]
argument_list|)
operator|*
literal|1000000
decl_stmt|;
specifier|final
name|int
name|minor
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|parts
index|[
literal|1
index|]
argument_list|)
operator|*
literal|10000
decl_stmt|;
specifier|final
name|int
name|revision
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|parts
index|[
literal|2
index|]
argument_list|)
operator|*
literal|100
decl_stmt|;
name|int
name|build
init|=
literal|99
decl_stmt|;
if|if
condition|(
name|parts
operator|.
name|length
operator|==
literal|4
condition|)
block|{
name|String
name|buildStr
init|=
name|parts
index|[
literal|3
index|]
decl_stmt|;
if|if
condition|(
name|buildStr
operator|.
name|startsWith
argument_list|(
literal|"Beta"
argument_list|)
condition|)
block|{
name|build
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|buildStr
operator|.
name|substring
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|buildStr
operator|.
name|startsWith
argument_list|(
literal|"RC"
argument_list|)
condition|)
block|{
name|build
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|buildStr
operator|.
name|substring
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|+
literal|50
expr_stmt|;
block|}
block|}
specifier|final
name|Version
name|versionFromId
init|=
name|fromId
argument_list|(
name|major
operator|+
name|minor
operator|+
name|revision
operator|+
name|build
argument_list|)
decl_stmt|;
if|if
condition|(
name|snapshot
operator|!=
name|versionFromId
operator|.
name|snapshot
argument_list|()
condition|)
block|{
return|return
operator|new
name|Version
argument_list|(
name|versionFromId
operator|.
name|id
argument_list|,
name|snapshot
argument_list|,
name|versionFromId
operator|.
name|luceneVersion
argument_list|)
return|;
block|}
return|return
name|versionFromId
return|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"unable to parse version "
operator|+
name|version
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
DECL|field|id
specifier|public
specifier|final
name|int
name|id
decl_stmt|;
DECL|field|major
specifier|public
specifier|final
name|byte
name|major
decl_stmt|;
DECL|field|minor
specifier|public
specifier|final
name|byte
name|minor
decl_stmt|;
DECL|field|revision
specifier|public
specifier|final
name|byte
name|revision
decl_stmt|;
DECL|field|build
specifier|public
specifier|final
name|byte
name|build
decl_stmt|;
DECL|field|snapshot
specifier|public
specifier|final
name|Boolean
name|snapshot
decl_stmt|;
DECL|field|luceneVersion
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
name|luceneVersion
decl_stmt|;
DECL|method|Version
name|Version
parameter_list|(
name|int
name|id
parameter_list|,
name|boolean
name|snapshot
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
name|luceneVersion
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|major
operator|=
call|(
name|byte
call|)
argument_list|(
operator|(
name|id
operator|/
literal|1000000
operator|)
operator|%
literal|100
argument_list|)
expr_stmt|;
name|this
operator|.
name|minor
operator|=
call|(
name|byte
call|)
argument_list|(
operator|(
name|id
operator|/
literal|10000
operator|)
operator|%
literal|100
argument_list|)
expr_stmt|;
name|this
operator|.
name|revision
operator|=
call|(
name|byte
call|)
argument_list|(
operator|(
name|id
operator|/
literal|100
operator|)
operator|%
literal|100
argument_list|)
expr_stmt|;
name|this
operator|.
name|build
operator|=
call|(
name|byte
call|)
argument_list|(
name|id
operator|%
literal|100
argument_list|)
expr_stmt|;
name|this
operator|.
name|snapshot
operator|=
name|snapshot
expr_stmt|;
name|this
operator|.
name|luceneVersion
operator|=
name|luceneVersion
expr_stmt|;
block|}
DECL|method|snapshot
specifier|public
name|boolean
name|snapshot
parameter_list|()
block|{
return|return
name|snapshot
return|;
block|}
DECL|method|after
specifier|public
name|boolean
name|after
parameter_list|(
name|Version
name|version
parameter_list|)
block|{
return|return
name|version
operator|.
name|id
operator|<
name|id
return|;
block|}
DECL|method|onOrAfter
specifier|public
name|boolean
name|onOrAfter
parameter_list|(
name|Version
name|version
parameter_list|)
block|{
return|return
name|version
operator|.
name|id
operator|<=
name|id
return|;
block|}
DECL|method|before
specifier|public
name|boolean
name|before
parameter_list|(
name|Version
name|version
parameter_list|)
block|{
return|return
name|version
operator|.
name|id
operator|>
name|id
return|;
block|}
DECL|method|onOrBefore
specifier|public
name|boolean
name|onOrBefore
parameter_list|(
name|Version
name|version
parameter_list|)
block|{
return|return
name|version
operator|.
name|id
operator|>=
name|id
return|;
block|}
comment|/**      * Returns the minimum compatible version based on the current      * version. Ie a node needs to have at least the return version in order      * to communicate with a node running the current version. The returned version      * is in most of the cases the smallest major version release unless the current version      * is a beta or RC release then the version itself is returned.      */
DECL|method|minimumCompatibilityVersion
specifier|public
name|Version
name|minimumCompatibilityVersion
parameter_list|()
block|{
return|return
name|Version
operator|.
name|smallest
argument_list|(
name|this
argument_list|,
name|fromId
argument_list|(
name|major
operator|*
literal|1000000
operator|+
literal|99
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * Just the version number (without -SNAPSHOT if snapshot).      */
DECL|method|number
specifier|public
name|String
name|number
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|major
argument_list|)
operator|.
name|append
argument_list|(
literal|'.'
argument_list|)
operator|.
name|append
argument_list|(
name|minor
argument_list|)
operator|.
name|append
argument_list|(
literal|'.'
argument_list|)
operator|.
name|append
argument_list|(
name|revision
argument_list|)
expr_stmt|;
if|if
condition|(
name|build
operator|<
literal|50
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|".Beta"
argument_list|)
operator|.
name|append
argument_list|(
name|build
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|build
operator|<
literal|99
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|".RC"
argument_list|)
operator|.
name|append
argument_list|(
name|build
operator|-
literal|50
argument_list|)
expr_stmt|;
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|SuppressForbidden
argument_list|(
name|reason
operator|=
literal|"System.out.*"
argument_list|)
DECL|method|main
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Version: "
operator|+
name|Version
operator|.
name|CURRENT
operator|+
literal|", Build: "
operator|+
name|Build
operator|.
name|CURRENT
operator|.
name|hashShort
argument_list|()
operator|+
literal|"/"
operator|+
name|Build
operator|.
name|CURRENT
operator|.
name|timestamp
argument_list|()
operator|+
literal|", JVM: "
operator|+
name|JvmInfo
operator|.
name|jvmInfo
argument_list|()
operator|.
name|version
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|number
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|snapshot
argument_list|()
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"-SNAPSHOT"
argument_list|)
expr_stmt|;
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|equals
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|Version
name|version
init|=
operator|(
name|Version
operator|)
name|o
decl_stmt|;
if|if
condition|(
name|id
operator|!=
name|version
operator|.
name|id
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|id
return|;
block|}
DECL|class|Module
specifier|public
specifier|static
class|class
name|Module
extends|extends
name|AbstractModule
block|{
DECL|field|version
specifier|private
specifier|final
name|Version
name|version
decl_stmt|;
DECL|method|Module
specifier|public
name|Module
parameter_list|(
name|Version
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|configure
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|bind
argument_list|(
name|Version
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|version
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

