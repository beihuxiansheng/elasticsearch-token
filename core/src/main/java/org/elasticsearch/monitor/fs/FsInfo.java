begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.monitor.fs
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|fs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|DiskUsage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Writeable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
DECL|class|FsInfo
specifier|public
class|class
name|FsInfo
implements|implements
name|Iterable
argument_list|<
name|FsInfo
operator|.
name|Path
argument_list|>
implements|,
name|Writeable
implements|,
name|ToXContent
block|{
DECL|class|Path
specifier|public
specifier|static
class|class
name|Path
implements|implements
name|Writeable
implements|,
name|ToXContent
block|{
DECL|field|path
name|String
name|path
decl_stmt|;
annotation|@
name|Nullable
DECL|field|mount
name|String
name|mount
decl_stmt|;
comment|/** File system type from {@code java.nio.file.FileStore type()}, if available. */
annotation|@
name|Nullable
DECL|field|type
name|String
name|type
decl_stmt|;
DECL|field|total
name|long
name|total
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|free
name|long
name|free
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|available
name|long
name|available
init|=
operator|-
literal|1
decl_stmt|;
comment|/** Uses Lucene's {@code IOUtils.spins} method to try to determine if the device backed by spinning media.          *  This is null if we could not determine it, true if it possibly spins, else false. */
DECL|field|spins
name|Boolean
name|spins
init|=
literal|null
decl_stmt|;
DECL|method|Path
specifier|public
name|Path
parameter_list|()
block|{         }
DECL|method|Path
specifier|public
name|Path
parameter_list|(
name|String
name|path
parameter_list|,
annotation|@
name|Nullable
name|String
name|mount
parameter_list|,
name|long
name|total
parameter_list|,
name|long
name|free
parameter_list|,
name|long
name|available
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
name|this
operator|.
name|mount
operator|=
name|mount
expr_stmt|;
name|this
operator|.
name|total
operator|=
name|total
expr_stmt|;
name|this
operator|.
name|free
operator|=
name|free
expr_stmt|;
name|this
operator|.
name|available
operator|=
name|available
expr_stmt|;
block|}
comment|/**          * Read from a stream.          */
DECL|method|Path
specifier|public
name|Path
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|path
operator|=
name|in
operator|.
name|readOptionalString
argument_list|()
expr_stmt|;
name|mount
operator|=
name|in
operator|.
name|readOptionalString
argument_list|()
expr_stmt|;
name|type
operator|=
name|in
operator|.
name|readOptionalString
argument_list|()
expr_stmt|;
name|total
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|free
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|available
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|spins
operator|=
name|in
operator|.
name|readOptionalBoolean
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeOptionalString
argument_list|(
name|path
argument_list|)
expr_stmt|;
comment|// total aggregates do not have a path
name|out
operator|.
name|writeOptionalString
argument_list|(
name|mount
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeOptionalString
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|total
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|free
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|available
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeOptionalBoolean
argument_list|(
name|spins
argument_list|)
expr_stmt|;
block|}
DECL|method|getPath
specifier|public
name|String
name|getPath
parameter_list|()
block|{
return|return
name|path
return|;
block|}
DECL|method|getMount
specifier|public
name|String
name|getMount
parameter_list|()
block|{
return|return
name|mount
return|;
block|}
DECL|method|getType
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
DECL|method|getTotal
specifier|public
name|ByteSizeValue
name|getTotal
parameter_list|()
block|{
return|return
operator|new
name|ByteSizeValue
argument_list|(
name|total
argument_list|)
return|;
block|}
DECL|method|getFree
specifier|public
name|ByteSizeValue
name|getFree
parameter_list|()
block|{
return|return
operator|new
name|ByteSizeValue
argument_list|(
name|free
argument_list|)
return|;
block|}
DECL|method|getAvailable
specifier|public
name|ByteSizeValue
name|getAvailable
parameter_list|()
block|{
return|return
operator|new
name|ByteSizeValue
argument_list|(
name|available
argument_list|)
return|;
block|}
DECL|method|getSpins
specifier|public
name|Boolean
name|getSpins
parameter_list|()
block|{
return|return
name|spins
return|;
block|}
DECL|method|addLong
specifier|private
name|long
name|addLong
parameter_list|(
name|long
name|current
parameter_list|,
name|long
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
operator|-
literal|1
condition|)
block|{
return|return
name|current
return|;
block|}
if|if
condition|(
name|current
operator|==
operator|-
literal|1
condition|)
block|{
return|return
name|other
return|;
block|}
return|return
name|current
operator|+
name|other
return|;
block|}
DECL|method|addDouble
specifier|private
name|double
name|addDouble
parameter_list|(
name|double
name|current
parameter_list|,
name|double
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
operator|-
literal|1
condition|)
block|{
return|return
name|current
return|;
block|}
if|if
condition|(
name|current
operator|==
operator|-
literal|1
condition|)
block|{
return|return
name|other
return|;
block|}
return|return
name|current
operator|+
name|other
return|;
block|}
DECL|method|add
specifier|public
name|void
name|add
parameter_list|(
name|Path
name|path
parameter_list|)
block|{
name|total
operator|=
name|addLong
argument_list|(
name|total
argument_list|,
name|path
operator|.
name|total
argument_list|)
expr_stmt|;
name|free
operator|=
name|addLong
argument_list|(
name|free
argument_list|,
name|path
operator|.
name|free
argument_list|)
expr_stmt|;
name|available
operator|=
name|addLong
argument_list|(
name|available
argument_list|,
name|path
operator|.
name|available
argument_list|)
expr_stmt|;
if|if
condition|(
name|path
operator|.
name|spins
operator|!=
literal|null
operator|&&
name|path
operator|.
name|spins
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
comment|// Spinning is contagious!
name|spins
operator|=
name|Boolean
operator|.
name|TRUE
expr_stmt|;
block|}
block|}
DECL|class|Fields
specifier|static
specifier|final
class|class
name|Fields
block|{
DECL|field|PATH
specifier|static
specifier|final
name|String
name|PATH
init|=
literal|"path"
decl_stmt|;
DECL|field|MOUNT
specifier|static
specifier|final
name|String
name|MOUNT
init|=
literal|"mount"
decl_stmt|;
DECL|field|TYPE
specifier|static
specifier|final
name|String
name|TYPE
init|=
literal|"type"
decl_stmt|;
DECL|field|TOTAL
specifier|static
specifier|final
name|String
name|TOTAL
init|=
literal|"total"
decl_stmt|;
DECL|field|TOTAL_IN_BYTES
specifier|static
specifier|final
name|String
name|TOTAL_IN_BYTES
init|=
literal|"total_in_bytes"
decl_stmt|;
DECL|field|FREE
specifier|static
specifier|final
name|String
name|FREE
init|=
literal|"free"
decl_stmt|;
DECL|field|FREE_IN_BYTES
specifier|static
specifier|final
name|String
name|FREE_IN_BYTES
init|=
literal|"free_in_bytes"
decl_stmt|;
DECL|field|AVAILABLE
specifier|static
specifier|final
name|String
name|AVAILABLE
init|=
literal|"available"
decl_stmt|;
DECL|field|AVAILABLE_IN_BYTES
specifier|static
specifier|final
name|String
name|AVAILABLE_IN_BYTES
init|=
literal|"available_in_bytes"
decl_stmt|;
DECL|field|SPINS
specifier|static
specifier|final
name|String
name|SPINS
init|=
literal|"spins"
decl_stmt|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|()
expr_stmt|;
if|if
condition|(
name|path
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|PATH
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mount
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|MOUNT
argument_list|,
name|mount
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|type
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|TYPE
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|total
operator|!=
operator|-
literal|1
condition|)
block|{
name|builder
operator|.
name|byteSizeField
argument_list|(
name|Fields
operator|.
name|TOTAL_IN_BYTES
argument_list|,
name|Fields
operator|.
name|TOTAL
argument_list|,
name|total
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|free
operator|!=
operator|-
literal|1
condition|)
block|{
name|builder
operator|.
name|byteSizeField
argument_list|(
name|Fields
operator|.
name|FREE_IN_BYTES
argument_list|,
name|Fields
operator|.
name|FREE
argument_list|,
name|free
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|available
operator|!=
operator|-
literal|1
condition|)
block|{
name|builder
operator|.
name|byteSizeField
argument_list|(
name|Fields
operator|.
name|AVAILABLE_IN_BYTES
argument_list|,
name|Fields
operator|.
name|AVAILABLE
argument_list|,
name|available
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|spins
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|SPINS
argument_list|,
name|spins
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|builder
return|;
block|}
block|}
DECL|class|DeviceStats
specifier|public
specifier|static
class|class
name|DeviceStats
implements|implements
name|Writeable
implements|,
name|ToXContent
block|{
DECL|field|majorDeviceNumber
specifier|final
name|int
name|majorDeviceNumber
decl_stmt|;
DECL|field|minorDeviceNumber
specifier|final
name|int
name|minorDeviceNumber
decl_stmt|;
DECL|field|deviceName
specifier|final
name|String
name|deviceName
decl_stmt|;
DECL|field|currentReadsCompleted
specifier|final
name|long
name|currentReadsCompleted
decl_stmt|;
DECL|field|previousReadsCompleted
specifier|final
name|long
name|previousReadsCompleted
decl_stmt|;
DECL|field|currentSectorsRead
specifier|final
name|long
name|currentSectorsRead
decl_stmt|;
DECL|field|previousSectorsRead
specifier|final
name|long
name|previousSectorsRead
decl_stmt|;
DECL|field|currentWritesCompleted
specifier|final
name|long
name|currentWritesCompleted
decl_stmt|;
DECL|field|previousWritesCompleted
specifier|final
name|long
name|previousWritesCompleted
decl_stmt|;
DECL|field|currentSectorsWritten
specifier|final
name|long
name|currentSectorsWritten
decl_stmt|;
DECL|field|previousSectorsWritten
specifier|final
name|long
name|previousSectorsWritten
decl_stmt|;
DECL|method|DeviceStats
specifier|public
name|DeviceStats
parameter_list|(
specifier|final
name|int
name|majorDeviceNumber
parameter_list|,
specifier|final
name|int
name|minorDeviceNumber
parameter_list|,
specifier|final
name|String
name|deviceName
parameter_list|,
specifier|final
name|long
name|currentReadsCompleted
parameter_list|,
specifier|final
name|long
name|currentSectorsRead
parameter_list|,
specifier|final
name|long
name|currentWritesCompleted
parameter_list|,
specifier|final
name|long
name|currentSectorsWritten
parameter_list|,
specifier|final
name|DeviceStats
name|previousDeviceStats
parameter_list|)
block|{
name|this
argument_list|(
name|majorDeviceNumber
argument_list|,
name|minorDeviceNumber
argument_list|,
name|deviceName
argument_list|,
name|currentReadsCompleted
argument_list|,
name|previousDeviceStats
operator|!=
literal|null
condition|?
name|previousDeviceStats
operator|.
name|currentReadsCompleted
else|:
operator|-
literal|1
argument_list|,
name|currentSectorsWritten
argument_list|,
name|previousDeviceStats
operator|!=
literal|null
condition|?
name|previousDeviceStats
operator|.
name|currentSectorsWritten
else|:
operator|-
literal|1
argument_list|,
name|currentSectorsRead
argument_list|,
name|previousDeviceStats
operator|!=
literal|null
condition|?
name|previousDeviceStats
operator|.
name|currentSectorsRead
else|:
operator|-
literal|1
argument_list|,
name|currentWritesCompleted
argument_list|,
name|previousDeviceStats
operator|!=
literal|null
condition|?
name|previousDeviceStats
operator|.
name|currentWritesCompleted
else|:
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
DECL|method|DeviceStats
specifier|private
name|DeviceStats
parameter_list|(
specifier|final
name|int
name|majorDeviceNumber
parameter_list|,
specifier|final
name|int
name|minorDeviceNumber
parameter_list|,
specifier|final
name|String
name|deviceName
parameter_list|,
specifier|final
name|long
name|currentReadsCompleted
parameter_list|,
specifier|final
name|long
name|previousReadsCompleted
parameter_list|,
specifier|final
name|long
name|currentSectorsWritten
parameter_list|,
specifier|final
name|long
name|previousSectorsWritten
parameter_list|,
specifier|final
name|long
name|currentSectorsRead
parameter_list|,
specifier|final
name|long
name|previousSectorsRead
parameter_list|,
specifier|final
name|long
name|currentWritesCompleted
parameter_list|,
specifier|final
name|long
name|previousWritesCompleted
parameter_list|)
block|{
name|this
operator|.
name|majorDeviceNumber
operator|=
name|majorDeviceNumber
expr_stmt|;
name|this
operator|.
name|minorDeviceNumber
operator|=
name|minorDeviceNumber
expr_stmt|;
name|this
operator|.
name|deviceName
operator|=
name|deviceName
expr_stmt|;
name|this
operator|.
name|currentReadsCompleted
operator|=
name|currentReadsCompleted
expr_stmt|;
name|this
operator|.
name|previousReadsCompleted
operator|=
name|previousReadsCompleted
expr_stmt|;
name|this
operator|.
name|currentWritesCompleted
operator|=
name|currentWritesCompleted
expr_stmt|;
name|this
operator|.
name|previousWritesCompleted
operator|=
name|previousWritesCompleted
expr_stmt|;
name|this
operator|.
name|currentSectorsRead
operator|=
name|currentSectorsRead
expr_stmt|;
name|this
operator|.
name|previousSectorsRead
operator|=
name|previousSectorsRead
expr_stmt|;
name|this
operator|.
name|currentSectorsWritten
operator|=
name|currentSectorsWritten
expr_stmt|;
name|this
operator|.
name|previousSectorsWritten
operator|=
name|previousSectorsWritten
expr_stmt|;
block|}
DECL|method|DeviceStats
specifier|public
name|DeviceStats
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|majorDeviceNumber
operator|=
name|in
operator|.
name|readVInt
argument_list|()
expr_stmt|;
name|minorDeviceNumber
operator|=
name|in
operator|.
name|readVInt
argument_list|()
expr_stmt|;
name|deviceName
operator|=
name|in
operator|.
name|readString
argument_list|()
expr_stmt|;
name|currentReadsCompleted
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|previousReadsCompleted
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|currentWritesCompleted
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|previousWritesCompleted
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|currentSectorsRead
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|previousSectorsRead
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|currentSectorsWritten
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|previousSectorsWritten
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVInt
argument_list|(
name|majorDeviceNumber
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVInt
argument_list|(
name|minorDeviceNumber
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeString
argument_list|(
name|deviceName
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|currentReadsCompleted
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|previousReadsCompleted
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|currentWritesCompleted
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|previousWritesCompleted
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|currentSectorsRead
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|previousSectorsRead
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|currentSectorsWritten
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|previousSectorsWritten
argument_list|)
expr_stmt|;
block|}
DECL|method|operations
specifier|public
name|long
name|operations
parameter_list|()
block|{
if|if
condition|(
name|previousReadsCompleted
operator|==
operator|-
literal|1
operator|||
name|previousWritesCompleted
operator|==
operator|-
literal|1
condition|)
return|return
operator|-
literal|1
return|;
return|return
operator|(
name|currentReadsCompleted
operator|-
name|previousReadsCompleted
operator|)
operator|+
operator|(
name|currentWritesCompleted
operator|-
name|previousWritesCompleted
operator|)
return|;
block|}
DECL|method|readOperations
specifier|public
name|long
name|readOperations
parameter_list|()
block|{
if|if
condition|(
name|previousReadsCompleted
operator|==
operator|-
literal|1
condition|)
return|return
operator|-
literal|1
return|;
return|return
operator|(
name|currentReadsCompleted
operator|-
name|previousReadsCompleted
operator|)
return|;
block|}
DECL|method|writeOperations
specifier|public
name|long
name|writeOperations
parameter_list|()
block|{
if|if
condition|(
name|previousWritesCompleted
operator|==
operator|-
literal|1
condition|)
return|return
operator|-
literal|1
return|;
return|return
operator|(
name|currentWritesCompleted
operator|-
name|previousWritesCompleted
operator|)
return|;
block|}
DECL|method|readKilobytes
specifier|public
name|long
name|readKilobytes
parameter_list|()
block|{
if|if
condition|(
name|previousSectorsRead
operator|==
operator|-
literal|1
condition|)
return|return
operator|-
literal|1
return|;
return|return
operator|(
name|currentSectorsRead
operator|-
name|previousSectorsRead
operator|)
operator|/
literal|2
return|;
block|}
DECL|method|writeKilobytes
specifier|public
name|long
name|writeKilobytes
parameter_list|()
block|{
if|if
condition|(
name|previousSectorsWritten
operator|==
operator|-
literal|1
condition|)
return|return
operator|-
literal|1
return|;
return|return
operator|(
name|currentSectorsWritten
operator|-
name|previousSectorsWritten
operator|)
operator|/
literal|2
return|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|field
argument_list|(
literal|"device_name"
argument_list|,
name|deviceName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|IoStats
operator|.
name|OPERATIONS
argument_list|,
name|operations
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|IoStats
operator|.
name|READ_OPERATIONS
argument_list|,
name|readOperations
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|IoStats
operator|.
name|WRITE_OPERATIONS
argument_list|,
name|writeOperations
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|IoStats
operator|.
name|READ_KILOBYTES
argument_list|,
name|readKilobytes
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|IoStats
operator|.
name|WRITE_KILOBYTES
argument_list|,
name|writeKilobytes
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
return|;
block|}
block|}
DECL|class|IoStats
specifier|public
specifier|static
class|class
name|IoStats
implements|implements
name|Writeable
implements|,
name|ToXContent
block|{
DECL|field|OPERATIONS
specifier|private
specifier|static
specifier|final
name|String
name|OPERATIONS
init|=
literal|"operations"
decl_stmt|;
DECL|field|READ_OPERATIONS
specifier|private
specifier|static
specifier|final
name|String
name|READ_OPERATIONS
init|=
literal|"read_operations"
decl_stmt|;
DECL|field|WRITE_OPERATIONS
specifier|private
specifier|static
specifier|final
name|String
name|WRITE_OPERATIONS
init|=
literal|"write_operations"
decl_stmt|;
DECL|field|READ_KILOBYTES
specifier|private
specifier|static
specifier|final
name|String
name|READ_KILOBYTES
init|=
literal|"read_kilobytes"
decl_stmt|;
DECL|field|WRITE_KILOBYTES
specifier|private
specifier|static
specifier|final
name|String
name|WRITE_KILOBYTES
init|=
literal|"write_kilobytes"
decl_stmt|;
DECL|field|devicesStats
specifier|final
name|DeviceStats
index|[]
name|devicesStats
decl_stmt|;
DECL|field|totalOperations
specifier|final
name|long
name|totalOperations
decl_stmt|;
DECL|field|totalReadOperations
specifier|final
name|long
name|totalReadOperations
decl_stmt|;
DECL|field|totalWriteOperations
specifier|final
name|long
name|totalWriteOperations
decl_stmt|;
DECL|field|totalReadKilobytes
specifier|final
name|long
name|totalReadKilobytes
decl_stmt|;
DECL|field|totalWriteKilobytes
specifier|final
name|long
name|totalWriteKilobytes
decl_stmt|;
DECL|method|IoStats
specifier|public
name|IoStats
parameter_list|(
specifier|final
name|DeviceStats
index|[]
name|devicesStats
parameter_list|)
block|{
name|this
operator|.
name|devicesStats
operator|=
name|devicesStats
expr_stmt|;
name|long
name|totalOperations
init|=
literal|0
decl_stmt|;
name|long
name|totalReadOperations
init|=
literal|0
decl_stmt|;
name|long
name|totalWriteOperations
init|=
literal|0
decl_stmt|;
name|long
name|totalReadKilobytes
init|=
literal|0
decl_stmt|;
name|long
name|totalWriteKilobytes
init|=
literal|0
decl_stmt|;
for|for
control|(
name|DeviceStats
name|deviceStats
range|:
name|devicesStats
control|)
block|{
name|totalOperations
operator|+=
name|deviceStats
operator|.
name|operations
argument_list|()
operator|!=
operator|-
literal|1
condition|?
name|deviceStats
operator|.
name|operations
argument_list|()
else|:
literal|0
expr_stmt|;
name|totalReadOperations
operator|+=
name|deviceStats
operator|.
name|readOperations
argument_list|()
operator|!=
operator|-
literal|1
condition|?
name|deviceStats
operator|.
name|readOperations
argument_list|()
else|:
literal|0
expr_stmt|;
name|totalWriteOperations
operator|+=
name|deviceStats
operator|.
name|writeOperations
argument_list|()
operator|!=
operator|-
literal|1
condition|?
name|deviceStats
operator|.
name|writeOperations
argument_list|()
else|:
literal|0
expr_stmt|;
name|totalReadKilobytes
operator|+=
name|deviceStats
operator|.
name|readKilobytes
argument_list|()
operator|!=
operator|-
literal|1
condition|?
name|deviceStats
operator|.
name|readKilobytes
argument_list|()
else|:
literal|0
expr_stmt|;
name|totalWriteKilobytes
operator|+=
name|deviceStats
operator|.
name|writeKilobytes
argument_list|()
operator|!=
operator|-
literal|1
condition|?
name|deviceStats
operator|.
name|writeKilobytes
argument_list|()
else|:
literal|0
expr_stmt|;
block|}
name|this
operator|.
name|totalOperations
operator|=
name|totalOperations
expr_stmt|;
name|this
operator|.
name|totalReadOperations
operator|=
name|totalReadOperations
expr_stmt|;
name|this
operator|.
name|totalWriteOperations
operator|=
name|totalWriteOperations
expr_stmt|;
name|this
operator|.
name|totalReadKilobytes
operator|=
name|totalReadKilobytes
expr_stmt|;
name|this
operator|.
name|totalWriteKilobytes
operator|=
name|totalWriteKilobytes
expr_stmt|;
block|}
DECL|method|IoStats
specifier|public
name|IoStats
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|int
name|length
init|=
name|in
operator|.
name|readVInt
argument_list|()
decl_stmt|;
specifier|final
name|DeviceStats
index|[]
name|devicesStats
init|=
operator|new
name|DeviceStats
index|[
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|length
condition|;
name|i
operator|++
control|)
block|{
name|devicesStats
index|[
name|i
index|]
operator|=
operator|new
name|DeviceStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|devicesStats
operator|=
name|devicesStats
expr_stmt|;
name|this
operator|.
name|totalOperations
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|this
operator|.
name|totalReadOperations
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|this
operator|.
name|totalWriteOperations
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|this
operator|.
name|totalReadKilobytes
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|this
operator|.
name|totalWriteKilobytes
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVInt
argument_list|(
name|devicesStats
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|devicesStats
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|devicesStats
index|[
name|i
index|]
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|writeLong
argument_list|(
name|totalOperations
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|totalReadOperations
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|totalWriteOperations
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|totalReadKilobytes
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|totalWriteKilobytes
argument_list|)
expr_stmt|;
block|}
DECL|method|getDevicesStats
specifier|public
name|DeviceStats
index|[]
name|getDevicesStats
parameter_list|()
block|{
return|return
name|devicesStats
return|;
block|}
DECL|method|getTotalOperations
specifier|public
name|long
name|getTotalOperations
parameter_list|()
block|{
return|return
name|totalOperations
return|;
block|}
DECL|method|getTotalReadOperations
specifier|public
name|long
name|getTotalReadOperations
parameter_list|()
block|{
return|return
name|totalReadOperations
return|;
block|}
DECL|method|getTotalWriteOperations
specifier|public
name|long
name|getTotalWriteOperations
parameter_list|()
block|{
return|return
name|totalWriteOperations
return|;
block|}
DECL|method|getTotalReadKilobytes
specifier|public
name|long
name|getTotalReadKilobytes
parameter_list|()
block|{
return|return
name|totalReadKilobytes
return|;
block|}
DECL|method|getTotalWriteKilobytes
specifier|public
name|long
name|getTotalWriteKilobytes
parameter_list|()
block|{
return|return
name|totalWriteKilobytes
return|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|devicesStats
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|builder
operator|.
name|startArray
argument_list|(
literal|"devices"
argument_list|)
expr_stmt|;
for|for
control|(
name|DeviceStats
name|deviceStats
range|:
name|devicesStats
control|)
block|{
name|builder
operator|.
name|startObject
argument_list|()
expr_stmt|;
name|deviceStats
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
name|builder
operator|.
name|endArray
argument_list|()
expr_stmt|;
name|builder
operator|.
name|startObject
argument_list|(
literal|"total"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|OPERATIONS
argument_list|,
name|totalOperations
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|READ_OPERATIONS
argument_list|,
name|totalReadOperations
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|WRITE_OPERATIONS
argument_list|,
name|totalWriteOperations
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|READ_KILOBYTES
argument_list|,
name|totalReadKilobytes
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|WRITE_KILOBYTES
argument_list|,
name|totalWriteKilobytes
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
return|return
name|builder
return|;
block|}
block|}
DECL|field|timestamp
specifier|private
specifier|final
name|long
name|timestamp
decl_stmt|;
DECL|field|paths
specifier|private
specifier|final
name|Path
index|[]
name|paths
decl_stmt|;
DECL|field|ioStats
specifier|private
specifier|final
name|IoStats
name|ioStats
decl_stmt|;
DECL|field|total
specifier|private
specifier|final
name|Path
name|total
decl_stmt|;
DECL|field|leastDiskEstimate
specifier|private
specifier|final
name|DiskUsage
name|leastDiskEstimate
decl_stmt|;
DECL|field|mostDiskEstimate
specifier|private
specifier|final
name|DiskUsage
name|mostDiskEstimate
decl_stmt|;
DECL|method|FsInfo
specifier|public
name|FsInfo
parameter_list|(
name|long
name|timestamp
parameter_list|,
name|IoStats
name|ioStats
parameter_list|,
name|Path
index|[]
name|paths
parameter_list|)
block|{
name|this
argument_list|(
name|timestamp
argument_list|,
name|ioStats
argument_list|,
name|paths
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|FsInfo
specifier|public
name|FsInfo
parameter_list|(
name|long
name|timestamp
parameter_list|,
name|IoStats
name|ioStats
parameter_list|,
name|Path
index|[]
name|paths
parameter_list|,
annotation|@
name|Nullable
name|DiskUsage
name|leastUsage
parameter_list|,
annotation|@
name|Nullable
name|DiskUsage
name|mostUsage
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
name|this
operator|.
name|ioStats
operator|=
name|ioStats
expr_stmt|;
name|this
operator|.
name|paths
operator|=
name|paths
expr_stmt|;
name|this
operator|.
name|total
operator|=
name|total
argument_list|()
expr_stmt|;
name|this
operator|.
name|leastDiskEstimate
operator|=
name|leastUsage
expr_stmt|;
name|this
operator|.
name|mostDiskEstimate
operator|=
name|mostUsage
expr_stmt|;
block|}
comment|/**      * Read from a stream.      */
DECL|method|FsInfo
specifier|public
name|FsInfo
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|timestamp
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|ioStats
operator|=
name|in
operator|.
name|readOptionalWriteable
argument_list|(
name|IoStats
operator|::
operator|new
argument_list|)
expr_stmt|;
name|paths
operator|=
operator|new
name|Path
index|[
name|in
operator|.
name|readVInt
argument_list|()
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|paths
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|paths
index|[
name|i
index|]
operator|=
operator|new
name|Path
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|total
operator|=
name|total
argument_list|()
expr_stmt|;
if|if
condition|(
name|in
operator|.
name|getVersion
argument_list|()
operator|.
name|onOrAfter
argument_list|(
name|Version
operator|.
name|V_6_0_0_alpha1_UNRELEASED
argument_list|)
condition|)
block|{
name|this
operator|.
name|leastDiskEstimate
operator|=
name|in
operator|.
name|readOptionalWriteable
argument_list|(
name|DiskUsage
operator|::
operator|new
argument_list|)
expr_stmt|;
name|this
operator|.
name|mostDiskEstimate
operator|=
name|in
operator|.
name|readOptionalWriteable
argument_list|(
name|DiskUsage
operator|::
operator|new
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|leastDiskEstimate
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|mostDiskEstimate
operator|=
literal|null
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVLong
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeOptionalWriteable
argument_list|(
name|ioStats
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVInt
argument_list|(
name|paths
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|Path
name|path
range|:
name|paths
control|)
block|{
name|path
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|out
operator|.
name|getVersion
argument_list|()
operator|.
name|onOrAfter
argument_list|(
name|Version
operator|.
name|V_6_0_0_alpha1_UNRELEASED
argument_list|)
condition|)
block|{
name|out
operator|.
name|writeOptionalWriteable
argument_list|(
name|this
operator|.
name|leastDiskEstimate
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeOptionalWriteable
argument_list|(
name|this
operator|.
name|mostDiskEstimate
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getTotal
specifier|public
name|Path
name|getTotal
parameter_list|()
block|{
return|return
name|total
return|;
block|}
annotation|@
name|Nullable
DECL|method|getLeastDiskEstimate
specifier|public
name|DiskUsage
name|getLeastDiskEstimate
parameter_list|()
block|{
return|return
name|this
operator|.
name|leastDiskEstimate
return|;
block|}
annotation|@
name|Nullable
DECL|method|getMostDiskEstimate
specifier|public
name|DiskUsage
name|getMostDiskEstimate
parameter_list|()
block|{
return|return
name|this
operator|.
name|mostDiskEstimate
return|;
block|}
DECL|method|total
specifier|private
name|Path
name|total
parameter_list|()
block|{
name|Path
name|res
init|=
operator|new
name|Path
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|seenDevices
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|paths
operator|.
name|length
argument_list|)
decl_stmt|;
for|for
control|(
name|Path
name|subPath
range|:
name|paths
control|)
block|{
if|if
condition|(
name|subPath
operator|.
name|path
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|seenDevices
operator|.
name|add
argument_list|(
name|subPath
operator|.
name|path
argument_list|)
condition|)
block|{
continue|continue;
comment|// already added numbers for this device;
block|}
block|}
name|res
operator|.
name|add
argument_list|(
name|subPath
argument_list|)
expr_stmt|;
block|}
return|return
name|res
return|;
block|}
DECL|method|getTimestamp
specifier|public
name|long
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
DECL|method|getIoStats
specifier|public
name|IoStats
name|getIoStats
parameter_list|()
block|{
return|return
name|ioStats
return|;
block|}
annotation|@
name|Override
DECL|method|iterator
specifier|public
name|Iterator
argument_list|<
name|Path
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|stream
argument_list|(
name|paths
argument_list|)
operator|.
name|iterator
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|Fields
operator|.
name|FS
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|TIMESTAMP
argument_list|,
name|timestamp
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|TOTAL
argument_list|)
expr_stmt|;
name|total
argument_list|()
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
if|if
condition|(
name|leastDiskEstimate
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|Fields
operator|.
name|LEAST_ESTIMATE
argument_list|)
expr_stmt|;
block|{
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|PATH
argument_list|,
name|leastDiskEstimate
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|byteSizeField
argument_list|(
name|Fields
operator|.
name|TOTAL_IN_BYTES
argument_list|,
name|Fields
operator|.
name|TOTAL
argument_list|,
name|leastDiskEstimate
operator|.
name|getTotalBytes
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|byteSizeField
argument_list|(
name|Fields
operator|.
name|AVAILABLE_IN_BYTES
argument_list|,
name|Fields
operator|.
name|AVAILABLE
argument_list|,
name|leastDiskEstimate
operator|.
name|getFreeBytes
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|USAGE_PERCENTAGE
argument_list|,
name|leastDiskEstimate
operator|.
name|getUsedDiskAsPercentage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|mostDiskEstimate
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|Fields
operator|.
name|MOST_ESTIMATE
argument_list|)
expr_stmt|;
block|{
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|PATH
argument_list|,
name|mostDiskEstimate
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|byteSizeField
argument_list|(
name|Fields
operator|.
name|TOTAL_IN_BYTES
argument_list|,
name|Fields
operator|.
name|TOTAL
argument_list|,
name|mostDiskEstimate
operator|.
name|getTotalBytes
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|byteSizeField
argument_list|(
name|Fields
operator|.
name|AVAILABLE_IN_BYTES
argument_list|,
name|Fields
operator|.
name|AVAILABLE
argument_list|,
name|mostDiskEstimate
operator|.
name|getFreeBytes
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
name|Fields
operator|.
name|USAGE_PERCENTAGE
argument_list|,
name|mostDiskEstimate
operator|.
name|getUsedDiskAsPercentage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
name|builder
operator|.
name|startArray
argument_list|(
name|Fields
operator|.
name|DATA
argument_list|)
expr_stmt|;
for|for
control|(
name|Path
name|path
range|:
name|paths
control|)
block|{
name|path
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endArray
argument_list|()
expr_stmt|;
if|if
condition|(
name|ioStats
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|Fields
operator|.
name|IO_STATS
argument_list|)
expr_stmt|;
name|ioStats
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|builder
return|;
block|}
DECL|class|Fields
specifier|static
specifier|final
class|class
name|Fields
block|{
DECL|field|FS
specifier|static
specifier|final
name|String
name|FS
init|=
literal|"fs"
decl_stmt|;
DECL|field|TIMESTAMP
specifier|static
specifier|final
name|String
name|TIMESTAMP
init|=
literal|"timestamp"
decl_stmt|;
DECL|field|DATA
specifier|static
specifier|final
name|String
name|DATA
init|=
literal|"data"
decl_stmt|;
DECL|field|TOTAL
specifier|static
specifier|final
name|String
name|TOTAL
init|=
literal|"total"
decl_stmt|;
DECL|field|TOTAL_IN_BYTES
specifier|static
specifier|final
name|String
name|TOTAL_IN_BYTES
init|=
literal|"total_in_bytes"
decl_stmt|;
DECL|field|IO_STATS
specifier|static
specifier|final
name|String
name|IO_STATS
init|=
literal|"io_stats"
decl_stmt|;
DECL|field|LEAST_ESTIMATE
specifier|static
specifier|final
name|String
name|LEAST_ESTIMATE
init|=
literal|"least_usage_estimate"
decl_stmt|;
DECL|field|MOST_ESTIMATE
specifier|static
specifier|final
name|String
name|MOST_ESTIMATE
init|=
literal|"most_usage_estimate"
decl_stmt|;
DECL|field|USAGE_PERCENTAGE
specifier|static
specifier|final
name|String
name|USAGE_PERCENTAGE
init|=
literal|"used_disk_percent"
decl_stmt|;
DECL|field|AVAILABLE
specifier|static
specifier|final
name|String
name|AVAILABLE
init|=
literal|"available"
decl_stmt|;
DECL|field|AVAILABLE_IN_BYTES
specifier|static
specifier|final
name|String
name|AVAILABLE_IN_BYTES
init|=
literal|"available_in_bytes"
decl_stmt|;
DECL|field|PATH
specifier|static
specifier|final
name|String
name|PATH
init|=
literal|"path"
decl_stmt|;
block|}
block|}
end_class

end_unit

