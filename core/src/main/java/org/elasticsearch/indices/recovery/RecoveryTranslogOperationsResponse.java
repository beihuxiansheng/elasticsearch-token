begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.indices.recovery
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|recovery
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|seqno
operator|.
name|SequenceNumbersService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|FutureTransportResponseHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportResponseHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|RecoveryTranslogOperationsResponse
specifier|public
class|class
name|RecoveryTranslogOperationsResponse
extends|extends
name|TransportResponse
block|{
DECL|field|localCheckpoint
name|long
name|localCheckpoint
decl_stmt|;
DECL|method|RecoveryTranslogOperationsResponse
name|RecoveryTranslogOperationsResponse
parameter_list|()
block|{      }
DECL|method|RecoveryTranslogOperationsResponse
name|RecoveryTranslogOperationsResponse
parameter_list|(
specifier|final
name|long
name|localCheckpoint
parameter_list|)
block|{
name|this
operator|.
name|localCheckpoint
operator|=
name|localCheckpoint
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
specifier|final
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
comment|// before 6.0.0 we responded with an empty response so we have to maintain that
if|if
condition|(
name|out
operator|.
name|getVersion
argument_list|()
operator|.
name|onOrAfter
argument_list|(
name|Version
operator|.
name|V_6_0_0_alpha1
argument_list|)
condition|)
block|{
name|out
operator|.
name|writeZLong
argument_list|(
name|localCheckpoint
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
specifier|final
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
comment|// before 6.0.0 we received an empty response so we have to maintain that
if|if
condition|(
name|in
operator|.
name|getVersion
argument_list|()
operator|.
name|onOrAfter
argument_list|(
name|Version
operator|.
name|V_6_0_0_alpha1
argument_list|)
condition|)
block|{
name|localCheckpoint
operator|=
name|in
operator|.
name|readZLong
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|localCheckpoint
operator|=
name|SequenceNumbersService
operator|.
name|UNASSIGNED_SEQ_NO
expr_stmt|;
block|}
block|}
DECL|field|HANDLER
specifier|static
name|TransportResponseHandler
argument_list|<
name|RecoveryTranslogOperationsResponse
argument_list|>
name|HANDLER
init|=
operator|new
name|FutureTransportResponseHandler
argument_list|<
name|RecoveryTranslogOperationsResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|RecoveryTranslogOperationsResponse
name|newInstance
parameter_list|()
block|{
return|return
operator|new
name|RecoveryTranslogOperationsResponse
argument_list|()
return|;
block|}
block|}
decl_stmt|;
block|}
end_class

end_unit

