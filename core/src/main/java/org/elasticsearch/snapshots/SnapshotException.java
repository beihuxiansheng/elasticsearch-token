begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.snapshots
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|snapshots
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Generic snapshot exception  */
end_comment

begin_class
DECL|class|SnapshotException
specifier|public
class|class
name|SnapshotException
extends|extends
name|ElasticsearchException
block|{
annotation|@
name|Nullable
DECL|field|repositoryName
specifier|private
specifier|final
name|String
name|repositoryName
decl_stmt|;
annotation|@
name|Nullable
DECL|field|snapshotName
specifier|private
specifier|final
name|String
name|snapshotName
decl_stmt|;
DECL|method|SnapshotException
specifier|public
name|SnapshotException
parameter_list|(
specifier|final
name|Snapshot
name|snapshot
parameter_list|,
specifier|final
name|String
name|msg
parameter_list|)
block|{
name|this
argument_list|(
name|snapshot
argument_list|,
name|msg
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|SnapshotException
specifier|public
name|SnapshotException
parameter_list|(
specifier|final
name|Snapshot
name|snapshot
parameter_list|,
specifier|final
name|String
name|msg
parameter_list|,
specifier|final
name|Throwable
name|cause
parameter_list|)
block|{
name|super
argument_list|(
literal|"["
operator|+
operator|(
name|snapshot
operator|==
literal|null
condition|?
literal|"_na"
else|:
name|snapshot
operator|)
operator|+
literal|"] "
operator|+
name|msg
argument_list|,
name|cause
argument_list|)
expr_stmt|;
if|if
condition|(
name|snapshot
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|repositoryName
operator|=
name|snapshot
operator|.
name|getRepository
argument_list|()
expr_stmt|;
name|this
operator|.
name|snapshotName
operator|=
name|snapshot
operator|.
name|getSnapshotId
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|repositoryName
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|snapshotName
operator|=
literal|null
expr_stmt|;
block|}
block|}
DECL|method|SnapshotException
specifier|public
name|SnapshotException
parameter_list|(
specifier|final
name|String
name|repositoryName
parameter_list|,
specifier|final
name|SnapshotId
name|snapshotId
parameter_list|,
specifier|final
name|String
name|msg
parameter_list|)
block|{
name|this
argument_list|(
name|repositoryName
argument_list|,
name|snapshotId
argument_list|,
name|msg
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|SnapshotException
specifier|public
name|SnapshotException
parameter_list|(
specifier|final
name|String
name|repositoryName
parameter_list|,
specifier|final
name|SnapshotId
name|snapshotId
parameter_list|,
specifier|final
name|String
name|msg
parameter_list|,
specifier|final
name|Throwable
name|cause
parameter_list|)
block|{
name|super
argument_list|(
literal|"["
operator|+
name|repositoryName
operator|+
literal|":"
operator|+
name|snapshotId
operator|+
literal|"] "
operator|+
name|msg
argument_list|,
name|cause
argument_list|)
expr_stmt|;
name|this
operator|.
name|repositoryName
operator|=
name|repositoryName
expr_stmt|;
name|this
operator|.
name|snapshotName
operator|=
name|snapshotId
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
DECL|method|SnapshotException
specifier|public
name|SnapshotException
parameter_list|(
specifier|final
name|String
name|repositoryName
parameter_list|,
specifier|final
name|String
name|snapshotName
parameter_list|,
specifier|final
name|String
name|msg
parameter_list|)
block|{
name|this
argument_list|(
name|repositoryName
argument_list|,
name|snapshotName
argument_list|,
name|msg
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|SnapshotException
specifier|public
name|SnapshotException
parameter_list|(
specifier|final
name|String
name|repositoryName
parameter_list|,
specifier|final
name|String
name|snapshotName
parameter_list|,
specifier|final
name|String
name|msg
parameter_list|,
specifier|final
name|Throwable
name|cause
parameter_list|)
block|{
name|super
argument_list|(
literal|"["
operator|+
name|repositoryName
operator|+
literal|":"
operator|+
name|snapshotName
operator|+
literal|"]"
operator|+
name|msg
argument_list|,
name|cause
argument_list|)
expr_stmt|;
name|this
operator|.
name|repositoryName
operator|=
name|repositoryName
expr_stmt|;
name|this
operator|.
name|snapshotName
operator|=
name|snapshotName
expr_stmt|;
block|}
DECL|method|SnapshotException
specifier|public
name|SnapshotException
parameter_list|(
specifier|final
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|repositoryName
operator|=
name|in
operator|.
name|readOptionalString
argument_list|()
expr_stmt|;
name|snapshotName
operator|=
name|in
operator|.
name|readOptionalString
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeOptionalString
argument_list|(
name|repositoryName
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeOptionalString
argument_list|(
name|snapshotName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Nullable
DECL|method|getRepositoryName
specifier|public
name|String
name|getRepositoryName
parameter_list|()
block|{
return|return
name|repositoryName
return|;
block|}
annotation|@
name|Nullable
DECL|method|getSnapshotName
specifier|public
name|String
name|getSnapshotName
parameter_list|()
block|{
return|return
name|snapshotName
return|;
block|}
block|}
end_class

end_unit

