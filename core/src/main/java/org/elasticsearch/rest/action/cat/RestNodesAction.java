begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.rest.action.cat
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|cat
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|info
operator|.
name|NodeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|info
operator|.
name|NodesInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|info
operator|.
name|NodesInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|stats
operator|.
name|NodeStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|stats
operator|.
name|NodesStatsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|stats
operator|.
name|NodesStatsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|state
operator|.
name|ClusterStateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|state
operator|.
name|ClusterStateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|network
operator|.
name|NetworkAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|transport
operator|.
name|InetSocketTransportAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|transport
operator|.
name|TransportAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|http
operator|.
name|HttpInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|query
operator|.
name|QueryCacheStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|request
operator|.
name|RequestCacheStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|SegmentsStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|FieldDataStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|flush
operator|.
name|FlushStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|get
operator|.
name|GetStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|merge
operator|.
name|MergeStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|percolator
operator|.
name|PercolatorQueryCacheStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|refresh
operator|.
name|RefreshStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|search
operator|.
name|stats
operator|.
name|SearchStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|IndexingStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|NodeIndicesStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|fs
operator|.
name|FsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|jvm
operator|.
name|JvmInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|jvm
operator|.
name|JvmStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|os
operator|.
name|OsStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|process
operator|.
name|ProcessStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|support
operator|.
name|RestActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|support
operator|.
name|RestResponseListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|support
operator|.
name|RestTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|CompletionStats
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestRequest
operator|.
name|Method
operator|.
name|GET
import|;
end_import

begin_class
DECL|class|RestNodesAction
specifier|public
class|class
name|RestNodesAction
extends|extends
name|AbstractCatAction
block|{
annotation|@
name|Inject
DECL|method|RestNodesAction
specifier|public
name|RestNodesAction
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|RestController
name|controller
parameter_list|,
name|Client
name|client
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|,
name|controller
argument_list|,
name|client
argument_list|)
expr_stmt|;
name|controller
operator|.
name|registerHandler
argument_list|(
name|GET
argument_list|,
literal|"/_cat/nodes"
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|documentation
specifier|protected
name|void
name|documentation
parameter_list|(
name|StringBuilder
name|sb
parameter_list|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"/_cat/nodes\n"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doRequest
specifier|public
name|void
name|doRequest
parameter_list|(
specifier|final
name|RestRequest
name|request
parameter_list|,
specifier|final
name|RestChannel
name|channel
parameter_list|,
specifier|final
name|Client
name|client
parameter_list|)
block|{
specifier|final
name|ClusterStateRequest
name|clusterStateRequest
init|=
operator|new
name|ClusterStateRequest
argument_list|()
decl_stmt|;
name|clusterStateRequest
operator|.
name|clear
argument_list|()
operator|.
name|nodes
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|clusterStateRequest
operator|.
name|local
argument_list|(
name|request
operator|.
name|paramAsBoolean
argument_list|(
literal|"local"
argument_list|,
name|clusterStateRequest
operator|.
name|local
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|clusterStateRequest
operator|.
name|masterNodeTimeout
argument_list|(
name|request
operator|.
name|paramAsTime
argument_list|(
literal|"master_timeout"
argument_list|,
name|clusterStateRequest
operator|.
name|masterNodeTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|state
argument_list|(
name|clusterStateRequest
argument_list|,
operator|new
name|RestActionListener
argument_list|<
name|ClusterStateResponse
argument_list|>
argument_list|(
name|channel
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|processResponse
parameter_list|(
specifier|final
name|ClusterStateResponse
name|clusterStateResponse
parameter_list|)
block|{
name|NodesInfoRequest
name|nodesInfoRequest
init|=
operator|new
name|NodesInfoRequest
argument_list|()
decl_stmt|;
name|nodesInfoRequest
operator|.
name|clear
argument_list|()
operator|.
name|jvm
argument_list|(
literal|true
argument_list|)
operator|.
name|os
argument_list|(
literal|true
argument_list|)
operator|.
name|process
argument_list|(
literal|true
argument_list|)
operator|.
name|http
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|nodesInfo
argument_list|(
name|nodesInfoRequest
argument_list|,
operator|new
name|RestActionListener
argument_list|<
name|NodesInfoResponse
argument_list|>
argument_list|(
name|channel
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|processResponse
parameter_list|(
specifier|final
name|NodesInfoResponse
name|nodesInfoResponse
parameter_list|)
block|{
name|NodesStatsRequest
name|nodesStatsRequest
init|=
operator|new
name|NodesStatsRequest
argument_list|()
decl_stmt|;
name|nodesStatsRequest
operator|.
name|clear
argument_list|()
operator|.
name|jvm
argument_list|(
literal|true
argument_list|)
operator|.
name|os
argument_list|(
literal|true
argument_list|)
operator|.
name|fs
argument_list|(
literal|true
argument_list|)
operator|.
name|indices
argument_list|(
literal|true
argument_list|)
operator|.
name|process
argument_list|(
literal|true
argument_list|)
operator|.
name|script
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|nodesStats
argument_list|(
name|nodesStatsRequest
argument_list|,
operator|new
name|RestResponseListener
argument_list|<
name|NodesStatsResponse
argument_list|>
argument_list|(
name|channel
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|RestResponse
name|buildResponse
parameter_list|(
name|NodesStatsResponse
name|nodesStatsResponse
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|RestTable
operator|.
name|buildResponse
argument_list|(
name|buildTable
argument_list|(
name|request
argument_list|,
name|clusterStateResponse
argument_list|,
name|nodesInfoResponse
argument_list|,
name|nodesStatsResponse
argument_list|)
argument_list|,
name|channel
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getTableWithHeader
specifier|protected
name|Table
name|getTableWithHeader
parameter_list|(
specifier|final
name|RestRequest
name|request
parameter_list|)
block|{
name|Table
name|table
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|table
operator|.
name|startHeaders
argument_list|()
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"id"
argument_list|,
literal|"default:false;alias:id,nodeId;desc:unique node id"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"pid"
argument_list|,
literal|"default:false;alias:p;desc:process id"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"ip"
argument_list|,
literal|"alias:i;desc:ip address"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"port"
argument_list|,
literal|"default:false;alias:po;desc:bound transport port"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"http_address"
argument_list|,
literal|"default:false;alias:http;desc:bound http address"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"version"
argument_list|,
literal|"default:false;alias:v;desc:es version"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"build"
argument_list|,
literal|"default:false;alias:b;desc:es build hash"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"jdk"
argument_list|,
literal|"default:false;alias:j;desc:jdk version"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"disk.avail"
argument_list|,
literal|"default:false;alias:d,disk,diskAvail;text-align:right;desc:available disk space"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"heap.current"
argument_list|,
literal|"default:false;alias:hc,heapCurrent;text-align:right;desc:used heap"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"heap.percent"
argument_list|,
literal|"alias:hp,heapPercent;text-align:right;desc:used heap ratio"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"heap.max"
argument_list|,
literal|"default:false;alias:hm,heapMax;text-align:right;desc:max configured heap"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"ram.current"
argument_list|,
literal|"default:false;alias:rc,ramCurrent;text-align:right;desc:used machine memory"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"ram.percent"
argument_list|,
literal|"alias:rp,ramPercent;text-align:right;desc:used machine memory ratio"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"ram.max"
argument_list|,
literal|"default:false;alias:rm,ramMax;text-align:right;desc:total machine memory"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"file_desc.current"
argument_list|,
literal|"default:false;alias:fdc,fileDescriptorCurrent;text-align:right;desc:used file descriptors"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"file_desc.percent"
argument_list|,
literal|"default:false;alias:fdp,fileDescriptorPercent;text-align:right;desc:used file descriptor ratio"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"file_desc.max"
argument_list|,
literal|"default:false;alias:fdm,fileDescriptorMax;text-align:right;desc:max file descriptors"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"cpu"
argument_list|,
literal|"alias:cpu;text-align:right;desc:recent cpu usage"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"load_1m"
argument_list|,
literal|"alias:l;text-align:right;desc:1m load avg"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"load_5m"
argument_list|,
literal|"alias:l;text-align:right;desc:5m load avg"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"load_15m"
argument_list|,
literal|"alias:l;text-align:right;desc:15m load avg"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"uptime"
argument_list|,
literal|"default:false;alias:u;text-align:right;desc:node uptime"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"node.role"
argument_list|,
literal|"alias:r,role,nodeRole;desc:m:master eligible node, d:data node, i:ingest node, -:coordinating node only"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"master"
argument_list|,
literal|"alias:m;desc:*:current master"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"name"
argument_list|,
literal|"alias:n;desc:node name"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"completion.size"
argument_list|,
literal|"alias:cs,completionSize;default:false;text-align:right;desc:size of completion"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"fielddata.memory_size"
argument_list|,
literal|"alias:fm,fielddataMemory;default:false;text-align:right;desc:used fielddata cache"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"fielddata.evictions"
argument_list|,
literal|"alias:fe,fielddataEvictions;default:false;text-align:right;desc:fielddata evictions"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"query_cache.memory_size"
argument_list|,
literal|"alias:qcm,queryCacheMemory;default:false;text-align:right;desc:used query cache"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"query_cache.evictions"
argument_list|,
literal|"alias:qce,queryCacheEvictions;default:false;text-align:right;desc:query cache evictions"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"request_cache.memory_size"
argument_list|,
literal|"alias:rcm,requestCacheMemory;default:false;text-align:right;desc:used request cache"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"request_cache.evictions"
argument_list|,
literal|"alias:rce,requestCacheEvictions;default:false;text-align:right;desc:request cache evictions"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"request_cache.hit_count"
argument_list|,
literal|"alias:rchc,requestCacheHitCount;default:false;text-align:right;desc:request cache hit counts"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"request_cache.miss_count"
argument_list|,
literal|"alias:rcmc,requestCacheMissCount;default:false;text-align:right;desc:request cache miss counts"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"flush.total"
argument_list|,
literal|"alias:ft,flushTotal;default:false;text-align:right;desc:number of flushes"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"flush.total_time"
argument_list|,
literal|"alias:ftt,flushTotalTime;default:false;text-align:right;desc:time spent in flush"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.current"
argument_list|,
literal|"alias:gc,getCurrent;default:false;text-align:right;desc:number of current get ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.time"
argument_list|,
literal|"alias:gti,getTime;default:false;text-align:right;desc:time spent in get"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.total"
argument_list|,
literal|"alias:gto,getTotal;default:false;text-align:right;desc:number of get ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.exists_time"
argument_list|,
literal|"alias:geti,getExistsTime;default:false;text-align:right;desc:time spent in successful gets"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.exists_total"
argument_list|,
literal|"alias:geto,getExistsTotal;default:false;text-align:right;desc:number of successful gets"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.missing_time"
argument_list|,
literal|"alias:gmti,getMissingTime;default:false;text-align:right;desc:time spent in failed gets"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"get.missing_total"
argument_list|,
literal|"alias:gmto,getMissingTotal;default:false;text-align:right;desc:number of failed gets"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.delete_current"
argument_list|,
literal|"alias:idc,indexingDeleteCurrent;default:false;text-align:right;desc:number of current deletions"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.delete_time"
argument_list|,
literal|"alias:idti,indexingDeleteTime;default:false;text-align:right;desc:time spent in deletions"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.delete_total"
argument_list|,
literal|"alias:idto,indexingDeleteTotal;default:false;text-align:right;desc:number of delete ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.index_current"
argument_list|,
literal|"alias:iic,indexingIndexCurrent;default:false;text-align:right;desc:number of current indexing ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.index_time"
argument_list|,
literal|"alias:iiti,indexingIndexTime;default:false;text-align:right;desc:time spent in indexing"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.index_total"
argument_list|,
literal|"alias:iito,indexingIndexTotal;default:false;text-align:right;desc:number of indexing ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"indexing.index_failed"
argument_list|,
literal|"alias:iif,indexingIndexFailed;default:false;text-align:right;desc:number of failed indexing ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.current"
argument_list|,
literal|"alias:mc,mergesCurrent;default:false;text-align:right;desc:number of current merges"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.current_docs"
argument_list|,
literal|"alias:mcd,mergesCurrentDocs;default:false;text-align:right;desc:number of current merging docs"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.current_size"
argument_list|,
literal|"alias:mcs,mergesCurrentSize;default:false;text-align:right;desc:size of current merges"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.total"
argument_list|,
literal|"alias:mt,mergesTotal;default:false;text-align:right;desc:number of completed merge ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.total_docs"
argument_list|,
literal|"alias:mtd,mergesTotalDocs;default:false;text-align:right;desc:docs merged"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.total_size"
argument_list|,
literal|"alias:mts,mergesTotalSize;default:false;text-align:right;desc:size merged"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"merges.total_time"
argument_list|,
literal|"alias:mtt,mergesTotalTime;default:false;text-align:right;desc:time spent in merges"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"percolate.queries"
argument_list|,
literal|"alias:pq,percolateQueries;default:false;text-align:right;desc:number of registered percolation queries"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"refresh.total"
argument_list|,
literal|"alias:rto,refreshTotal;default:false;text-align:right;desc:total refreshes"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"refresh.time"
argument_list|,
literal|"alias:rti,refreshTime;default:false;text-align:right;desc:time spent in refreshes"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"script.compilations"
argument_list|,
literal|"alias:scrcc,scriptCompilations;default:false;text-align:right;desc:script compilations"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"script.cache_evictions"
argument_list|,
literal|"alias:scrce,scriptCacheEvictions;default:false;text-align:right;desc:script cache evictions"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.fetch_current"
argument_list|,
literal|"alias:sfc,searchFetchCurrent;default:false;text-align:right;desc:current fetch phase ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.fetch_time"
argument_list|,
literal|"alias:sfti,searchFetchTime;default:false;text-align:right;desc:time spent in fetch phase"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.fetch_total"
argument_list|,
literal|"alias:sfto,searchFetchTotal;default:false;text-align:right;desc:total fetch ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.open_contexts"
argument_list|,
literal|"alias:so,searchOpenContexts;default:false;text-align:right;desc:open search contexts"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.query_current"
argument_list|,
literal|"alias:sqc,searchQueryCurrent;default:false;text-align:right;desc:current query phase ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.query_time"
argument_list|,
literal|"alias:sqti,searchQueryTime;default:false;text-align:right;desc:time spent in query phase"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.query_total"
argument_list|,
literal|"alias:sqto,searchQueryTotal;default:false;text-align:right;desc:total query phase ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.scroll_current"
argument_list|,
literal|"alias:scc,searchScrollCurrent;default:false;text-align:right;desc:open scroll contexts"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.scroll_time"
argument_list|,
literal|"alias:scti,searchScrollTime;default:false;text-align:right;desc:time scroll contexts held open"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"search.scroll_total"
argument_list|,
literal|"alias:scto,searchScrollTotal;default:false;text-align:right;desc:completed scroll contexts"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"segments.count"
argument_list|,
literal|"alias:sc,segmentsCount;default:false;text-align:right;desc:number of segments"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"segments.memory"
argument_list|,
literal|"alias:sm,segmentsMemory;default:false;text-align:right;desc:memory used by segments"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"segments.index_writer_memory"
argument_list|,
literal|"alias:siwm,segmentsIndexWriterMemory;default:false;text-align:right;desc:memory used by index writer"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"segments.index_writer_max_memory"
argument_list|,
literal|"alias:siwmx,segmentsIndexWriterMaxMemory;default:false;text-align:right;desc:maximum memory index writer may use before it must write buffered documents to a new segment"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"segments.version_map_memory"
argument_list|,
literal|"alias:svmm,segmentsVersionMapMemory;default:false;text-align:right;desc:memory used by version map"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"segments.fixed_bitset_memory"
argument_list|,
literal|"alias:sfbm,fixedBitsetMemory;default:false;text-align:right;desc:memory used by fixed bit sets for nested object field types and type filters for types referred in _parent fields"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"suggest.current"
argument_list|,
literal|"alias:suc,suggestCurrent;default:false;text-align:right;desc:number of current suggest ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"suggest.time"
argument_list|,
literal|"alias:suti,suggestTime;default:false;text-align:right;desc:time spend in suggest"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
literal|"suggest.total"
argument_list|,
literal|"alias:suto,suggestTotal;default:false;text-align:right;desc:number of suggest ops"
argument_list|)
expr_stmt|;
name|table
operator|.
name|endHeaders
argument_list|()
expr_stmt|;
return|return
name|table
return|;
block|}
DECL|method|buildTable
specifier|private
name|Table
name|buildTable
parameter_list|(
name|RestRequest
name|req
parameter_list|,
name|ClusterStateResponse
name|state
parameter_list|,
name|NodesInfoResponse
name|nodesInfo
parameter_list|,
name|NodesStatsResponse
name|nodesStats
parameter_list|)
block|{
name|boolean
name|fullId
init|=
name|req
operator|.
name|paramAsBoolean
argument_list|(
literal|"full_id"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|DiscoveryNodes
name|nodes
init|=
name|state
operator|.
name|getState
argument_list|()
operator|.
name|nodes
argument_list|()
decl_stmt|;
name|String
name|masterId
init|=
name|nodes
operator|.
name|getMasterNodeId
argument_list|()
decl_stmt|;
name|Table
name|table
init|=
name|getTableWithHeader
argument_list|(
name|req
argument_list|)
decl_stmt|;
for|for
control|(
name|DiscoveryNode
name|node
range|:
name|nodes
control|)
block|{
name|NodeInfo
name|info
init|=
name|nodesInfo
operator|.
name|getNodesMap
argument_list|()
operator|.
name|get
argument_list|(
name|node
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|NodeStats
name|stats
init|=
name|nodesStats
operator|.
name|getNodesMap
argument_list|()
operator|.
name|get
argument_list|(
name|node
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|JvmInfo
name|jvmInfo
init|=
name|info
operator|==
literal|null
condition|?
literal|null
else|:
name|info
operator|.
name|getJvm
argument_list|()
decl_stmt|;
name|JvmStats
name|jvmStats
init|=
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getJvm
argument_list|()
decl_stmt|;
name|FsInfo
name|fsInfo
init|=
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getFs
argument_list|()
decl_stmt|;
name|OsStats
name|osStats
init|=
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getOs
argument_list|()
decl_stmt|;
name|ProcessStats
name|processStats
init|=
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getProcess
argument_list|()
decl_stmt|;
name|NodeIndicesStats
name|indicesStats
init|=
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
decl_stmt|;
name|table
operator|.
name|startRow
argument_list|()
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|fullId
condition|?
name|node
operator|.
name|getId
argument_list|()
else|:
name|Strings
operator|.
name|substring
argument_list|(
name|node
operator|.
name|getId
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|info
operator|==
literal|null
condition|?
literal|null
else|:
name|info
operator|.
name|getProcess
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|node
operator|.
name|getHostAddress
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|node
operator|.
name|getAddress
argument_list|()
operator|instanceof
name|InetSocketTransportAddress
condition|)
block|{
name|table
operator|.
name|addCell
argument_list|(
operator|(
operator|(
name|InetSocketTransportAddress
operator|)
name|node
operator|.
name|getAddress
argument_list|()
operator|)
operator|.
name|address
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|table
operator|.
name|addCell
argument_list|(
literal|"-"
argument_list|)
expr_stmt|;
block|}
specifier|final
name|HttpInfo
name|httpInfo
init|=
name|info
operator|==
literal|null
condition|?
literal|null
else|:
name|info
operator|.
name|getHttp
argument_list|()
decl_stmt|;
if|if
condition|(
name|httpInfo
operator|!=
literal|null
condition|)
block|{
name|TransportAddress
name|transportAddress
init|=
name|httpInfo
operator|.
name|getAddress
argument_list|()
operator|.
name|publishAddress
argument_list|()
decl_stmt|;
if|if
condition|(
name|transportAddress
operator|instanceof
name|InetSocketTransportAddress
condition|)
block|{
name|table
operator|.
name|addCell
argument_list|(
name|NetworkAddress
operator|.
name|format
argument_list|(
operator|(
operator|(
name|InetSocketTransportAddress
operator|)
name|transportAddress
operator|)
operator|.
name|address
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|table
operator|.
name|addCell
argument_list|(
name|transportAddress
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|table
operator|.
name|addCell
argument_list|(
literal|"-"
argument_list|)
expr_stmt|;
block|}
name|table
operator|.
name|addCell
argument_list|(
name|node
operator|.
name|getVersion
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|info
operator|==
literal|null
condition|?
literal|null
else|:
name|info
operator|.
name|getBuild
argument_list|()
operator|.
name|shortHash
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|jvmInfo
operator|==
literal|null
condition|?
literal|null
else|:
name|jvmInfo
operator|.
name|version
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|fsInfo
operator|==
literal|null
condition|?
literal|null
else|:
name|fsInfo
operator|.
name|getTotal
argument_list|()
operator|.
name|getAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|jvmStats
operator|==
literal|null
condition|?
literal|null
else|:
name|jvmStats
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapUsed
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|jvmStats
operator|==
literal|null
condition|?
literal|null
else|:
name|jvmStats
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapUsedPercent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|jvmInfo
operator|==
literal|null
condition|?
literal|null
else|:
name|jvmInfo
operator|.
name|getMem
argument_list|()
operator|.
name|getHeapMax
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|osStats
operator|==
literal|null
condition|?
literal|null
else|:
name|osStats
operator|.
name|getMem
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|osStats
operator|.
name|getMem
argument_list|()
operator|.
name|getUsed
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|osStats
operator|==
literal|null
condition|?
literal|null
else|:
name|osStats
operator|.
name|getMem
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|osStats
operator|.
name|getMem
argument_list|()
operator|.
name|getUsedPercent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|osStats
operator|==
literal|null
condition|?
literal|null
else|:
name|osStats
operator|.
name|getMem
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|osStats
operator|.
name|getMem
argument_list|()
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|processStats
operator|==
literal|null
condition|?
literal|null
else|:
name|processStats
operator|.
name|getOpenFileDescriptors
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|processStats
operator|==
literal|null
condition|?
literal|null
else|:
name|calculatePercentage
argument_list|(
name|processStats
operator|.
name|getOpenFileDescriptors
argument_list|()
argument_list|,
name|processStats
operator|.
name|getMaxFileDescriptors
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|processStats
operator|==
literal|null
condition|?
literal|null
else|:
name|processStats
operator|.
name|getMaxFileDescriptors
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|osStats
operator|==
literal|null
condition|?
literal|null
else|:
name|Short
operator|.
name|toString
argument_list|(
name|osStats
operator|.
name|getCpu
argument_list|()
operator|.
name|getPercent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
name|hasLoadAverage
init|=
name|osStats
operator|!=
literal|null
operator|&&
name|osStats
operator|.
name|getCpu
argument_list|()
operator|.
name|getLoadAverage
argument_list|()
operator|!=
literal|null
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
operator|!
name|hasLoadAverage
operator|||
name|osStats
operator|.
name|getCpu
argument_list|()
operator|.
name|getLoadAverage
argument_list|()
index|[
literal|0
index|]
operator|==
operator|-
literal|1
condition|?
literal|null
else|:
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"%.2f"
argument_list|,
name|osStats
operator|.
name|getCpu
argument_list|()
operator|.
name|getLoadAverage
argument_list|()
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
operator|!
name|hasLoadAverage
operator|||
name|osStats
operator|.
name|getCpu
argument_list|()
operator|.
name|getLoadAverage
argument_list|()
index|[
literal|1
index|]
operator|==
operator|-
literal|1
condition|?
literal|null
else|:
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"%.2f"
argument_list|,
name|osStats
operator|.
name|getCpu
argument_list|()
operator|.
name|getLoadAverage
argument_list|()
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
operator|!
name|hasLoadAverage
operator|||
name|osStats
operator|.
name|getCpu
argument_list|()
operator|.
name|getLoadAverage
argument_list|()
index|[
literal|2
index|]
operator|==
operator|-
literal|1
condition|?
literal|null
else|:
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"%.2f"
argument_list|,
name|osStats
operator|.
name|getCpu
argument_list|()
operator|.
name|getLoadAverage
argument_list|()
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|jvmStats
operator|==
literal|null
condition|?
literal|null
else|:
name|jvmStats
operator|.
name|getUptime
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
name|roles
decl_stmt|;
if|if
condition|(
name|node
operator|.
name|getRoles
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|roles
operator|=
literal|"-"
expr_stmt|;
block|}
else|else
block|{
name|roles
operator|=
name|node
operator|.
name|getRoles
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|DiscoveryNode
operator|.
name|Role
operator|::
name|getAbbreviation
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|joining
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|table
operator|.
name|addCell
argument_list|(
name|roles
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|masterId
operator|==
literal|null
condition|?
literal|"x"
else|:
name|masterId
operator|.
name|equals
argument_list|(
name|node
operator|.
name|getId
argument_list|()
argument_list|)
condition|?
literal|"*"
else|:
literal|"-"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|node
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|CompletionStats
name|completionStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getCompletion
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|completionStats
operator|==
literal|null
condition|?
literal|null
else|:
name|completionStats
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|FieldDataStats
name|fdStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getIndices
argument_list|()
operator|.
name|getFieldData
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|fdStats
operator|==
literal|null
condition|?
literal|null
else|:
name|fdStats
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|fdStats
operator|==
literal|null
condition|?
literal|null
else|:
name|fdStats
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|QueryCacheStats
name|fcStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indicesStats
operator|.
name|getQueryCache
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|fcStats
operator|==
literal|null
condition|?
literal|null
else|:
name|fcStats
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|fcStats
operator|==
literal|null
condition|?
literal|null
else|:
name|fcStats
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|RequestCacheStats
name|qcStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indicesStats
operator|.
name|getRequestCache
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|qcStats
operator|==
literal|null
condition|?
literal|null
else|:
name|qcStats
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|qcStats
operator|==
literal|null
condition|?
literal|null
else|:
name|qcStats
operator|.
name|getEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|qcStats
operator|==
literal|null
condition|?
literal|null
else|:
name|qcStats
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|qcStats
operator|==
literal|null
condition|?
literal|null
else|:
name|qcStats
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|FlushStats
name|flushStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indicesStats
operator|.
name|getFlush
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|flushStats
operator|==
literal|null
condition|?
literal|null
else|:
name|flushStats
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|flushStats
operator|==
literal|null
condition|?
literal|null
else|:
name|flushStats
operator|.
name|getTotalTime
argument_list|()
argument_list|)
expr_stmt|;
name|GetStats
name|getStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indicesStats
operator|.
name|getGet
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|getStats
operator|==
literal|null
condition|?
literal|null
else|:
name|getStats
operator|.
name|current
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|getStats
operator|==
literal|null
condition|?
literal|null
else|:
name|getStats
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|getStats
operator|==
literal|null
condition|?
literal|null
else|:
name|getStats
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|getStats
operator|==
literal|null
condition|?
literal|null
else|:
name|getStats
operator|.
name|getExistsTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|getStats
operator|==
literal|null
condition|?
literal|null
else|:
name|getStats
operator|.
name|getExistsCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|getStats
operator|==
literal|null
condition|?
literal|null
else|:
name|getStats
operator|.
name|getMissingTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|getStats
operator|==
literal|null
condition|?
literal|null
else|:
name|getStats
operator|.
name|getMissingCount
argument_list|()
argument_list|)
expr_stmt|;
name|IndexingStats
name|indexingStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indicesStats
operator|.
name|getIndexing
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|indexingStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indexingStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getDeleteCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|indexingStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indexingStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getDeleteTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|indexingStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indexingStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getDeleteCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|indexingStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indexingStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getIndexCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|indexingStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indexingStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getIndexTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|indexingStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indexingStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getIndexCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|indexingStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indexingStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getIndexFailedCount
argument_list|()
argument_list|)
expr_stmt|;
name|MergeStats
name|mergeStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indicesStats
operator|.
name|getMerge
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|mergeStats
operator|==
literal|null
condition|?
literal|null
else|:
name|mergeStats
operator|.
name|getCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|mergeStats
operator|==
literal|null
condition|?
literal|null
else|:
name|mergeStats
operator|.
name|getCurrentNumDocs
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|mergeStats
operator|==
literal|null
condition|?
literal|null
else|:
name|mergeStats
operator|.
name|getCurrentSize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|mergeStats
operator|==
literal|null
condition|?
literal|null
else|:
name|mergeStats
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|mergeStats
operator|==
literal|null
condition|?
literal|null
else|:
name|mergeStats
operator|.
name|getTotalNumDocs
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|mergeStats
operator|==
literal|null
condition|?
literal|null
else|:
name|mergeStats
operator|.
name|getTotalSize
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|mergeStats
operator|==
literal|null
condition|?
literal|null
else|:
name|mergeStats
operator|.
name|getTotalTime
argument_list|()
argument_list|)
expr_stmt|;
name|PercolatorQueryCacheStats
name|percolatorQueryCacheStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indicesStats
operator|.
name|getPercolate
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|percolatorQueryCacheStats
operator|==
literal|null
condition|?
literal|null
else|:
name|percolatorQueryCacheStats
operator|.
name|getNumQueries
argument_list|()
argument_list|)
expr_stmt|;
name|RefreshStats
name|refreshStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indicesStats
operator|.
name|getRefresh
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|refreshStats
operator|==
literal|null
condition|?
literal|null
else|:
name|refreshStats
operator|.
name|getTotal
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|refreshStats
operator|==
literal|null
condition|?
literal|null
else|:
name|refreshStats
operator|.
name|getTotalTime
argument_list|()
argument_list|)
expr_stmt|;
name|ScriptStats
name|scriptStats
init|=
name|stats
operator|==
literal|null
condition|?
literal|null
else|:
name|stats
operator|.
name|getScriptStats
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|scriptStats
operator|==
literal|null
condition|?
literal|null
else|:
name|scriptStats
operator|.
name|getCompilations
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|scriptStats
operator|==
literal|null
condition|?
literal|null
else|:
name|scriptStats
operator|.
name|getCacheEvictions
argument_list|()
argument_list|)
expr_stmt|;
name|SearchStats
name|searchStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indicesStats
operator|.
name|getSearch
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getFetchCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getFetchTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getFetchCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getOpenContexts
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getQueryCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getQueryTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getQueryCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getScrollCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getScrollTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getScrollCount
argument_list|()
argument_list|)
expr_stmt|;
name|SegmentsStats
name|segmentsStats
init|=
name|indicesStats
operator|==
literal|null
condition|?
literal|null
else|:
name|indicesStats
operator|.
name|getSegments
argument_list|()
decl_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|segmentsStats
operator|==
literal|null
condition|?
literal|null
else|:
name|segmentsStats
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|segmentsStats
operator|==
literal|null
condition|?
literal|null
else|:
name|segmentsStats
operator|.
name|getMemory
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|segmentsStats
operator|==
literal|null
condition|?
literal|null
else|:
name|segmentsStats
operator|.
name|getIndexWriterMemory
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|segmentsStats
operator|==
literal|null
condition|?
literal|null
else|:
name|segmentsStats
operator|.
name|getIndexWriterMaxMemory
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|segmentsStats
operator|==
literal|null
condition|?
literal|null
else|:
name|segmentsStats
operator|.
name|getVersionMapMemory
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|segmentsStats
operator|==
literal|null
condition|?
literal|null
else|:
name|segmentsStats
operator|.
name|getBitsetMemory
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getSuggestCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getSuggestTime
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|addCell
argument_list|(
name|searchStats
operator|==
literal|null
condition|?
literal|null
else|:
name|searchStats
operator|.
name|getTotal
argument_list|()
operator|.
name|getSuggestCount
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|endRow
argument_list|()
expr_stmt|;
block|}
return|return
name|table
return|;
block|}
comment|/**      * Calculate the percentage of {@code used} from the {@code max} number.      * @param used The currently used number.      * @param max The maximum number.      * @return 0 if {@code max} is&lt;= 0. Otherwise 100 * {@code used} / {@code max}.      */
DECL|method|calculatePercentage
specifier|private
name|short
name|calculatePercentage
parameter_list|(
name|long
name|used
parameter_list|,
name|long
name|max
parameter_list|)
block|{
return|return
name|max
operator|<=
literal|0
condition|?
literal|0
else|:
call|(
name|short
call|)
argument_list|(
operator|(
literal|100d
operator|*
name|used
operator|)
operator|/
name|max
argument_list|)
return|;
block|}
block|}
end_class

end_unit

