begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.search
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|transport
operator|.
name|TransportAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_comment
comment|/**  * This class encapsulates all remote cluster information to be rendered on  *<tt>_remote/info</tt> requests.  */
end_comment

begin_class
DECL|class|RemoteConnectionInfo
specifier|public
specifier|final
class|class
name|RemoteConnectionInfo
implements|implements
name|ToXContent
block|{
DECL|field|seedNodes
specifier|final
name|Collection
argument_list|<
name|TransportAddress
argument_list|>
name|seedNodes
decl_stmt|;
DECL|field|httpAddresses
specifier|final
name|Collection
argument_list|<
name|TransportAddress
argument_list|>
name|httpAddresses
decl_stmt|;
DECL|field|connectionsPerCluster
specifier|final
name|int
name|connectionsPerCluster
decl_stmt|;
DECL|field|initialConnectionTimeout
specifier|final
name|TimeValue
name|initialConnectionTimeout
decl_stmt|;
DECL|field|numNodesConnected
specifier|final
name|int
name|numNodesConnected
decl_stmt|;
DECL|field|clusterAlias
specifier|final
name|String
name|clusterAlias
decl_stmt|;
DECL|method|RemoteConnectionInfo
name|RemoteConnectionInfo
parameter_list|(
name|String
name|clusterAlias
parameter_list|,
name|Collection
argument_list|<
name|TransportAddress
argument_list|>
name|seedNodes
parameter_list|,
name|Collection
argument_list|<
name|TransportAddress
argument_list|>
name|httpAddresses
parameter_list|,
name|int
name|connectionsPerCluster
parameter_list|,
name|int
name|numNodesConnected
parameter_list|,
name|TimeValue
name|initialConnectionTimeout
parameter_list|)
block|{
name|this
operator|.
name|clusterAlias
operator|=
name|clusterAlias
expr_stmt|;
name|this
operator|.
name|seedNodes
operator|=
name|seedNodes
expr_stmt|;
name|this
operator|.
name|httpAddresses
operator|=
name|httpAddresses
expr_stmt|;
name|this
operator|.
name|connectionsPerCluster
operator|=
name|connectionsPerCluster
expr_stmt|;
name|this
operator|.
name|numNodesConnected
operator|=
name|numNodesConnected
expr_stmt|;
name|this
operator|.
name|initialConnectionTimeout
operator|=
name|initialConnectionTimeout
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|clusterAlias
argument_list|)
expr_stmt|;
block|{
name|builder
operator|.
name|startArray
argument_list|(
literal|"seeds"
argument_list|)
expr_stmt|;
for|for
control|(
name|TransportAddress
name|addr
range|:
name|seedNodes
control|)
block|{
name|builder
operator|.
name|value
argument_list|(
name|addr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endArray
argument_list|()
expr_stmt|;
name|builder
operator|.
name|startArray
argument_list|(
literal|"http_addresses"
argument_list|)
expr_stmt|;
for|for
control|(
name|TransportAddress
name|addr
range|:
name|httpAddresses
control|)
block|{
name|builder
operator|.
name|value
argument_list|(
name|addr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endArray
argument_list|()
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
literal|"connected"
argument_list|,
name|numNodesConnected
operator|>
literal|0
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
literal|"num_nodes_connected"
argument_list|,
name|numNodesConnected
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
literal|"max_connections_per_cluster"
argument_list|,
name|connectionsPerCluster
argument_list|)
expr_stmt|;
name|builder
operator|.
name|field
argument_list|(
literal|"initial_connect_timeout"
argument_list|,
name|initialConnectionTimeout
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
return|return
name|builder
return|;
block|}
block|}
end_class

end_unit

