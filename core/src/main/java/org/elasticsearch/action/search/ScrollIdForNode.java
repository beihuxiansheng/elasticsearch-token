begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.search
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|internal
operator|.
name|Nullable
import|;
end_import

begin_class
DECL|class|ScrollIdForNode
class|class
name|ScrollIdForNode
block|{
DECL|field|node
specifier|private
specifier|final
name|String
name|node
decl_stmt|;
DECL|field|scrollId
specifier|private
specifier|final
name|long
name|scrollId
decl_stmt|;
DECL|field|clusterAlias
specifier|private
specifier|final
name|String
name|clusterAlias
decl_stmt|;
DECL|method|ScrollIdForNode
name|ScrollIdForNode
parameter_list|(
annotation|@
name|Nullable
name|String
name|clusterAlias
parameter_list|,
name|String
name|node
parameter_list|,
name|long
name|scrollId
parameter_list|)
block|{
name|this
operator|.
name|node
operator|=
name|node
expr_stmt|;
name|this
operator|.
name|clusterAlias
operator|=
name|clusterAlias
expr_stmt|;
name|this
operator|.
name|scrollId
operator|=
name|scrollId
expr_stmt|;
block|}
DECL|method|getNode
specifier|public
name|String
name|getNode
parameter_list|()
block|{
return|return
name|node
return|;
block|}
DECL|method|getClusterAlias
specifier|public
name|String
name|getClusterAlias
parameter_list|()
block|{
return|return
name|clusterAlias
return|;
block|}
DECL|method|getScrollId
specifier|public
name|long
name|getScrollId
parameter_list|()
block|{
return|return
name|scrollId
return|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ScrollIdForNode{"
operator|+
literal|"node='"
operator|+
name|node
operator|+
literal|'\''
operator|+
literal|", scrollId="
operator|+
name|scrollId
operator|+
literal|", clusterAlias='"
operator|+
name|clusterAlias
operator|+
literal|'\''
operator|+
literal|'}'
return|;
block|}
block|}
end_class

end_unit

