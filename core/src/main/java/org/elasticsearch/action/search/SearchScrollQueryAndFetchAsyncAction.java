begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.search
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|message
operator|.
name|ParameterizedMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|util
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|ScoreDoc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|service
operator|.
name|ClusterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDown
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchPhaseResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|QueryFetchSearchResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|ScrollQueryFetchSearchResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|InternalScrollSearchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|InternalSearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|query
operator|.
name|ScrollQuerySearchResult
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|TransportSearchHelper
operator|.
name|internalScrollSearchRequest
import|;
end_import

begin_class
DECL|class|SearchScrollQueryAndFetchAsyncAction
specifier|final
class|class
name|SearchScrollQueryAndFetchAsyncAction
extends|extends
name|SearchScrollAsyncAction
argument_list|<
name|ScrollQueryFetchSearchResult
argument_list|>
block|{
DECL|field|searchTransportService
specifier|private
specifier|final
name|SearchTransportService
name|searchTransportService
decl_stmt|;
DECL|field|task
specifier|private
specifier|final
name|SearchTask
name|task
decl_stmt|;
DECL|field|queryFetchResults
specifier|private
specifier|final
name|AtomicArray
argument_list|<
name|QueryFetchSearchResult
argument_list|>
name|queryFetchResults
decl_stmt|;
DECL|method|SearchScrollQueryAndFetchAsyncAction
name|SearchScrollQueryAndFetchAsyncAction
parameter_list|(
name|Logger
name|logger
parameter_list|,
name|ClusterService
name|clusterService
parameter_list|,
name|SearchTransportService
name|searchTransportService
parameter_list|,
name|SearchPhaseController
name|searchPhaseController
parameter_list|,
name|SearchScrollRequest
name|request
parameter_list|,
name|SearchTask
name|task
parameter_list|,
name|ParsedScrollId
name|scrollId
parameter_list|,
name|ActionListener
argument_list|<
name|SearchResponse
argument_list|>
name|listener
parameter_list|)
block|{
name|super
argument_list|(
name|scrollId
argument_list|,
name|logger
argument_list|,
name|clusterService
operator|.
name|state
argument_list|()
operator|.
name|nodes
argument_list|()
argument_list|,
name|listener
argument_list|,
name|searchPhaseController
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|this
operator|.
name|task
operator|=
name|task
expr_stmt|;
name|this
operator|.
name|searchTransportService
operator|=
name|searchTransportService
expr_stmt|;
name|this
operator|.
name|queryFetchResults
operator|=
operator|new
name|AtomicArray
argument_list|<>
argument_list|(
name|scrollId
operator|.
name|getContext
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|executeInitialPhase
specifier|protected
name|void
name|executeInitialPhase
parameter_list|(
name|DiscoveryNode
name|node
parameter_list|,
name|InternalScrollSearchRequest
name|internalRequest
parameter_list|,
name|SearchActionListener
argument_list|<
name|ScrollQueryFetchSearchResult
argument_list|>
name|searchActionListener
parameter_list|)
block|{
name|searchTransportService
operator|.
name|sendExecuteScrollFetch
argument_list|(
name|node
argument_list|,
name|internalRequest
argument_list|,
name|task
argument_list|,
name|searchActionListener
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|moveToNextPhase
specifier|protected
name|SearchPhase
name|moveToNextPhase
parameter_list|()
block|{
return|return
name|sendResponsePhase
argument_list|(
name|searchPhaseController
operator|.
name|reducedQueryPhase
argument_list|(
name|queryFetchResults
operator|.
name|asList
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|,
name|queryFetchResults
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|onFirstPhaseResult
specifier|protected
name|void
name|onFirstPhaseResult
parameter_list|(
name|int
name|shardId
parameter_list|,
name|ScrollQueryFetchSearchResult
name|result
parameter_list|)
block|{
name|queryFetchResults
operator|.
name|setOnce
argument_list|(
name|shardId
argument_list|,
name|result
operator|.
name|result
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

