begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.cluster.node.tasks.get
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|node
operator|.
name|tasks
operator|.
name|get
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|ElasticsearchClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|tasks
operator|.
name|TaskId
import|;
end_import

begin_comment
comment|/**  * Builder for the request to retrieve the list of tasks running on the specified nodes  */
end_comment

begin_class
DECL|class|GetTaskRequestBuilder
specifier|public
class|class
name|GetTaskRequestBuilder
extends|extends
name|ActionRequestBuilder
argument_list|<
name|GetTaskRequest
argument_list|,
name|GetTaskResponse
argument_list|,
name|GetTaskRequestBuilder
argument_list|>
block|{
DECL|method|GetTaskRequestBuilder
specifier|public
name|GetTaskRequestBuilder
parameter_list|(
name|ElasticsearchClient
name|client
parameter_list|,
name|GetTaskAction
name|action
parameter_list|)
block|{
name|super
argument_list|(
name|client
argument_list|,
name|action
argument_list|,
operator|new
name|GetTaskRequest
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Set the TaskId to look up. Required.      */
DECL|method|setTaskId
specifier|public
specifier|final
name|GetTaskRequestBuilder
name|setTaskId
parameter_list|(
name|TaskId
name|taskId
parameter_list|)
block|{
name|request
operator|.
name|setTaskId
argument_list|(
name|taskId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Should this request wait for all found tasks to complete?      */
DECL|method|setWaitForCompletion
specifier|public
specifier|final
name|GetTaskRequestBuilder
name|setWaitForCompletion
parameter_list|(
name|boolean
name|waitForCompletion
parameter_list|)
block|{
name|request
operator|.
name|setWaitForCompletion
argument_list|(
name|waitForCompletion
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Timeout to wait for any async actions this request must take. It must take anywhere from 0 to 2.      */
DECL|method|setTimeout
specifier|public
specifier|final
name|GetTaskRequestBuilder
name|setTimeout
parameter_list|(
name|TimeValue
name|timeout
parameter_list|)
block|{
name|request
operator|.
name|setTimeout
argument_list|(
name|timeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

