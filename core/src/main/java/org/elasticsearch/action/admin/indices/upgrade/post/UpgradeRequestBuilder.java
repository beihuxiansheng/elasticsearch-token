begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.indices.upgrade.post
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|upgrade
operator|.
name|post
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|broadcast
operator|.
name|BroadcastOperationRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|ElasticsearchClient
import|;
end_import

begin_comment
comment|/**  * A request to upgrade one or more indices. In order to optimize on all the indices, pass an empty array or  *<tt>null</tt> for the indices.  */
end_comment

begin_class
DECL|class|UpgradeRequestBuilder
specifier|public
class|class
name|UpgradeRequestBuilder
extends|extends
name|BroadcastOperationRequestBuilder
argument_list|<
name|UpgradeRequest
argument_list|,
name|UpgradeResponse
argument_list|,
name|UpgradeRequestBuilder
argument_list|>
block|{
DECL|method|UpgradeRequestBuilder
specifier|public
name|UpgradeRequestBuilder
parameter_list|(
name|ElasticsearchClient
name|client
parameter_list|,
name|UpgradeAction
name|action
parameter_list|)
block|{
name|super
argument_list|(
name|client
argument_list|,
name|action
argument_list|,
operator|new
name|UpgradeRequest
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      *  Should the upgrade only the ancient (older major version of Lucene) segments?      */
DECL|method|setUpgradeOnlyAncientSegments
specifier|public
name|UpgradeRequestBuilder
name|setUpgradeOnlyAncientSegments
parameter_list|(
name|boolean
name|upgradeOnlyAncientSegments
parameter_list|)
block|{
name|request
operator|.
name|upgradeOnlyAncientSegments
argument_list|(
name|upgradeOnlyAncientSegments
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

