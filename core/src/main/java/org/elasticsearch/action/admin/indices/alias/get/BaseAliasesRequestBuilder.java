begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.indices.alias.get
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|get
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|IndicesOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|master
operator|.
name|MasterNodeReadOperationRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|ElasticsearchClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|ArrayUtils
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|BaseAliasesRequestBuilder
specifier|public
specifier|abstract
class|class
name|BaseAliasesRequestBuilder
parameter_list|<
name|Response
extends|extends
name|ActionResponse
parameter_list|,
name|Builder
extends|extends
name|BaseAliasesRequestBuilder
parameter_list|<
name|Response
parameter_list|,
name|Builder
parameter_list|>
parameter_list|>
extends|extends
name|MasterNodeReadOperationRequestBuilder
argument_list|<
name|GetAliasesRequest
argument_list|,
name|Response
argument_list|,
name|Builder
argument_list|>
block|{
DECL|method|BaseAliasesRequestBuilder
specifier|public
name|BaseAliasesRequestBuilder
parameter_list|(
name|ElasticsearchClient
name|client
parameter_list|,
name|Action
argument_list|<
name|GetAliasesRequest
argument_list|,
name|Response
argument_list|,
name|Builder
argument_list|>
name|action
parameter_list|,
name|String
modifier|...
name|aliases
parameter_list|)
block|{
name|super
argument_list|(
name|client
argument_list|,
name|action
argument_list|,
operator|new
name|GetAliasesRequest
argument_list|(
name|aliases
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setAliases
specifier|public
name|Builder
name|setAliases
parameter_list|(
name|String
modifier|...
name|aliases
parameter_list|)
block|{
name|request
operator|.
name|aliases
argument_list|(
name|aliases
argument_list|)
expr_stmt|;
return|return
operator|(
name|Builder
operator|)
name|this
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|addAliases
specifier|public
name|Builder
name|addAliases
parameter_list|(
name|String
modifier|...
name|aliases
parameter_list|)
block|{
name|request
operator|.
name|aliases
argument_list|(
name|ArrayUtils
operator|.
name|concat
argument_list|(
name|request
operator|.
name|aliases
argument_list|()
argument_list|,
name|aliases
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|(
name|Builder
operator|)
name|this
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setIndices
specifier|public
name|Builder
name|setIndices
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
name|request
operator|.
name|indices
argument_list|(
name|indices
argument_list|)
expr_stmt|;
return|return
operator|(
name|Builder
operator|)
name|this
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|addIndices
specifier|public
name|Builder
name|addIndices
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
name|request
operator|.
name|indices
argument_list|(
name|ArrayUtils
operator|.
name|concat
argument_list|(
name|request
operator|.
name|indices
argument_list|()
argument_list|,
name|indices
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|(
name|Builder
operator|)
name|this
return|;
block|}
comment|/**      * Specifies what type of requested indices to ignore and wildcard indices expressions.      *      * For example indices that don't exist.      */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setIndicesOptions
specifier|public
name|Builder
name|setIndicesOptions
parameter_list|(
name|IndicesOptions
name|options
parameter_list|)
block|{
name|request
operator|.
name|indicesOptions
argument_list|(
name|options
argument_list|)
expr_stmt|;
return|return
operator|(
name|Builder
operator|)
name|this
return|;
block|}
block|}
end_class

end_unit

