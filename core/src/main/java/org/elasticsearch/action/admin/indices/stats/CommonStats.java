begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.indices.stats
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|query
operator|.
name|QueryCacheStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|cache
operator|.
name|request
operator|.
name|RequestCacheStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|engine
operator|.
name|SegmentsStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|FieldDataStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|flush
operator|.
name|FlushStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|get
operator|.
name|GetStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|IndexingStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|merge
operator|.
name|MergeStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|percolator
operator|.
name|PercolateStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|recovery
operator|.
name|RecoveryStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|refresh
operator|.
name|RefreshStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|search
operator|.
name|stats
operator|.
name|SearchStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|DocsStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|IndexShard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|store
operator|.
name|StoreStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|suggest
operator|.
name|stats
operator|.
name|SuggestStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
operator|.
name|TranslogStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|warmer
operator|.
name|WarmerStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|IndicesQueryCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|completion
operator|.
name|CompletionStats
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
DECL|class|CommonStats
specifier|public
class|class
name|CommonStats
implements|implements
name|Streamable
implements|,
name|ToXContent
block|{
DECL|method|CommonStats
specifier|public
name|CommonStats
parameter_list|()
block|{
name|this
argument_list|(
name|CommonStatsFlags
operator|.
name|NONE
argument_list|)
expr_stmt|;
block|}
DECL|method|CommonStats
specifier|public
name|CommonStats
parameter_list|(
name|CommonStatsFlags
name|flags
parameter_list|)
block|{
name|CommonStatsFlags
operator|.
name|Flag
index|[]
name|setFlags
init|=
name|flags
operator|.
name|getFlags
argument_list|()
decl_stmt|;
for|for
control|(
name|CommonStatsFlags
operator|.
name|Flag
name|flag
range|:
name|setFlags
control|)
block|{
switch|switch
condition|(
name|flag
condition|)
block|{
case|case
name|Docs
case|:
name|docs
operator|=
operator|new
name|DocsStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Store
case|:
name|store
operator|=
operator|new
name|StoreStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Indexing
case|:
name|indexing
operator|=
operator|new
name|IndexingStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Get
case|:
name|get
operator|=
operator|new
name|GetStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Search
case|:
name|search
operator|=
operator|new
name|SearchStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Merge
case|:
name|merge
operator|=
operator|new
name|MergeStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Refresh
case|:
name|refresh
operator|=
operator|new
name|RefreshStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Flush
case|:
name|flush
operator|=
operator|new
name|FlushStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Warmer
case|:
name|warmer
operator|=
operator|new
name|WarmerStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|QueryCache
case|:
name|queryCache
operator|=
operator|new
name|QueryCacheStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|FieldData
case|:
name|fieldData
operator|=
operator|new
name|FieldDataStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Completion
case|:
name|completion
operator|=
operator|new
name|CompletionStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Segments
case|:
name|segments
operator|=
operator|new
name|SegmentsStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Percolate
case|:
name|percolate
operator|=
operator|new
name|PercolateStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Translog
case|:
name|translog
operator|=
operator|new
name|TranslogStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Suggest
case|:
name|suggest
operator|=
operator|new
name|SuggestStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|RequestCache
case|:
name|requestCache
operator|=
operator|new
name|RequestCacheStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Recovery
case|:
name|recoveryStats
operator|=
operator|new
name|RecoveryStats
argument_list|()
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Unknown Flag: "
operator|+
name|flag
argument_list|)
throw|;
block|}
block|}
block|}
DECL|method|CommonStats
specifier|public
name|CommonStats
parameter_list|(
name|IndicesQueryCache
name|indicesQueryCache
parameter_list|,
name|IndexShard
name|indexShard
parameter_list|,
name|CommonStatsFlags
name|flags
parameter_list|)
block|{
name|CommonStatsFlags
operator|.
name|Flag
index|[]
name|setFlags
init|=
name|flags
operator|.
name|getFlags
argument_list|()
decl_stmt|;
for|for
control|(
name|CommonStatsFlags
operator|.
name|Flag
name|flag
range|:
name|setFlags
control|)
block|{
switch|switch
condition|(
name|flag
condition|)
block|{
case|case
name|Docs
case|:
name|docs
operator|=
name|indexShard
operator|.
name|docStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Store
case|:
name|store
operator|=
name|indexShard
operator|.
name|storeStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Indexing
case|:
name|indexing
operator|=
name|indexShard
operator|.
name|indexingStats
argument_list|(
name|flags
operator|.
name|types
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|Get
case|:
name|get
operator|=
name|indexShard
operator|.
name|getStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Search
case|:
name|search
operator|=
name|indexShard
operator|.
name|searchStats
argument_list|(
name|flags
operator|.
name|groups
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|Merge
case|:
name|merge
operator|=
name|indexShard
operator|.
name|mergeStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Refresh
case|:
name|refresh
operator|=
name|indexShard
operator|.
name|refreshStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Flush
case|:
name|flush
operator|=
name|indexShard
operator|.
name|flushStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Warmer
case|:
name|warmer
operator|=
name|indexShard
operator|.
name|warmerStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|QueryCache
case|:
name|queryCache
operator|=
name|indicesQueryCache
operator|.
name|getStats
argument_list|(
name|indexShard
operator|.
name|shardId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldData
case|:
name|fieldData
operator|=
name|indexShard
operator|.
name|fieldDataStats
argument_list|(
name|flags
operator|.
name|fieldDataFields
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|Completion
case|:
name|completion
operator|=
name|indexShard
operator|.
name|completionStats
argument_list|(
name|flags
operator|.
name|completionDataFields
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|Segments
case|:
name|segments
operator|=
name|indexShard
operator|.
name|segmentStats
argument_list|(
name|flags
operator|.
name|includeSegmentFileSizes
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|Percolate
case|:
name|percolate
operator|=
name|indexShard
operator|.
name|percolateStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Translog
case|:
name|translog
operator|=
name|indexShard
operator|.
name|translogStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Suggest
case|:
name|suggest
operator|=
name|indexShard
operator|.
name|suggestStats
argument_list|()
expr_stmt|;
break|break;
case|case
name|RequestCache
case|:
name|requestCache
operator|=
name|indexShard
operator|.
name|requestCache
argument_list|()
operator|.
name|stats
argument_list|()
expr_stmt|;
break|break;
case|case
name|Recovery
case|:
name|recoveryStats
operator|=
name|indexShard
operator|.
name|recoveryStats
argument_list|()
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Unknown Flag: "
operator|+
name|flag
argument_list|)
throw|;
block|}
block|}
block|}
annotation|@
name|Nullable
DECL|field|docs
specifier|public
name|DocsStats
name|docs
decl_stmt|;
annotation|@
name|Nullable
DECL|field|store
specifier|public
name|StoreStats
name|store
decl_stmt|;
annotation|@
name|Nullable
DECL|field|indexing
specifier|public
name|IndexingStats
name|indexing
decl_stmt|;
annotation|@
name|Nullable
DECL|field|get
specifier|public
name|GetStats
name|get
decl_stmt|;
annotation|@
name|Nullable
DECL|field|search
specifier|public
name|SearchStats
name|search
decl_stmt|;
annotation|@
name|Nullable
DECL|field|merge
specifier|public
name|MergeStats
name|merge
decl_stmt|;
annotation|@
name|Nullable
DECL|field|refresh
specifier|public
name|RefreshStats
name|refresh
decl_stmt|;
annotation|@
name|Nullable
DECL|field|flush
specifier|public
name|FlushStats
name|flush
decl_stmt|;
annotation|@
name|Nullable
DECL|field|warmer
specifier|public
name|WarmerStats
name|warmer
decl_stmt|;
annotation|@
name|Nullable
DECL|field|queryCache
specifier|public
name|QueryCacheStats
name|queryCache
decl_stmt|;
annotation|@
name|Nullable
DECL|field|fieldData
specifier|public
name|FieldDataStats
name|fieldData
decl_stmt|;
annotation|@
name|Nullable
DECL|field|percolate
specifier|public
name|PercolateStats
name|percolate
decl_stmt|;
annotation|@
name|Nullable
DECL|field|completion
specifier|public
name|CompletionStats
name|completion
decl_stmt|;
annotation|@
name|Nullable
DECL|field|segments
specifier|public
name|SegmentsStats
name|segments
decl_stmt|;
annotation|@
name|Nullable
DECL|field|translog
specifier|public
name|TranslogStats
name|translog
decl_stmt|;
annotation|@
name|Nullable
DECL|field|suggest
specifier|public
name|SuggestStats
name|suggest
decl_stmt|;
annotation|@
name|Nullable
DECL|field|requestCache
specifier|public
name|RequestCacheStats
name|requestCache
decl_stmt|;
annotation|@
name|Nullable
DECL|field|recoveryStats
specifier|public
name|RecoveryStats
name|recoveryStats
decl_stmt|;
DECL|method|add
specifier|public
name|void
name|add
parameter_list|(
name|CommonStats
name|stats
parameter_list|)
block|{
if|if
condition|(
name|docs
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getDocs
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|docs
operator|=
operator|new
name|DocsStats
argument_list|()
expr_stmt|;
name|docs
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getDocs
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|docs
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getDocs
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|store
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getStore
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|store
operator|=
operator|new
name|StoreStats
argument_list|()
expr_stmt|;
name|store
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getStore
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|store
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getStore
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|indexing
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getIndexing
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|indexing
operator|=
operator|new
name|IndexingStats
argument_list|()
expr_stmt|;
name|indexing
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getIndexing
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|indexing
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getIndexing
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|get
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getGet
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|get
operator|=
operator|new
name|GetStats
argument_list|()
expr_stmt|;
name|get
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getGet
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|get
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getGet
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|search
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getSearch
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|search
operator|=
operator|new
name|SearchStats
argument_list|()
expr_stmt|;
name|search
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getSearch
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|search
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getSearch
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|merge
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getMerge
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|merge
operator|=
operator|new
name|MergeStats
argument_list|()
expr_stmt|;
name|merge
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getMerge
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|merge
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getMerge
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|refresh
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getRefresh
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|refresh
operator|=
operator|new
name|RefreshStats
argument_list|()
expr_stmt|;
name|refresh
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getRefresh
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|refresh
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getRefresh
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|flush
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getFlush
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|flush
operator|=
operator|new
name|FlushStats
argument_list|()
expr_stmt|;
name|flush
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getFlush
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|flush
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getFlush
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|warmer
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getWarmer
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|warmer
operator|=
operator|new
name|WarmerStats
argument_list|()
expr_stmt|;
name|warmer
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getWarmer
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|warmer
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getWarmer
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|queryCache
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getQueryCache
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|queryCache
operator|=
operator|new
name|QueryCacheStats
argument_list|()
expr_stmt|;
name|queryCache
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getQueryCache
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|queryCache
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getQueryCache
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fieldData
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getFieldData
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|fieldData
operator|=
operator|new
name|FieldDataStats
argument_list|()
expr_stmt|;
name|fieldData
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getFieldData
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|fieldData
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getFieldData
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|percolate
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getPercolate
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|percolate
operator|=
operator|new
name|PercolateStats
argument_list|()
expr_stmt|;
name|percolate
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getPercolate
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|percolate
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getPercolate
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|completion
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getCompletion
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|completion
operator|=
operator|new
name|CompletionStats
argument_list|()
expr_stmt|;
name|completion
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getCompletion
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|completion
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getCompletion
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|segments
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getSegments
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|segments
operator|=
operator|new
name|SegmentsStats
argument_list|()
expr_stmt|;
name|segments
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getSegments
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|segments
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getSegments
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|translog
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getTranslog
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|translog
operator|=
operator|new
name|TranslogStats
argument_list|()
expr_stmt|;
name|translog
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getTranslog
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|translog
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getTranslog
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|suggest
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getSuggest
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|suggest
operator|=
operator|new
name|SuggestStats
argument_list|()
expr_stmt|;
name|suggest
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getSuggest
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|suggest
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getSuggest
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|requestCache
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getRequestCache
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|requestCache
operator|=
operator|new
name|RequestCacheStats
argument_list|()
expr_stmt|;
name|requestCache
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getRequestCache
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|requestCache
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getRequestCache
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|recoveryStats
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|stats
operator|.
name|getRecoveryStats
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|recoveryStats
operator|=
operator|new
name|RecoveryStats
argument_list|()
expr_stmt|;
name|recoveryStats
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getRecoveryStats
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|recoveryStats
operator|.
name|add
argument_list|(
name|stats
operator|.
name|getRecoveryStats
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Nullable
DECL|method|getDocs
specifier|public
name|DocsStats
name|getDocs
parameter_list|()
block|{
return|return
name|this
operator|.
name|docs
return|;
block|}
annotation|@
name|Nullable
DECL|method|getStore
specifier|public
name|StoreStats
name|getStore
parameter_list|()
block|{
return|return
name|store
return|;
block|}
annotation|@
name|Nullable
DECL|method|getIndexing
specifier|public
name|IndexingStats
name|getIndexing
parameter_list|()
block|{
return|return
name|indexing
return|;
block|}
annotation|@
name|Nullable
DECL|method|getGet
specifier|public
name|GetStats
name|getGet
parameter_list|()
block|{
return|return
name|get
return|;
block|}
annotation|@
name|Nullable
DECL|method|getSearch
specifier|public
name|SearchStats
name|getSearch
parameter_list|()
block|{
return|return
name|search
return|;
block|}
annotation|@
name|Nullable
DECL|method|getMerge
specifier|public
name|MergeStats
name|getMerge
parameter_list|()
block|{
return|return
name|merge
return|;
block|}
annotation|@
name|Nullable
DECL|method|getRefresh
specifier|public
name|RefreshStats
name|getRefresh
parameter_list|()
block|{
return|return
name|refresh
return|;
block|}
annotation|@
name|Nullable
DECL|method|getFlush
specifier|public
name|FlushStats
name|getFlush
parameter_list|()
block|{
return|return
name|flush
return|;
block|}
annotation|@
name|Nullable
DECL|method|getWarmer
specifier|public
name|WarmerStats
name|getWarmer
parameter_list|()
block|{
return|return
name|this
operator|.
name|warmer
return|;
block|}
annotation|@
name|Nullable
DECL|method|getQueryCache
specifier|public
name|QueryCacheStats
name|getQueryCache
parameter_list|()
block|{
return|return
name|this
operator|.
name|queryCache
return|;
block|}
annotation|@
name|Nullable
DECL|method|getFieldData
specifier|public
name|FieldDataStats
name|getFieldData
parameter_list|()
block|{
return|return
name|this
operator|.
name|fieldData
return|;
block|}
annotation|@
name|Nullable
DECL|method|getPercolate
specifier|public
name|PercolateStats
name|getPercolate
parameter_list|()
block|{
return|return
name|percolate
return|;
block|}
annotation|@
name|Nullable
DECL|method|getCompletion
specifier|public
name|CompletionStats
name|getCompletion
parameter_list|()
block|{
return|return
name|completion
return|;
block|}
annotation|@
name|Nullable
DECL|method|getSegments
specifier|public
name|SegmentsStats
name|getSegments
parameter_list|()
block|{
return|return
name|segments
return|;
block|}
annotation|@
name|Nullable
DECL|method|getTranslog
specifier|public
name|TranslogStats
name|getTranslog
parameter_list|()
block|{
return|return
name|translog
return|;
block|}
annotation|@
name|Nullable
DECL|method|getSuggest
specifier|public
name|SuggestStats
name|getSuggest
parameter_list|()
block|{
return|return
name|suggest
return|;
block|}
annotation|@
name|Nullable
DECL|method|getRequestCache
specifier|public
name|RequestCacheStats
name|getRequestCache
parameter_list|()
block|{
return|return
name|requestCache
return|;
block|}
annotation|@
name|Nullable
DECL|method|getRecoveryStats
specifier|public
name|RecoveryStats
name|getRecoveryStats
parameter_list|()
block|{
return|return
name|recoveryStats
return|;
block|}
DECL|method|readCommonStats
specifier|public
specifier|static
name|CommonStats
name|readCommonStats
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|CommonStats
name|stats
init|=
operator|new
name|CommonStats
argument_list|()
decl_stmt|;
name|stats
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|stats
return|;
block|}
comment|/**      * Utility method which computes total memory by adding      * FieldData, Percolate, Segments (memory, index writer, version map)      */
DECL|method|getTotalMemory
specifier|public
name|ByteSizeValue
name|getTotalMemory
parameter_list|()
block|{
name|long
name|size
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|getFieldData
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|this
operator|.
name|getFieldData
argument_list|()
operator|.
name|getMemorySizeInBytes
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|getQueryCache
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|this
operator|.
name|getQueryCache
argument_list|()
operator|.
name|getMemorySizeInBytes
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|getPercolate
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|this
operator|.
name|getPercolate
argument_list|()
operator|.
name|getMemorySizeInBytes
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|getSegments
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|this
operator|.
name|getSegments
argument_list|()
operator|.
name|getMemoryInBytes
argument_list|()
operator|+
name|this
operator|.
name|getSegments
argument_list|()
operator|.
name|getIndexWriterMemoryInBytes
argument_list|()
operator|+
name|this
operator|.
name|getSegments
argument_list|()
operator|.
name|getVersionMapMemoryInBytes
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|ByteSizeValue
argument_list|(
name|size
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|docs
operator|=
name|DocsStats
operator|.
name|readDocStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|store
operator|=
name|StoreStats
operator|.
name|readStoreStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|indexing
operator|=
name|IndexingStats
operator|.
name|readIndexingStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|get
operator|=
name|GetStats
operator|.
name|readGetStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|search
operator|=
name|SearchStats
operator|.
name|readSearchStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|merge
operator|=
name|MergeStats
operator|.
name|readMergeStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|refresh
operator|=
name|RefreshStats
operator|.
name|readRefreshStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|flush
operator|=
name|FlushStats
operator|.
name|readFlushStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|warmer
operator|=
name|WarmerStats
operator|.
name|readWarmerStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|queryCache
operator|=
name|QueryCacheStats
operator|.
name|readQueryCacheStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|fieldData
operator|=
name|FieldDataStats
operator|.
name|readFieldDataStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|percolate
operator|=
name|PercolateStats
operator|.
name|readPercolateStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|completion
operator|=
name|CompletionStats
operator|.
name|readCompletionStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|segments
operator|=
name|SegmentsStats
operator|.
name|readSegmentsStats
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
name|translog
operator|=
name|in
operator|.
name|readOptionalStreamable
argument_list|(
name|TranslogStats
operator|::
operator|new
argument_list|)
expr_stmt|;
name|suggest
operator|=
name|in
operator|.
name|readOptionalStreamable
argument_list|(
name|SuggestStats
operator|::
operator|new
argument_list|)
expr_stmt|;
name|requestCache
operator|=
name|in
operator|.
name|readOptionalStreamable
argument_list|(
name|RequestCacheStats
operator|::
operator|new
argument_list|)
expr_stmt|;
name|recoveryStats
operator|=
name|in
operator|.
name|readOptionalStreamable
argument_list|(
name|RecoveryStats
operator|::
operator|new
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|docs
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|docs
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|store
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|store
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|indexing
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|indexing
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|get
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|get
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|search
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|search
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|merge
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|merge
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|refresh
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|refresh
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|flush
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|flush
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|warmer
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|warmer
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|queryCache
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|queryCache
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fieldData
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|fieldData
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|percolate
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|percolate
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|completion
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|completion
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|segments
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|segments
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|writeOptionalStreamable
argument_list|(
name|translog
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeOptionalStreamable
argument_list|(
name|suggest
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeOptionalStreamable
argument_list|(
name|requestCache
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeOptionalStreamable
argument_list|(
name|recoveryStats
argument_list|)
expr_stmt|;
block|}
comment|// note, requires a wrapping object
annotation|@
name|Override
DECL|method|toXContent
specifier|public
name|XContentBuilder
name|toXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|docs
operator|!=
literal|null
condition|)
block|{
name|docs
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|store
operator|!=
literal|null
condition|)
block|{
name|store
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|indexing
operator|!=
literal|null
condition|)
block|{
name|indexing
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|get
operator|!=
literal|null
condition|)
block|{
name|get
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|search
operator|!=
literal|null
condition|)
block|{
name|search
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|merge
operator|!=
literal|null
condition|)
block|{
name|merge
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|refresh
operator|!=
literal|null
condition|)
block|{
name|refresh
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|flush
operator|!=
literal|null
condition|)
block|{
name|flush
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|warmer
operator|!=
literal|null
condition|)
block|{
name|warmer
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|queryCache
operator|!=
literal|null
condition|)
block|{
name|queryCache
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fieldData
operator|!=
literal|null
condition|)
block|{
name|fieldData
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|percolate
operator|!=
literal|null
condition|)
block|{
name|percolate
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|completion
operator|!=
literal|null
condition|)
block|{
name|completion
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|segments
operator|!=
literal|null
condition|)
block|{
name|segments
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|translog
operator|!=
literal|null
condition|)
block|{
name|translog
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|suggest
operator|!=
literal|null
condition|)
block|{
name|suggest
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|requestCache
operator|!=
literal|null
condition|)
block|{
name|requestCache
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|recoveryStats
operator|!=
literal|null
condition|)
block|{
name|recoveryStats
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
return|;
block|}
block|}
end_class

end_unit

