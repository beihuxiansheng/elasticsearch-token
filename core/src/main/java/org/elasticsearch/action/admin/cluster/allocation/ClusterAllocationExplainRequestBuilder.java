begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.cluster.allocation
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|allocation
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|IndicesOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|master
operator|.
name|MasterNodeOperationRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|ElasticsearchClient
import|;
end_import

begin_comment
comment|/**  * Builder for requests to explain the allocation of a shard in the cluster  */
end_comment

begin_class
DECL|class|ClusterAllocationExplainRequestBuilder
specifier|public
class|class
name|ClusterAllocationExplainRequestBuilder
extends|extends
name|MasterNodeOperationRequestBuilder
argument_list|<
name|ClusterAllocationExplainRequest
argument_list|,
name|ClusterAllocationExplainResponse
argument_list|,
name|ClusterAllocationExplainRequestBuilder
argument_list|>
block|{
DECL|method|ClusterAllocationExplainRequestBuilder
specifier|public
name|ClusterAllocationExplainRequestBuilder
parameter_list|(
name|ElasticsearchClient
name|client
parameter_list|,
name|ClusterAllocationExplainAction
name|action
parameter_list|)
block|{
name|super
argument_list|(
name|client
argument_list|,
name|action
argument_list|,
operator|new
name|ClusterAllocationExplainRequest
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/** The index name to use when finding the shard to explain */
DECL|method|setIndex
specifier|public
name|ClusterAllocationExplainRequestBuilder
name|setIndex
parameter_list|(
name|String
name|index
parameter_list|)
block|{
name|request
operator|.
name|setIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/** The shard number to use when finding the shard to explain */
DECL|method|setShard
specifier|public
name|ClusterAllocationExplainRequestBuilder
name|setShard
parameter_list|(
name|int
name|shard
parameter_list|)
block|{
name|request
operator|.
name|setShard
argument_list|(
name|shard
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/** Whether the primary or replica should be explained */
DECL|method|setPrimary
specifier|public
name|ClusterAllocationExplainRequestBuilder
name|setPrimary
parameter_list|(
name|boolean
name|primary
parameter_list|)
block|{
name|request
operator|.
name|setPrimary
argument_list|(
name|primary
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/** Whether to include "YES" decider decisions in the response instead of only "NO" decisions */
DECL|method|setIncludeYesDecisions
specifier|public
name|ClusterAllocationExplainRequestBuilder
name|setIncludeYesDecisions
parameter_list|(
name|boolean
name|includeYesDecisions
parameter_list|)
block|{
name|request
operator|.
name|includeYesDecisions
argument_list|(
name|includeYesDecisions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/** Whether to include information about the gathered disk information of nodes in the cluster */
DECL|method|setIncludeDiskInfo
specifier|public
name|ClusterAllocationExplainRequestBuilder
name|setIncludeDiskInfo
parameter_list|(
name|boolean
name|includeDiskInfo
parameter_list|)
block|{
name|request
operator|.
name|includeDiskInfo
argument_list|(
name|includeDiskInfo
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Signal that the first unassigned shard should be used      */
DECL|method|useAnyUnassignedShard
specifier|public
name|ClusterAllocationExplainRequestBuilder
name|useAnyUnassignedShard
parameter_list|()
block|{
name|request
operator|.
name|setIndex
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|request
operator|.
name|setShard
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|request
operator|.
name|setPrimary
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

