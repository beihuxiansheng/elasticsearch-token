begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.indices.shrink
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|shrink
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|create
operator|.
name|CreateIndexClusterStateUpdateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|create
operator|.
name|CreateIndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
operator|.
name|IndexShardStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
operator|.
name|IndicesStatsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|ActionFilters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|master
operator|.
name|TransportMasterNodeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ack
operator|.
name|ClusterStateUpdateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|block
operator|.
name|ClusterBlockException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|block
operator|.
name|ClusterBlockLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexNameExpressionResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|MetaDataCreateIndexService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|service
operator|.
name|ClusterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|DocsStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|IndexAlreadyExistsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|IntFunction
import|;
end_import

begin_comment
comment|/**  * Main class to initiate shrinking an index into a new index with a single shard  */
end_comment

begin_class
DECL|class|TransportShrinkAction
specifier|public
class|class
name|TransportShrinkAction
extends|extends
name|TransportMasterNodeAction
argument_list|<
name|ShrinkRequest
argument_list|,
name|ShrinkResponse
argument_list|>
block|{
DECL|field|createIndexService
specifier|private
specifier|final
name|MetaDataCreateIndexService
name|createIndexService
decl_stmt|;
DECL|field|client
specifier|private
specifier|final
name|Client
name|client
decl_stmt|;
annotation|@
name|Inject
DECL|method|TransportShrinkAction
specifier|public
name|TransportShrinkAction
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|TransportService
name|transportService
parameter_list|,
name|ClusterService
name|clusterService
parameter_list|,
name|ThreadPool
name|threadPool
parameter_list|,
name|MetaDataCreateIndexService
name|createIndexService
parameter_list|,
name|ActionFilters
name|actionFilters
parameter_list|,
name|IndexNameExpressionResolver
name|indexNameExpressionResolver
parameter_list|,
name|Client
name|client
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|,
name|ShrinkAction
operator|.
name|NAME
argument_list|,
name|transportService
argument_list|,
name|clusterService
argument_list|,
name|threadPool
argument_list|,
name|actionFilters
argument_list|,
name|indexNameExpressionResolver
argument_list|,
name|ShrinkRequest
operator|::
operator|new
argument_list|)
expr_stmt|;
name|this
operator|.
name|createIndexService
operator|=
name|createIndexService
expr_stmt|;
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|executor
specifier|protected
name|String
name|executor
parameter_list|()
block|{
comment|// we go async right away
return|return
name|ThreadPool
operator|.
name|Names
operator|.
name|SAME
return|;
block|}
annotation|@
name|Override
DECL|method|newResponse
specifier|protected
name|ShrinkResponse
name|newResponse
parameter_list|()
block|{
return|return
operator|new
name|ShrinkResponse
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|checkBlock
specifier|protected
name|ClusterBlockException
name|checkBlock
parameter_list|(
name|ShrinkRequest
name|request
parameter_list|,
name|ClusterState
name|state
parameter_list|)
block|{
return|return
name|state
operator|.
name|blocks
argument_list|()
operator|.
name|indexBlockedException
argument_list|(
name|ClusterBlockLevel
operator|.
name|METADATA_WRITE
argument_list|,
name|request
operator|.
name|getShrinkIndexRequest
argument_list|()
operator|.
name|index
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|masterOperation
specifier|protected
name|void
name|masterOperation
parameter_list|(
specifier|final
name|ShrinkRequest
name|shrinkRequest
parameter_list|,
specifier|final
name|ClusterState
name|state
parameter_list|,
specifier|final
name|ActionListener
argument_list|<
name|ShrinkResponse
argument_list|>
name|listener
parameter_list|)
block|{
specifier|final
name|String
name|sourceIndex
init|=
name|indexNameExpressionResolver
operator|.
name|resolveDateMathExpression
argument_list|(
name|shrinkRequest
operator|.
name|getSourceIndex
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|prepareStats
argument_list|(
name|sourceIndex
argument_list|)
operator|.
name|clear
argument_list|()
operator|.
name|setDocs
argument_list|(
literal|true
argument_list|)
operator|.
name|execute
argument_list|(
operator|new
name|ActionListener
argument_list|<
name|IndicesStatsResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|IndicesStatsResponse
name|indicesStatsResponse
parameter_list|)
block|{
name|CreateIndexClusterStateUpdateRequest
name|updateRequest
init|=
name|prepareCreateIndexRequest
argument_list|(
name|shrinkRequest
argument_list|,
name|state
argument_list|,
parameter_list|(
name|i
parameter_list|)
lambda|->
block|{
name|IndexShardStats
name|shard
init|=
name|indicesStatsResponse
operator|.
name|getIndex
argument_list|(
name|sourceIndex
argument_list|)
operator|.
name|getIndexShards
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
return|return
name|shard
operator|==
literal|null
condition|?
literal|null
else|:
name|shard
operator|.
name|getPrimary
argument_list|()
operator|.
name|getDocs
argument_list|()
return|;
block|}
argument_list|,
name|indexNameExpressionResolver
argument_list|)
decl_stmt|;
name|createIndexService
operator|.
name|createIndex
argument_list|(
name|updateRequest
argument_list|,
operator|new
name|ActionListener
argument_list|<
name|ClusterStateUpdateResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|ClusterStateUpdateResponse
name|response
parameter_list|)
block|{
name|listener
operator|.
name|onResponse
argument_list|(
operator|new
name|ShrinkResponse
argument_list|(
name|response
operator|.
name|isAcknowledged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Exception
name|t
parameter_list|)
block|{
if|if
condition|(
name|t
operator|instanceof
name|IndexAlreadyExistsException
condition|)
block|{
name|logger
operator|.
name|trace
argument_list|(
literal|"[{}] failed to create shrink index"
argument_list|,
name|t
argument_list|,
name|updateRequest
operator|.
name|index
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|logger
operator|.
name|debug
argument_list|(
literal|"[{}] failed to create shrink index"
argument_list|,
name|t
argument_list|,
name|updateRequest
operator|.
name|index
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|listener
operator|.
name|onFailure
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|listener
operator|.
name|onFailure
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|// static for unittesting this method
DECL|method|prepareCreateIndexRequest
specifier|static
name|CreateIndexClusterStateUpdateRequest
name|prepareCreateIndexRequest
parameter_list|(
specifier|final
name|ShrinkRequest
name|shrinkReqeust
parameter_list|,
specifier|final
name|ClusterState
name|state
parameter_list|,
specifier|final
name|IntFunction
argument_list|<
name|DocsStats
argument_list|>
name|perShardDocStats
parameter_list|,
name|IndexNameExpressionResolver
name|indexNameExpressionResolver
parameter_list|)
block|{
specifier|final
name|String
name|sourceIndex
init|=
name|indexNameExpressionResolver
operator|.
name|resolveDateMathExpression
argument_list|(
name|shrinkReqeust
operator|.
name|getSourceIndex
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|CreateIndexRequest
name|targetIndex
init|=
name|shrinkReqeust
operator|.
name|getShrinkIndexRequest
argument_list|()
decl_stmt|;
specifier|final
name|String
name|targetIndexName
init|=
name|indexNameExpressionResolver
operator|.
name|resolveDateMathExpression
argument_list|(
name|targetIndex
operator|.
name|index
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|IndexMetaData
name|metaData
init|=
name|state
operator|.
name|metaData
argument_list|()
operator|.
name|index
argument_list|(
name|sourceIndex
argument_list|)
decl_stmt|;
specifier|final
name|Settings
name|targetIndexSettings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|targetIndex
operator|.
name|settings
argument_list|()
argument_list|)
operator|.
name|normalizePrefix
argument_list|(
name|IndexMetaData
operator|.
name|INDEX_SETTING_PREFIX
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|int
name|numShards
init|=
literal|1
decl_stmt|;
if|if
condition|(
name|IndexMetaData
operator|.
name|INDEX_NUMBER_OF_SHARDS_SETTING
operator|.
name|exists
argument_list|(
name|targetIndexSettings
argument_list|)
condition|)
block|{
name|numShards
operator|=
name|IndexMetaData
operator|.
name|INDEX_NUMBER_OF_SHARDS_SETTING
operator|.
name|get
argument_list|(
name|targetIndexSettings
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numShards
condition|;
name|i
operator|++
control|)
block|{
name|Set
argument_list|<
name|ShardId
argument_list|>
name|shardIds
init|=
name|IndexMetaData
operator|.
name|selectShrinkShards
argument_list|(
name|i
argument_list|,
name|metaData
argument_list|,
name|numShards
argument_list|)
decl_stmt|;
name|long
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|ShardId
name|id
range|:
name|shardIds
control|)
block|{
name|DocsStats
name|docsStats
init|=
name|perShardDocStats
operator|.
name|apply
argument_list|(
name|id
operator|.
name|id
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|docsStats
operator|!=
literal|null
condition|)
block|{
name|count
operator|+=
name|docsStats
operator|.
name|getCount
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|count
operator|>
name|IndexWriter
operator|.
name|MAX_DOCS
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Can't merge index with more than ["
operator|+
name|IndexWriter
operator|.
name|MAX_DOCS
operator|+
literal|"] docs - too many documents in shards "
operator|+
name|shardIds
argument_list|)
throw|;
block|}
block|}
block|}
name|targetIndex
operator|.
name|cause
argument_list|(
literal|"shrink_index"
argument_list|)
expr_stmt|;
name|Settings
operator|.
name|Builder
name|settingsBuilder
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|targetIndexSettings
argument_list|)
decl_stmt|;
name|settingsBuilder
operator|.
name|put
argument_list|(
literal|"index.number_of_shards"
argument_list|,
name|numShards
argument_list|)
expr_stmt|;
name|targetIndex
operator|.
name|settings
argument_list|(
name|settingsBuilder
argument_list|)
expr_stmt|;
return|return
operator|new
name|CreateIndexClusterStateUpdateRequest
argument_list|(
name|targetIndex
argument_list|,
literal|"shrink_index"
argument_list|,
name|targetIndexName
argument_list|,
literal|true
argument_list|)
comment|// mappings are updated on the node when merging in the shards, this prevents race-conditions since all mapping must be
comment|// applied once we took the snapshot and if somebody fucks things up and switches the index read/write and adds docs we miss
comment|// the mappings for everything is corrupted and hard to debug
operator|.
name|ackTimeout
argument_list|(
name|targetIndex
operator|.
name|timeout
argument_list|()
argument_list|)
operator|.
name|masterNodeTimeout
argument_list|(
name|targetIndex
operator|.
name|masterNodeTimeout
argument_list|()
argument_list|)
operator|.
name|settings
argument_list|(
name|targetIndex
operator|.
name|settings
argument_list|()
argument_list|)
operator|.
name|aliases
argument_list|(
name|targetIndex
operator|.
name|aliases
argument_list|()
argument_list|)
operator|.
name|customs
argument_list|(
name|targetIndex
operator|.
name|customs
argument_list|()
argument_list|)
operator|.
name|shrinkFrom
argument_list|(
name|metaData
operator|.
name|getIndex
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

