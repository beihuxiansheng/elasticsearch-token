begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.indices.rollover
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|rollover
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|RolloverResponse
specifier|public
specifier|final
class|class
name|RolloverResponse
extends|extends
name|ActionResponse
block|{
DECL|field|oldIndex
specifier|private
name|String
name|oldIndex
decl_stmt|;
DECL|field|newIndex
specifier|private
name|String
name|newIndex
decl_stmt|;
DECL|method|RolloverResponse
name|RolloverResponse
parameter_list|()
block|{     }
DECL|method|RolloverResponse
name|RolloverResponse
parameter_list|(
name|String
name|oldIndex
parameter_list|,
name|String
name|newIndex
parameter_list|)
block|{
name|this
operator|.
name|oldIndex
operator|=
name|oldIndex
expr_stmt|;
name|this
operator|.
name|newIndex
operator|=
name|newIndex
expr_stmt|;
block|}
DECL|method|getOldIndex
specifier|public
name|String
name|getOldIndex
parameter_list|()
block|{
return|return
name|oldIndex
return|;
block|}
DECL|method|getNewIndex
specifier|public
name|String
name|getNewIndex
parameter_list|()
block|{
return|return
name|newIndex
return|;
block|}
annotation|@
name|Override
DECL|method|readFrom
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|oldIndex
operator|=
name|in
operator|.
name|readString
argument_list|()
expr_stmt|;
name|newIndex
operator|=
name|in
operator|.
name|readString
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeString
argument_list|(
name|oldIndex
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeString
argument_list|(
name|newIndex
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

