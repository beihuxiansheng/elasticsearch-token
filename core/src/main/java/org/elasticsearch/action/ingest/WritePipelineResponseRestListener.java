begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.ingest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ingest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|action
operator|.
name|support
operator|.
name|AcknowledgedRestListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|WritePipelineResponseRestListener
specifier|public
class|class
name|WritePipelineResponseRestListener
extends|extends
name|AcknowledgedRestListener
argument_list|<
name|WritePipelineResponse
argument_list|>
block|{
DECL|method|WritePipelineResponseRestListener
specifier|public
name|WritePipelineResponseRestListener
parameter_list|(
name|RestChannel
name|channel
parameter_list|)
block|{
name|super
argument_list|(
name|channel
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addCustomFields
specifier|protected
name|void
name|addCustomFields
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|WritePipelineResponse
name|response
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|response
operator|.
name|isAcknowledged
argument_list|()
condition|)
block|{
name|response
operator|.
name|getError
argument_list|()
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

