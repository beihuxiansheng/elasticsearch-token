begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cluster
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_comment
comment|/**  * Cluster state update task configuration for timeout and priority  */
end_comment

begin_interface
DECL|interface|ClusterStateTaskConfig
specifier|public
interface|interface
name|ClusterStateTaskConfig
block|{
comment|/**      * The timeout for this cluster state update task configuration. If      * the cluster state update task isn't processed within this      * timeout, the associated {@link ClusterStateTaskListener#onFailure(String, Throwable)}      * is invoked.      *      * @return the timeout, or null if one is not set      */
annotation|@
name|Nullable
DECL|method|timeout
name|TimeValue
name|timeout
parameter_list|()
function_decl|;
comment|/**      * The {@link Priority} for this cluster state update task configuration.      *      * @return the priority      */
DECL|method|priority
name|Priority
name|priority
parameter_list|()
function_decl|;
comment|/**      * Build a cluster state update task configuration with the      * specified {@link Priority} and no timeout.      *      * @param priority the priority for the associated cluster state      *                 update task      * @return the resulting cluster state update task configuration      */
DECL|method|build
specifier|static
name|ClusterStateTaskConfig
name|build
parameter_list|(
name|Priority
name|priority
parameter_list|)
block|{
return|return
operator|new
name|Basic
argument_list|(
name|priority
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|/**      * Build a cluster state update task configuration with the      * specified {@link Priority} and timeout.      *      * @param priority the priority for the associated cluster state      *                 update task      * @param timeout  the timeout for the associated cluster state      *                 update task      * @return the result cluster state update task configuration      */
DECL|method|build
specifier|static
name|ClusterStateTaskConfig
name|build
parameter_list|(
name|Priority
name|priority
parameter_list|,
name|TimeValue
name|timeout
parameter_list|)
block|{
return|return
operator|new
name|Basic
argument_list|(
name|priority
argument_list|,
name|timeout
argument_list|)
return|;
block|}
DECL|class|Basic
class|class
name|Basic
implements|implements
name|ClusterStateTaskConfig
block|{
DECL|field|timeout
specifier|final
name|TimeValue
name|timeout
decl_stmt|;
DECL|field|priority
specifier|final
name|Priority
name|priority
decl_stmt|;
DECL|method|Basic
specifier|public
name|Basic
parameter_list|(
name|Priority
name|priority
parameter_list|,
name|TimeValue
name|timeout
parameter_list|)
block|{
name|this
operator|.
name|timeout
operator|=
name|timeout
expr_stmt|;
name|this
operator|.
name|priority
operator|=
name|priority
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|timeout
specifier|public
name|TimeValue
name|timeout
parameter_list|()
block|{
return|return
name|timeout
return|;
block|}
annotation|@
name|Override
DECL|method|priority
specifier|public
name|Priority
name|priority
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
block|}
block|}
end_interface

end_unit

