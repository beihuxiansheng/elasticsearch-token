begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.cluster.routing.allocation.command
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|command
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|RerouteExplanation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|allocation
operator|.
name|RoutingAllocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|NamedWriteable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentParser
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * This interface defines the basic methods of commands for allocation  */
end_comment

begin_interface
DECL|interface|AllocationCommand
specifier|public
interface|interface
name|AllocationCommand
extends|extends
name|NamedWriteable
argument_list|<
name|AllocationCommand
argument_list|>
extends|,
name|ToXContent
block|{
DECL|interface|Parser
interface|interface
name|Parser
parameter_list|<
name|T
extends|extends
name|AllocationCommand
parameter_list|>
block|{
comment|/**          * Reads an {@link AllocationCommand} of type<code>T</code> from a {@link XContentParser}.          * @param parser {@link XContentParser} to use          * @return {@link AllocationCommand} read          * @throws IOException if something happens during reading          */
DECL|method|fromXContent
name|T
name|fromXContent
parameter_list|(
name|XContentParser
name|parser
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
comment|/**      * Get the name of the command      * @return name of the command      */
DECL|method|name
name|String
name|name
parameter_list|()
function_decl|;
comment|/**      * Executes the command on a {@link RoutingAllocation} setup      * @param allocation {@link RoutingAllocation} to modify      * @throws org.elasticsearch.ElasticsearchException if something happens during reconfiguration      */
DECL|method|execute
name|RerouteExplanation
name|execute
parameter_list|(
name|RoutingAllocation
name|allocation
parameter_list|,
name|boolean
name|explain
parameter_list|)
function_decl|;
annotation|@
name|Override
DECL|method|getWriteableName
specifier|default
name|String
name|getWriteableName
parameter_list|()
block|{
return|return
name|name
argument_list|()
return|;
block|}
block|}
end_interface

end_unit

