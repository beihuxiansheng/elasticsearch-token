begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.logging
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|SuppressLoggerChecks
import|;
end_import

begin_comment
comment|/**  * A logger that logs deprecation notices.  */
end_comment

begin_class
DECL|class|DeprecationLogger
specifier|public
class|class
name|DeprecationLogger
block|{
DECL|field|logger
specifier|private
specifier|final
name|ESLogger
name|logger
decl_stmt|;
comment|/**      * Creates a new deprecation logger based on the parent logger. Automatically      * prefixes the logger name with "deprecation", if it starts with "org.elasticsearch.",      * it replaces "org.elasticsearch" with "org.elasticsearch.deprecation" to maintain      * the "org.elasticsearch" namespace.      */
DECL|method|DeprecationLogger
specifier|public
name|DeprecationLogger
parameter_list|(
name|ESLogger
name|parentLogger
parameter_list|)
block|{
name|String
name|name
init|=
name|parentLogger
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"org.elasticsearch"
argument_list|)
condition|)
block|{
name|name
operator|=
name|name
operator|.
name|replace
argument_list|(
literal|"org.elasticsearch."
argument_list|,
literal|"org.elasticsearch.deprecation."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|name
operator|=
literal|"deprecation."
operator|+
name|name
expr_stmt|;
block|}
name|this
operator|.
name|logger
operator|=
name|ESLoggerFactory
operator|.
name|getLogger
argument_list|(
name|parentLogger
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
comment|/**      * Logs a deprecated message.      */
annotation|@
name|SuppressLoggerChecks
argument_list|(
name|reason
operator|=
literal|"safely delegates to logger"
argument_list|)
DECL|method|deprecated
specifier|public
name|void
name|deprecated
parameter_list|(
name|String
name|msg
parameter_list|,
name|Object
modifier|...
name|params
parameter_list|)
block|{
name|logger
operator|.
name|debug
argument_list|(
name|msg
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

