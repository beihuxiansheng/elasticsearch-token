begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.logging
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|message
operator|.
name|MessageFactory2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|message
operator|.
name|ObjectMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|message
operator|.
name|ParameterizedMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|message
operator|.
name|SimpleMessage
import|;
end_import

begin_class
DECL|class|PrefixMessageFactory
specifier|public
class|class
name|PrefixMessageFactory
implements|implements
name|MessageFactory2
block|{
DECL|field|prefix
specifier|private
name|String
name|prefix
init|=
literal|""
decl_stmt|;
DECL|method|getPrefix
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
return|return
name|prefix
return|;
block|}
DECL|method|setPrefix
specifier|public
name|void
name|setPrefix
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
return|return
operator|new
name|PrefixObjectMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|)
return|;
block|}
DECL|class|PrefixObjectMessage
specifier|private
specifier|static
class|class
name|PrefixObjectMessage
extends|extends
name|ObjectMessage
block|{
DECL|field|prefix
specifier|private
specifier|final
name|String
name|prefix
decl_stmt|;
DECL|field|object
specifier|private
specifier|final
name|Object
name|object
decl_stmt|;
DECL|field|prefixObjectString
specifier|private
name|String
name|prefixObjectString
decl_stmt|;
DECL|method|PrefixObjectMessage
specifier|private
name|PrefixObjectMessage
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|super
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
name|this
operator|.
name|object
operator|=
name|object
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getFormattedMessage
specifier|public
name|String
name|getFormattedMessage
parameter_list|()
block|{
if|if
condition|(
name|prefixObjectString
operator|==
literal|null
condition|)
block|{
name|prefixObjectString
operator|=
name|prefix
operator|+
name|super
operator|.
name|getFormattedMessage
argument_list|()
expr_stmt|;
block|}
return|return
name|prefixObjectString
return|;
block|}
annotation|@
name|Override
DECL|method|formatTo
specifier|public
name|void
name|formatTo
parameter_list|(
name|StringBuilder
name|buffer
parameter_list|)
block|{
name|buffer
operator|.
name|append
argument_list|(
name|prefix
argument_list|)
expr_stmt|;
name|super
operator|.
name|formatTo
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParameters
specifier|public
name|Object
index|[]
name|getParameters
parameter_list|()
block|{
return|return
operator|new
name|Object
index|[]
block|{
name|prefix
block|,
name|object
block|}
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
return|return
operator|new
name|PrefixSimpleMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|)
return|;
block|}
DECL|class|PrefixSimpleMessage
specifier|private
specifier|static
class|class
name|PrefixSimpleMessage
extends|extends
name|SimpleMessage
block|{
DECL|field|prefix
specifier|private
specifier|final
name|String
name|prefix
decl_stmt|;
DECL|field|prefixMessage
specifier|private
name|String
name|prefixMessage
decl_stmt|;
DECL|method|PrefixSimpleMessage
name|PrefixSimpleMessage
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|super
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
block|}
DECL|method|PrefixSimpleMessage
name|PrefixSimpleMessage
parameter_list|(
name|String
name|prefix
parameter_list|,
name|CharSequence
name|charSequence
parameter_list|)
block|{
name|super
argument_list|(
name|charSequence
argument_list|)
expr_stmt|;
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getFormattedMessage
specifier|public
name|String
name|getFormattedMessage
parameter_list|()
block|{
if|if
condition|(
name|prefixMessage
operator|==
literal|null
condition|)
block|{
name|prefixMessage
operator|=
name|prefix
operator|+
name|super
operator|.
name|getFormattedMessage
argument_list|()
expr_stmt|;
block|}
return|return
name|prefixMessage
return|;
block|}
annotation|@
name|Override
DECL|method|formatTo
specifier|public
name|void
name|formatTo
parameter_list|(
name|StringBuilder
name|buffer
parameter_list|)
block|{
name|buffer
operator|.
name|append
argument_list|(
name|prefix
argument_list|)
expr_stmt|;
name|super
operator|.
name|formatTo
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|length
specifier|public
name|int
name|length
parameter_list|()
block|{
return|return
name|prefixMessage
operator|.
name|length
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|charAt
specifier|public
name|char
name|charAt
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|prefixMessage
operator|.
name|charAt
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|subSequence
specifier|public
name|CharSequence
name|subSequence
parameter_list|(
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
return|return
name|prefixMessage
operator|.
name|subSequence
argument_list|(
name|start
argument_list|,
name|end
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
modifier|...
name|params
parameter_list|)
block|{
return|return
operator|new
name|PrefixParameterizedMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|,
name|params
argument_list|)
return|;
block|}
DECL|class|PrefixParameterizedMessage
specifier|private
specifier|static
class|class
name|PrefixParameterizedMessage
extends|extends
name|ParameterizedMessage
block|{
DECL|field|threadLocalStringBuilder
specifier|private
specifier|static
name|ThreadLocal
argument_list|<
name|StringBuilder
argument_list|>
name|threadLocalStringBuilder
init|=
name|ThreadLocal
operator|.
name|withInitial
argument_list|(
name|StringBuilder
operator|::
operator|new
argument_list|)
decl_stmt|;
DECL|field|prefix
specifier|private
specifier|final
name|String
name|prefix
decl_stmt|;
DECL|field|formattedMessage
specifier|private
name|String
name|formattedMessage
decl_stmt|;
DECL|method|PrefixParameterizedMessage
specifier|private
name|PrefixParameterizedMessage
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|messagePattern
parameter_list|,
name|Object
modifier|...
name|arguments
parameter_list|)
block|{
name|super
argument_list|(
name|messagePattern
argument_list|,
name|arguments
argument_list|)
expr_stmt|;
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getFormattedMessage
specifier|public
name|String
name|getFormattedMessage
parameter_list|()
block|{
if|if
condition|(
name|formattedMessage
operator|==
literal|null
condition|)
block|{
specifier|final
name|StringBuilder
name|buffer
init|=
name|threadLocalStringBuilder
operator|.
name|get
argument_list|()
decl_stmt|;
name|buffer
operator|.
name|setLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|formatTo
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
name|formattedMessage
operator|=
name|buffer
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
return|return
name|formattedMessage
return|;
block|}
annotation|@
name|Override
DECL|method|formatTo
specifier|public
name|void
name|formatTo
parameter_list|(
name|StringBuilder
name|buffer
parameter_list|)
block|{
name|buffer
operator|.
name|append
argument_list|(
name|prefix
argument_list|)
expr_stmt|;
name|super
operator|.
name|formatTo
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|CharSequence
name|charSequence
parameter_list|)
block|{
return|return
operator|new
name|PrefixSimpleMessage
argument_list|(
name|prefix
argument_list|,
name|charSequence
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|p0
parameter_list|)
block|{
return|return
operator|new
name|PrefixParameterizedMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|,
name|p0
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|p0
parameter_list|,
name|Object
name|p1
parameter_list|)
block|{
return|return
operator|new
name|PrefixParameterizedMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|,
name|p0
argument_list|,
name|p1
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|p0
parameter_list|,
name|Object
name|p1
parameter_list|,
name|Object
name|p2
parameter_list|)
block|{
return|return
operator|new
name|PrefixParameterizedMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|,
name|p0
argument_list|,
name|p1
argument_list|,
name|p2
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|p0
parameter_list|,
name|Object
name|p1
parameter_list|,
name|Object
name|p2
parameter_list|,
name|Object
name|p3
parameter_list|)
block|{
return|return
operator|new
name|PrefixParameterizedMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|,
name|p0
argument_list|,
name|p1
argument_list|,
name|p2
argument_list|,
name|p3
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|p0
parameter_list|,
name|Object
name|p1
parameter_list|,
name|Object
name|p2
parameter_list|,
name|Object
name|p3
parameter_list|,
name|Object
name|p4
parameter_list|)
block|{
return|return
operator|new
name|PrefixParameterizedMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|,
name|p0
argument_list|,
name|p1
argument_list|,
name|p2
argument_list|,
name|p3
argument_list|,
name|p4
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|p0
parameter_list|,
name|Object
name|p1
parameter_list|,
name|Object
name|p2
parameter_list|,
name|Object
name|p3
parameter_list|,
name|Object
name|p4
parameter_list|,
name|Object
name|p5
parameter_list|)
block|{
return|return
operator|new
name|PrefixParameterizedMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|,
name|p0
argument_list|,
name|p1
argument_list|,
name|p2
argument_list|,
name|p3
argument_list|,
name|p4
argument_list|,
name|p5
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|p0
parameter_list|,
name|Object
name|p1
parameter_list|,
name|Object
name|p2
parameter_list|,
name|Object
name|p3
parameter_list|,
name|Object
name|p4
parameter_list|,
name|Object
name|p5
parameter_list|,
name|Object
name|p6
parameter_list|)
block|{
return|return
operator|new
name|PrefixParameterizedMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|,
name|p0
argument_list|,
name|p1
argument_list|,
name|p2
argument_list|,
name|p3
argument_list|,
name|p4
argument_list|,
name|p5
argument_list|,
name|p6
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|p0
parameter_list|,
name|Object
name|p1
parameter_list|,
name|Object
name|p2
parameter_list|,
name|Object
name|p3
parameter_list|,
name|Object
name|p4
parameter_list|,
name|Object
name|p5
parameter_list|,
name|Object
name|p6
parameter_list|,
name|Object
name|p7
parameter_list|)
block|{
return|return
operator|new
name|PrefixParameterizedMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|,
name|p0
argument_list|,
name|p1
argument_list|,
name|p2
argument_list|,
name|p3
argument_list|,
name|p4
argument_list|,
name|p5
argument_list|,
name|p6
argument_list|,
name|p7
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|p0
parameter_list|,
name|Object
name|p1
parameter_list|,
name|Object
name|p2
parameter_list|,
name|Object
name|p3
parameter_list|,
name|Object
name|p4
parameter_list|,
name|Object
name|p5
parameter_list|,
name|Object
name|p6
parameter_list|,
name|Object
name|p7
parameter_list|,
name|Object
name|p8
parameter_list|)
block|{
return|return
operator|new
name|PrefixParameterizedMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|,
name|p0
argument_list|,
name|p1
argument_list|,
name|p2
argument_list|,
name|p3
argument_list|,
name|p4
argument_list|,
name|p5
argument_list|,
name|p6
argument_list|,
name|p7
argument_list|,
name|p8
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newMessage
specifier|public
name|Message
name|newMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|p0
parameter_list|,
name|Object
name|p1
parameter_list|,
name|Object
name|p2
parameter_list|,
name|Object
name|p3
parameter_list|,
name|Object
name|p4
parameter_list|,
name|Object
name|p5
parameter_list|,
name|Object
name|p6
parameter_list|,
name|Object
name|p7
parameter_list|,
name|Object
name|p8
parameter_list|,
name|Object
name|p9
parameter_list|)
block|{
return|return
operator|new
name|PrefixParameterizedMessage
argument_list|(
name|prefix
argument_list|,
name|message
argument_list|,
name|p0
argument_list|,
name|p1
argument_list|,
name|p2
argument_list|,
name|p3
argument_list|,
name|p4
argument_list|,
name|p5
argument_list|,
name|p6
argument_list|,
name|p7
argument_list|,
name|p8
argument_list|,
name|p9
argument_list|)
return|;
block|}
block|}
end_class

end_unit

