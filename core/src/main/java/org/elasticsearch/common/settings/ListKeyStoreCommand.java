begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.settings
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|OptionSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cli
operator|.
name|EnvironmentAwareCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cli
operator|.
name|ExitCodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cli
operator|.
name|Terminal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cli
operator|.
name|UserException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|env
operator|.
name|Environment
import|;
end_import

begin_comment
comment|/**  * A subcommand for the keystore cli to list all settings in the keystore.  */
end_comment

begin_class
DECL|class|ListKeyStoreCommand
class|class
name|ListKeyStoreCommand
extends|extends
name|EnvironmentAwareCommand
block|{
DECL|method|ListKeyStoreCommand
name|ListKeyStoreCommand
parameter_list|()
block|{
name|super
argument_list|(
literal|"List entries in the keystore"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|execute
specifier|protected
name|void
name|execute
parameter_list|(
name|Terminal
name|terminal
parameter_list|,
name|OptionSet
name|options
parameter_list|,
name|Environment
name|env
parameter_list|)
throws|throws
name|Exception
block|{
name|KeyStoreWrapper
name|keystore
init|=
name|KeyStoreWrapper
operator|.
name|load
argument_list|(
name|env
operator|.
name|configFile
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|keystore
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|UserException
argument_list|(
name|ExitCodes
operator|.
name|DATA_ERROR
argument_list|,
literal|"Elasticsearch keystore not found. Use 'create' command to create one."
argument_list|)
throw|;
block|}
name|keystore
operator|.
name|decrypt
argument_list|(
operator|new
name|char
index|[
literal|0
index|]
comment|/* TODO: prompt for password when they are supported */
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|sortedEntries
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|keystore
operator|.
name|getSettings
argument_list|()
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|sortedEntries
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|entry
range|:
name|sortedEntries
control|)
block|{
name|terminal
operator|.
name|println
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

