begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.geo.builders
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|builders
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
operator|.
name|ShapesAvailability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|NamedWriteableRegistry
import|;
end_import

begin_comment
comment|/**  * Register the shape builder prototypes with the {@link NamedWriteableRegistry}  */
end_comment

begin_class
DECL|class|ShapeBuilderRegistry
specifier|public
class|class
name|ShapeBuilderRegistry
block|{
annotation|@
name|Inject
DECL|method|ShapeBuilderRegistry
specifier|public
name|ShapeBuilderRegistry
parameter_list|(
name|NamedWriteableRegistry
name|namedWriteableRegistry
parameter_list|)
block|{
if|if
condition|(
name|ShapesAvailability
operator|.
name|JTS_AVAILABLE
operator|&&
name|ShapesAvailability
operator|.
name|SPATIAL4J_AVAILABLE
condition|)
block|{
name|namedWriteableRegistry
operator|.
name|registerPrototype
argument_list|(
name|ShapeBuilder
operator|.
name|class
argument_list|,
name|PointBuilder
operator|.
name|PROTOTYPE
argument_list|)
expr_stmt|;
name|namedWriteableRegistry
operator|.
name|registerPrototype
argument_list|(
name|ShapeBuilder
operator|.
name|class
argument_list|,
name|CircleBuilder
operator|.
name|PROTOTYPE
argument_list|)
expr_stmt|;
name|namedWriteableRegistry
operator|.
name|registerPrototype
argument_list|(
name|ShapeBuilder
operator|.
name|class
argument_list|,
name|EnvelopeBuilder
operator|.
name|PROTOTYPE
argument_list|)
expr_stmt|;
name|namedWriteableRegistry
operator|.
name|registerPrototype
argument_list|(
name|ShapeBuilder
operator|.
name|class
argument_list|,
name|MultiPointBuilder
operator|.
name|PROTOTYPE
argument_list|)
expr_stmt|;
name|namedWriteableRegistry
operator|.
name|registerPrototype
argument_list|(
name|ShapeBuilder
operator|.
name|class
argument_list|,
name|LineStringBuilder
operator|.
name|PROTOTYPE
argument_list|)
expr_stmt|;
name|namedWriteableRegistry
operator|.
name|registerPrototype
argument_list|(
name|ShapeBuilder
operator|.
name|class
argument_list|,
name|MultiLineStringBuilder
operator|.
name|PROTOTYPE
argument_list|)
expr_stmt|;
name|namedWriteableRegistry
operator|.
name|registerPrototype
argument_list|(
name|ShapeBuilder
operator|.
name|class
argument_list|,
name|PolygonBuilder
operator|.
name|PROTOTYPE
argument_list|)
expr_stmt|;
name|namedWriteableRegistry
operator|.
name|registerPrototype
argument_list|(
name|ShapeBuilder
operator|.
name|class
argument_list|,
name|MultiPolygonBuilder
operator|.
name|PROTOTYPE
argument_list|)
expr_stmt|;
name|namedWriteableRegistry
operator|.
name|registerPrototype
argument_list|(
name|ShapeBuilder
operator|.
name|class
argument_list|,
name|GeometryCollectionBuilder
operator|.
name|PROTOTYPE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

