begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.geo
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|geo
package|;
end_package

begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|context
operator|.
name|SpatialContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|shape
operator|.
name|Rectangle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|shape
operator|.
name|Shape
import|;
end_import

begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|shape
operator|.
name|ShapeCollection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Overrides bounding box logic in ShapeCollection base class to comply with  * OGC OpenGIS Abstract Specification: An Object Model for Interoperable Geoprocessing.  *  * NOTE: This algorithm is O(N) and can possibly be improved O(log n) using an internal R*-Tree  * data structure for a collection of bounding boxes  */
end_comment

begin_class
DECL|class|XShapeCollection
specifier|public
class|class
name|XShapeCollection
parameter_list|<
name|S
extends|extends
name|Shape
parameter_list|>
extends|extends
name|ShapeCollection
argument_list|<
name|S
argument_list|>
block|{
DECL|field|pointsOnly
specifier|private
name|boolean
name|pointsOnly
init|=
literal|false
decl_stmt|;
DECL|method|XShapeCollection
specifier|public
name|XShapeCollection
parameter_list|(
name|List
argument_list|<
name|S
argument_list|>
name|shapes
parameter_list|,
name|SpatialContext
name|ctx
parameter_list|)
block|{
name|super
argument_list|(
name|shapes
argument_list|,
name|ctx
argument_list|)
expr_stmt|;
block|}
DECL|method|pointsOnly
specifier|public
name|boolean
name|pointsOnly
parameter_list|()
block|{
return|return
name|this
operator|.
name|pointsOnly
return|;
block|}
DECL|method|setPointsOnly
specifier|public
name|void
name|setPointsOnly
parameter_list|(
name|boolean
name|pointsOnly
parameter_list|)
block|{
name|this
operator|.
name|pointsOnly
operator|=
name|pointsOnly
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|computeBoundingBox
specifier|protected
name|Rectangle
name|computeBoundingBox
parameter_list|(
name|Collection
argument_list|<
name|?
extends|extends
name|Shape
argument_list|>
name|shapes
parameter_list|,
name|SpatialContext
name|ctx
parameter_list|)
block|{
name|Rectangle
name|retBox
init|=
name|shapes
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getBoundingBox
argument_list|()
decl_stmt|;
for|for
control|(
name|Shape
name|geom
range|:
name|shapes
control|)
block|{
name|retBox
operator|=
name|expandBBox
argument_list|(
name|retBox
argument_list|,
name|geom
operator|.
name|getBoundingBox
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|retBox
return|;
block|}
comment|/**    * Spatial4J shapes have no knowledge of directed edges. For this reason, a bounding box    * that wraps the dateline can have a min longitude that is mathematically&gt; than the    * Rectangles' minX value.  This is an issue for geometric collections (e.g., MultiPolygon    * and ShapeCollection) Until geometry logic can be cleaned up in Spatial4J, ES provides    * the following expansion algorithm for GeometryCollections    */
DECL|method|expandBBox
specifier|private
name|Rectangle
name|expandBBox
parameter_list|(
name|Rectangle
name|bbox
parameter_list|,
name|Rectangle
name|expand
parameter_list|)
block|{
if|if
condition|(
name|bbox
operator|.
name|equals
argument_list|(
name|expand
argument_list|)
operator|||
name|bbox
operator|.
name|equals
argument_list|(
name|SpatialContext
operator|.
name|GEO
operator|.
name|getWorldBounds
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|bbox
return|;
block|}
name|double
name|minX
init|=
name|bbox
operator|.
name|getMinX
argument_list|()
decl_stmt|;
name|double
name|eMinX
init|=
name|expand
operator|.
name|getMinX
argument_list|()
decl_stmt|;
name|double
name|maxX
init|=
name|bbox
operator|.
name|getMaxX
argument_list|()
decl_stmt|;
name|double
name|eMaxX
init|=
name|expand
operator|.
name|getMaxX
argument_list|()
decl_stmt|;
name|double
name|minY
init|=
name|bbox
operator|.
name|getMinY
argument_list|()
decl_stmt|;
name|double
name|eMinY
init|=
name|expand
operator|.
name|getMinY
argument_list|()
decl_stmt|;
name|double
name|maxY
init|=
name|bbox
operator|.
name|getMaxY
argument_list|()
decl_stmt|;
name|double
name|eMaxY
init|=
name|expand
operator|.
name|getMaxY
argument_list|()
decl_stmt|;
name|bbox
operator|.
name|reset
argument_list|(
name|Math
operator|.
name|min
argument_list|(
name|Math
operator|.
name|min
argument_list|(
name|minX
argument_list|,
name|maxX
argument_list|)
argument_list|,
name|Math
operator|.
name|min
argument_list|(
name|eMinX
argument_list|,
name|eMaxX
argument_list|)
argument_list|)
argument_list|,
name|Math
operator|.
name|max
argument_list|(
name|Math
operator|.
name|max
argument_list|(
name|minX
argument_list|,
name|maxX
argument_list|)
argument_list|,
name|Math
operator|.
name|max
argument_list|(
name|eMinX
argument_list|,
name|eMaxX
argument_list|)
argument_list|)
argument_list|,
name|Math
operator|.
name|min
argument_list|(
name|Math
operator|.
name|min
argument_list|(
name|minY
argument_list|,
name|maxY
argument_list|)
argument_list|,
name|Math
operator|.
name|min
argument_list|(
name|eMinY
argument_list|,
name|eMaxY
argument_list|)
argument_list|)
argument_list|,
name|Math
operator|.
name|max
argument_list|(
name|Math
operator|.
name|max
argument_list|(
name|minY
argument_list|,
name|maxY
argument_list|)
argument_list|,
name|Math
operator|.
name|max
argument_list|(
name|eMinY
argument_list|,
name|eMaxY
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|bbox
return|;
block|}
block|}
end_class

end_unit

