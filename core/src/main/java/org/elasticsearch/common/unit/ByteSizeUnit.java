begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.unit
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Writeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * A<tt>SizeUnit</tt> represents size at a given unit of  * granularity and provides utility methods to convert across units.  * A<tt>SizeUnit</tt> does not maintain size information, but only  * helps organize and use size representations that may be maintained  * separately across various contexts.  */
end_comment

begin_enum
DECL|enum|ByteSizeUnit
specifier|public
enum|enum
name|ByteSizeUnit
implements|implements
name|Writeable
block|{
DECL|enum constant|BYTES
name|BYTES
block|{
annotation|@
name|Override
specifier|public
name|long
name|toBytes
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toKB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C1
operator|/
name|C0
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toMB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C2
operator|/
name|C0
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toGB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C3
operator|/
name|C0
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toTB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C4
operator|/
name|C0
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toPB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C5
operator|/
name|C0
operator|)
return|;
block|}
block|}
block|,
DECL|enum constant|KB
name|KB
block|{
annotation|@
name|Override
specifier|public
name|long
name|toBytes
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C1
operator|/
name|C0
argument_list|,
name|MAX
operator|/
operator|(
name|C1
operator|/
name|C0
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toKB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toMB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C2
operator|/
name|C1
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toGB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C3
operator|/
name|C1
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toTB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C4
operator|/
name|C1
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toPB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C5
operator|/
name|C1
operator|)
return|;
block|}
block|}
block|,
DECL|enum constant|MB
name|MB
block|{
annotation|@
name|Override
specifier|public
name|long
name|toBytes
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C2
operator|/
name|C0
argument_list|,
name|MAX
operator|/
operator|(
name|C2
operator|/
name|C0
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toKB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C2
operator|/
name|C1
argument_list|,
name|MAX
operator|/
operator|(
name|C2
operator|/
name|C1
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toMB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toGB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C3
operator|/
name|C2
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toTB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C4
operator|/
name|C2
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toPB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C5
operator|/
name|C2
operator|)
return|;
block|}
block|}
block|,
DECL|enum constant|GB
name|GB
block|{
annotation|@
name|Override
specifier|public
name|long
name|toBytes
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C3
operator|/
name|C0
argument_list|,
name|MAX
operator|/
operator|(
name|C3
operator|/
name|C0
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toKB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C3
operator|/
name|C1
argument_list|,
name|MAX
operator|/
operator|(
name|C3
operator|/
name|C1
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toMB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C3
operator|/
name|C2
argument_list|,
name|MAX
operator|/
operator|(
name|C3
operator|/
name|C2
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toGB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toTB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C4
operator|/
name|C3
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toPB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C5
operator|/
name|C3
operator|)
return|;
block|}
block|}
block|,
DECL|enum constant|TB
name|TB
block|{
annotation|@
name|Override
specifier|public
name|long
name|toBytes
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C4
operator|/
name|C0
argument_list|,
name|MAX
operator|/
operator|(
name|C4
operator|/
name|C0
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toKB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C4
operator|/
name|C1
argument_list|,
name|MAX
operator|/
operator|(
name|C4
operator|/
name|C1
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toMB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C4
operator|/
name|C2
argument_list|,
name|MAX
operator|/
operator|(
name|C4
operator|/
name|C2
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toGB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C4
operator|/
name|C3
argument_list|,
name|MAX
operator|/
operator|(
name|C4
operator|/
name|C3
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toTB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toPB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
operator|/
operator|(
name|C5
operator|/
name|C4
operator|)
return|;
block|}
block|}
block|,
DECL|enum constant|PB
name|PB
block|{
annotation|@
name|Override
specifier|public
name|long
name|toBytes
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C5
operator|/
name|C0
argument_list|,
name|MAX
operator|/
operator|(
name|C5
operator|/
name|C0
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toKB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C5
operator|/
name|C1
argument_list|,
name|MAX
operator|/
operator|(
name|C5
operator|/
name|C1
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toMB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C5
operator|/
name|C2
argument_list|,
name|MAX
operator|/
operator|(
name|C5
operator|/
name|C2
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toGB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C5
operator|/
name|C3
argument_list|,
name|MAX
operator|/
operator|(
name|C5
operator|/
name|C3
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toTB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|size
argument_list|,
name|C5
operator|/
name|C4
argument_list|,
name|MAX
operator|/
operator|(
name|C5
operator|/
name|C4
operator|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|toPB
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|size
return|;
block|}
block|}
block|;
DECL|field|C0
specifier|static
specifier|final
name|long
name|C0
init|=
literal|1L
decl_stmt|;
DECL|field|C1
specifier|static
specifier|final
name|long
name|C1
init|=
name|C0
operator|*
literal|1024L
decl_stmt|;
DECL|field|C2
specifier|static
specifier|final
name|long
name|C2
init|=
name|C1
operator|*
literal|1024L
decl_stmt|;
DECL|field|C3
specifier|static
specifier|final
name|long
name|C3
init|=
name|C2
operator|*
literal|1024L
decl_stmt|;
DECL|field|C4
specifier|static
specifier|final
name|long
name|C4
init|=
name|C3
operator|*
literal|1024L
decl_stmt|;
DECL|field|C5
specifier|static
specifier|final
name|long
name|C5
init|=
name|C4
operator|*
literal|1024L
decl_stmt|;
DECL|field|MAX
specifier|static
specifier|final
name|long
name|MAX
init|=
name|Long
operator|.
name|MAX_VALUE
decl_stmt|;
DECL|method|fromId
specifier|public
specifier|static
name|ByteSizeUnit
name|fromId
parameter_list|(
name|int
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|<
literal|0
operator|||
name|id
operator|>=
name|values
argument_list|()
operator|.
name|length
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"No byte size unit found for id ["
operator|+
name|id
operator|+
literal|"]"
argument_list|)
throw|;
block|}
return|return
name|values
argument_list|()
index|[
name|id
index|]
return|;
block|}
comment|/**      * Scale d by m, checking for overflow.      * This has a short name to make above code more readable.      */
DECL|method|x
specifier|static
name|long
name|x
parameter_list|(
name|long
name|d
parameter_list|,
name|long
name|m
parameter_list|,
name|long
name|over
parameter_list|)
block|{
if|if
condition|(
name|d
operator|>
name|over
condition|)
return|return
name|Long
operator|.
name|MAX_VALUE
return|;
if|if
condition|(
name|d
operator|<
operator|-
name|over
condition|)
return|return
name|Long
operator|.
name|MIN_VALUE
return|;
return|return
name|d
operator|*
name|m
return|;
block|}
DECL|method|toBytes
specifier|public
specifier|abstract
name|long
name|toBytes
parameter_list|(
name|long
name|size
parameter_list|)
function_decl|;
DECL|method|toKB
specifier|public
specifier|abstract
name|long
name|toKB
parameter_list|(
name|long
name|size
parameter_list|)
function_decl|;
DECL|method|toMB
specifier|public
specifier|abstract
name|long
name|toMB
parameter_list|(
name|long
name|size
parameter_list|)
function_decl|;
DECL|method|toGB
specifier|public
specifier|abstract
name|long
name|toGB
parameter_list|(
name|long
name|size
parameter_list|)
function_decl|;
DECL|method|toTB
specifier|public
specifier|abstract
name|long
name|toTB
parameter_list|(
name|long
name|size
parameter_list|)
function_decl|;
DECL|method|toPB
specifier|public
specifier|abstract
name|long
name|toPB
parameter_list|(
name|long
name|size
parameter_list|)
function_decl|;
annotation|@
name|Override
DECL|method|writeTo
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVInt
argument_list|(
name|this
operator|.
name|ordinal
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Reads a {@link ByteSizeUnit} from a given {@link StreamInput}      */
DECL|method|readFrom
specifier|public
specifier|static
name|ByteSizeUnit
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|ByteSizeUnit
operator|.
name|fromId
argument_list|(
name|in
operator|.
name|readVInt
argument_list|()
argument_list|)
return|;
block|}
block|}
end_enum

end_unit

