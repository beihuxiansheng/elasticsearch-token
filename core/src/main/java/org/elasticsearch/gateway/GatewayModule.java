begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.gateway
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|gateway
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|ExtensionPoint
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|GatewayModule
specifier|public
class|class
name|GatewayModule
extends|extends
name|AbstractModule
block|{
DECL|field|GATEWAY_TYPE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|GATEWAY_TYPE_KEY
init|=
literal|"gateway.type"
decl_stmt|;
DECL|field|gatewayTypes
specifier|private
specifier|final
name|ExtensionPoint
operator|.
name|SelectedType
argument_list|<
name|Gateway
argument_list|>
name|gatewayTypes
init|=
operator|new
name|ExtensionPoint
operator|.
name|SelectedType
argument_list|<>
argument_list|(
literal|"gateway"
argument_list|,
name|Gateway
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|settings
specifier|private
specifier|final
name|Settings
name|settings
decl_stmt|;
DECL|method|GatewayModule
specifier|public
name|GatewayModule
parameter_list|(
name|Settings
name|settings
parameter_list|)
block|{
name|this
operator|.
name|settings
operator|=
name|settings
expr_stmt|;
name|registerGatewayType
argument_list|(
literal|"default"
argument_list|,
name|Gateway
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
comment|/**      * Adds a custom Discovery type.      */
DECL|method|registerGatewayType
specifier|public
name|void
name|registerGatewayType
parameter_list|(
name|String
name|type
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|Gateway
argument_list|>
name|clazz
parameter_list|)
block|{
name|gatewayTypes
operator|.
name|registerExtension
argument_list|(
name|type
argument_list|,
name|clazz
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|configure
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|bind
argument_list|(
name|MetaStateService
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
name|bind
argument_list|(
name|DanglingIndicesState
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
name|bind
argument_list|(
name|GatewayService
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
name|gatewayTypes
operator|.
name|bindType
argument_list|(
name|binder
argument_list|()
argument_list|,
name|settings
argument_list|,
name|GATEWAY_TYPE_KEY
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|TransportNodesListGatewayMetaState
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
name|bind
argument_list|(
name|GatewayMetaState
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
name|bind
argument_list|(
name|TransportNodesListGatewayStartedShards
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
name|bind
argument_list|(
name|LocalAllocateDangledIndices
operator|.
name|class
argument_list|)
operator|.
name|asEagerSingleton
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

