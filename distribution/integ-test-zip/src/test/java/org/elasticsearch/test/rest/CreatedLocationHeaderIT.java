begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.rest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|StringEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyMap
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singletonMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|startsWith
import|;
end_import

begin_comment
comment|/**  * Tests for the "Location" header returned when returning {@code 201 CREATED}.  */
end_comment

begin_class
DECL|class|CreatedLocationHeaderIT
specifier|public
class|class
name|CreatedLocationHeaderIT
extends|extends
name|ESRestTestCase
block|{
DECL|method|testCreate
specifier|public
name|void
name|testCreate
parameter_list|()
throws|throws
name|IOException
block|{
name|locationTestCase
argument_list|(
literal|"PUT"
argument_list|,
literal|"test/test/1"
argument_list|)
expr_stmt|;
block|}
DECL|method|testIndexWithId
specifier|public
name|void
name|testIndexWithId
parameter_list|()
throws|throws
name|IOException
block|{
name|locationTestCase
argument_list|(
literal|"PUT"
argument_list|,
literal|"test/test/1"
argument_list|)
expr_stmt|;
block|}
DECL|method|testIndexWithoutId
specifier|public
name|void
name|testIndexWithoutId
parameter_list|()
throws|throws
name|IOException
block|{
name|locationTestCase
argument_list|(
literal|"POST"
argument_list|,
literal|"test/test"
argument_list|)
expr_stmt|;
block|}
DECL|method|testUpsert
specifier|public
name|void
name|testUpsert
parameter_list|()
throws|throws
name|IOException
block|{
name|locationTestCase
argument_list|(
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"POST"
argument_list|,
literal|"test/test/1/_update"
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
operator|new
name|StringEntity
argument_list|(
literal|"{"
operator|+
literal|"\"doc\": {\"test\": \"test\"},"
operator|+
literal|"\"doc_as_upsert\": true}"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|locationTestCase
specifier|private
name|void
name|locationTestCase
parameter_list|(
name|String
name|method
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|IOException
block|{
name|locationTestCase
argument_list|(
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
name|method
argument_list|,
name|url
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
operator|new
name|StringEntity
argument_list|(
literal|"{\"test\": \"test\"}"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|locationTestCase
argument_list|(
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
name|method
argument_list|,
name|url
operator|+
literal|"?routing=cat"
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
operator|new
name|StringEntity
argument_list|(
literal|"{\"test\": \"test\"}"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|locationTestCase
specifier|private
name|void
name|locationTestCase
parameter_list|(
name|Response
name|response
parameter_list|)
throws|throws
name|IOException
block|{
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|location
init|=
name|response
operator|.
name|getHeader
argument_list|(
literal|"Location"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|location
argument_list|,
name|startsWith
argument_list|(
literal|"/test/test/"
argument_list|)
argument_list|)
expr_stmt|;
name|Response
name|getResponse
init|=
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"GET"
argument_list|,
name|location
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|singletonMap
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
argument_list|,
name|entityAsMap
argument_list|(
name|getResponse
argument_list|)
operator|.
name|get
argument_list|(
literal|"_source"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

