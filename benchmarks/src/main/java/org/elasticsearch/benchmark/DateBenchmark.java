begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.benchmark
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|benchmark
package|;
end_package

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTimeZone
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|MutableDateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Benchmark
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|State
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Duration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Instant
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZoneOffset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZonedDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|temporal
operator|.
name|TemporalAmount
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
comment|//invoked by benchmarking framework
annotation|@
name|State
argument_list|(
name|Scope
operator|.
name|Benchmark
argument_list|)
DECL|class|DateBenchmark
specifier|public
class|class
name|DateBenchmark
block|{
DECL|field|instant
specifier|private
name|long
name|instant
decl_stmt|;
DECL|field|jodaDate
specifier|private
name|MutableDateTime
name|jodaDate
init|=
operator|new
name|MutableDateTime
argument_list|(
literal|0
argument_list|,
name|DateTimeZone
operator|.
name|UTC
argument_list|)
decl_stmt|;
DECL|field|calendar
specifier|private
name|Calendar
name|calendar
init|=
name|Calendar
operator|.
name|getInstance
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|,
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|javaDateTime
specifier|private
name|ZonedDateTime
name|javaDateTime
init|=
name|ZonedDateTime
operator|.
name|ofInstant
argument_list|(
name|Instant
operator|.
name|ofEpochMilli
argument_list|(
literal|0L
argument_list|)
argument_list|,
name|ZoneOffset
operator|.
name|UTC
argument_list|)
decl_stmt|;
DECL|field|diff
specifier|private
name|TemporalAmount
name|diff
init|=
name|Duration
operator|.
name|ofMillis
argument_list|(
literal|1L
argument_list|)
decl_stmt|;
annotation|@
name|Benchmark
DECL|method|mutableDateTimeSetMillisGetDayOfMonth
specifier|public
name|int
name|mutableDateTimeSetMillisGetDayOfMonth
parameter_list|()
block|{
name|jodaDate
operator|.
name|setMillis
argument_list|(
name|instant
operator|++
argument_list|)
expr_stmt|;
return|return
name|jodaDate
operator|.
name|getDayOfMonth
argument_list|()
return|;
block|}
annotation|@
name|Benchmark
DECL|method|calendarSetMillisGetDayOfMonth
specifier|public
name|int
name|calendarSetMillisGetDayOfMonth
parameter_list|()
block|{
name|calendar
operator|.
name|setTimeInMillis
argument_list|(
name|instant
operator|++
argument_list|)
expr_stmt|;
return|return
name|calendar
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|DAY_OF_MONTH
argument_list|)
return|;
block|}
annotation|@
name|Benchmark
DECL|method|javaDateTimeSetMillisGetDayOfMonth
specifier|public
name|int
name|javaDateTimeSetMillisGetDayOfMonth
parameter_list|()
block|{
comment|// all classes in java.time are immutable, we have to use a new instance
name|javaDateTime
operator|=
name|javaDateTime
operator|.
name|plus
argument_list|(
name|diff
argument_list|)
expr_stmt|;
return|return
name|javaDateTime
operator|.
name|getDayOfMonth
argument_list|()
return|;
block|}
block|}
end_class

end_unit

