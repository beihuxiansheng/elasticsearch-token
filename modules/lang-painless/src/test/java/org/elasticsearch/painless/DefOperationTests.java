begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.painless
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|painless
package|;
end_package

begin_class
DECL|class|DefOperationTests
specifier|public
class|class
name|DefOperationTests
extends|extends
name|ScriptTestCase
block|{
DECL|method|testIllegalCast
specifier|public
name|void
name|testIllegalCast
parameter_list|()
block|{
name|Exception
name|exception
init|=
name|expectThrows
argument_list|(
name|ClassCastException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|exec
argument_list|(
literal|"def x = 1.0; int y = x; return y;"
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"cannot be cast"
argument_list|)
argument_list|)
expr_stmt|;
name|exception
operator|=
name|expectThrows
argument_list|(
name|ClassCastException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|exec
argument_list|(
literal|"def x = (short)1; byte y = x; return y;"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"cannot be cast"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testNot
specifier|public
name|void
name|testNot
parameter_list|()
block|{
name|assertEquals
argument_list|(
operator|~
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; return ~x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|~
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; return ~x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|~
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; return ~x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|~
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = 1; return ~x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|~
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = 1L; return ~x"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testNeg
specifier|public
name|void
name|testNeg
parameter_list|()
block|{
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; return -x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; return -x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; return -x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = 1; return -x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = 1L; return -x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1.0F
argument_list|,
name|exec
argument_list|(
literal|"def x = 1F; return -x"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1.0
argument_list|,
name|exec
argument_list|(
literal|"def x = 1.0; return -x"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testMul
specifier|public
name|void
name|testMul
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (byte)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (byte)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (byte)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (byte)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (byte)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (byte)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (byte)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (short)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (short)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (short)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (short)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (short)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (short)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (short)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (char)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (char)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (char)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (char)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (char)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (char)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (char)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (int)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (int)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (int)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (int)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (int)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (int)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (int)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (long)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (long)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (long)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (long)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (long)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (long)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (long)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (float)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (float)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (float)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (float)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (float)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (float)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (float)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (double)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (double)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (double)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (double)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (double)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (double)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (double)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (byte)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (short)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (char)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (int)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (long)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (float)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (double)2; return x * y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testDiv
specifier|public
name|void
name|testDiv
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (byte)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (byte)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (byte)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (byte)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (byte)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (byte)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (byte)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (short)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (short)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (short)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (short)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (short)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (short)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (short)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (char)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (char)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (char)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (char)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (char)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (char)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (char)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (int)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (int)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (int)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (int)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (int)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (int)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (int)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (long)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (long)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (long)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (long)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (long)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (long)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (long)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (float)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (float)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (float)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (float)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (float)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (float)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (float)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (double)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (double)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (double)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (double)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (double)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (double)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (double)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (byte)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (short)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (char)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (int)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (long)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (float)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (double)2; return x / y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testRem
specifier|public
name|void
name|testRem
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (byte)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (byte)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (byte)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (byte)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (byte)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (byte)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (byte)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (short)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (short)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (short)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (short)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (short)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (short)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (short)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (char)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (char)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (char)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (char)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (char)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (char)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (char)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (int)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (int)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (int)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (int)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (int)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (int)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (int)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (long)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (long)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (long)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (long)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (long)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (long)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (long)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (float)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (float)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (float)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (float)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (float)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (float)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (float)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (double)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (double)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (double)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (double)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (double)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (double)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (double)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)2; def y = (byte)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (short)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)2; def y = (char)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)2; def y = (int)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)2; def y = (long)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)2; def y = (float)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)2; def y = (double)2; return x % y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testAdd
specifier|public
name|void
name|testAdd
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (byte)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (byte)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (byte)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (byte)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (byte)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (byte)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (byte)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (short)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (short)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (short)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (short)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (short)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (short)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (short)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (char)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (char)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (char)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (char)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (char)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (char)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (char)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (int)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (int)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (int)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (int)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (int)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (int)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (int)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (long)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (long)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (long)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (long)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (long)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (long)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (long)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (float)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (float)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (float)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (float)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (float)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (float)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (float)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (double)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (double)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (double)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (double)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (double)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (double)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (double)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (byte)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (short)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (char)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (int)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (long)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (float)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (double)1; return x + y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSub
specifier|public
name|void
name|testSub
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (byte)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (byte)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (byte)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (byte)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (byte)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (byte)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (byte)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (short)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (short)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (short)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (short)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (short)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (short)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (short)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (char)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (char)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (char)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (char)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (char)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (char)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (char)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (int)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (int)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (int)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (int)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (int)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (int)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (int)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (long)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (long)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (long)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (long)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (long)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (long)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (long)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (float)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (float)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (float)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (float)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (float)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (float)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (float)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (double)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (double)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (double)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (double)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (double)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (double)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (double)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (byte)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (short)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (char)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (int)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (long)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (float)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (double)1; return x - y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testLsh
specifier|public
name|void
name|testLsh
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (byte)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (byte)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (byte)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (byte)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (byte)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (byte)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (byte)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (short)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (short)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (short)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (short)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (short)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (short)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (short)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (char)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (char)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (char)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (char)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (char)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (char)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (char)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (int)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (int)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (int)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (int)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (int)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (int)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (int)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (long)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (long)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (long)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (long)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (long)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (long)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (long)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (float)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (float)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (float)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (float)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (float)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (float)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (float)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (double)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (double)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (double)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (double)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (double)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (double)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (double)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (byte)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)1; def y = (short)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)1; def y = (char)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)1; def y = (int)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)1; def y = (long)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)1; def y = (float)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)1; def y = (double)1; return x<< y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testRsh
specifier|public
name|void
name|testRsh
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (byte)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (byte)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (byte)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (byte)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (byte)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (byte)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (byte)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (short)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (short)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (short)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (short)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (short)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (short)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (short)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (char)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (char)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (char)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (char)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (char)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (char)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (char)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (int)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (int)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (int)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (int)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (int)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (int)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (long)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (long)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (long)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (long)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (long)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (long)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (long)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (float)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (float)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (float)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (float)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (float)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (float)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (float)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (double)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (double)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (double)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (double)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (double)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (double)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (double)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (byte)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (short)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (char)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (long)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (float)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (double)1; return x>> y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testUsh
specifier|public
name|void
name|testUsh
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (byte)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (byte)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (byte)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (byte)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (byte)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (byte)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (byte)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (short)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (short)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (short)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (short)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (short)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (short)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (short)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (char)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (char)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (char)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (char)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (char)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (char)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (char)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (int)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (int)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (int)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (int)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (int)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (int)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (long)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (long)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (long)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (long)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (long)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (long)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (long)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (float)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (float)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (float)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (float)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (float)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (float)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (float)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (double)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (double)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (double)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (double)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (double)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (double)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (double)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (byte)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (short)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (char)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (long)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (float)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (double)1; return x>>> y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testAnd
specifier|public
name|void
name|testAnd
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (byte)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (byte)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (byte)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (byte)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (byte)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (byte)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (byte)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (short)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (short)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (short)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (short)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (short)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (short)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (short)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (char)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (char)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (char)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (char)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (char)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (char)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (char)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (int)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (int)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (int)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (int)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (int)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (int)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (long)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (long)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (long)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (long)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (long)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (long)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (long)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (float)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (float)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (float)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (float)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (float)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (float)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (float)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (double)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (double)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (double)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (double)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (double)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (double)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (double)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (byte)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (short)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (char)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (long)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (float)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (double)1; return x& y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testXor
specifier|public
name|void
name|testXor
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (byte)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (byte)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (byte)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (byte)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (byte)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (byte)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (byte)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (short)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (short)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (short)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (short)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (short)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (short)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (short)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (char)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (char)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (char)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (char)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (char)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (char)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (char)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (int)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (int)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (int)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (int)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (int)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (int)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (long)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (long)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (long)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (long)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (long)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (long)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (long)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (float)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (float)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (float)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (float)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (float)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (float)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (float)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (double)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (double)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (double)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (double)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (double)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (double)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (double)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (byte)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (short)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (char)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (long)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (float)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (double)1; return x ^ y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testOr
specifier|public
name|void
name|testOr
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (byte)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (byte)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (byte)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (byte)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (byte)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (byte)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (byte)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (short)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (short)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (short)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (short)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (short)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (short)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (short)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (char)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (char)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (char)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (char)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (char)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (char)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (char)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (int)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (int)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (int)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (int)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (int)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (int)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (long)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (long)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (long)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (long)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (long)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (long)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (long)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (float)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (float)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (float)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (float)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (float)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (float)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (float)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (double)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (double)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (double)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (double)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (double)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (double)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (double)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)4; def y = (byte)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)4; def y = (short)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)4; def y = (char)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)4; def y = (long)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)4; def y = (float)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)4; def y = (double)1; return x | y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testEq
specifier|public
name|void
name|testEq
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)7; def y = (int)7; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)6; def y = (int)6; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)5; def y = (int)5; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)4; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (int)3; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (int)2; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (int)1; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)7; def y = (double)7; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)6; def y = (double)6; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)5; def y = (double)5; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (double)4; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (double)3; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (double)2; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (double)1; return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); def y = new HashMap(); return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); x.put(3, 3); def y = new HashMap(); return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); x.put(3, 3); def y = new HashMap(); y.put(3, 3); return x == y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); def y = x; x.put(3, 3); y.put(3, 3); return x == y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testEqr
specifier|public
name|void
name|testEqr
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)7; def y = (int)7; return x === y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)6; def y = (int)6; return x === y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)5; def y = (int)5; return x === y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)4; return x === y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (int)3; return x === y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (int)2; return x === y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (int)1; return x === y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); def y = new HashMap(); return x === y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); x.put(3, 3); def y = new HashMap(); return x === y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); x.put(3, 3); def y = new HashMap(); y.put(3, 3); return x === y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); def y = x; x.put(3, 3); y.put(3, 3); return x === y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testNe
specifier|public
name|void
name|testNe
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)7; def y = (int)7; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)6; def y = (int)6; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)5; def y = (int)5; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)4; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (int)3; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (int)2; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (int)1; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)7; def y = (double)7; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)6; def y = (double)6; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)5; def y = (double)5; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (double)4; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (double)3; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (double)2; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (double)1; return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); def y = new HashMap(); return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); x.put(3, 3); def y = new HashMap(); return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); x.put(3, 3); def y = new HashMap(); y.put(3, 3); return x != y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); def y = x; x.put(3, 3); y.put(3, 3); return x != y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testNer
specifier|public
name|void
name|testNer
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)7; def y = (int)7; return x !== y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)6; def y = (int)6; return x !== y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)5; def y = (int)5; return x !== y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)4; return x !== y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (int)3; return x !== y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (int)2; return x !== y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (int)1; return x !== y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); def y = new HashMap(); return x !== y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); x.put(3, 3); def y = new HashMap(); return x !== y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); x.put(3, 3); def y = new HashMap(); y.put(3, 3); return x !== y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = new HashMap(); def y = x; x.put(3, 3); y.put(3, 3); return x !== y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testLt
specifier|public
name|void
name|testLt
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (int)7; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (int)6; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)3; def y = (int)5; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)4; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (int)3; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (int)2; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (int)1; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (double)7; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (double)6; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)3; def y = (double)5; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (double)4; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (double)3; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (double)2; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (double)1; return x< y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testLte
specifier|public
name|void
name|testLte
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (int)7; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (int)6; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)3; def y = (int)5; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)4; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (int)3; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (int)2; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (int)1; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (double)7; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (double)6; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)3; def y = (double)5; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (double)4; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (double)3; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (double)2; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (double)1; return x<= y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGt
specifier|public
name|void
name|testGt
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (int)7; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (int)6; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)3; def y = (int)5; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)4; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (int)3; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (int)2; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (int)1; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (double)7; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (double)6; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)3; def y = (double)5; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (double)4; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (double)3; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (double)2; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (double)1; return x> y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGte
specifier|public
name|void
name|testGte
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (int)7; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (int)6; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)3; def y = (int)5; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (int)4; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (int)3; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (int)2; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (int)1; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (byte)1; def y = (double)7; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (short)2; def y = (double)6; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|exec
argument_list|(
literal|"def x = (char)3; def y = (double)5; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (int)4; def y = (double)4; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (long)5; def y = (double)3; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (float)6; def y = (double)2; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|exec
argument_list|(
literal|"def x = (double)7; def y = (double)1; return x>= y"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

