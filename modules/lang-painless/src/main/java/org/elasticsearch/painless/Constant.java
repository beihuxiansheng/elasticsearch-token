begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.painless
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|painless
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Consumer
import|;
end_import

begin_comment
comment|/**  * A constant initializer to be added to the class file.  */
end_comment

begin_class
DECL|class|Constant
specifier|public
class|class
name|Constant
block|{
DECL|field|location
specifier|public
specifier|final
name|Location
name|location
decl_stmt|;
DECL|field|name
specifier|public
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|type
specifier|public
specifier|final
name|org
operator|.
name|objectweb
operator|.
name|asm
operator|.
name|Type
name|type
decl_stmt|;
DECL|field|initializer
specifier|public
specifier|final
name|Consumer
argument_list|<
name|MethodWriter
argument_list|>
name|initializer
decl_stmt|;
comment|/**      * Create a new constant.      *      * @param location the location in the script that is creating it      * @param type the type of the constant      * @param name the name of the constant      * @param initializer code to initialize the constant. It will be called when generating the clinit method and is expected to leave the      *        value of the constant on the stack. Generating the load instruction is managed by the caller.      */
DECL|method|Constant
specifier|public
name|Constant
parameter_list|(
name|Location
name|location
parameter_list|,
name|org
operator|.
name|objectweb
operator|.
name|asm
operator|.
name|Type
name|type
parameter_list|,
name|String
name|name
parameter_list|,
name|Consumer
argument_list|<
name|MethodWriter
argument_list|>
name|initializer
parameter_list|)
block|{
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|initializer
operator|=
name|initializer
expr_stmt|;
block|}
block|}
end_class

end_unit

