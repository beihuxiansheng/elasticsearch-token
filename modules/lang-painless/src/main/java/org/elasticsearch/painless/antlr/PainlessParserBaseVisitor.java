begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// ANTLR GENERATED CODE: DO NOT EDIT
end_comment

begin_package
DECL|package|org.elasticsearch.painless.antlr
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|painless
operator|.
name|antlr
package|;
end_package

begin_import
import|import
name|org
operator|.
name|antlr
operator|.
name|v4
operator|.
name|runtime
operator|.
name|tree
operator|.
name|AbstractParseTreeVisitor
import|;
end_import

begin_comment
comment|/**  * This class provides an empty implementation of {@link PainlessParserVisitor},  * which can be extended to create a visitor which only needs to handle a subset  * of the available methods.  *  * @param<T> The return type of the visit operation. Use {@link Void} for  * operations with no return type.  */
end_comment

begin_class
DECL|class|PainlessParserBaseVisitor
class|class
name|PainlessParserBaseVisitor
parameter_list|<
name|T
parameter_list|>
extends|extends
name|AbstractParseTreeVisitor
argument_list|<
name|T
argument_list|>
implements|implements
name|PainlessParserVisitor
argument_list|<
name|T
argument_list|>
block|{
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitSource
annotation|@
name|Override
specifier|public
name|T
name|visitSource
parameter_list|(
name|PainlessParser
operator|.
name|SourceContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitIf
annotation|@
name|Override
specifier|public
name|T
name|visitIf
parameter_list|(
name|PainlessParser
operator|.
name|IfContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitWhile
annotation|@
name|Override
specifier|public
name|T
name|visitWhile
parameter_list|(
name|PainlessParser
operator|.
name|WhileContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitDo
annotation|@
name|Override
specifier|public
name|T
name|visitDo
parameter_list|(
name|PainlessParser
operator|.
name|DoContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitFor
annotation|@
name|Override
specifier|public
name|T
name|visitFor
parameter_list|(
name|PainlessParser
operator|.
name|ForContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitDecl
annotation|@
name|Override
specifier|public
name|T
name|visitDecl
parameter_list|(
name|PainlessParser
operator|.
name|DeclContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitContinue
annotation|@
name|Override
specifier|public
name|T
name|visitContinue
parameter_list|(
name|PainlessParser
operator|.
name|ContinueContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitBreak
annotation|@
name|Override
specifier|public
name|T
name|visitBreak
parameter_list|(
name|PainlessParser
operator|.
name|BreakContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitReturn
annotation|@
name|Override
specifier|public
name|T
name|visitReturn
parameter_list|(
name|PainlessParser
operator|.
name|ReturnContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitTry
annotation|@
name|Override
specifier|public
name|T
name|visitTry
parameter_list|(
name|PainlessParser
operator|.
name|TryContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitThrow
annotation|@
name|Override
specifier|public
name|T
name|visitThrow
parameter_list|(
name|PainlessParser
operator|.
name|ThrowContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitExpr
annotation|@
name|Override
specifier|public
name|T
name|visitExpr
parameter_list|(
name|PainlessParser
operator|.
name|ExprContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitMultiple
annotation|@
name|Override
specifier|public
name|T
name|visitMultiple
parameter_list|(
name|PainlessParser
operator|.
name|MultipleContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitSingle
annotation|@
name|Override
specifier|public
name|T
name|visitSingle
parameter_list|(
name|PainlessParser
operator|.
name|SingleContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitEmpty
annotation|@
name|Override
specifier|public
name|T
name|visitEmpty
parameter_list|(
name|PainlessParser
operator|.
name|EmptyContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitEmptyscope
annotation|@
name|Override
specifier|public
name|T
name|visitEmptyscope
parameter_list|(
name|PainlessParser
operator|.
name|EmptyscopeContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitInitializer
annotation|@
name|Override
specifier|public
name|T
name|visitInitializer
parameter_list|(
name|PainlessParser
operator|.
name|InitializerContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitAfterthought
annotation|@
name|Override
specifier|public
name|T
name|visitAfterthought
parameter_list|(
name|PainlessParser
operator|.
name|AfterthoughtContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitDeclaration
annotation|@
name|Override
specifier|public
name|T
name|visitDeclaration
parameter_list|(
name|PainlessParser
operator|.
name|DeclarationContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitDecltype
annotation|@
name|Override
specifier|public
name|T
name|visitDecltype
parameter_list|(
name|PainlessParser
operator|.
name|DecltypeContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitDeclvar
annotation|@
name|Override
specifier|public
name|T
name|visitDeclvar
parameter_list|(
name|PainlessParser
operator|.
name|DeclvarContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitTrap
annotation|@
name|Override
specifier|public
name|T
name|visitTrap
parameter_list|(
name|PainlessParser
operator|.
name|TrapContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitIdentifier
annotation|@
name|Override
specifier|public
name|T
name|visitIdentifier
parameter_list|(
name|PainlessParser
operator|.
name|IdentifierContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitGeneric
annotation|@
name|Override
specifier|public
name|T
name|visitGeneric
parameter_list|(
name|PainlessParser
operator|.
name|GenericContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitComp
annotation|@
name|Override
specifier|public
name|T
name|visitComp
parameter_list|(
name|PainlessParser
operator|.
name|CompContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitRead
annotation|@
name|Override
specifier|public
name|T
name|visitRead
parameter_list|(
name|PainlessParser
operator|.
name|ReadContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitBool
annotation|@
name|Override
specifier|public
name|T
name|visitBool
parameter_list|(
name|PainlessParser
operator|.
name|BoolContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitConditional
annotation|@
name|Override
specifier|public
name|T
name|visitConditional
parameter_list|(
name|PainlessParser
operator|.
name|ConditionalContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitAssignment
annotation|@
name|Override
specifier|public
name|T
name|visitAssignment
parameter_list|(
name|PainlessParser
operator|.
name|AssignmentContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitFalse
annotation|@
name|Override
specifier|public
name|T
name|visitFalse
parameter_list|(
name|PainlessParser
operator|.
name|FalseContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitNumeric
annotation|@
name|Override
specifier|public
name|T
name|visitNumeric
parameter_list|(
name|PainlessParser
operator|.
name|NumericContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitUnary
annotation|@
name|Override
specifier|public
name|T
name|visitUnary
parameter_list|(
name|PainlessParser
operator|.
name|UnaryContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitPrecedence
annotation|@
name|Override
specifier|public
name|T
name|visitPrecedence
parameter_list|(
name|PainlessParser
operator|.
name|PrecedenceContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitPreinc
annotation|@
name|Override
specifier|public
name|T
name|visitPreinc
parameter_list|(
name|PainlessParser
operator|.
name|PreincContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitPostinc
annotation|@
name|Override
specifier|public
name|T
name|visitPostinc
parameter_list|(
name|PainlessParser
operator|.
name|PostincContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitCast
annotation|@
name|Override
specifier|public
name|T
name|visitCast
parameter_list|(
name|PainlessParser
operator|.
name|CastContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitNull
annotation|@
name|Override
specifier|public
name|T
name|visitNull
parameter_list|(
name|PainlessParser
operator|.
name|NullContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitBinary
annotation|@
name|Override
specifier|public
name|T
name|visitBinary
parameter_list|(
name|PainlessParser
operator|.
name|BinaryContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitTrue
annotation|@
name|Override
specifier|public
name|T
name|visitTrue
parameter_list|(
name|PainlessParser
operator|.
name|TrueContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitChain
annotation|@
name|Override
specifier|public
name|T
name|visitChain
parameter_list|(
name|PainlessParser
operator|.
name|ChainContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitLinkprec
annotation|@
name|Override
specifier|public
name|T
name|visitLinkprec
parameter_list|(
name|PainlessParser
operator|.
name|LinkprecContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitLinkcast
annotation|@
name|Override
specifier|public
name|T
name|visitLinkcast
parameter_list|(
name|PainlessParser
operator|.
name|LinkcastContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitLinkbrace
annotation|@
name|Override
specifier|public
name|T
name|visitLinkbrace
parameter_list|(
name|PainlessParser
operator|.
name|LinkbraceContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitLinkdot
annotation|@
name|Override
specifier|public
name|T
name|visitLinkdot
parameter_list|(
name|PainlessParser
operator|.
name|LinkdotContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitLinkcall
annotation|@
name|Override
specifier|public
name|T
name|visitLinkcall
parameter_list|(
name|PainlessParser
operator|.
name|LinkcallContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitLinkvar
annotation|@
name|Override
specifier|public
name|T
name|visitLinkvar
parameter_list|(
name|PainlessParser
operator|.
name|LinkvarContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitLinkfield
annotation|@
name|Override
specifier|public
name|T
name|visitLinkfield
parameter_list|(
name|PainlessParser
operator|.
name|LinkfieldContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitLinknew
annotation|@
name|Override
specifier|public
name|T
name|visitLinknew
parameter_list|(
name|PainlessParser
operator|.
name|LinknewContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitLinkstring
annotation|@
name|Override
specifier|public
name|T
name|visitLinkstring
parameter_list|(
name|PainlessParser
operator|.
name|LinkstringContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
comment|/**    * {@inheritDoc}    *    *<p>The default implementation returns the result of calling    * {@link #visitChildren} on {@code ctx}.</p>    */
DECL|method|visitArguments
annotation|@
name|Override
specifier|public
name|T
name|visitArguments
parameter_list|(
name|PainlessParser
operator|.
name|ArgumentsContext
name|ctx
parameter_list|)
block|{
return|return
name|visitChildren
argument_list|(
name|ctx
argument_list|)
return|;
block|}
block|}
end_class

end_unit

