begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.transport
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|NamedWriteableRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|network
operator|.
name|NetworkModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|network
operator|.
name|NetworkService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Setting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|util
operator|.
name|BigArrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|http
operator|.
name|HttpServerTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|http
operator|.
name|netty4
operator|.
name|Netty4HttpServerTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|breaker
operator|.
name|CircuitBreakerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|NetworkPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|netty4
operator|.
name|Netty4Transport
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Supplier
import|;
end_import

begin_class
DECL|class|Netty4Plugin
specifier|public
class|class
name|Netty4Plugin
extends|extends
name|Plugin
implements|implements
name|NetworkPlugin
block|{
DECL|field|NETTY_TRANSPORT_NAME
specifier|public
specifier|static
specifier|final
name|String
name|NETTY_TRANSPORT_NAME
init|=
literal|"netty4"
decl_stmt|;
DECL|field|NETTY_HTTP_TRANSPORT_NAME
specifier|public
specifier|static
specifier|final
name|String
name|NETTY_HTTP_TRANSPORT_NAME
init|=
literal|"netty4"
decl_stmt|;
annotation|@
name|Override
DECL|method|getSettings
specifier|public
name|List
argument_list|<
name|Setting
argument_list|<
name|?
argument_list|>
argument_list|>
name|getSettings
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Netty4HttpServerTransport
operator|.
name|SETTING_HTTP_NETTY_MAX_CUMULATION_BUFFER_CAPACITY
argument_list|,
name|Netty4HttpServerTransport
operator|.
name|SETTING_HTTP_NETTY_MAX_COMPOSITE_BUFFER_COMPONENTS
argument_list|,
name|Netty4HttpServerTransport
operator|.
name|SETTING_HTTP_WORKER_COUNT
argument_list|,
name|Netty4HttpServerTransport
operator|.
name|SETTING_HTTP_TCP_NO_DELAY
argument_list|,
name|Netty4HttpServerTransport
operator|.
name|SETTING_HTTP_TCP_KEEP_ALIVE
argument_list|,
name|Netty4HttpServerTransport
operator|.
name|SETTING_HTTP_TCP_BLOCKING_SERVER
argument_list|,
name|Netty4HttpServerTransport
operator|.
name|SETTING_HTTP_TCP_REUSE_ADDRESS
argument_list|,
name|Netty4HttpServerTransport
operator|.
name|SETTING_HTTP_TCP_SEND_BUFFER_SIZE
argument_list|,
name|Netty4HttpServerTransport
operator|.
name|SETTING_HTTP_TCP_RECEIVE_BUFFER_SIZE
argument_list|,
name|Netty4Transport
operator|.
name|WORKER_COUNT
argument_list|,
name|Netty4Transport
operator|.
name|NETTY_MAX_CUMULATION_BUFFER_CAPACITY
argument_list|,
name|Netty4Transport
operator|.
name|NETTY_MAX_COMPOSITE_BUFFER_COMPONENTS
argument_list|,
name|Netty4Transport
operator|.
name|NETTY_RECEIVE_PREDICTOR_SIZE
argument_list|,
name|Netty4Transport
operator|.
name|NETTY_RECEIVE_PREDICTOR_MIN
argument_list|,
name|Netty4Transport
operator|.
name|NETTY_RECEIVE_PREDICTOR_MAX
argument_list|,
name|Netty4Transport
operator|.
name|NETTY_BOSS_COUNT
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|additionalSettings
specifier|public
name|Settings
name|additionalSettings
parameter_list|()
block|{
return|return
name|Settings
operator|.
name|builder
argument_list|()
comment|// here we set the netty4 transport and http transport as the default. This is a set once setting
comment|// ie. if another plugin does that as well the server will fail - only one default network can exist!
operator|.
name|put
argument_list|(
name|NetworkModule
operator|.
name|HTTP_DEFAULT_TYPE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|NETTY_HTTP_TRANSPORT_NAME
argument_list|)
operator|.
name|put
argument_list|(
name|NetworkModule
operator|.
name|TRANSPORT_DEFAULT_TYPE_SETTING
operator|.
name|getKey
argument_list|()
argument_list|,
name|NETTY_TRANSPORT_NAME
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getTransports
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Supplier
argument_list|<
name|Transport
argument_list|>
argument_list|>
name|getTransports
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|ThreadPool
name|threadPool
parameter_list|,
name|BigArrays
name|bigArrays
parameter_list|,
name|CircuitBreakerService
name|circuitBreakerService
parameter_list|,
name|NamedWriteableRegistry
name|namedWriteableRegistry
parameter_list|,
name|NetworkService
name|networkService
parameter_list|)
block|{
return|return
name|Collections
operator|.
name|singletonMap
argument_list|(
name|NETTY_TRANSPORT_NAME
argument_list|,
parameter_list|()
lambda|->
operator|new
name|Netty4Transport
argument_list|(
name|settings
argument_list|,
name|threadPool
argument_list|,
name|networkService
argument_list|,
name|bigArrays
argument_list|,
name|namedWriteableRegistry
argument_list|,
name|circuitBreakerService
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getHttpTransports
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Supplier
argument_list|<
name|HttpServerTransport
argument_list|>
argument_list|>
name|getHttpTransports
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|ThreadPool
name|threadPool
parameter_list|,
name|BigArrays
name|bigArrays
parameter_list|,
name|CircuitBreakerService
name|circuitBreakerService
parameter_list|,
name|NamedWriteableRegistry
name|namedWriteableRegistry
parameter_list|,
name|NetworkService
name|networkService
parameter_list|)
block|{
return|return
name|Collections
operator|.
name|singletonMap
argument_list|(
name|NETTY_HTTP_TRANSPORT_NAME
argument_list|,
parameter_list|()
lambda|->
operator|new
name|Netty4HttpServerTransport
argument_list|(
name|settings
argument_list|,
name|networkService
argument_list|,
name|bigArrays
argument_list|,
name|threadPool
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

