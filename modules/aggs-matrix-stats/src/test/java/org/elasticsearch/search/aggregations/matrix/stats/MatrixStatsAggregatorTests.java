begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.matrix.stats
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|matrix
operator|.
name|stats
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedNumericDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|RandomIndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|MatchAllDocsQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|NumericUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MappedFieldType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|NumberFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregatorTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_class
DECL|class|MatrixStatsAggregatorTests
specifier|public
class|class
name|MatrixStatsAggregatorTests
extends|extends
name|AggregatorTestCase
block|{
DECL|method|testNoData
specifier|public
name|void
name|testNoData
parameter_list|()
throws|throws
name|Exception
block|{
name|MappedFieldType
name|ft
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|DOUBLE
argument_list|)
decl_stmt|;
name|ft
operator|.
name|setName
argument_list|(
literal|"field"
argument_list|)
expr_stmt|;
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|;
name|RandomIndexWriter
name|indexWriter
operator|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"another_field"
argument_list|,
literal|"value"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
try|try
init|(
name|IndexReader
name|reader
init|=
name|indexWriter
operator|.
name|getReader
argument_list|()
init|)
block|{
name|IndexSearcher
name|searcher
init|=
operator|new
name|IndexSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|MatrixStatsAggregationBuilder
name|aggBuilder
init|=
operator|new
name|MatrixStatsAggregationBuilder
argument_list|(
literal|"my_agg"
argument_list|)
operator|.
name|fields
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"field"
argument_list|)
argument_list|)
decl_stmt|;
name|InternalMatrixStats
name|stats
init|=
name|search
argument_list|(
name|searcher
argument_list|,
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggBuilder
argument_list|,
name|ft
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|stats
operator|.
name|getStats
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testTwoFields
specifier|public
name|void
name|testTwoFields
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|fieldA
init|=
literal|"a"
decl_stmt|;
name|MappedFieldType
name|ftA
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|DOUBLE
argument_list|)
decl_stmt|;
name|ftA
operator|.
name|setName
argument_list|(
name|fieldA
argument_list|)
expr_stmt|;
name|String
name|fieldB
init|=
literal|"b"
decl_stmt|;
name|MappedFieldType
name|ftB
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|DOUBLE
argument_list|)
decl_stmt|;
name|ftB
operator|.
name|setName
argument_list|(
name|fieldB
argument_list|)
expr_stmt|;
try|try
init|(
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
init|;
name|RandomIndexWriter
name|indexWriter
operator|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
init|)
block|{
name|int
name|numDocs
init|=
name|scaledRandomIntBetween
argument_list|(
literal|8192
argument_list|,
literal|16384
argument_list|)
decl_stmt|;
name|Double
index|[]
name|fieldAValues
init|=
operator|new
name|Double
index|[
name|numDocs
index|]
decl_stmt|;
name|Double
index|[]
name|fieldBValues
init|=
operator|new
name|Double
index|[
name|numDocs
index|]
decl_stmt|;
for|for
control|(
name|int
name|docId
init|=
literal|0
init|;
name|docId
operator|<
name|numDocs
condition|;
name|docId
operator|++
control|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|fieldAValues
index|[
name|docId
index|]
operator|=
name|randomDouble
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
name|fieldA
argument_list|,
name|NumericUtils
operator|.
name|doubleToSortableLong
argument_list|(
name|fieldAValues
index|[
name|docId
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|fieldBValues
index|[
name|docId
index|]
operator|=
name|randomDouble
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SortedNumericDocValuesField
argument_list|(
name|fieldB
argument_list|,
name|NumericUtils
operator|.
name|doubleToSortableLong
argument_list|(
name|fieldBValues
index|[
name|docId
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
block|}
name|MultiPassStats
name|multiPassStats
init|=
operator|new
name|MultiPassStats
argument_list|(
name|fieldA
argument_list|,
name|fieldB
argument_list|)
decl_stmt|;
name|multiPassStats
operator|.
name|computeStats
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|fieldAValues
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|fieldBValues
argument_list|)
argument_list|)
expr_stmt|;
try|try
init|(
name|IndexReader
name|reader
init|=
name|indexWriter
operator|.
name|getReader
argument_list|()
init|)
block|{
name|IndexSearcher
name|searcher
init|=
operator|new
name|IndexSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|MatrixStatsAggregationBuilder
name|aggBuilder
init|=
operator|new
name|MatrixStatsAggregationBuilder
argument_list|(
literal|"my_agg"
argument_list|)
operator|.
name|fields
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|fieldA
argument_list|,
name|fieldB
argument_list|)
argument_list|)
decl_stmt|;
name|InternalMatrixStats
name|stats
init|=
name|search
argument_list|(
name|searcher
argument_list|,
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|aggBuilder
argument_list|,
name|ftA
argument_list|,
name|ftB
argument_list|)
decl_stmt|;
name|multiPassStats
operator|.
name|assertNearlyEqual
argument_list|(
operator|new
name|MatrixStatsResults
argument_list|(
name|stats
operator|.
name|getStats
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

