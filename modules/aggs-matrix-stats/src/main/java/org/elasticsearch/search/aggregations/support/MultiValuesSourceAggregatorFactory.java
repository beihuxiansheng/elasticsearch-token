begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.support
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|support
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|Aggregator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregatorFactories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|pipeline
operator|.
name|PipelineAggregator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|SearchContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|MultiValuesSourceAggregatorFactory
specifier|public
specifier|abstract
class|class
name|MultiValuesSourceAggregatorFactory
parameter_list|<
name|VS
extends|extends
name|ValuesSource
parameter_list|,
name|AF
extends|extends
name|MultiValuesSourceAggregatorFactory
parameter_list|<
name|VS
parameter_list|,
name|AF
parameter_list|>
parameter_list|>
extends|extends
name|AggregatorFactory
argument_list|<
name|AF
argument_list|>
block|{
DECL|field|configs
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|ValuesSourceConfig
argument_list|<
name|VS
argument_list|>
argument_list|>
name|configs
decl_stmt|;
DECL|method|MultiValuesSourceAggregatorFactory
specifier|public
name|MultiValuesSourceAggregatorFactory
parameter_list|(
name|String
name|name
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|ValuesSourceConfig
argument_list|<
name|VS
argument_list|>
argument_list|>
name|configs
parameter_list|,
name|SearchContext
name|context
parameter_list|,
name|AggregatorFactory
argument_list|<
name|?
argument_list|>
name|parent
parameter_list|,
name|AggregatorFactories
operator|.
name|Builder
name|subFactoriesBuilder
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|metaData
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|name
argument_list|,
name|context
argument_list|,
name|parent
argument_list|,
name|subFactoriesBuilder
argument_list|,
name|metaData
argument_list|)
expr_stmt|;
name|this
operator|.
name|configs
operator|=
name|configs
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createInternal
specifier|public
name|Aggregator
name|createInternal
parameter_list|(
name|Aggregator
name|parent
parameter_list|,
name|boolean
name|collectsFromSingleBucket
parameter_list|,
name|List
argument_list|<
name|PipelineAggregator
argument_list|>
name|pipelineAggregators
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|metaData
parameter_list|)
throws|throws
name|IOException
block|{
name|HashMap
argument_list|<
name|String
argument_list|,
name|VS
argument_list|>
name|valuesSources
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|ValuesSourceConfig
argument_list|<
name|VS
argument_list|>
argument_list|>
name|config
range|:
name|configs
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|VS
name|vs
init|=
name|config
operator|.
name|getValue
argument_list|()
operator|.
name|toValuesSource
argument_list|(
name|context
operator|.
name|getQueryShardContext
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|vs
operator|!=
literal|null
condition|)
block|{
name|valuesSources
operator|.
name|put
argument_list|(
name|config
operator|.
name|getKey
argument_list|()
argument_list|,
name|vs
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|valuesSources
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|createUnmapped
argument_list|(
name|parent
argument_list|,
name|pipelineAggregators
argument_list|,
name|metaData
argument_list|)
return|;
block|}
return|return
name|doCreateInternal
argument_list|(
name|valuesSources
argument_list|,
name|parent
argument_list|,
name|collectsFromSingleBucket
argument_list|,
name|pipelineAggregators
argument_list|,
name|metaData
argument_list|)
return|;
block|}
DECL|method|createUnmapped
specifier|protected
specifier|abstract
name|Aggregator
name|createUnmapped
parameter_list|(
name|Aggregator
name|parent
parameter_list|,
name|List
argument_list|<
name|PipelineAggregator
argument_list|>
name|pipelineAggregators
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|metaData
parameter_list|)
throws|throws
name|IOException
function_decl|;
DECL|method|doCreateInternal
specifier|protected
specifier|abstract
name|Aggregator
name|doCreateInternal
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|VS
argument_list|>
name|valuesSources
parameter_list|,
name|Aggregator
name|parent
parameter_list|,
name|boolean
name|collectsFromSingleBucket
parameter_list|,
name|List
argument_list|<
name|PipelineAggregator
argument_list|>
name|pipelineAggregators
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|metaData
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
end_class

end_unit

