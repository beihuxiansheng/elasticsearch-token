begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.aggregations.matrix.spi
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|matrix
operator|.
name|spi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|ParseField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ContextParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|NamedXContentRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|spi
operator|.
name|NamedXContentProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|Aggregation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|matrix
operator|.
name|stats
operator|.
name|MatrixStatsAggregationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|matrix
operator|.
name|stats
operator|.
name|ParsedMatrixStats
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singletonList
import|;
end_import

begin_class
DECL|class|MatrixStatsNamedXContentProvider
specifier|public
class|class
name|MatrixStatsNamedXContentProvider
implements|implements
name|NamedXContentProvider
block|{
annotation|@
name|Override
DECL|method|getNamedXContentParsers
specifier|public
name|List
argument_list|<
name|NamedXContentRegistry
operator|.
name|Entry
argument_list|>
name|getNamedXContentParsers
parameter_list|()
block|{
name|ParseField
name|parseField
init|=
operator|new
name|ParseField
argument_list|(
name|MatrixStatsAggregationBuilder
operator|.
name|NAME
argument_list|)
decl_stmt|;
name|ContextParser
argument_list|<
name|Object
argument_list|,
name|Aggregation
argument_list|>
name|contextParser
init|=
parameter_list|(
name|p
parameter_list|,
name|name
parameter_list|)
lambda|->
name|ParsedMatrixStats
operator|.
name|fromXContent
argument_list|(
name|p
argument_list|,
operator|(
name|String
operator|)
name|name
argument_list|)
decl_stmt|;
return|return
name|singletonList
argument_list|(
operator|new
name|NamedXContentRegistry
operator|.
name|Entry
argument_list|(
name|Aggregation
operator|.
name|class
argument_list|,
name|parseField
argument_list|,
name|contextParser
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

