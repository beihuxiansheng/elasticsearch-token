begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_comment
comment|/**  * An extension to the {@link ConcurrentMergeScheduler} that provides tracking on merge times, total  * and current merges.  */
end_comment

begin_class
DECL|class|TrackingConcurrentMergeScheduler
specifier|public
class|class
name|TrackingConcurrentMergeScheduler
extends|extends
name|ConcurrentMergeScheduler
block|{
DECL|field|totalMerges
specifier|private
name|AtomicLong
name|totalMerges
init|=
operator|new
name|AtomicLong
argument_list|()
decl_stmt|;
DECL|field|totalMergeTime
specifier|private
name|AtomicLong
name|totalMergeTime
init|=
operator|new
name|AtomicLong
argument_list|()
decl_stmt|;
DECL|field|currentMerges
specifier|private
name|AtomicLong
name|currentMerges
init|=
operator|new
name|AtomicLong
argument_list|()
decl_stmt|;
DECL|method|TrackingConcurrentMergeScheduler
specifier|public
name|TrackingConcurrentMergeScheduler
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
DECL|method|totalMerges
specifier|public
name|long
name|totalMerges
parameter_list|()
block|{
return|return
name|totalMerges
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|totalMergeTime
specifier|public
name|long
name|totalMergeTime
parameter_list|()
block|{
return|return
name|totalMergeTime
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|currentMerges
specifier|public
name|long
name|currentMerges
parameter_list|()
block|{
return|return
name|currentMerges
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|doMerge
annotation|@
name|Override
specifier|protected
name|void
name|doMerge
parameter_list|(
name|MergePolicy
operator|.
name|OneMerge
name|merge
parameter_list|)
throws|throws
name|IOException
block|{
name|long
name|time
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|currentMerges
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
try|try
block|{
name|super
operator|.
name|doMerge
argument_list|(
name|merge
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|currentMerges
operator|.
name|decrementAndGet
argument_list|()
expr_stmt|;
name|totalMerges
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
name|totalMergeTime
operator|.
name|addAndGet
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|time
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

