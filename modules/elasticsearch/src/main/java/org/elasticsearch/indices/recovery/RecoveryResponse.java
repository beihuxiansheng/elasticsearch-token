begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.indices.recovery
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|indices
operator|.
name|recovery
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|RecoveryResponse
class|class
name|RecoveryResponse
implements|implements
name|Streamable
block|{
DECL|field|phase1FileNames
name|List
argument_list|<
name|String
argument_list|>
name|phase1FileNames
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
DECL|field|phase1FileSizes
name|List
argument_list|<
name|Long
argument_list|>
name|phase1FileSizes
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
DECL|field|phase1ExistingFileNames
name|List
argument_list|<
name|String
argument_list|>
name|phase1ExistingFileNames
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
DECL|field|phase1ExistingFileSizes
name|List
argument_list|<
name|Long
argument_list|>
name|phase1ExistingFileSizes
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
DECL|field|phase1TotalSize
name|long
name|phase1TotalSize
decl_stmt|;
DECL|field|phase1ExistingTotalSize
name|long
name|phase1ExistingTotalSize
decl_stmt|;
DECL|field|phase1Time
name|long
name|phase1Time
decl_stmt|;
DECL|field|phase1ThrottlingWaitTime
name|long
name|phase1ThrottlingWaitTime
decl_stmt|;
DECL|field|phase2Operations
name|int
name|phase2Operations
decl_stmt|;
DECL|field|phase2Time
name|long
name|phase2Time
decl_stmt|;
DECL|field|phase3Operations
name|int
name|phase3Operations
decl_stmt|;
DECL|field|phase3Time
name|long
name|phase3Time
decl_stmt|;
DECL|method|RecoveryResponse
name|RecoveryResponse
parameter_list|()
block|{     }
DECL|method|readFrom
annotation|@
name|Override
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|size
init|=
name|in
operator|.
name|readVInt
argument_list|()
decl_stmt|;
name|phase1FileNames
operator|=
name|Lists
operator|.
name|newArrayListWithCapacity
argument_list|(
name|size
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|phase1FileNames
operator|.
name|add
argument_list|(
name|in
operator|.
name|readUTF
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|=
name|in
operator|.
name|readVInt
argument_list|()
expr_stmt|;
name|phase1FileSizes
operator|=
name|Lists
operator|.
name|newArrayListWithCapacity
argument_list|(
name|size
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|phase1FileSizes
operator|.
name|add
argument_list|(
name|in
operator|.
name|readVLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|=
name|in
operator|.
name|readVInt
argument_list|()
expr_stmt|;
name|phase1ExistingFileNames
operator|=
name|Lists
operator|.
name|newArrayListWithCapacity
argument_list|(
name|size
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|phase1ExistingFileNames
operator|.
name|add
argument_list|(
name|in
operator|.
name|readUTF
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|=
name|in
operator|.
name|readVInt
argument_list|()
expr_stmt|;
name|phase1ExistingFileSizes
operator|=
name|Lists
operator|.
name|newArrayListWithCapacity
argument_list|(
name|size
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|phase1ExistingFileSizes
operator|.
name|add
argument_list|(
name|in
operator|.
name|readVLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|phase1TotalSize
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|phase1ExistingTotalSize
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|phase1Time
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|phase1ThrottlingWaitTime
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|phase2Operations
operator|=
name|in
operator|.
name|readVInt
argument_list|()
expr_stmt|;
name|phase2Time
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|phase3Operations
operator|=
name|in
operator|.
name|readVInt
argument_list|()
expr_stmt|;
name|phase3Time
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
block|}
DECL|method|writeTo
annotation|@
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVInt
argument_list|(
name|phase1FileNames
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|name
range|:
name|phase1FileNames
control|)
block|{
name|out
operator|.
name|writeUTF
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|writeVInt
argument_list|(
name|phase1FileSizes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|long
name|size
range|:
name|phase1FileSizes
control|)
block|{
name|out
operator|.
name|writeVLong
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|writeVInt
argument_list|(
name|phase1ExistingFileNames
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|name
range|:
name|phase1ExistingFileNames
control|)
block|{
name|out
operator|.
name|writeUTF
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|writeVInt
argument_list|(
name|phase1ExistingFileSizes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|long
name|size
range|:
name|phase1ExistingFileSizes
control|)
block|{
name|out
operator|.
name|writeVLong
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|writeVLong
argument_list|(
name|phase1TotalSize
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|phase1ExistingTotalSize
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|phase1Time
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|phase1ThrottlingWaitTime
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVInt
argument_list|(
name|phase2Operations
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|phase2Time
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVInt
argument_list|(
name|phase3Operations
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|phase3Time
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

