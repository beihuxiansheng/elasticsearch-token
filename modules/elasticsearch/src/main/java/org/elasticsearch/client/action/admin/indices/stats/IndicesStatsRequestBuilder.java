begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.client.action.admin.indices.stats
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
operator|.
name|IndicesStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
operator|.
name|IndicesStatsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|IndicesAdminClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|support
operator|.
name|BaseIndicesRequestBuilder
import|;
end_import

begin_comment
comment|/**  * A request to get indices level stats. Allow to enable different stats to be returned.  *  *<p>By default, the {@link #setDocs(boolean)}, {@link #setStore(boolean)}, {@link #setIndexing(boolean)}  * are enabled. Other stats can be enabled as well.  *  *<p>All the stats to be returned can be cleared using {@link #clear()}, at which point, specific  * stats can be enabled.  */
end_comment

begin_class
DECL|class|IndicesStatsRequestBuilder
specifier|public
class|class
name|IndicesStatsRequestBuilder
extends|extends
name|BaseIndicesRequestBuilder
argument_list|<
name|IndicesStatsRequest
argument_list|,
name|IndicesStats
argument_list|>
block|{
DECL|method|IndicesStatsRequestBuilder
specifier|public
name|IndicesStatsRequestBuilder
parameter_list|(
name|IndicesAdminClient
name|indicesClient
parameter_list|)
block|{
name|super
argument_list|(
name|indicesClient
argument_list|,
operator|new
name|IndicesStatsRequest
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|clear
specifier|public
name|IndicesStatsRequestBuilder
name|clear
parameter_list|()
block|{
name|request
operator|.
name|clear
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets specific indices to return the stats for.      */
DECL|method|setIndices
specifier|public
name|IndicesStatsRequestBuilder
name|setIndices
parameter_list|(
name|String
modifier|...
name|indices
parameter_list|)
block|{
name|request
operator|.
name|indices
argument_list|(
name|indices
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Document types to return stats for. Mainly affects {@link #setIndexing(boolean)} when      * enabled, returning specific indexing stats for those types.      */
DECL|method|setTypes
specifier|public
name|IndicesStatsRequestBuilder
name|setTypes
parameter_list|(
name|String
modifier|...
name|types
parameter_list|)
block|{
name|request
operator|.
name|types
argument_list|(
name|types
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setDocs
specifier|public
name|IndicesStatsRequestBuilder
name|setDocs
parameter_list|(
name|boolean
name|docs
parameter_list|)
block|{
name|request
operator|.
name|docs
argument_list|(
name|docs
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setStore
specifier|public
name|IndicesStatsRequestBuilder
name|setStore
parameter_list|(
name|boolean
name|store
parameter_list|)
block|{
name|request
operator|.
name|store
argument_list|(
name|store
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setIndexing
specifier|public
name|IndicesStatsRequestBuilder
name|setIndexing
parameter_list|(
name|boolean
name|indexing
parameter_list|)
block|{
name|request
operator|.
name|indexing
argument_list|(
name|indexing
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setMerge
specifier|public
name|IndicesStatsRequestBuilder
name|setMerge
parameter_list|(
name|boolean
name|merge
parameter_list|)
block|{
name|request
operator|.
name|merge
argument_list|(
name|merge
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setRefresh
specifier|public
name|IndicesStatsRequestBuilder
name|setRefresh
parameter_list|(
name|boolean
name|refresh
parameter_list|)
block|{
name|request
operator|.
name|refresh
argument_list|(
name|refresh
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setFlush
specifier|public
name|IndicesStatsRequestBuilder
name|setFlush
parameter_list|(
name|boolean
name|flush
parameter_list|)
block|{
name|request
operator|.
name|flush
argument_list|(
name|flush
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|doExecute
annotation|@
name|Override
specifier|protected
name|void
name|doExecute
parameter_list|(
name|ActionListener
argument_list|<
name|IndicesStats
argument_list|>
name|listener
parameter_list|)
block|{
name|client
operator|.
name|stats
argument_list|(
name|request
argument_list|,
name|listener
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

