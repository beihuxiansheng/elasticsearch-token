begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.action.admin.indices.status
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|status
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticSearchIllegalArgumentException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|broadcast
operator|.
name|BroadcastShardOperationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|ShardRouting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|IndexShardState
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|ImmutableShardRouting
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @author kimchy (Shay Banon)  */
end_comment

begin_class
DECL|class|ShardStatus
specifier|public
class|class
name|ShardStatus
extends|extends
name|BroadcastShardOperationResponse
block|{
DECL|class|Docs
specifier|public
specifier|static
class|class
name|Docs
block|{
DECL|field|UNKNOWN
specifier|public
specifier|static
specifier|final
name|Docs
name|UNKNOWN
init|=
operator|new
name|Docs
argument_list|()
decl_stmt|;
DECL|field|numDocs
name|int
name|numDocs
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|maxDoc
name|int
name|maxDoc
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|deletedDocs
name|int
name|deletedDocs
init|=
operator|-
literal|1
decl_stmt|;
DECL|method|numDocs
specifier|public
name|int
name|numDocs
parameter_list|()
block|{
return|return
name|numDocs
return|;
block|}
DECL|method|getNumDocs
specifier|public
name|int
name|getNumDocs
parameter_list|()
block|{
return|return
name|numDocs
argument_list|()
return|;
block|}
DECL|method|maxDoc
specifier|public
name|int
name|maxDoc
parameter_list|()
block|{
return|return
name|maxDoc
return|;
block|}
DECL|method|getMaxDoc
specifier|public
name|int
name|getMaxDoc
parameter_list|()
block|{
return|return
name|maxDoc
argument_list|()
return|;
block|}
DECL|method|deletedDocs
specifier|public
name|int
name|deletedDocs
parameter_list|()
block|{
return|return
name|deletedDocs
return|;
block|}
DECL|method|getDeletedDocs
specifier|public
name|int
name|getDeletedDocs
parameter_list|()
block|{
return|return
name|deletedDocs
argument_list|()
return|;
block|}
block|}
DECL|class|PeerRecoveryStatus
specifier|public
specifier|static
class|class
name|PeerRecoveryStatus
block|{
DECL|enum|Stage
specifier|public
enum|enum
name|Stage
block|{
DECL|enum constant|INIT
name|INIT
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
block|,
DECL|enum constant|RETRY
name|RETRY
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
block|,
DECL|enum constant|FILES
name|FILES
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|)
block|,
DECL|enum constant|TRANSLOG
name|TRANSLOG
argument_list|(
operator|(
name|byte
operator|)
literal|3
argument_list|)
block|,
DECL|enum constant|FINALIZE
name|FINALIZE
argument_list|(
operator|(
name|byte
operator|)
literal|4
argument_list|)
block|,
DECL|enum constant|DONE
name|DONE
argument_list|(
operator|(
name|byte
operator|)
literal|5
argument_list|)
block|;
DECL|field|value
specifier|private
specifier|final
name|byte
name|value
decl_stmt|;
DECL|method|Stage
name|Stage
parameter_list|(
name|byte
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
DECL|method|value
specifier|public
name|byte
name|value
parameter_list|()
block|{
return|return
name|value
return|;
block|}
DECL|method|fromValue
specifier|public
specifier|static
name|Stage
name|fromValue
parameter_list|(
name|byte
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|0
condition|)
block|{
return|return
name|INIT
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|==
literal|1
condition|)
block|{
return|return
name|RETRY
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|==
literal|2
condition|)
block|{
return|return
name|FILES
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|==
literal|3
condition|)
block|{
return|return
name|TRANSLOG
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|==
literal|4
condition|)
block|{
return|return
name|FINALIZE
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|==
literal|5
condition|)
block|{
return|return
name|DONE
return|;
block|}
throw|throw
operator|new
name|ElasticSearchIllegalArgumentException
argument_list|(
literal|"No stage found for ["
operator|+
name|value
operator|+
literal|']'
argument_list|)
throw|;
block|}
block|}
DECL|field|stage
specifier|final
name|Stage
name|stage
decl_stmt|;
DECL|field|startTime
specifier|final
name|long
name|startTime
decl_stmt|;
DECL|field|time
specifier|final
name|long
name|time
decl_stmt|;
DECL|field|retryTime
specifier|final
name|long
name|retryTime
decl_stmt|;
DECL|field|indexSize
specifier|final
name|long
name|indexSize
decl_stmt|;
DECL|field|reusedIndexSize
specifier|final
name|long
name|reusedIndexSize
decl_stmt|;
DECL|field|recoveredIndexSize
specifier|final
name|long
name|recoveredIndexSize
decl_stmt|;
DECL|field|recoveredTranslogOperations
specifier|final
name|long
name|recoveredTranslogOperations
decl_stmt|;
DECL|method|PeerRecoveryStatus
specifier|public
name|PeerRecoveryStatus
parameter_list|(
name|Stage
name|stage
parameter_list|,
name|long
name|startTime
parameter_list|,
name|long
name|time
parameter_list|,
name|long
name|retryTime
parameter_list|,
name|long
name|indexSize
parameter_list|,
name|long
name|reusedIndexSize
parameter_list|,
name|long
name|recoveredIndexSize
parameter_list|,
name|long
name|recoveredTranslogOperations
parameter_list|)
block|{
name|this
operator|.
name|stage
operator|=
name|stage
expr_stmt|;
name|this
operator|.
name|startTime
operator|=
name|startTime
expr_stmt|;
name|this
operator|.
name|time
operator|=
name|time
expr_stmt|;
name|this
operator|.
name|retryTime
operator|=
name|retryTime
expr_stmt|;
name|this
operator|.
name|indexSize
operator|=
name|indexSize
expr_stmt|;
name|this
operator|.
name|reusedIndexSize
operator|=
name|reusedIndexSize
expr_stmt|;
name|this
operator|.
name|recoveredIndexSize
operator|=
name|recoveredIndexSize
expr_stmt|;
name|this
operator|.
name|recoveredTranslogOperations
operator|=
name|recoveredTranslogOperations
expr_stmt|;
block|}
DECL|method|stage
specifier|public
name|Stage
name|stage
parameter_list|()
block|{
return|return
name|this
operator|.
name|stage
return|;
block|}
DECL|method|startTime
specifier|public
name|long
name|startTime
parameter_list|()
block|{
return|return
name|this
operator|.
name|startTime
return|;
block|}
DECL|method|getStartTime
specifier|public
name|long
name|getStartTime
parameter_list|()
block|{
return|return
name|this
operator|.
name|startTime
return|;
block|}
DECL|method|time
specifier|public
name|TimeValue
name|time
parameter_list|()
block|{
return|return
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|time
argument_list|)
return|;
block|}
DECL|method|getTime
specifier|public
name|TimeValue
name|getTime
parameter_list|()
block|{
return|return
name|time
argument_list|()
return|;
block|}
DECL|method|retryTime
specifier|public
name|TimeValue
name|retryTime
parameter_list|()
block|{
return|return
name|TimeValue
operator|.
name|timeValueMillis
argument_list|(
name|retryTime
argument_list|)
return|;
block|}
DECL|method|getRetryTime
specifier|public
name|TimeValue
name|getRetryTime
parameter_list|()
block|{
return|return
name|retryTime
argument_list|()
return|;
block|}
DECL|method|indexSize
specifier|public
name|ByteSizeValue
name|indexSize
parameter_list|()
block|{
return|return
operator|new
name|ByteSizeValue
argument_list|(
name|indexSize
argument_list|)
return|;
block|}
DECL|method|getIndexSize
specifier|public
name|ByteSizeValue
name|getIndexSize
parameter_list|()
block|{
return|return
name|indexSize
argument_list|()
return|;
block|}
DECL|method|reusedIndexSize
specifier|public
name|ByteSizeValue
name|reusedIndexSize
parameter_list|()
block|{
return|return
operator|new
name|ByteSizeValue
argument_list|(
name|reusedIndexSize
argument_list|)
return|;
block|}
DECL|method|getReusedIndexSize
specifier|public
name|ByteSizeValue
name|getReusedIndexSize
parameter_list|()
block|{
return|return
name|reusedIndexSize
argument_list|()
return|;
block|}
DECL|method|expectedRecoveredIndexSize
specifier|public
name|ByteSizeValue
name|expectedRecoveredIndexSize
parameter_list|()
block|{
return|return
operator|new
name|ByteSizeValue
argument_list|(
name|indexSize
operator|-
name|reusedIndexSize
argument_list|)
return|;
block|}
DECL|method|getExpectedRecoveredIndexSize
specifier|public
name|ByteSizeValue
name|getExpectedRecoveredIndexSize
parameter_list|()
block|{
return|return
name|expectedRecoveredIndexSize
argument_list|()
return|;
block|}
comment|/**          * How much of the index has been recovered.          */
DECL|method|recoveredIndexSize
specifier|public
name|ByteSizeValue
name|recoveredIndexSize
parameter_list|()
block|{
return|return
operator|new
name|ByteSizeValue
argument_list|(
name|recoveredIndexSize
argument_list|)
return|;
block|}
comment|/**          * How much of the index has been recovered.          */
DECL|method|getRecoveredIndexSize
specifier|public
name|ByteSizeValue
name|getRecoveredIndexSize
parameter_list|()
block|{
return|return
name|recoveredIndexSize
argument_list|()
return|;
block|}
DECL|method|recoveredTranslogOperations
specifier|public
name|long
name|recoveredTranslogOperations
parameter_list|()
block|{
return|return
name|recoveredTranslogOperations
return|;
block|}
DECL|method|getRecoveredTranslogOperations
specifier|public
name|long
name|getRecoveredTranslogOperations
parameter_list|()
block|{
return|return
name|recoveredTranslogOperations
argument_list|()
return|;
block|}
block|}
DECL|field|shardRouting
specifier|private
name|ShardRouting
name|shardRouting
decl_stmt|;
DECL|field|state
name|IndexShardState
name|state
decl_stmt|;
DECL|field|storeSize
name|ByteSizeValue
name|storeSize
decl_stmt|;
DECL|field|translogId
name|long
name|translogId
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|translogOperations
name|long
name|translogOperations
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|docs
name|Docs
name|docs
init|=
name|Docs
operator|.
name|UNKNOWN
decl_stmt|;
DECL|field|peerRecoveryStatus
name|PeerRecoveryStatus
name|peerRecoveryStatus
decl_stmt|;
DECL|method|ShardStatus
name|ShardStatus
parameter_list|()
block|{     }
DECL|method|ShardStatus
name|ShardStatus
parameter_list|(
name|ShardRouting
name|shardRouting
parameter_list|)
block|{
name|super
argument_list|(
name|shardRouting
operator|.
name|index
argument_list|()
argument_list|,
name|shardRouting
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|shardRouting
operator|=
name|shardRouting
expr_stmt|;
block|}
DECL|method|shardRouting
specifier|public
name|ShardRouting
name|shardRouting
parameter_list|()
block|{
return|return
name|this
operator|.
name|shardRouting
return|;
block|}
DECL|method|getShardRouting
specifier|public
name|ShardRouting
name|getShardRouting
parameter_list|()
block|{
return|return
name|shardRouting
argument_list|()
return|;
block|}
DECL|method|state
specifier|public
name|IndexShardState
name|state
parameter_list|()
block|{
return|return
name|state
return|;
block|}
DECL|method|getState
specifier|public
name|IndexShardState
name|getState
parameter_list|()
block|{
return|return
name|state
argument_list|()
return|;
block|}
DECL|method|storeSize
specifier|public
name|ByteSizeValue
name|storeSize
parameter_list|()
block|{
return|return
name|storeSize
return|;
block|}
DECL|method|getStoreSize
specifier|public
name|ByteSizeValue
name|getStoreSize
parameter_list|()
block|{
return|return
name|storeSize
argument_list|()
return|;
block|}
DECL|method|translogId
specifier|public
name|long
name|translogId
parameter_list|()
block|{
return|return
name|translogId
return|;
block|}
DECL|method|getTranslogId
specifier|public
name|long
name|getTranslogId
parameter_list|()
block|{
return|return
name|translogId
argument_list|()
return|;
block|}
DECL|method|translogOperations
specifier|public
name|long
name|translogOperations
parameter_list|()
block|{
return|return
name|translogOperations
return|;
block|}
DECL|method|getTranslogOperations
specifier|public
name|long
name|getTranslogOperations
parameter_list|()
block|{
return|return
name|translogOperations
argument_list|()
return|;
block|}
DECL|method|docs
specifier|public
name|Docs
name|docs
parameter_list|()
block|{
return|return
name|docs
return|;
block|}
DECL|method|getDocs
specifier|public
name|Docs
name|getDocs
parameter_list|()
block|{
return|return
name|docs
argument_list|()
return|;
block|}
DECL|method|peerRecoveryStatus
specifier|public
name|PeerRecoveryStatus
name|peerRecoveryStatus
parameter_list|()
block|{
return|return
name|peerRecoveryStatus
return|;
block|}
DECL|method|getPeerRecoveryStatus
specifier|public
name|PeerRecoveryStatus
name|getPeerRecoveryStatus
parameter_list|()
block|{
return|return
name|peerRecoveryStatus
argument_list|()
return|;
block|}
DECL|method|readIndexShardStatus
specifier|public
specifier|static
name|ShardStatus
name|readIndexShardStatus
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|ShardStatus
name|shardStatus
init|=
operator|new
name|ShardStatus
argument_list|()
decl_stmt|;
name|shardStatus
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|shardStatus
return|;
block|}
DECL|method|writeTo
annotation|@
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|shardRouting
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeByte
argument_list|(
name|state
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|storeSize
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|storeSize
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|writeLong
argument_list|(
name|translogId
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|translogOperations
argument_list|)
expr_stmt|;
if|if
condition|(
name|docs
operator|==
name|Docs
operator|.
name|UNKNOWN
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|docs
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|docs
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|docs
operator|.
name|deletedDocs
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|peerRecoveryStatus
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeByte
argument_list|(
name|peerRecoveryStatus
operator|.
name|stage
operator|.
name|value
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|peerRecoveryStatus
operator|.
name|startTime
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|peerRecoveryStatus
operator|.
name|time
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|peerRecoveryStatus
operator|.
name|retryTime
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|peerRecoveryStatus
operator|.
name|indexSize
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|peerRecoveryStatus
operator|.
name|reusedIndexSize
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|peerRecoveryStatus
operator|.
name|recoveredIndexSize
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVLong
argument_list|(
name|peerRecoveryStatus
operator|.
name|recoveredTranslogOperations
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|readFrom
annotation|@
name|Override
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|shardRouting
operator|=
name|readShardRoutingEntry
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|state
operator|=
name|IndexShardState
operator|.
name|fromId
argument_list|(
name|in
operator|.
name|readByte
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|storeSize
operator|=
name|readBytesSizeValue
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
name|translogId
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|translogOperations
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|docs
operator|=
operator|new
name|Docs
argument_list|()
expr_stmt|;
name|docs
operator|.
name|numDocs
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|docs
operator|.
name|maxDoc
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|docs
operator|.
name|deletedDocs
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|peerRecoveryStatus
operator|=
operator|new
name|PeerRecoveryStatus
argument_list|(
name|PeerRecoveryStatus
operator|.
name|Stage
operator|.
name|fromValue
argument_list|(
name|in
operator|.
name|readByte
argument_list|()
argument_list|)
argument_list|,
name|in
operator|.
name|readVLong
argument_list|()
argument_list|,
name|in
operator|.
name|readVLong
argument_list|()
argument_list|,
name|in
operator|.
name|readVLong
argument_list|()
argument_list|,
name|in
operator|.
name|readVLong
argument_list|()
argument_list|,
name|in
operator|.
name|readVLong
argument_list|()
argument_list|,
name|in
operator|.
name|readVLong
argument_list|()
argument_list|,
name|in
operator|.
name|readVLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

