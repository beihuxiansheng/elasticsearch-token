begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.translog.memory
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
operator|.
name|memory
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticSearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|translog
operator|.
name|Translog
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Queue
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|MemorySnapshot
specifier|public
class|class
name|MemorySnapshot
implements|implements
name|Translog
operator|.
name|Snapshot
block|{
DECL|field|id
specifier|private
specifier|final
name|long
name|id
decl_stmt|;
DECL|field|operationsIt
specifier|private
specifier|final
name|Iterator
argument_list|<
name|Translog
operator|.
name|Operation
argument_list|>
name|operationsIt
decl_stmt|;
DECL|field|length
specifier|private
specifier|final
name|long
name|length
decl_stmt|;
DECL|field|position
specifier|private
name|long
name|position
init|=
literal|0
decl_stmt|;
DECL|method|MemorySnapshot
specifier|public
name|MemorySnapshot
parameter_list|(
name|long
name|id
parameter_list|,
name|Queue
argument_list|<
name|Translog
operator|.
name|Operation
argument_list|>
name|operations
parameter_list|,
name|long
name|length
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|operationsIt
operator|=
name|operations
operator|.
name|iterator
argument_list|()
expr_stmt|;
name|this
operator|.
name|length
operator|=
name|length
expr_stmt|;
block|}
DECL|method|translogId
annotation|@
name|Override
specifier|public
name|long
name|translogId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
DECL|method|release
annotation|@
name|Override
specifier|public
name|boolean
name|release
parameter_list|()
throws|throws
name|ElasticSearchException
block|{
return|return
literal|true
return|;
block|}
DECL|method|length
annotation|@
name|Override
specifier|public
name|long
name|length
parameter_list|()
block|{
return|return
name|length
return|;
block|}
DECL|method|position
annotation|@
name|Override
specifier|public
name|long
name|position
parameter_list|()
block|{
return|return
name|this
operator|.
name|position
return|;
block|}
DECL|method|hasNext
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|position
operator|<
name|length
return|;
block|}
DECL|method|next
annotation|@
name|Override
specifier|public
name|Translog
operator|.
name|Operation
name|next
parameter_list|()
block|{
name|Translog
operator|.
name|Operation
name|operation
init|=
name|operationsIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|position
operator|++
expr_stmt|;
return|return
name|operation
return|;
block|}
DECL|method|seekForward
annotation|@
name|Override
specifier|public
name|void
name|seekForward
parameter_list|(
name|long
name|position
parameter_list|)
block|{
name|long
name|numberToSeek
init|=
name|this
operator|.
name|position
operator|+
name|position
decl_stmt|;
while|while
condition|(
name|numberToSeek
operator|--
operator|!=
literal|0
condition|)
block|{
name|operationsIt
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|position
operator|=
name|position
expr_stmt|;
block|}
block|}
end_class

end_unit

