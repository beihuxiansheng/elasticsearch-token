begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.query.xcontent
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|xcontent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|geo
operator|.
name|GeoBoundingBoxFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|builder
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilderException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|GeoBoundingBoxFilterBuilder
specifier|public
class|class
name|GeoBoundingBoxFilterBuilder
extends|extends
name|BaseFilterBuilder
block|{
DECL|field|name
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|topLeft
specifier|private
name|GeoBoundingBoxFilter
operator|.
name|Point
name|topLeft
decl_stmt|;
DECL|field|topLeftGeohash
specifier|private
name|String
name|topLeftGeohash
decl_stmt|;
DECL|field|bottomRight
specifier|private
name|GeoBoundingBoxFilter
operator|.
name|Point
name|bottomRight
decl_stmt|;
DECL|field|bottomRightGeohash
specifier|private
name|String
name|bottomRightGeohash
decl_stmt|;
DECL|method|GeoBoundingBoxFilterBuilder
specifier|public
name|GeoBoundingBoxFilterBuilder
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
DECL|method|topLeft
specifier|public
name|GeoBoundingBoxFilterBuilder
name|topLeft
parameter_list|(
name|double
name|lat
parameter_list|,
name|double
name|lon
parameter_list|)
block|{
name|topLeft
operator|=
operator|new
name|GeoBoundingBoxFilter
operator|.
name|Point
argument_list|()
expr_stmt|;
name|topLeft
operator|.
name|lat
operator|=
name|lat
expr_stmt|;
name|topLeft
operator|.
name|lon
operator|=
name|lon
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|bottomRight
specifier|public
name|GeoBoundingBoxFilterBuilder
name|bottomRight
parameter_list|(
name|double
name|lat
parameter_list|,
name|double
name|lon
parameter_list|)
block|{
name|bottomRight
operator|=
operator|new
name|GeoBoundingBoxFilter
operator|.
name|Point
argument_list|()
expr_stmt|;
name|bottomRight
operator|.
name|lat
operator|=
name|lat
expr_stmt|;
name|bottomRight
operator|.
name|lon
operator|=
name|lon
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|topLeft
specifier|public
name|GeoBoundingBoxFilterBuilder
name|topLeft
parameter_list|(
name|String
name|geohash
parameter_list|)
block|{
name|this
operator|.
name|topLeftGeohash
operator|=
name|geohash
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|bottomRight
specifier|public
name|GeoBoundingBoxFilterBuilder
name|bottomRight
parameter_list|(
name|String
name|geohash
parameter_list|)
block|{
name|this
operator|.
name|bottomRightGeohash
operator|=
name|geohash
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|doXContent
annotation|@
name|Override
specifier|protected
name|void
name|doXContent
parameter_list|(
name|XContentBuilder
name|builder
parameter_list|,
name|Params
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|builder
operator|.
name|startObject
argument_list|(
name|GeoBoundingBoxFilterParser
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|builder
operator|.
name|startObject
argument_list|(
name|name
argument_list|)
expr_stmt|;
if|if
condition|(
name|topLeftGeohash
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
literal|"top_left"
argument_list|,
name|topLeftGeohash
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|topLeft
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|startArray
argument_list|(
literal|"top_left"
argument_list|)
operator|.
name|value
argument_list|(
name|topLeft
operator|.
name|lat
argument_list|)
operator|.
name|value
argument_list|(
name|topLeft
operator|.
name|lon
argument_list|)
operator|.
name|endArray
argument_list|()
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|QueryBuilderException
argument_list|(
literal|"geo_bounding_box requires 'top_left' to be set"
argument_list|)
throw|;
block|}
if|if
condition|(
name|bottomRightGeohash
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|field
argument_list|(
literal|"bottom_right"
argument_list|,
name|bottomRightGeohash
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|bottomRight
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|startArray
argument_list|(
literal|"bottom_right"
argument_list|)
operator|.
name|value
argument_list|(
name|bottomRight
operator|.
name|lat
argument_list|)
operator|.
name|value
argument_list|(
name|bottomRight
operator|.
name|lon
argument_list|)
operator|.
name|endArray
argument_list|()
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|QueryBuilderException
argument_list|(
literal|"geo_bounding_box requires 'bottom_right' to be set"
argument_list|)
throw|;
block|}
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|builder
operator|.
name|endObject
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

