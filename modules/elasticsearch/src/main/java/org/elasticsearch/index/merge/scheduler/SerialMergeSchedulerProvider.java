begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.merge.scheduler
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|merge
operator|.
name|scheduler
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|CorruptIndexException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|MergeScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SerialMergeScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|AlreadyClosedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|merge
operator|.
name|policy
operator|.
name|EnableMergePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|settings
operator|.
name|IndexSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|AbstractIndexShardComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|SerialMergeSchedulerProvider
specifier|public
class|class
name|SerialMergeSchedulerProvider
extends|extends
name|AbstractIndexShardComponent
implements|implements
name|MergeSchedulerProvider
block|{
DECL|method|SerialMergeSchedulerProvider
annotation|@
name|Inject
specifier|public
name|SerialMergeSchedulerProvider
parameter_list|(
name|ShardId
name|shardId
parameter_list|,
annotation|@
name|IndexSettings
name|Settings
name|indexSettings
parameter_list|)
block|{
name|super
argument_list|(
name|shardId
argument_list|,
name|indexSettings
argument_list|)
expr_stmt|;
name|logger
operator|.
name|trace
argument_list|(
literal|"using [serial] merge scheduler"
argument_list|)
expr_stmt|;
block|}
DECL|method|newMergeScheduler
annotation|@
name|Override
specifier|public
name|MergeScheduler
name|newMergeScheduler
parameter_list|()
block|{
return|return
operator|new
name|CustomSerialMergeScheduler
argument_list|()
return|;
block|}
DECL|class|CustomSerialMergeScheduler
specifier|public
specifier|static
class|class
name|CustomSerialMergeScheduler
extends|extends
name|SerialMergeScheduler
block|{
DECL|method|merge
annotation|@
name|Override
specifier|public
name|void
name|merge
parameter_list|(
name|IndexWriter
name|writer
parameter_list|)
throws|throws
name|CorruptIndexException
throws|,
name|IOException
block|{
try|try
block|{
comment|// if merge is not enabled, don't do any merging...
if|if
condition|(
name|writer
operator|.
name|getMergePolicy
argument_list|()
operator|instanceof
name|EnableMergePolicy
condition|)
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|EnableMergePolicy
operator|)
name|writer
operator|.
name|getMergePolicy
argument_list|()
operator|)
operator|.
name|isMergeEnabled
argument_list|()
condition|)
block|{
return|return;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|AlreadyClosedException
name|e
parameter_list|)
block|{
comment|// called writer#getMergePolicy can cause an AlreadyClosed failure, so ignore it
comment|// since we are doing it on close, return here and don't do the actual merge
comment|// since we do it outside of a lock in the RobinEngine
return|return;
block|}
name|super
operator|.
name|merge
argument_list|(
name|writer
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

