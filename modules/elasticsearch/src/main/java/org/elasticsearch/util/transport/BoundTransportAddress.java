begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.util.transport
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|transport
package|;
end_package

begin_comment
comment|/**  * A bounded transport address is a tuple of two {@link TransportAddress}, one that represents  * the address the transport is bounded on, the the published one represents the one clients should  * communicate on.  *  * @author kimchy (Shay Banon)  */
end_comment

begin_class
DECL|class|BoundTransportAddress
specifier|public
class|class
name|BoundTransportAddress
block|{
DECL|field|boundAddress
specifier|private
specifier|final
name|TransportAddress
name|boundAddress
decl_stmt|;
DECL|field|publishAddress
specifier|private
specifier|final
name|TransportAddress
name|publishAddress
decl_stmt|;
DECL|method|BoundTransportAddress
specifier|public
name|BoundTransportAddress
parameter_list|(
name|TransportAddress
name|boundAddress
parameter_list|,
name|TransportAddress
name|publishAddress
parameter_list|)
block|{
name|this
operator|.
name|boundAddress
operator|=
name|boundAddress
expr_stmt|;
name|this
operator|.
name|publishAddress
operator|=
name|publishAddress
expr_stmt|;
block|}
DECL|method|boundAddress
specifier|public
name|TransportAddress
name|boundAddress
parameter_list|()
block|{
return|return
name|boundAddress
return|;
block|}
DECL|method|publishAddress
specifier|public
name|TransportAddress
name|publishAddress
parameter_list|()
block|{
return|return
name|publishAddress
return|;
block|}
DECL|method|toString
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"boundAddress ["
operator|+
name|boundAddress
operator|+
literal|"], publishAddress ["
operator|+
name|publishAddress
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

