begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2010 Ning, Inc.  *  * Ning licenses this file to you under the Apache License, version 2.0  * (the "License"); you may not use this file except in compliance with the  * License.  You may obtain a copy of the License at:  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the  * License for the specific language governing permissions and limitations  * under the License.  *  */
end_comment

begin_package
DECL|package|org.elasticsearch.util.http.client
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|http
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|logging
operator|.
name|ESLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|logging
operator|.
name|Loggers
import|;
end_import

begin_comment
comment|/**  * Simple {@link AsyncHandler} of type {@link Response}  */
end_comment

begin_class
DECL|class|AsyncCompletionHandlerBase
specifier|public
class|class
name|AsyncCompletionHandlerBase
extends|extends
name|AsyncCompletionHandler
argument_list|<
name|Response
argument_list|>
block|{
DECL|field|log
specifier|private
specifier|final
specifier|static
name|ESLogger
name|log
init|=
name|Loggers
operator|.
name|getLogger
argument_list|(
name|AsyncCompletionHandlerBase
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|onCompleted
specifier|public
name|Response
name|onCompleted
parameter_list|(
name|Response
name|response
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|response
return|;
block|}
comment|/* @Override */
DECL|method|onThrowable
specifier|public
name|void
name|onThrowable
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
if|if
condition|(
name|log
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|log
operator|.
name|debug
argument_list|(
name|t
operator|.
name|getMessage
argument_list|()
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

