begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2010 Ning, Inc.  *  * Ning licenses this file to you under the Apache License, version 2.0  * (the "License"); you may not use this file except in compliance with the  * License.  You may obtain a copy of the License at:  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the  * License for the specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.util.http.multipart
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|http
operator|.
name|multipart
package|;
end_package

begin_comment
comment|/**  * This class is an adaptation of the Apache HttpClient implementation  *  * @link http://hc.apache.org/httpclient-3.x/  */
end_comment

begin_class
DECL|class|PartBase
specifier|public
specifier|abstract
class|class
name|PartBase
extends|extends
name|Part
block|{
comment|/**      * Name of the file part.      */
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
comment|/**      * Content type of the file part.      */
DECL|field|contentType
specifier|private
name|String
name|contentType
decl_stmt|;
comment|/**      * Content encoding of the file part.      */
DECL|field|charSet
specifier|private
name|String
name|charSet
decl_stmt|;
comment|/**      * The transfer encoding.      */
DECL|field|transferEncoding
specifier|private
name|String
name|transferEncoding
decl_stmt|;
comment|/**      * Constructor.      *      * @param name             The name of the part      * @param contentType      The content type, or<code>null</code>      * @param charSet          The character encoding, or<code>null</code>      * @param transferEncoding The transfer encoding, or<code>null</code>      */
DECL|method|PartBase
specifier|public
name|PartBase
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|contentType
parameter_list|,
name|String
name|charSet
parameter_list|,
name|String
name|transferEncoding
parameter_list|)
block|{
if|if
condition|(
name|name
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Name must not be null"
argument_list|)
throw|;
block|}
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|contentType
operator|=
name|contentType
expr_stmt|;
name|this
operator|.
name|charSet
operator|=
name|charSet
expr_stmt|;
name|this
operator|.
name|transferEncoding
operator|=
name|transferEncoding
expr_stmt|;
block|}
comment|/**      * Returns the name.      *      * @return The name.      */
DECL|method|getName
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|this
operator|.
name|name
return|;
block|}
comment|/**      * Returns the content type of this part.      *      * @return String The name.      */
DECL|method|getContentType
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
return|return
name|this
operator|.
name|contentType
return|;
block|}
comment|/**      * Return the character encoding of this part.      *      * @return String The name.      */
DECL|method|getCharSet
specifier|public
name|String
name|getCharSet
parameter_list|()
block|{
return|return
name|this
operator|.
name|charSet
return|;
block|}
comment|/**      * Returns the transfer encoding of this part.      *      * @return String The name.      */
DECL|method|getTransferEncoding
specifier|public
name|String
name|getTransferEncoding
parameter_list|()
block|{
return|return
name|transferEncoding
return|;
block|}
comment|/**      * Sets the character encoding.      *      * @param charSet the character encoding, or<code>null</code> to exclude the character      *                encoding header      */
DECL|method|setCharSet
specifier|public
name|void
name|setCharSet
parameter_list|(
name|String
name|charSet
parameter_list|)
block|{
name|this
operator|.
name|charSet
operator|=
name|charSet
expr_stmt|;
block|}
comment|/**      * Sets the content type.      *      * @param contentType the content type, or<code>null</code> to exclude the content type header      */
DECL|method|setContentType
specifier|public
name|void
name|setContentType
parameter_list|(
name|String
name|contentType
parameter_list|)
block|{
name|this
operator|.
name|contentType
operator|=
name|contentType
expr_stmt|;
block|}
comment|/**      * Sets the part name.      *      * @param name      */
DECL|method|setName
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|name
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Name must not be null"
argument_list|)
throw|;
block|}
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
comment|/**      * Sets the transfer encoding.      *      * @param transferEncoding the transfer encoding, or<code>null</code> to exclude the      *                         transfer encoding header      */
DECL|method|setTransferEncoding
specifier|public
name|void
name|setTransferEncoding
parameter_list|(
name|String
name|transferEncoding
parameter_list|)
block|{
name|this
operator|.
name|transferEncoding
operator|=
name|transferEncoding
expr_stmt|;
block|}
block|}
end_class

end_unit

