begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2010 Ning, Inc.  *  * Ning licenses this file to you under the Apache License, version 2.0  * (the "License"); you may not use this file except in compliance with the  * License.  You may obtain a copy of the License at:  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the  * License for the specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.util.http.client
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|http
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|collect
operator|.
name|Multimap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|http
operator|.
name|client
operator|.
name|Request
operator|.
name|EntityWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Builder for a {@link Request}.  */
end_comment

begin_class
DECL|class|RequestBuilder
specifier|public
class|class
name|RequestBuilder
extends|extends
name|RequestBuilderBase
argument_list|<
name|RequestBuilder
argument_list|>
block|{
DECL|method|RequestBuilder
specifier|public
name|RequestBuilder
parameter_list|(
name|RequestType
name|type
parameter_list|)
block|{
name|super
argument_list|(
name|RequestBuilder
operator|.
name|class
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
DECL|method|RequestBuilder
specifier|public
name|RequestBuilder
parameter_list|(
name|Request
name|prototype
parameter_list|)
block|{
name|super
argument_list|(
name|RequestBuilder
operator|.
name|class
argument_list|,
name|prototype
argument_list|)
expr_stmt|;
block|}
comment|// Note: For now we keep the delegates in place even though they are not needed
comment|//       since otherwise Clojure (and maybe other languages) won't be able to
comment|//       access these methods - see Clojure tickets 126 and 259
annotation|@
name|Override
DECL|method|addBodyPart
specifier|public
name|RequestBuilder
name|addBodyPart
parameter_list|(
name|Part
name|part
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
return|return
name|super
operator|.
name|addBodyPart
argument_list|(
name|part
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addCookie
specifier|public
name|RequestBuilder
name|addCookie
parameter_list|(
name|Cookie
name|cookie
parameter_list|)
block|{
return|return
name|super
operator|.
name|addCookie
argument_list|(
name|cookie
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addHeader
specifier|public
name|RequestBuilder
name|addHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addHeader
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addParameter
specifier|public
name|RequestBuilder
name|addParameter
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
return|return
name|super
operator|.
name|addParameter
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addQueryParameter
specifier|public
name|RequestBuilder
name|addQueryParameter
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addQueryParameter
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|build
specifier|public
name|Request
name|build
parameter_list|()
block|{
return|return
name|super
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setBody
specifier|public
name|RequestBuilder
name|setBody
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
return|return
name|super
operator|.
name|setBody
argument_list|(
name|data
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setBody
specifier|public
name|RequestBuilder
name|setBody
parameter_list|(
name|EntityWriter
name|dataWriter
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
return|return
name|super
operator|.
name|setBody
argument_list|(
name|dataWriter
argument_list|,
name|length
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setBody
specifier|public
name|RequestBuilder
name|setBody
parameter_list|(
name|EntityWriter
name|dataWriter
parameter_list|)
block|{
return|return
name|super
operator|.
name|setBody
argument_list|(
name|dataWriter
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setBody
specifier|public
name|RequestBuilder
name|setBody
parameter_list|(
name|InputStream
name|stream
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
return|return
name|super
operator|.
name|setBody
argument_list|(
name|stream
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setBody
specifier|public
name|RequestBuilder
name|setBody
parameter_list|(
name|String
name|data
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
return|return
name|super
operator|.
name|setBody
argument_list|(
name|data
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setHeader
specifier|public
name|RequestBuilder
name|setHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setHeader
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setHeaders
specifier|public
name|RequestBuilder
name|setHeaders
parameter_list|(
name|Headers
name|headers
parameter_list|)
block|{
return|return
name|super
operator|.
name|setHeaders
argument_list|(
name|headers
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setParameters
specifier|public
name|RequestBuilder
name|setParameters
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
return|return
name|super
operator|.
name|setParameters
argument_list|(
name|parameters
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setParameters
specifier|public
name|RequestBuilder
name|setParameters
parameter_list|(
name|Multimap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
return|return
name|super
operator|.
name|setParameters
argument_list|(
name|parameters
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setUrl
specifier|public
name|RequestBuilder
name|setUrl
parameter_list|(
name|String
name|url
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUrl
argument_list|(
name|url
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setVirtualHost
specifier|public
name|RequestBuilder
name|setVirtualHost
parameter_list|(
name|String
name|virtualHost
parameter_list|)
block|{
return|return
name|super
operator|.
name|setVirtualHost
argument_list|(
name|virtualHost
argument_list|)
return|;
block|}
block|}
end_class

end_unit

