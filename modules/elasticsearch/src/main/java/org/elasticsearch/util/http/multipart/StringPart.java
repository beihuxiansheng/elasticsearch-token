begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2010 Ning, Inc.  *  * Ning licenses this file to you under the Apache License, version 2.0  * (the "License"); you may not use this file except in compliance with the  * License.  You may obtain a copy of the License at:  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the  * License for the specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.util.http.multipart
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|http
operator|.
name|multipart
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|logging
operator|.
name|ESLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|logging
operator|.
name|Loggers
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_comment
comment|/**  * This class is an adaptation of the Apache HttpClient implementation  *  * @link http://hc.apache.org/httpclient-3.x/  */
end_comment

begin_class
DECL|class|StringPart
specifier|public
class|class
name|StringPart
extends|extends
name|PartBase
block|{
comment|/**      * Log object for this class.      */
DECL|field|LOG
specifier|private
specifier|final
specifier|static
name|ESLogger
name|LOG
init|=
name|Loggers
operator|.
name|getLogger
argument_list|(
name|StringPart
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**      * Default content encoding of string parameters.      */
DECL|field|DEFAULT_CONTENT_TYPE
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_CONTENT_TYPE
init|=
literal|"text/plain"
decl_stmt|;
comment|/**      * Default charset of string parameters      */
DECL|field|DEFAULT_CHARSET
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_CHARSET
init|=
literal|"US-ASCII"
decl_stmt|;
comment|/**      * Default transfer encoding of string parameters      */
DECL|field|DEFAULT_TRANSFER_ENCODING
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_TRANSFER_ENCODING
init|=
literal|"8bit"
decl_stmt|;
comment|/**      * Contents of this StringPart.      */
DECL|field|content
specifier|private
name|byte
index|[]
name|content
decl_stmt|;
comment|/**      * The String value of this part.      */
DECL|field|value
specifier|private
name|String
name|value
decl_stmt|;
comment|/**      * Constructor.      *      * @param name    The name of the part      * @param value   the string to post      * @param charset the charset to be used to encode the string, if<code>null</code>      *                the {@link #DEFAULT_CHARSET default} is used      */
DECL|method|StringPart
specifier|public
name|StringPart
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|,
name|String
name|charset
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
name|DEFAULT_CONTENT_TYPE
argument_list|,
name|charset
operator|==
literal|null
condition|?
name|DEFAULT_CHARSET
else|:
name|charset
argument_list|,
name|DEFAULT_TRANSFER_ENCODING
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Value may not be null"
argument_list|)
throw|;
block|}
if|if
condition|(
name|value
operator|.
name|indexOf
argument_list|(
literal|0
argument_list|)
operator|!=
operator|-
literal|1
condition|)
block|{
comment|// See RFC 2048, 2.8. "8bit Data"
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"NULs may not be present in string parts"
argument_list|)
throw|;
block|}
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|/**      * Constructor.      *      * @param name  The name of the part      * @param value the string to post      */
DECL|method|StringPart
specifier|public
name|StringPart
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|this
argument_list|(
name|name
argument_list|,
name|value
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**      * Gets the content in bytes.  Bytes are lazily created to allow the charset to be changed      * after the part is created.      *      * @return the content in bytes      */
DECL|method|getContent
specifier|private
name|byte
index|[]
name|getContent
parameter_list|()
block|{
if|if
condition|(
name|content
operator|==
literal|null
condition|)
block|{
name|content
operator|=
name|MultipartEncodingUtil
operator|.
name|getBytes
argument_list|(
name|value
argument_list|,
name|getCharSet
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|content
return|;
block|}
comment|/**      * Writes the data to the given OutputStream.      *      * @param out the OutputStream to write to      * @throws java.io.IOException if there is a write error      */
DECL|method|sendData
specifier|protected
name|void
name|sendData
parameter_list|(
name|OutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|trace
argument_list|(
literal|"enter sendData(OutputStream)"
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
name|getContent
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Return the length of the data.      *      * @return The length of the data.      * @throws IOException If an IO problem occurs      */
DECL|method|lengthOfData
specifier|protected
name|long
name|lengthOfData
parameter_list|()
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|trace
argument_list|(
literal|"enter lengthOfData()"
argument_list|)
expr_stmt|;
return|return
name|getContent
argument_list|()
operator|.
name|length
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.commons.httpclient.methods.multipart.BasePart#setCharSet(java.lang.String)      */
DECL|method|setCharSet
specifier|public
name|void
name|setCharSet
parameter_list|(
name|String
name|charSet
parameter_list|)
block|{
name|super
operator|.
name|setCharSet
argument_list|(
name|charSet
argument_list|)
expr_stmt|;
name|this
operator|.
name|content
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

