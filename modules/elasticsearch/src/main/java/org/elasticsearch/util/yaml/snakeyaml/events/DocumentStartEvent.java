begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.util.yaml.snakeyaml.events
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|yaml
operator|.
name|snakeyaml
operator|.
name|events
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|yaml
operator|.
name|snakeyaml
operator|.
name|error
operator|.
name|Mark
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Marks the beginning of a document.  *<p>  * This event followed by the document's content and a {@link DocumentEndEvent}.  *</p>  */
end_comment

begin_class
DECL|class|DocumentStartEvent
specifier|public
specifier|final
class|class
name|DocumentStartEvent
extends|extends
name|Event
block|{
DECL|field|explicit
specifier|private
specifier|final
name|boolean
name|explicit
decl_stmt|;
DECL|field|version
specifier|private
specifier|final
name|Integer
index|[]
name|version
decl_stmt|;
DECL|field|tags
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|tags
decl_stmt|;
DECL|method|DocumentStartEvent
specifier|public
name|DocumentStartEvent
parameter_list|(
name|Mark
name|startMark
parameter_list|,
name|Mark
name|endMark
parameter_list|,
name|boolean
name|explicit
parameter_list|,
name|Integer
index|[]
name|version
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|tags
parameter_list|)
block|{
name|super
argument_list|(
name|startMark
argument_list|,
name|endMark
argument_list|)
expr_stmt|;
name|this
operator|.
name|explicit
operator|=
name|explicit
expr_stmt|;
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
name|this
operator|.
name|tags
operator|=
name|tags
expr_stmt|;
block|}
DECL|method|getExplicit
specifier|public
name|boolean
name|getExplicit
parameter_list|()
block|{
return|return
name|explicit
return|;
block|}
comment|/**      * YAML version the document conforms to.      *      * @return<code>null</code>if the document has no explicit      *<code>%YAML</code> directive. Otherwise an array with two      *         components, the major and minor part of the version (in this      *         order).      */
DECL|method|getVersion
specifier|public
name|Integer
index|[]
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
comment|/**      * Tag shorthands as defined by the<code>%TAG</code> directive.      *      * @return Mapping of 'handles' to 'prefixes' (the handles include the '!'      *         characters).      */
DECL|method|getTags
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getTags
parameter_list|()
block|{
return|return
name|tags
return|;
block|}
annotation|@
name|Override
DECL|method|is
specifier|public
name|boolean
name|is
parameter_list|(
name|ID
name|id
parameter_list|)
block|{
return|return
name|ID
operator|.
name|DocumentStart
operator|==
name|id
return|;
block|}
block|}
end_class

end_unit

