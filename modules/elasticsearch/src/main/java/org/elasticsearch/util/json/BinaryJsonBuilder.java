begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.util.json
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|json
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|JsonEncoding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|JsonFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|JsonGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticSearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|ThreadLocals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|Unicode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|io
operator|.
name|FastByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|BinaryJsonBuilder
specifier|public
class|class
name|BinaryJsonBuilder
extends|extends
name|JsonBuilder
argument_list|<
name|BinaryJsonBuilder
argument_list|>
block|{
comment|/**      * A thread local based cache of {@link BinaryJsonBuilder}.      */
DECL|class|Cached
specifier|public
specifier|static
class|class
name|Cached
block|{
DECL|field|cache
specifier|private
specifier|static
specifier|final
name|ThreadLocal
argument_list|<
name|ThreadLocals
operator|.
name|CleanableValue
argument_list|<
name|BinaryJsonBuilder
argument_list|>
argument_list|>
name|cache
init|=
operator|new
name|ThreadLocal
argument_list|<
name|ThreadLocals
operator|.
name|CleanableValue
argument_list|<
name|BinaryJsonBuilder
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|ThreadLocals
operator|.
name|CleanableValue
argument_list|<
name|BinaryJsonBuilder
argument_list|>
name|initialValue
parameter_list|()
block|{
try|try
block|{
name|BinaryJsonBuilder
name|builder
init|=
operator|new
name|BinaryJsonBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|cachedStringBuilder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
return|return
operator|new
name|ThreadLocals
operator|.
name|CleanableValue
argument_list|<
name|BinaryJsonBuilder
argument_list|>
argument_list|(
name|builder
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ElasticSearchException
argument_list|(
literal|"Failed to create json generator"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
decl_stmt|;
comment|/**          * Returns the cached thread local generator, with its internal {@link StringBuilder} cleared.          */
DECL|method|cached
specifier|static
name|BinaryJsonBuilder
name|cached
parameter_list|()
throws|throws
name|IOException
block|{
name|ThreadLocals
operator|.
name|CleanableValue
argument_list|<
name|BinaryJsonBuilder
argument_list|>
name|cached
init|=
name|cache
operator|.
name|get
argument_list|()
decl_stmt|;
name|cached
operator|.
name|get
argument_list|()
operator|.
name|reset
argument_list|()
expr_stmt|;
return|return
name|cached
operator|.
name|get
argument_list|()
return|;
block|}
block|}
DECL|field|bos
specifier|private
specifier|final
name|FastByteArrayOutputStream
name|bos
decl_stmt|;
DECL|field|factory
specifier|private
specifier|final
name|JsonFactory
name|factory
decl_stmt|;
DECL|field|cachedStringBuilder
specifier|private
name|StringBuilder
name|cachedStringBuilder
decl_stmt|;
DECL|method|BinaryJsonBuilder
specifier|public
name|BinaryJsonBuilder
parameter_list|()
throws|throws
name|IOException
block|{
name|this
argument_list|(
name|Jackson
operator|.
name|defaultJsonFactory
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|BinaryJsonBuilder
specifier|public
name|BinaryJsonBuilder
parameter_list|(
name|JsonFactory
name|factory
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|bos
operator|=
operator|new
name|FastByteArrayOutputStream
argument_list|()
expr_stmt|;
name|this
operator|.
name|factory
operator|=
name|factory
expr_stmt|;
name|this
operator|.
name|generator
operator|=
name|factory
operator|.
name|createJsonGenerator
argument_list|(
name|bos
argument_list|,
name|JsonEncoding
operator|.
name|UTF8
argument_list|)
expr_stmt|;
name|this
operator|.
name|builder
operator|=
name|this
expr_stmt|;
block|}
DECL|method|BinaryJsonBuilder
specifier|public
name|BinaryJsonBuilder
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|bos
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|generator
operator|=
name|generator
expr_stmt|;
name|this
operator|.
name|factory
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|builder
operator|=
name|this
expr_stmt|;
block|}
DECL|method|cachedStringBuilder
annotation|@
name|Override
specifier|protected
name|StringBuilder
name|cachedStringBuilder
parameter_list|()
block|{
return|return
name|cachedStringBuilder
return|;
block|}
DECL|method|raw
annotation|@
name|Override
specifier|public
name|BinaryJsonBuilder
name|raw
parameter_list|(
name|byte
index|[]
name|json
parameter_list|)
throws|throws
name|IOException
block|{
name|flush
argument_list|()
expr_stmt|;
name|bos
operator|.
name|write
argument_list|(
name|json
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|reset
annotation|@
name|Override
specifier|public
name|BinaryJsonBuilder
name|reset
parameter_list|()
throws|throws
name|IOException
block|{
name|fieldCaseConversion
operator|=
name|globalFieldCaseConversion
expr_stmt|;
name|bos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|generator
operator|=
name|factory
operator|.
name|createJsonGenerator
argument_list|(
name|bos
argument_list|,
name|JsonEncoding
operator|.
name|UTF8
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|unsafeStream
specifier|public
name|FastByteArrayOutputStream
name|unsafeStream
parameter_list|()
throws|throws
name|IOException
block|{
name|flush
argument_list|()
expr_stmt|;
return|return
name|bos
return|;
block|}
DECL|method|unsafeBytes
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|unsafeBytes
parameter_list|()
throws|throws
name|IOException
block|{
name|flush
argument_list|()
expr_stmt|;
return|return
name|bos
operator|.
name|unsafeByteArray
argument_list|()
return|;
block|}
DECL|method|unsafeBytesLength
annotation|@
name|Override
specifier|public
name|int
name|unsafeBytesLength
parameter_list|()
throws|throws
name|IOException
block|{
name|flush
argument_list|()
expr_stmt|;
return|return
name|bos
operator|.
name|size
argument_list|()
return|;
block|}
DECL|method|copiedBytes
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|copiedBytes
parameter_list|()
throws|throws
name|IOException
block|{
name|flush
argument_list|()
expr_stmt|;
return|return
name|bos
operator|.
name|copiedByteArray
argument_list|()
return|;
block|}
DECL|method|string
annotation|@
name|Override
specifier|public
name|String
name|string
parameter_list|()
throws|throws
name|IOException
block|{
name|flush
argument_list|()
expr_stmt|;
return|return
name|Unicode
operator|.
name|fromBytes
argument_list|(
name|bos
operator|.
name|unsafeByteArray
argument_list|()
argument_list|,
literal|0
argument_list|,
name|bos
operator|.
name|size
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

