begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.util
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|util
package|;
end_package

begin_comment
comment|/**  * An array that is safe in terms of size.  *  * @author kimchy (Shay Banon)  */
end_comment

begin_interface
DECL|interface|SafeArray
specifier|public
interface|interface
name|SafeArray
parameter_list|<
name|T
parameter_list|>
block|{
DECL|method|get
name|T
name|get
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
DECL|method|size
name|int
name|size
parameter_list|()
function_decl|;
DECL|method|add
name|void
name|add
parameter_list|(
name|T
name|value
parameter_list|)
function_decl|;
DECL|method|add
name|void
name|add
parameter_list|(
name|int
name|index
parameter_list|,
name|T
name|value
parameter_list|)
function_decl|;
DECL|method|clear
name|void
name|clear
parameter_list|()
function_decl|;
comment|/**      * Applies the procedure to each value in the list in ascending      * (front to back) order.      *      * @param procedure a<code>Procedure</code> value      * @return true if the procedure did not terminate prematurely.      */
DECL|method|forEach
name|boolean
name|forEach
parameter_list|(
name|Procedure
argument_list|<
name|T
argument_list|>
name|procedure
parameter_list|)
function_decl|;
DECL|interface|Procedure
specifier|static
interface|interface
name|Procedure
parameter_list|<
name|T
parameter_list|>
block|{
comment|/**          * Executes this procedure. A false return value indicates that          * the application executing this procedure should not invoke this          * procedure again.          *          * @param value a value          * @return true if additional invocations of the procedure are          *         allowed.          */
DECL|method|execute
name|boolean
name|execute
parameter_list|(
name|T
name|value
parameter_list|)
function_decl|;
block|}
block|}
end_interface

end_unit

