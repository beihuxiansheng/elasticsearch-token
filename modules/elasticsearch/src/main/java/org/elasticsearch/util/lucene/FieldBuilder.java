begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.util.lucene
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|lucene
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_comment
comment|/**  * @author kimchy (Shay Banon)  */
end_comment

begin_class
DECL|class|FieldBuilder
specifier|public
class|class
name|FieldBuilder
block|{
DECL|field|field
specifier|private
specifier|final
name|Field
name|field
decl_stmt|;
DECL|method|FieldBuilder
name|FieldBuilder
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|,
name|Field
operator|.
name|Store
name|store
parameter_list|,
name|Field
operator|.
name|Index
name|index
parameter_list|)
block|{
name|field
operator|=
operator|new
name|Field
argument_list|(
name|name
argument_list|,
name|value
argument_list|,
name|store
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
DECL|method|FieldBuilder
name|FieldBuilder
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|,
name|Field
operator|.
name|Store
name|store
parameter_list|,
name|Field
operator|.
name|Index
name|index
parameter_list|,
name|Field
operator|.
name|TermVector
name|termVector
parameter_list|)
block|{
name|field
operator|=
operator|new
name|Field
argument_list|(
name|name
argument_list|,
name|value
argument_list|,
name|store
argument_list|,
name|index
argument_list|,
name|termVector
argument_list|)
expr_stmt|;
block|}
DECL|method|FieldBuilder
name|FieldBuilder
parameter_list|(
name|String
name|name
parameter_list|,
name|byte
index|[]
name|value
parameter_list|,
name|Field
operator|.
name|Store
name|store
parameter_list|)
block|{
name|field
operator|=
operator|new
name|Field
argument_list|(
name|name
argument_list|,
name|value
argument_list|,
name|store
argument_list|)
expr_stmt|;
block|}
DECL|method|FieldBuilder
name|FieldBuilder
parameter_list|(
name|String
name|name
parameter_list|,
name|byte
index|[]
name|value
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|,
name|Field
operator|.
name|Store
name|store
parameter_list|)
block|{
name|field
operator|=
operator|new
name|Field
argument_list|(
name|name
argument_list|,
name|value
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|store
argument_list|)
expr_stmt|;
block|}
DECL|method|boost
specifier|public
name|FieldBuilder
name|boost
parameter_list|(
name|float
name|boost
parameter_list|)
block|{
name|field
operator|.
name|setBoost
argument_list|(
name|boost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|omitNorms
specifier|public
name|FieldBuilder
name|omitNorms
parameter_list|(
name|boolean
name|omitNorms
parameter_list|)
block|{
name|field
operator|.
name|setOmitNorms
argument_list|(
name|omitNorms
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|omitTermFreqAndPositions
specifier|public
name|FieldBuilder
name|omitTermFreqAndPositions
parameter_list|(
name|boolean
name|omitTermFreqAndPositions
parameter_list|)
block|{
name|field
operator|.
name|setOmitTermFreqAndPositions
argument_list|(
name|omitTermFreqAndPositions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build
specifier|public
name|Field
name|build
parameter_list|()
block|{
return|return
name|field
return|;
block|}
block|}
end_class

end_unit

