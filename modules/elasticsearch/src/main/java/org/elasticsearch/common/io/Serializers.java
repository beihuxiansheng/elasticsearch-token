begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.io
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * @author kimchy (Shay Banon)  */
end_comment

begin_class
DECL|class|Serializers
specifier|public
specifier|final
class|class
name|Serializers
block|{
DECL|method|throwableToBytes
specifier|public
specifier|static
name|byte
index|[]
name|throwableToBytes
parameter_list|(
name|Throwable
name|t
parameter_list|)
throws|throws
name|IOException
block|{
name|FastByteArrayOutputStream
name|os
init|=
operator|new
name|FastByteArrayOutputStream
argument_list|()
decl_stmt|;
name|ThrowableObjectOutputStream
name|oos
init|=
operator|new
name|ThrowableObjectOutputStream
argument_list|(
name|os
argument_list|)
decl_stmt|;
name|oos
operator|.
name|writeObject
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|oos
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|os
operator|.
name|underlyingBytes
argument_list|()
return|;
block|}
DECL|method|throwableFromBytes
specifier|public
specifier|static
name|Throwable
name|throwableFromBytes
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClassNotFoundException
block|{
name|FastByteArrayInputStream
name|is
init|=
operator|new
name|FastByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
decl_stmt|;
name|ThrowableObjectInputStream
name|ois
init|=
operator|new
name|ThrowableObjectInputStream
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|Throwable
name|t
init|=
operator|(
name|Throwable
operator|)
name|ois
operator|.
name|readObject
argument_list|()
decl_stmt|;
name|ois
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|t
return|;
block|}
DECL|method|objectToStream
specifier|public
specifier|static
name|void
name|objectToStream
parameter_list|(
name|Serializable
name|obj
parameter_list|,
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|bytes
init|=
name|objectToBytes
argument_list|(
name|obj
argument_list|)
decl_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|bytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
DECL|method|objectFromStream
specifier|public
specifier|static
name|Object
name|objectFromStream
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|ClassNotFoundException
throws|,
name|IOException
block|{
name|byte
index|[]
name|bytes
init|=
operator|new
name|byte
index|[
name|in
operator|.
name|readInt
argument_list|()
index|]
decl_stmt|;
name|in
operator|.
name|readFully
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
return|return
name|objectFromBytes
argument_list|(
name|bytes
argument_list|)
return|;
block|}
DECL|method|objectToBytes
specifier|public
specifier|static
name|byte
index|[]
name|objectToBytes
parameter_list|(
name|Serializable
name|obj
parameter_list|)
throws|throws
name|IOException
block|{
name|FastByteArrayOutputStream
name|os
init|=
operator|new
name|FastByteArrayOutputStream
argument_list|()
decl_stmt|;
name|CompactObjectOutputStream
name|oos
init|=
operator|new
name|CompactObjectOutputStream
argument_list|(
name|os
argument_list|)
decl_stmt|;
name|oos
operator|.
name|writeObject
argument_list|(
name|obj
argument_list|)
expr_stmt|;
name|oos
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|os
operator|.
name|underlyingBytes
argument_list|()
return|;
block|}
DECL|method|objectFromBytes
specifier|public
specifier|static
name|Object
name|objectFromBytes
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClassNotFoundException
block|{
name|FastByteArrayInputStream
name|is
init|=
operator|new
name|FastByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
decl_stmt|;
name|CompactObjectInputStream
name|ois
init|=
operator|new
name|CompactObjectInputStream
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|Object
name|obj
init|=
name|ois
operator|.
name|readObject
argument_list|()
decl_stmt|;
name|ois
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|obj
return|;
block|}
DECL|method|Serializers
specifier|private
name|Serializers
parameter_list|()
block|{      }
block|}
end_class

end_unit

