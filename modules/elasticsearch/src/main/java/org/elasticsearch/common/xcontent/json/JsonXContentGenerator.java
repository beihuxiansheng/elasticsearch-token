begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.xcontent.json
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|json
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|CacheRecycler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|Streams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|jackson
operator|.
name|JsonGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|JsonXContentGenerator
specifier|public
class|class
name|JsonXContentGenerator
implements|implements
name|XContentGenerator
block|{
DECL|field|generator
specifier|protected
specifier|final
name|JsonGenerator
name|generator
decl_stmt|;
DECL|method|JsonXContentGenerator
specifier|public
name|JsonXContentGenerator
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|)
block|{
name|this
operator|.
name|generator
operator|=
name|generator
expr_stmt|;
block|}
DECL|method|contentType
annotation|@
name|Override
specifier|public
name|XContentType
name|contentType
parameter_list|()
block|{
return|return
name|XContentType
operator|.
name|JSON
return|;
block|}
DECL|method|usePrettyPrint
annotation|@
name|Override
specifier|public
name|void
name|usePrettyPrint
parameter_list|()
block|{
name|generator
operator|.
name|useDefaultPrettyPrinter
argument_list|()
expr_stmt|;
block|}
DECL|method|writeStartArray
annotation|@
name|Override
specifier|public
name|void
name|writeStartArray
parameter_list|()
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeStartArray
argument_list|()
expr_stmt|;
block|}
DECL|method|writeEndArray
annotation|@
name|Override
specifier|public
name|void
name|writeEndArray
parameter_list|()
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeEndArray
argument_list|()
expr_stmt|;
block|}
DECL|method|writeStartObject
annotation|@
name|Override
specifier|public
name|void
name|writeStartObject
parameter_list|()
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeStartObject
argument_list|()
expr_stmt|;
block|}
DECL|method|writeEndObject
annotation|@
name|Override
specifier|public
name|void
name|writeEndObject
parameter_list|()
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeEndObject
argument_list|()
expr_stmt|;
block|}
DECL|method|writeFieldName
annotation|@
name|Override
specifier|public
name|void
name|writeFieldName
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|writeFieldName
annotation|@
name|Override
specifier|public
name|void
name|writeFieldName
parameter_list|(
name|XContentString
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|writeString
annotation|@
name|Override
specifier|public
name|void
name|writeString
parameter_list|(
name|String
name|text
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeString
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
DECL|method|writeString
annotation|@
name|Override
specifier|public
name|void
name|writeString
parameter_list|(
name|char
index|[]
name|text
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeString
argument_list|(
name|text
argument_list|,
name|offset
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
DECL|method|writeBinary
annotation|@
name|Override
specifier|public
name|void
name|writeBinary
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeBinary
argument_list|(
name|data
argument_list|,
name|offset
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
DECL|method|writeBinary
annotation|@
name|Override
specifier|public
name|void
name|writeBinary
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeBinary
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNumber
annotation|@
name|Override
specifier|public
name|void
name|writeNumber
parameter_list|(
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNumber
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNumber
annotation|@
name|Override
specifier|public
name|void
name|writeNumber
parameter_list|(
name|long
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNumber
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNumber
annotation|@
name|Override
specifier|public
name|void
name|writeNumber
parameter_list|(
name|double
name|d
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNumber
argument_list|(
name|d
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNumber
annotation|@
name|Override
specifier|public
name|void
name|writeNumber
parameter_list|(
name|float
name|f
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNumber
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
DECL|method|writeBoolean
annotation|@
name|Override
specifier|public
name|void
name|writeBoolean
parameter_list|(
name|boolean
name|state
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeBoolean
argument_list|(
name|state
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNull
annotation|@
name|Override
specifier|public
name|void
name|writeNull
parameter_list|()
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNull
argument_list|()
expr_stmt|;
block|}
DECL|method|writeStringField
annotation|@
name|Override
specifier|public
name|void
name|writeStringField
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeStringField
argument_list|(
name|fieldName
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeStringField
annotation|@
name|Override
specifier|public
name|void
name|writeStringField
parameter_list|(
name|XContentString
name|fieldName
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeString
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeBooleanField
annotation|@
name|Override
specifier|public
name|void
name|writeBooleanField
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|boolean
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeBooleanField
argument_list|(
name|fieldName
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeBooleanField
annotation|@
name|Override
specifier|public
name|void
name|writeBooleanField
parameter_list|(
name|XContentString
name|fieldName
parameter_list|,
name|boolean
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeBoolean
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNullField
annotation|@
name|Override
specifier|public
name|void
name|writeNullField
parameter_list|(
name|String
name|fieldName
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNullField
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNullField
annotation|@
name|Override
specifier|public
name|void
name|writeNullField
parameter_list|(
name|XContentString
name|fieldName
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeNull
argument_list|()
expr_stmt|;
block|}
DECL|method|writeNumberField
annotation|@
name|Override
specifier|public
name|void
name|writeNumberField
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|int
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNumberField
argument_list|(
name|fieldName
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNumberField
annotation|@
name|Override
specifier|public
name|void
name|writeNumberField
parameter_list|(
name|XContentString
name|fieldName
parameter_list|,
name|int
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeNumber
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNumberField
annotation|@
name|Override
specifier|public
name|void
name|writeNumberField
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|long
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNumberField
argument_list|(
name|fieldName
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNumberField
annotation|@
name|Override
specifier|public
name|void
name|writeNumberField
parameter_list|(
name|XContentString
name|fieldName
parameter_list|,
name|long
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeNumber
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNumberField
annotation|@
name|Override
specifier|public
name|void
name|writeNumberField
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|double
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNumberField
argument_list|(
name|fieldName
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNumberField
annotation|@
name|Override
specifier|public
name|void
name|writeNumberField
parameter_list|(
name|XContentString
name|fieldName
parameter_list|,
name|double
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeNumber
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNumberField
annotation|@
name|Override
specifier|public
name|void
name|writeNumberField
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|float
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNumberField
argument_list|(
name|fieldName
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNumberField
annotation|@
name|Override
specifier|public
name|void
name|writeNumberField
parameter_list|(
name|XContentString
name|fieldName
parameter_list|,
name|float
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeNumber
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeBinaryField
annotation|@
name|Override
specifier|public
name|void
name|writeBinaryField
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeBinaryField
argument_list|(
name|fieldName
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
DECL|method|writeBinaryField
annotation|@
name|Override
specifier|public
name|void
name|writeBinaryField
parameter_list|(
name|XContentString
name|fieldName
parameter_list|,
name|byte
index|[]
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeBinary
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|writeArrayFieldStart
annotation|@
name|Override
specifier|public
name|void
name|writeArrayFieldStart
parameter_list|(
name|String
name|fieldName
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeArrayFieldStart
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
block|}
DECL|method|writeArrayFieldStart
annotation|@
name|Override
specifier|public
name|void
name|writeArrayFieldStart
parameter_list|(
name|XContentString
name|fieldName
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeStartArray
argument_list|()
expr_stmt|;
block|}
DECL|method|writeObjectFieldStart
annotation|@
name|Override
specifier|public
name|void
name|writeObjectFieldStart
parameter_list|(
name|String
name|fieldName
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeObjectFieldStart
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
block|}
DECL|method|writeObjectFieldStart
annotation|@
name|Override
specifier|public
name|void
name|writeObjectFieldStart
parameter_list|(
name|XContentString
name|fieldName
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeFieldName
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeStartObject
argument_list|()
expr_stmt|;
block|}
DECL|method|writeRawField
annotation|@
name|Override
specifier|public
name|void
name|writeRawField
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|byte
index|[]
name|content
parameter_list|,
name|OutputStream
name|bos
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeRaw
argument_list|(
literal|", \""
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeRaw
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeRaw
argument_list|(
literal|"\" : "
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
name|bos
operator|.
name|write
argument_list|(
name|content
argument_list|)
expr_stmt|;
block|}
DECL|method|writeRawField
annotation|@
name|Override
specifier|public
name|void
name|writeRawField
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|InputStream
name|content
parameter_list|,
name|OutputStream
name|bos
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeRaw
argument_list|(
literal|", \""
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeRaw
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeRaw
argument_list|(
literal|"\" : "
argument_list|)
expr_stmt|;
name|flush
argument_list|()
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|CacheRecycler
operator|.
name|popBytes
argument_list|()
decl_stmt|;
name|Streams
operator|.
name|copy
argument_list|(
name|content
argument_list|,
name|bos
argument_list|,
name|bytes
argument_list|)
expr_stmt|;
block|}
DECL|method|copyCurrentStructure
annotation|@
name|Override
specifier|public
name|void
name|copyCurrentStructure
parameter_list|(
name|XContentParser
name|parser
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|parser
operator|instanceof
name|JsonXContentParser
condition|)
block|{
name|generator
operator|.
name|copyCurrentStructure
argument_list|(
operator|(
operator|(
name|JsonXContentParser
operator|)
name|parser
operator|)
operator|.
name|parser
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|XContentHelper
operator|.
name|copyCurrentStructure
argument_list|(
name|this
argument_list|,
name|parser
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|flush
annotation|@
name|Override
specifier|public
name|void
name|flush
parameter_list|()
throws|throws
name|IOException
block|{
name|generator
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
DECL|method|close
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|generator
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

