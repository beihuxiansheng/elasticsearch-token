begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.trove
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|trove
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|TBytesHashingStrategy
specifier|public
class|class
name|TBytesHashingStrategy
implements|implements
name|TObjectHashingStrategy
argument_list|<
name|byte
index|[]
argument_list|>
block|{
DECL|method|computeHashCode
annotation|@
name|Override
specifier|public
name|int
name|computeHashCode
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|)
block|{
return|return
name|Arrays
operator|.
name|hashCode
argument_list|(
name|bytes
argument_list|)
return|;
block|}
DECL|method|equals
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|,
name|byte
index|[]
name|bytes1
parameter_list|)
block|{
return|return
name|Arrays
operator|.
name|equals
argument_list|(
name|bytes
argument_list|,
name|bytes1
argument_list|)
return|;
block|}
block|}
end_class

end_unit

