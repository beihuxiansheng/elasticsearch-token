begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.common.trove
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|trove
package|;
end_package

begin_comment
comment|/**  * @author kimchy (Shay Banon)  */
end_comment

begin_class
DECL|class|ExtTObjectIntHasMap
specifier|public
class|class
name|ExtTObjectIntHasMap
parameter_list|<
name|T
parameter_list|>
extends|extends
name|TObjectIntHashMap
argument_list|<
name|T
argument_list|>
block|{
DECL|field|defaultReturnValue
specifier|private
name|int
name|defaultReturnValue
init|=
literal|0
decl_stmt|;
DECL|method|ExtTObjectIntHasMap
specifier|public
name|ExtTObjectIntHasMap
parameter_list|()
block|{     }
DECL|method|ExtTObjectIntHasMap
specifier|public
name|ExtTObjectIntHasMap
parameter_list|(
name|int
name|initialCapacity
parameter_list|)
block|{
name|super
argument_list|(
name|initialCapacity
argument_list|)
expr_stmt|;
block|}
DECL|method|ExtTObjectIntHasMap
specifier|public
name|ExtTObjectIntHasMap
parameter_list|(
name|int
name|initialCapacity
parameter_list|,
name|float
name|loadFactor
parameter_list|)
block|{
name|super
argument_list|(
name|initialCapacity
argument_list|,
name|loadFactor
argument_list|)
expr_stmt|;
block|}
DECL|method|ExtTObjectIntHasMap
specifier|public
name|ExtTObjectIntHasMap
parameter_list|(
name|TObjectHashingStrategy
argument_list|<
name|T
argument_list|>
name|ttObjectHashingStrategy
parameter_list|)
block|{
name|super
argument_list|(
name|ttObjectHashingStrategy
argument_list|)
expr_stmt|;
block|}
DECL|method|ExtTObjectIntHasMap
specifier|public
name|ExtTObjectIntHasMap
parameter_list|(
name|int
name|initialCapacity
parameter_list|,
name|TObjectHashingStrategy
argument_list|<
name|T
argument_list|>
name|ttObjectHashingStrategy
parameter_list|)
block|{
name|super
argument_list|(
name|initialCapacity
argument_list|,
name|ttObjectHashingStrategy
argument_list|)
expr_stmt|;
block|}
DECL|method|ExtTObjectIntHasMap
specifier|public
name|ExtTObjectIntHasMap
parameter_list|(
name|int
name|initialCapacity
parameter_list|,
name|float
name|loadFactor
parameter_list|,
name|TObjectHashingStrategy
argument_list|<
name|T
argument_list|>
name|ttObjectHashingStrategy
parameter_list|)
block|{
name|super
argument_list|(
name|initialCapacity
argument_list|,
name|loadFactor
argument_list|,
name|ttObjectHashingStrategy
argument_list|)
expr_stmt|;
block|}
DECL|method|defaultReturnValue
specifier|public
name|ExtTObjectIntHasMap
argument_list|<
name|T
argument_list|>
name|defaultReturnValue
parameter_list|(
name|int
name|defaultReturnValue
parameter_list|)
block|{
name|this
operator|.
name|defaultReturnValue
operator|=
name|defaultReturnValue
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|get
annotation|@
name|Override
specifier|public
name|int
name|get
parameter_list|(
name|T
name|key
parameter_list|)
block|{
name|int
name|index
init|=
name|index
argument_list|(
name|key
argument_list|)
decl_stmt|;
return|return
name|index
operator|<
literal|0
condition|?
name|defaultReturnValue
else|:
name|_values
index|[
name|index
index|]
return|;
block|}
block|}
end_class

end_unit

