begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.rest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|UnicodeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|thread
operator|.
name|ThreadLocals
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|StringRestResponse
specifier|public
class|class
name|StringRestResponse
extends|extends
name|Utf8RestResponse
block|{
DECL|field|cache
specifier|private
specifier|static
name|ThreadLocal
argument_list|<
name|ThreadLocals
operator|.
name|CleanableValue
argument_list|<
name|UnicodeUtil
operator|.
name|UTF8Result
argument_list|>
argument_list|>
name|cache
init|=
operator|new
name|ThreadLocal
argument_list|<
name|ThreadLocals
operator|.
name|CleanableValue
argument_list|<
name|UnicodeUtil
operator|.
name|UTF8Result
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|ThreadLocals
operator|.
name|CleanableValue
argument_list|<
name|UnicodeUtil
operator|.
name|UTF8Result
argument_list|>
name|initialValue
parameter_list|()
block|{
return|return
operator|new
name|ThreadLocals
operator|.
name|CleanableValue
argument_list|<
name|UnicodeUtil
operator|.
name|UTF8Result
argument_list|>
argument_list|(
operator|new
name|UnicodeUtil
operator|.
name|UTF8Result
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
DECL|method|StringRestResponse
specifier|public
name|StringRestResponse
parameter_list|(
name|RestStatus
name|status
parameter_list|)
block|{
name|super
argument_list|(
name|status
argument_list|)
expr_stmt|;
block|}
DECL|method|StringRestResponse
specifier|public
name|StringRestResponse
parameter_list|(
name|RestStatus
name|status
parameter_list|,
name|String
name|content
parameter_list|)
block|{
name|super
argument_list|(
name|status
argument_list|,
name|convert
argument_list|(
name|content
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|convert
specifier|private
specifier|static
name|UnicodeUtil
operator|.
name|UTF8Result
name|convert
parameter_list|(
name|String
name|content
parameter_list|)
block|{
name|UnicodeUtil
operator|.
name|UTF8Result
name|result
init|=
name|cache
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|UnicodeUtil
operator|.
name|UTF16toUTF8
argument_list|(
name|content
argument_list|,
literal|0
argument_list|,
name|content
operator|.
name|length
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

