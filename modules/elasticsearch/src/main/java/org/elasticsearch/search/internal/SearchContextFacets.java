begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.search.internal
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|SearchContextFacets
specifier|public
class|class
name|SearchContextFacets
block|{
DECL|enum|QueryExecutionType
specifier|public
specifier|static
enum|enum
name|QueryExecutionType
block|{
DECL|enum constant|COLLECT
name|COLLECT
block|,
DECL|enum constant|IDSET
name|IDSET
block|}
DECL|field|queryExecutionType
specifier|private
specifier|final
name|QueryExecutionType
name|queryExecutionType
decl_stmt|;
DECL|field|queryFacets
specifier|private
specifier|final
name|List
argument_list|<
name|QueryFacet
argument_list|>
name|queryFacets
decl_stmt|;
DECL|method|SearchContextFacets
specifier|public
name|SearchContextFacets
parameter_list|(
name|QueryExecutionType
name|queryExecutionType
parameter_list|,
name|List
argument_list|<
name|QueryFacet
argument_list|>
name|queryFacets
parameter_list|)
block|{
name|this
operator|.
name|queryExecutionType
operator|=
name|queryExecutionType
expr_stmt|;
name|this
operator|.
name|queryFacets
operator|=
name|queryFacets
expr_stmt|;
block|}
DECL|method|queryType
specifier|public
name|QueryExecutionType
name|queryType
parameter_list|()
block|{
return|return
name|this
operator|.
name|queryExecutionType
return|;
block|}
DECL|method|queryFacets
specifier|public
name|List
argument_list|<
name|QueryFacet
argument_list|>
name|queryFacets
parameter_list|()
block|{
return|return
name|queryFacets
return|;
block|}
DECL|class|Facet
specifier|public
specifier|static
specifier|abstract
class|class
name|Facet
block|{
DECL|field|global
specifier|private
name|boolean
name|global
decl_stmt|;
DECL|method|Facet
specifier|protected
name|Facet
parameter_list|()
block|{         }
DECL|method|global
specifier|public
name|boolean
name|global
parameter_list|()
block|{
return|return
name|global
return|;
block|}
DECL|method|global
specifier|public
name|void
name|global
parameter_list|(
name|boolean
name|global
parameter_list|)
block|{
name|this
operator|.
name|global
operator|=
name|global
expr_stmt|;
block|}
block|}
DECL|class|QueryFacet
specifier|public
specifier|static
class|class
name|QueryFacet
extends|extends
name|Facet
block|{
DECL|field|name
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|query
specifier|private
specifier|final
name|Query
name|query
decl_stmt|;
DECL|method|QueryFacet
specifier|public
name|QueryFacet
parameter_list|(
name|String
name|name
parameter_list|,
name|Query
name|query
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|query
operator|=
name|query
expr_stmt|;
block|}
DECL|method|name
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|query
specifier|public
name|Query
name|query
parameter_list|()
block|{
return|return
name|query
return|;
block|}
block|}
block|}
end_class

end_unit

