begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.indexer
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|indexer
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
operator|.
name|ESLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|logging
operator|.
name|Loggers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indexer
operator|.
name|settings
operator|.
name|IndexerSettings
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|AbstractIndexerComponent
specifier|public
class|class
name|AbstractIndexerComponent
implements|implements
name|IndexerComponent
block|{
DECL|field|logger
specifier|protected
specifier|final
name|ESLogger
name|logger
decl_stmt|;
DECL|field|indexerName
specifier|protected
specifier|final
name|IndexerName
name|indexerName
decl_stmt|;
DECL|field|indexSettings
specifier|protected
specifier|final
name|Settings
name|indexSettings
decl_stmt|;
DECL|field|componentSettings
specifier|protected
specifier|final
name|Settings
name|componentSettings
decl_stmt|;
DECL|method|AbstractIndexerComponent
specifier|protected
name|AbstractIndexerComponent
parameter_list|(
name|IndexerName
name|indexerName
parameter_list|,
annotation|@
name|IndexerSettings
name|Settings
name|indexSettings
parameter_list|)
block|{
name|this
operator|.
name|indexerName
operator|=
name|indexerName
expr_stmt|;
name|this
operator|.
name|indexSettings
operator|=
name|indexSettings
expr_stmt|;
name|this
operator|.
name|componentSettings
operator|=
name|indexSettings
operator|.
name|getComponentSettings
argument_list|(
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|logger
operator|=
name|Loggers
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|,
name|indexSettings
argument_list|,
name|indexerName
argument_list|)
expr_stmt|;
block|}
DECL|method|AbstractIndexerComponent
specifier|protected
name|AbstractIndexerComponent
parameter_list|(
name|IndexerName
name|indexerName
parameter_list|,
annotation|@
name|IndexerSettings
name|Settings
name|indexSettings
parameter_list|,
name|String
name|prefixSettings
parameter_list|)
block|{
name|this
operator|.
name|indexerName
operator|=
name|indexerName
expr_stmt|;
name|this
operator|.
name|indexSettings
operator|=
name|indexSettings
expr_stmt|;
name|this
operator|.
name|componentSettings
operator|=
name|indexSettings
operator|.
name|getComponentSettings
argument_list|(
name|prefixSettings
argument_list|,
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|logger
operator|=
name|Loggers
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|,
name|indexSettings
argument_list|,
name|indexerName
argument_list|)
expr_stmt|;
block|}
DECL|method|indexerName
annotation|@
name|Override
specifier|public
name|IndexerName
name|indexerName
parameter_list|()
block|{
return|return
name|indexerName
return|;
block|}
DECL|method|nodeName
specifier|public
name|String
name|nodeName
parameter_list|()
block|{
return|return
name|indexSettings
operator|.
name|get
argument_list|(
literal|"name"
argument_list|,
literal|""
argument_list|)
return|;
block|}
block|}
end_class

end_unit

