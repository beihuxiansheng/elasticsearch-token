begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.indexer.routing
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|indexer
operator|.
name|routing
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|node
operator|.
name|DiscoveryNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|collect
operator|.
name|MapBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|indexer
operator|.
name|IndexerName
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|IndexersRouting
specifier|public
class|class
name|IndexersRouting
implements|implements
name|Iterable
argument_list|<
name|IndexerRouting
argument_list|>
block|{
DECL|field|indexers
specifier|private
specifier|final
name|ImmutableMap
argument_list|<
name|IndexerName
argument_list|,
name|IndexerRouting
argument_list|>
name|indexers
decl_stmt|;
DECL|method|IndexersRouting
specifier|private
name|IndexersRouting
parameter_list|(
name|ImmutableMap
argument_list|<
name|IndexerName
argument_list|,
name|IndexerRouting
argument_list|>
name|indexers
parameter_list|)
block|{
name|this
operator|.
name|indexers
operator|=
name|indexers
expr_stmt|;
block|}
DECL|method|routing
specifier|public
name|IndexerRouting
name|routing
parameter_list|(
name|IndexerName
name|indexerName
parameter_list|)
block|{
return|return
name|indexers
operator|.
name|get
argument_list|(
name|indexerName
argument_list|)
return|;
block|}
DECL|method|iterator
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|IndexerRouting
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
name|indexers
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
return|;
block|}
DECL|class|Builder
specifier|public
specifier|static
class|class
name|Builder
block|{
DECL|field|indexers
specifier|private
name|MapBuilder
argument_list|<
name|IndexerName
argument_list|,
name|IndexerRouting
argument_list|>
name|indexers
init|=
name|MapBuilder
operator|.
name|newMapBuilder
argument_list|()
decl_stmt|;
DECL|method|routing
specifier|public
name|Builder
name|routing
parameter_list|(
name|IndexersRouting
name|routing
parameter_list|)
block|{
name|indexers
operator|.
name|putAll
argument_list|(
name|routing
operator|.
name|indexers
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|put
specifier|public
name|Builder
name|put
parameter_list|(
name|IndexerRouting
name|routing
parameter_list|)
block|{
name|indexers
operator|.
name|put
argument_list|(
name|routing
operator|.
name|indexerName
argument_list|()
argument_list|,
name|routing
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|remove
specifier|public
name|Builder
name|remove
parameter_list|(
name|IndexerRouting
name|routing
parameter_list|)
block|{
name|indexers
operator|.
name|remove
argument_list|(
name|routing
operator|.
name|indexerName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build
specifier|public
name|IndexersRouting
name|build
parameter_list|()
block|{
return|return
operator|new
name|IndexersRouting
argument_list|(
name|indexers
operator|.
name|immutableMap
argument_list|()
argument_list|)
return|;
block|}
DECL|method|readFrom
specifier|public
specifier|static
name|IndexersRouting
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|()
decl_stmt|;
name|int
name|size
init|=
name|in
operator|.
name|readVInt
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|builder
operator|.
name|put
argument_list|(
operator|new
name|IndexerRouting
argument_list|(
operator|new
name|IndexerName
argument_list|(
name|in
operator|.
name|readUTF
argument_list|()
argument_list|,
name|in
operator|.
name|readUTF
argument_list|()
argument_list|)
argument_list|,
name|DiscoveryNode
operator|.
name|readNode
argument_list|(
name|in
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|writeTo
specifier|public
specifier|static
name|void
name|writeTo
parameter_list|(
name|IndexersRouting
name|routing
parameter_list|,
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVInt
argument_list|(
name|routing
operator|.
name|indexers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|IndexerRouting
name|indexerRouting
range|:
name|routing
control|)
block|{
name|out
operator|.
name|writeUTF
argument_list|(
name|indexerRouting
operator|.
name|indexerName
argument_list|()
operator|.
name|type
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeUTF
argument_list|(
name|indexerRouting
operator|.
name|indexerName
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|indexerRouting
operator|.
name|node
argument_list|()
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

