begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.transport.netty
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|netty
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|netty
operator|.
name|buffer
operator|.
name|ChannelBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|netty
operator|.
name|channel
operator|.
name|Channel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|netty
operator|.
name|channel
operator|.
name|ChannelHandlerContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|frame
operator|.
name|FrameDecoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StreamCorruptedException
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|SizeHeaderFrameDecoder
specifier|public
class|class
name|SizeHeaderFrameDecoder
extends|extends
name|FrameDecoder
block|{
DECL|method|decode
specifier|protected
name|Object
name|decode
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|,
name|Channel
name|channel
parameter_list|,
name|ChannelBuffer
name|buffer
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|buffer
operator|.
name|readableBytes
argument_list|()
operator|<
literal|4
condition|)
block|{
return|return
literal|null
return|;
block|}
name|int
name|dataLen
init|=
name|buffer
operator|.
name|getInt
argument_list|(
name|buffer
operator|.
name|readerIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|dataLen
operator|<=
literal|0
condition|)
block|{
throw|throw
operator|new
name|StreamCorruptedException
argument_list|(
literal|"invalid data length: "
operator|+
name|dataLen
argument_list|)
throw|;
block|}
if|if
condition|(
name|buffer
operator|.
name|readableBytes
argument_list|()
operator|<
name|dataLen
operator|+
literal|4
condition|)
block|{
return|return
literal|null
return|;
block|}
name|buffer
operator|.
name|skipBytes
argument_list|(
literal|4
argument_list|)
expr_stmt|;
return|return
name|buffer
return|;
block|}
block|}
end_class

end_unit

