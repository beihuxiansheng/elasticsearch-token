begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.monitor.jvm
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|jvm
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|SizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|io
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_comment
comment|/**  * @author kimchy (Shay Banon)  */
end_comment

begin_class
DECL|class|JvmStats
specifier|public
class|class
name|JvmStats
implements|implements
name|Streamable
implements|,
name|Serializable
block|{
DECL|field|runtimeMXBean
specifier|private
specifier|static
name|RuntimeMXBean
name|runtimeMXBean
decl_stmt|;
DECL|field|memoryMXBean
specifier|private
specifier|static
name|MemoryMXBean
name|memoryMXBean
decl_stmt|;
DECL|field|threadMXBean
specifier|private
specifier|static
name|ThreadMXBean
name|threadMXBean
decl_stmt|;
static|static
block|{
name|runtimeMXBean
operator|=
name|ManagementFactory
operator|.
name|getRuntimeMXBean
argument_list|()
expr_stmt|;
name|memoryMXBean
operator|=
name|ManagementFactory
operator|.
name|getMemoryMXBean
argument_list|()
expr_stmt|;
name|threadMXBean
operator|=
name|ManagementFactory
operator|.
name|getThreadMXBean
argument_list|()
expr_stmt|;
block|}
DECL|method|jvmStats
specifier|public
specifier|static
name|JvmStats
name|jvmStats
parameter_list|()
block|{
name|long
name|gcCollectionCount
init|=
literal|0
decl_stmt|;
name|long
name|gcCollectionTime
init|=
literal|0
decl_stmt|;
name|List
argument_list|<
name|GarbageCollectorMXBean
argument_list|>
name|gcMxBeans
init|=
name|ManagementFactory
operator|.
name|getGarbageCollectorMXBeans
argument_list|()
decl_stmt|;
for|for
control|(
name|GarbageCollectorMXBean
name|gcMxBean
range|:
name|gcMxBeans
control|)
block|{
name|long
name|tmp
init|=
name|gcMxBean
operator|.
name|getCollectionCount
argument_list|()
decl_stmt|;
if|if
condition|(
name|tmp
operator|!=
operator|-
literal|1
condition|)
block|{
name|gcCollectionCount
operator|+=
name|tmp
expr_stmt|;
block|}
name|tmp
operator|=
name|gcMxBean
operator|.
name|getCollectionTime
argument_list|()
expr_stmt|;
if|if
condition|(
name|tmp
operator|!=
operator|-
literal|1
condition|)
block|{
name|gcCollectionTime
operator|+=
name|tmp
expr_stmt|;
block|}
block|}
return|return
operator|new
name|JvmStats
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
name|runtimeMXBean
operator|.
name|getUptime
argument_list|()
argument_list|,
name|memoryMXBean
operator|.
name|getHeapMemoryUsage
argument_list|()
operator|.
name|getCommitted
argument_list|()
argument_list|,
name|memoryMXBean
operator|.
name|getHeapMemoryUsage
argument_list|()
operator|.
name|getUsed
argument_list|()
argument_list|,
name|memoryMXBean
operator|.
name|getNonHeapMemoryUsage
argument_list|()
operator|.
name|getCommitted
argument_list|()
argument_list|,
name|memoryMXBean
operator|.
name|getNonHeapMemoryUsage
argument_list|()
operator|.
name|getUsed
argument_list|()
argument_list|,
name|threadMXBean
operator|.
name|getThreadCount
argument_list|()
argument_list|,
name|threadMXBean
operator|.
name|getPeakThreadCount
argument_list|()
argument_list|,
name|gcCollectionCount
argument_list|,
name|gcCollectionTime
argument_list|)
return|;
block|}
DECL|field|timestamp
specifier|private
name|long
name|timestamp
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|uptime
specifier|private
name|long
name|uptime
decl_stmt|;
DECL|field|memoryHeapCommitted
specifier|private
name|long
name|memoryHeapCommitted
decl_stmt|;
DECL|field|memoryHeapUsed
specifier|private
name|long
name|memoryHeapUsed
decl_stmt|;
DECL|field|memoryNonHeapCommitted
specifier|private
name|long
name|memoryNonHeapCommitted
decl_stmt|;
DECL|field|memoryNonHeapUsed
specifier|private
name|long
name|memoryNonHeapUsed
decl_stmt|;
DECL|field|threadCount
specifier|private
name|int
name|threadCount
decl_stmt|;
DECL|field|peakThreadCount
specifier|private
name|int
name|peakThreadCount
decl_stmt|;
DECL|field|gcCollectionCount
specifier|private
name|long
name|gcCollectionCount
decl_stmt|;
DECL|field|gcCollectionTime
specifier|private
name|long
name|gcCollectionTime
decl_stmt|;
DECL|method|JvmStats
specifier|private
name|JvmStats
parameter_list|()
block|{     }
DECL|method|JvmStats
specifier|public
name|JvmStats
parameter_list|(
name|long
name|timestamp
parameter_list|,
name|long
name|uptime
parameter_list|,
name|long
name|memoryHeapCommitted
parameter_list|,
name|long
name|memoryHeapUsed
parameter_list|,
name|long
name|memoryNonHeapCommitted
parameter_list|,
name|long
name|memoryNonHeapUsed
parameter_list|,
name|int
name|threadCount
parameter_list|,
name|int
name|peakThreadCount
parameter_list|,
name|long
name|gcCollectionCount
parameter_list|,
name|long
name|gcCollectionTime
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
name|this
operator|.
name|uptime
operator|=
name|uptime
expr_stmt|;
name|this
operator|.
name|memoryHeapCommitted
operator|=
name|memoryHeapCommitted
expr_stmt|;
name|this
operator|.
name|memoryHeapUsed
operator|=
name|memoryHeapUsed
expr_stmt|;
name|this
operator|.
name|memoryNonHeapCommitted
operator|=
name|memoryNonHeapCommitted
expr_stmt|;
name|this
operator|.
name|memoryNonHeapUsed
operator|=
name|memoryNonHeapUsed
expr_stmt|;
name|this
operator|.
name|threadCount
operator|=
name|threadCount
expr_stmt|;
name|this
operator|.
name|peakThreadCount
operator|=
name|peakThreadCount
expr_stmt|;
name|this
operator|.
name|gcCollectionCount
operator|=
name|gcCollectionCount
expr_stmt|;
name|this
operator|.
name|gcCollectionTime
operator|=
name|gcCollectionTime
expr_stmt|;
block|}
DECL|method|timestamp
specifier|public
name|long
name|timestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
DECL|method|uptime
specifier|public
name|long
name|uptime
parameter_list|()
block|{
return|return
name|uptime
return|;
block|}
DECL|method|memoryHeapCommitted
specifier|public
name|SizeValue
name|memoryHeapCommitted
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|memoryHeapCommitted
argument_list|)
return|;
block|}
DECL|method|memoryHeapUsed
specifier|public
name|SizeValue
name|memoryHeapUsed
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|memoryHeapUsed
argument_list|)
return|;
block|}
DECL|method|memoryNonHeapCommitted
specifier|public
name|SizeValue
name|memoryNonHeapCommitted
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|memoryNonHeapCommitted
argument_list|)
return|;
block|}
DECL|method|memoryNonHeapUsed
specifier|public
name|SizeValue
name|memoryNonHeapUsed
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|memoryNonHeapUsed
argument_list|)
return|;
block|}
DECL|method|threadCount
specifier|public
name|int
name|threadCount
parameter_list|()
block|{
return|return
name|threadCount
return|;
block|}
DECL|method|peakThreadCount
specifier|public
name|int
name|peakThreadCount
parameter_list|()
block|{
return|return
name|peakThreadCount
return|;
block|}
DECL|method|gcCollectionCount
specifier|public
name|long
name|gcCollectionCount
parameter_list|()
block|{
return|return
name|gcCollectionCount
return|;
block|}
DECL|method|gcCollectionTime
specifier|public
name|TimeValue
name|gcCollectionTime
parameter_list|()
block|{
return|return
operator|new
name|TimeValue
argument_list|(
name|gcCollectionTime
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
return|;
block|}
DECL|method|readJvmStats
specifier|public
specifier|static
name|JvmStats
name|readJvmStats
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClassNotFoundException
block|{
name|JvmStats
name|jvmStats
init|=
operator|new
name|JvmStats
argument_list|()
decl_stmt|;
name|jvmStats
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|jvmStats
return|;
block|}
DECL|method|readFrom
annotation|@
name|Override
specifier|public
name|void
name|readFrom
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClassNotFoundException
block|{
name|timestamp
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|uptime
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|memoryHeapCommitted
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|memoryHeapUsed
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|memoryNonHeapCommitted
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|memoryNonHeapUsed
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|threadCount
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|peakThreadCount
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|gcCollectionCount
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|gcCollectionTime
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
DECL|method|writeTo
annotation|@
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeLong
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|uptime
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|memoryHeapCommitted
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|memoryHeapUsed
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|memoryNonHeapCommitted
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|memoryNonHeapUsed
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|threadCount
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|peakThreadCount
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|gcCollectionCount
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|gcCollectionTime
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

