begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.monitor.os
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|os
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|Percent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|SizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|OsStats
specifier|public
class|class
name|OsStats
implements|implements
name|Streamable
implements|,
name|Serializable
block|{
DECL|field|EMPTY_LOAD
specifier|public
specifier|static
specifier|final
name|double
index|[]
name|EMPTY_LOAD
init|=
operator|new
name|double
index|[
literal|0
index|]
decl_stmt|;
DECL|field|timestamp
name|long
name|timestamp
decl_stmt|;
DECL|field|loadAverage
name|double
index|[]
name|loadAverage
init|=
name|EMPTY_LOAD
decl_stmt|;
DECL|field|uptime
name|long
name|uptime
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|cpuSys
name|double
name|cpuSys
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|cpuUser
name|double
name|cpuUser
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|cpuIdle
name|double
name|cpuIdle
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|memFree
name|long
name|memFree
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|memFreePercent
name|double
name|memFreePercent
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|memUsed
name|long
name|memUsed
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|memUsedPercent
name|double
name|memUsedPercent
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|memActualFree
name|long
name|memActualFree
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|memActualUsed
name|long
name|memActualUsed
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|swapFree
name|long
name|swapFree
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|swapUsed
name|long
name|swapUsed
init|=
operator|-
literal|1
decl_stmt|;
DECL|method|OsStats
name|OsStats
parameter_list|()
block|{     }
DECL|method|timestamp
specifier|public
name|long
name|timestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
DECL|method|getTimestamp
specifier|public
name|long
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
argument_list|()
return|;
block|}
DECL|method|loadAverage
specifier|public
name|double
index|[]
name|loadAverage
parameter_list|()
block|{
return|return
name|loadAverage
return|;
block|}
DECL|method|getLoadAverage
specifier|public
name|double
index|[]
name|getLoadAverage
parameter_list|()
block|{
return|return
name|loadAverage
argument_list|()
return|;
block|}
DECL|method|uptime
specifier|public
name|TimeValue
name|uptime
parameter_list|()
block|{
return|return
operator|new
name|TimeValue
argument_list|(
name|uptime
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
return|;
block|}
DECL|method|getUptime
specifier|public
name|TimeValue
name|getUptime
parameter_list|()
block|{
return|return
name|uptime
argument_list|()
return|;
block|}
DECL|method|cpuSys
specifier|public
name|Percent
name|cpuSys
parameter_list|()
block|{
return|return
operator|new
name|Percent
argument_list|(
name|cpuSys
argument_list|)
return|;
block|}
DECL|method|getCpuSys
specifier|public
name|Percent
name|getCpuSys
parameter_list|()
block|{
return|return
name|cpuSys
argument_list|()
return|;
block|}
DECL|method|cpuUser
specifier|public
name|Percent
name|cpuUser
parameter_list|()
block|{
return|return
operator|new
name|Percent
argument_list|(
name|cpuUser
argument_list|)
return|;
block|}
DECL|method|getCpuUser
specifier|public
name|Percent
name|getCpuUser
parameter_list|()
block|{
return|return
name|cpuUser
argument_list|()
return|;
block|}
DECL|method|cpuIdle
specifier|public
name|Percent
name|cpuIdle
parameter_list|()
block|{
return|return
operator|new
name|Percent
argument_list|(
name|cpuIdle
argument_list|)
return|;
block|}
DECL|method|getCpuIdle
specifier|public
name|Percent
name|getCpuIdle
parameter_list|()
block|{
return|return
name|cpuIdle
argument_list|()
return|;
block|}
DECL|method|memUsed
specifier|public
name|SizeValue
name|memUsed
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|memUsed
argument_list|)
return|;
block|}
DECL|method|getMemUsed
specifier|public
name|SizeValue
name|getMemUsed
parameter_list|()
block|{
return|return
name|memUsed
argument_list|()
return|;
block|}
DECL|method|memUsedPercent
specifier|public
name|Percent
name|memUsedPercent
parameter_list|()
block|{
return|return
operator|new
name|Percent
argument_list|(
name|memUsedPercent
argument_list|)
return|;
block|}
DECL|method|getMemUsedPercent
specifier|public
name|Percent
name|getMemUsedPercent
parameter_list|()
block|{
return|return
name|memUsedPercent
argument_list|()
return|;
block|}
DECL|method|memFree
specifier|public
name|SizeValue
name|memFree
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|memFree
argument_list|)
return|;
block|}
DECL|method|getMemFree
specifier|public
name|SizeValue
name|getMemFree
parameter_list|()
block|{
return|return
name|memFree
argument_list|()
return|;
block|}
DECL|method|memFreePercent
specifier|public
name|Percent
name|memFreePercent
parameter_list|()
block|{
return|return
operator|new
name|Percent
argument_list|(
name|memFreePercent
argument_list|)
return|;
block|}
DECL|method|getMemFreePercent
specifier|public
name|Percent
name|getMemFreePercent
parameter_list|()
block|{
return|return
name|memFreePercent
argument_list|()
return|;
block|}
DECL|method|memActualFree
specifier|public
name|SizeValue
name|memActualFree
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|memActualFree
argument_list|)
return|;
block|}
DECL|method|getMemActualFree
specifier|public
name|SizeValue
name|getMemActualFree
parameter_list|()
block|{
return|return
name|memActualFree
argument_list|()
return|;
block|}
DECL|method|memActualUsed
specifier|public
name|SizeValue
name|memActualUsed
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|memActualUsed
argument_list|)
return|;
block|}
DECL|method|getMemActualUsed
specifier|public
name|SizeValue
name|getMemActualUsed
parameter_list|()
block|{
return|return
name|memActualUsed
argument_list|()
return|;
block|}
DECL|method|swapUsed
specifier|public
name|SizeValue
name|swapUsed
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|swapUsed
argument_list|)
return|;
block|}
DECL|method|getSwapUsed
specifier|public
name|SizeValue
name|getSwapUsed
parameter_list|()
block|{
return|return
name|swapUsed
argument_list|()
return|;
block|}
DECL|method|swapFree
specifier|public
name|SizeValue
name|swapFree
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|swapFree
argument_list|)
return|;
block|}
DECL|method|getSwapFree
specifier|public
name|SizeValue
name|getSwapFree
parameter_list|()
block|{
return|return
name|swapFree
argument_list|()
return|;
block|}
DECL|method|readOsStats
specifier|public
specifier|static
name|OsStats
name|readOsStats
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|OsStats
name|stats
init|=
operator|new
name|OsStats
argument_list|()
decl_stmt|;
name|stats
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|stats
return|;
block|}
DECL|method|readFrom
annotation|@
name|Override
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|timestamp
operator|=
name|in
operator|.
name|readVLong
argument_list|()
expr_stmt|;
name|loadAverage
operator|=
operator|new
name|double
index|[
name|in
operator|.
name|readVInt
argument_list|()
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|loadAverage
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|loadAverage
index|[
name|i
index|]
operator|=
name|in
operator|.
name|readDouble
argument_list|()
expr_stmt|;
block|}
name|uptime
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|cpuSys
operator|=
name|in
operator|.
name|readDouble
argument_list|()
expr_stmt|;
name|cpuUser
operator|=
name|in
operator|.
name|readDouble
argument_list|()
expr_stmt|;
name|cpuIdle
operator|=
name|in
operator|.
name|readDouble
argument_list|()
expr_stmt|;
name|memFree
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|memFreePercent
operator|=
name|in
operator|.
name|readDouble
argument_list|()
expr_stmt|;
name|memUsed
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|memUsedPercent
operator|=
name|in
operator|.
name|readDouble
argument_list|()
expr_stmt|;
name|memActualFree
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|memActualUsed
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|swapFree
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|swapUsed
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
DECL|method|writeTo
annotation|@
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeVLong
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeVInt
argument_list|(
name|loadAverage
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|double
name|val
range|:
name|loadAverage
control|)
block|{
name|out
operator|.
name|writeDouble
argument_list|(
name|val
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|writeLong
argument_list|(
name|uptime
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeDouble
argument_list|(
name|cpuSys
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeDouble
argument_list|(
name|cpuUser
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeDouble
argument_list|(
name|cpuIdle
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|memFree
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeDouble
argument_list|(
name|memFreePercent
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|memUsed
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeDouble
argument_list|(
name|memUsedPercent
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|memActualFree
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|memActualUsed
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|swapFree
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|swapFree
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

