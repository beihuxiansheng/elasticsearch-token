begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.monitor.os
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|monitor
operator|.
name|os
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|SizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * @author kimchy (shay.banon)  */
end_comment

begin_class
DECL|class|OsInfo
specifier|public
class|class
name|OsInfo
implements|implements
name|Streamable
implements|,
name|Serializable
block|{
DECL|field|cpuVendor
name|String
name|cpuVendor
init|=
literal|""
decl_stmt|;
DECL|field|cpuModel
name|String
name|cpuModel
init|=
literal|""
decl_stmt|;
DECL|field|cpuMhz
name|int
name|cpuMhz
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|cpuTotalCores
name|int
name|cpuTotalCores
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|cpuTotalSockets
name|int
name|cpuTotalSockets
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|cpuCoresPerSocket
name|int
name|cpuCoresPerSocket
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|cpuCacheSize
name|long
name|cpuCacheSize
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|memTotal
name|long
name|memTotal
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|swapTotal
name|long
name|swapTotal
init|=
operator|-
literal|1
decl_stmt|;
DECL|method|OsInfo
name|OsInfo
parameter_list|()
block|{     }
DECL|method|cpuVendor
specifier|public
name|String
name|cpuVendor
parameter_list|()
block|{
return|return
name|cpuVendor
return|;
block|}
DECL|method|getCpuVendor
specifier|public
name|String
name|getCpuVendor
parameter_list|()
block|{
return|return
name|cpuVendor
argument_list|()
return|;
block|}
DECL|method|cpuModel
specifier|public
name|String
name|cpuModel
parameter_list|()
block|{
return|return
name|cpuModel
return|;
block|}
DECL|method|getCpuModel
specifier|public
name|String
name|getCpuModel
parameter_list|()
block|{
return|return
name|cpuModel
argument_list|()
return|;
block|}
DECL|method|cpuMhz
specifier|public
name|int
name|cpuMhz
parameter_list|()
block|{
return|return
name|cpuMhz
return|;
block|}
DECL|method|getCpuMhz
specifier|public
name|int
name|getCpuMhz
parameter_list|()
block|{
return|return
name|cpuMhz
argument_list|()
return|;
block|}
DECL|method|cpuTotalCores
specifier|public
name|int
name|cpuTotalCores
parameter_list|()
block|{
return|return
name|cpuTotalCores
return|;
block|}
DECL|method|getCpuTotalCores
specifier|public
name|int
name|getCpuTotalCores
parameter_list|()
block|{
return|return
name|cpuTotalCores
argument_list|()
return|;
block|}
DECL|method|cpuTotalSockets
specifier|public
name|int
name|cpuTotalSockets
parameter_list|()
block|{
return|return
name|cpuTotalSockets
return|;
block|}
DECL|method|getCpuTotalSockets
specifier|public
name|int
name|getCpuTotalSockets
parameter_list|()
block|{
return|return
name|cpuTotalSockets
argument_list|()
return|;
block|}
DECL|method|cpuCoresPerSocket
specifier|public
name|int
name|cpuCoresPerSocket
parameter_list|()
block|{
return|return
name|cpuCoresPerSocket
return|;
block|}
DECL|method|getCpuCoresPerSocket
specifier|public
name|int
name|getCpuCoresPerSocket
parameter_list|()
block|{
return|return
name|cpuCoresPerSocket
argument_list|()
return|;
block|}
DECL|method|cpuCacheSize
specifier|public
name|SizeValue
name|cpuCacheSize
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|cpuCacheSize
argument_list|)
return|;
block|}
DECL|method|getCpuCacheSize
specifier|public
name|SizeValue
name|getCpuCacheSize
parameter_list|()
block|{
return|return
name|cpuCacheSize
argument_list|()
return|;
block|}
DECL|method|memTotal
specifier|public
name|SizeValue
name|memTotal
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|memTotal
argument_list|)
return|;
block|}
DECL|method|getMemTotal
specifier|public
name|SizeValue
name|getMemTotal
parameter_list|()
block|{
return|return
name|memTotal
argument_list|()
return|;
block|}
DECL|method|swapTotal
specifier|public
name|SizeValue
name|swapTotal
parameter_list|()
block|{
return|return
operator|new
name|SizeValue
argument_list|(
name|swapTotal
argument_list|)
return|;
block|}
DECL|method|getSwapTotal
specifier|public
name|SizeValue
name|getSwapTotal
parameter_list|()
block|{
return|return
name|swapTotal
argument_list|()
return|;
block|}
DECL|method|readOsInfo
specifier|public
specifier|static
name|OsInfo
name|readOsInfo
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|OsInfo
name|info
init|=
operator|new
name|OsInfo
argument_list|()
decl_stmt|;
name|info
operator|.
name|readFrom
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|info
return|;
block|}
DECL|method|readFrom
annotation|@
name|Override
specifier|public
name|void
name|readFrom
parameter_list|(
name|StreamInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|cpuVendor
operator|=
name|in
operator|.
name|readUTF
argument_list|()
expr_stmt|;
name|cpuModel
operator|=
name|in
operator|.
name|readUTF
argument_list|()
expr_stmt|;
name|cpuMhz
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|cpuTotalCores
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|cpuTotalSockets
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|cpuCoresPerSocket
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|cpuCacheSize
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|memTotal
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|swapTotal
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
DECL|method|writeTo
annotation|@
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|StreamOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeUTF
argument_list|(
name|cpuVendor
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeUTF
argument_list|(
name|cpuModel
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|cpuMhz
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|cpuTotalCores
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|cpuTotalSockets
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|cpuCoresPerSocket
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|cpuCacheSize
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|memTotal
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|swapTotal
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

