begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.messy.tests
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|messy
operator|.
name|tests
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|IndicesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|alias
operator|.
name|Alias
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|analyze
operator|.
name|AnalyzeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|analyze
operator|.
name|AnalyzeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|cache
operator|.
name|clear
operator|.
name|ClearIndicesCacheAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|cache
operator|.
name|clear
operator|.
name|ClearIndicesCacheRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|close
operator|.
name|CloseIndexAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|close
operator|.
name|CloseIndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|delete
operator|.
name|DeleteIndexAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|delete
operator|.
name|DeleteIndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|flush
operator|.
name|FlushRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|flush
operator|.
name|TransportShardFlushAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|forcemerge
operator|.
name|ForceMergeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|forcemerge
operator|.
name|ForceMergeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|get
operator|.
name|GetFieldMappingsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|get
operator|.
name|GetFieldMappingsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|get
operator|.
name|GetMappingsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|get
operator|.
name|GetMappingsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|put
operator|.
name|PutMappingAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|mapping
operator|.
name|put
operator|.
name|PutMappingRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|open
operator|.
name|OpenIndexAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|open
operator|.
name|OpenIndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|recovery
operator|.
name|RecoveryAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|recovery
operator|.
name|RecoveryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|refresh
operator|.
name|RefreshRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|refresh
operator|.
name|TransportShardRefreshAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|segments
operator|.
name|IndicesSegmentsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|segments
operator|.
name|IndicesSegmentsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|settings
operator|.
name|get
operator|.
name|GetSettingsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|settings
operator|.
name|get
operator|.
name|GetSettingsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|settings
operator|.
name|put
operator|.
name|UpdateSettingsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|settings
operator|.
name|put
operator|.
name|UpdateSettingsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
operator|.
name|IndicesStatsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|stats
operator|.
name|IndicesStatsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|validate
operator|.
name|query
operator|.
name|ValidateQueryAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|validate
operator|.
name|query
operator|.
name|ValidateQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|delete
operator|.
name|DeleteAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|delete
operator|.
name|DeleteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|explain
operator|.
name|ExplainAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|explain
operator|.
name|ExplainRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|get
operator|.
name|GetAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|get
operator|.
name|GetRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|get
operator|.
name|MultiGetAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|get
operator|.
name|MultiGetRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|suggest
operator|.
name|SuggestAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|suggest
operator|.
name|SuggestRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|termvectors
operator|.
name|MultiTermVectorsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|termvectors
operator|.
name|MultiTermVectorsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|termvectors
operator|.
name|TermVectorsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|termvectors
operator|.
name|TermVectorsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|update
operator|.
name|UpdateAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|update
operator|.
name|UpdateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|update
operator|.
name|UpdateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexNameExpressionResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|network
operator|.
name|NetworkModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|Script
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|groovy
operator|.
name|GroovyPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|action
operator|.
name|SearchTransportService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|SuggestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|tasks
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
operator|.
name|ClusterScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|Transport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportRequestHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Supplier
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertAcked
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
operator|.
name|assertNoFailures
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|emptyIterable
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThan
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|hasItem
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|instanceOf
import|;
end_import

begin_class
annotation|@
name|ClusterScope
argument_list|(
name|scope
operator|=
name|Scope
operator|.
name|SUITE
argument_list|,
name|numClientNodes
operator|=
literal|1
argument_list|,
name|minNumDataNodes
operator|=
literal|2
argument_list|)
DECL|class|IndicesRequestTests
specifier|public
class|class
name|IndicesRequestTests
extends|extends
name|ESIntegTestCase
block|{
DECL|field|indices
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|indices
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|minimumNumberOfShards
specifier|protected
name|int
name|minimumNumberOfShards
parameter_list|()
block|{
comment|//makes sure that a reduce is always needed when searching
return|return
literal|2
return|;
block|}
annotation|@
name|Override
DECL|method|minimumNumberOfReplicas
specifier|protected
name|int
name|minimumNumberOfReplicas
parameter_list|()
block|{
comment|//makes sure that write operations get sent to the replica as well
comment|//so we are able to intercept those messages and check them
return|return
literal|1
return|;
block|}
annotation|@
name|Override
DECL|method|nodeSettings
specifier|protected
name|Settings
name|nodeSettings
parameter_list|(
name|int
name|ordinal
parameter_list|)
block|{
comment|// must set this independently of the plugin so it overrides MockTransportService
return|return
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|super
operator|.
name|nodeSettings
argument_list|(
name|ordinal
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|NetworkModule
operator|.
name|TRANSPORT_SERVICE_TYPE_KEY
argument_list|,
literal|"intercepting"
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|nodePlugins
specifier|protected
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|Plugin
argument_list|>
argument_list|>
name|nodePlugins
parameter_list|()
block|{
return|return
name|pluginList
argument_list|(
name|InterceptingTransportService
operator|.
name|TestPlugin
operator|.
name|class
argument_list|,
name|GroovyPlugin
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Before
DECL|method|setup
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|int
name|numIndices
init|=
name|iterations
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numIndices
condition|;
name|i
operator|++
control|)
block|{
name|indices
operator|.
name|add
argument_list|(
literal|"test"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|String
name|index
range|:
name|indices
control|)
block|{
name|assertAcked
argument_list|(
name|prepareCreate
argument_list|(
name|index
argument_list|)
operator|.
name|addAlias
argument_list|(
operator|new
name|Alias
argument_list|(
name|index
operator|+
literal|"-alias"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ensureGreen
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|cleanUp
specifier|public
name|void
name|cleanUp
parameter_list|()
block|{
name|assertAllRequestsHaveBeenConsumed
argument_list|()
expr_stmt|;
name|indices
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetFieldMappings
specifier|public
name|void
name|testGetFieldMappings
parameter_list|()
block|{
name|String
name|getFieldMappingsShardAction
init|=
name|GetFieldMappingsAction
operator|.
name|NAME
operator|+
literal|"[index][s]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|getFieldMappingsShardAction
argument_list|)
expr_stmt|;
name|GetFieldMappingsRequest
name|getFieldMappingsRequest
init|=
operator|new
name|GetFieldMappingsRequest
argument_list|()
decl_stmt|;
name|getFieldMappingsRequest
operator|.
name|indices
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|getFieldMappings
argument_list|(
name|getFieldMappingsRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|getFieldMappingsRequest
argument_list|,
name|getFieldMappingsShardAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testAnalyze
specifier|public
name|void
name|testAnalyze
parameter_list|()
block|{
name|String
name|analyzeShardAction
init|=
name|AnalyzeAction
operator|.
name|NAME
operator|+
literal|"[s]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|analyzeShardAction
argument_list|)
expr_stmt|;
name|AnalyzeRequest
name|analyzeRequest
init|=
operator|new
name|AnalyzeRequest
argument_list|(
name|randomIndexOrAlias
argument_list|()
argument_list|)
decl_stmt|;
name|analyzeRequest
operator|.
name|text
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|analyze
argument_list|(
name|analyzeRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|analyzeRequest
argument_list|,
name|analyzeShardAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testIndex
specifier|public
name|void
name|testIndex
parameter_list|()
block|{
name|String
index|[]
name|indexShardActions
init|=
operator|new
name|String
index|[]
block|{
name|IndexAction
operator|.
name|NAME
block|,
name|IndexAction
operator|.
name|NAME
operator|+
literal|"[p]"
block|,
name|IndexAction
operator|.
name|NAME
operator|+
literal|"[r]"
block|}
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|indexShardActions
argument_list|)
expr_stmt|;
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
name|randomIndexOrAlias
argument_list|()
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|index
argument_list|(
name|indexRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|indexRequest
argument_list|,
name|indexShardActions
argument_list|)
expr_stmt|;
block|}
DECL|method|testDelete
specifier|public
name|void
name|testDelete
parameter_list|()
block|{
name|String
index|[]
name|deleteShardActions
init|=
operator|new
name|String
index|[]
block|{
name|DeleteAction
operator|.
name|NAME
block|,
name|DeleteAction
operator|.
name|NAME
operator|+
literal|"[p]"
block|,
name|DeleteAction
operator|.
name|NAME
operator|+
literal|"[r]"
block|}
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|deleteShardActions
argument_list|)
expr_stmt|;
name|DeleteRequest
name|deleteRequest
init|=
operator|new
name|DeleteRequest
argument_list|(
name|randomIndexOrAlias
argument_list|()
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|delete
argument_list|(
name|deleteRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|deleteRequest
argument_list|,
name|deleteShardActions
argument_list|)
expr_stmt|;
block|}
DECL|method|testUpdate
specifier|public
name|void
name|testUpdate
parameter_list|()
block|{
comment|//update action goes to the primary, index op gets executed locally, then replicated
name|String
index|[]
name|updateShardActions
init|=
operator|new
name|String
index|[]
block|{
name|UpdateAction
operator|.
name|NAME
operator|+
literal|"[s]"
block|,
name|IndexAction
operator|.
name|NAME
operator|+
literal|"[r]"
block|}
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|updateShardActions
argument_list|)
expr_stmt|;
name|String
name|indexOrAlias
init|=
name|randomIndexOrAlias
argument_list|()
decl_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|indexOrAlias
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
name|indexOrAlias
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|doc
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
decl_stmt|;
name|UpdateResponse
name|updateResponse
init|=
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|update
argument_list|(
name|updateRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|updateResponse
operator|.
name|isCreated
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|updateRequest
argument_list|,
name|updateShardActions
argument_list|)
expr_stmt|;
block|}
DECL|method|testUpdateUpsert
specifier|public
name|void
name|testUpdateUpsert
parameter_list|()
block|{
comment|//update action goes to the primary, index op gets executed locally, then replicated
name|String
index|[]
name|updateShardActions
init|=
operator|new
name|String
index|[]
block|{
name|UpdateAction
operator|.
name|NAME
operator|+
literal|"[s]"
block|,
name|IndexAction
operator|.
name|NAME
operator|+
literal|"[r]"
block|}
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|updateShardActions
argument_list|)
expr_stmt|;
name|String
name|indexOrAlias
init|=
name|randomIndexOrAlias
argument_list|()
decl_stmt|;
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
name|indexOrAlias
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|upsert
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|doc
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
decl_stmt|;
name|UpdateResponse
name|updateResponse
init|=
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|update
argument_list|(
name|updateRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|updateResponse
operator|.
name|isCreated
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|updateRequest
argument_list|,
name|updateShardActions
argument_list|)
expr_stmt|;
block|}
DECL|method|testUpdateDelete
specifier|public
name|void
name|testUpdateDelete
parameter_list|()
block|{
comment|//update action goes to the primary, delete op gets executed locally, then replicated
name|String
index|[]
name|updateShardActions
init|=
operator|new
name|String
index|[]
block|{
name|UpdateAction
operator|.
name|NAME
operator|+
literal|"[s]"
block|,
name|DeleteAction
operator|.
name|NAME
operator|+
literal|"[r]"
block|}
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|updateShardActions
argument_list|)
expr_stmt|;
name|String
name|indexOrAlias
init|=
name|randomIndexOrAlias
argument_list|()
decl_stmt|;
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|indexOrAlias
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
name|indexOrAlias
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
literal|"ctx.op='delete'"
argument_list|)
argument_list|)
decl_stmt|;
name|UpdateResponse
name|updateResponse
init|=
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|update
argument_list|(
name|updateRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|updateResponse
operator|.
name|isCreated
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|updateRequest
argument_list|,
name|updateShardActions
argument_list|)
expr_stmt|;
block|}
DECL|method|testBulk
specifier|public
name|void
name|testBulk
parameter_list|()
block|{
name|String
index|[]
name|bulkShardActions
init|=
operator|new
name|String
index|[]
block|{
name|BulkAction
operator|.
name|NAME
operator|+
literal|"[s][p]"
block|,
name|BulkAction
operator|.
name|NAME
operator|+
literal|"[s][r]"
block|}
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|bulkShardActions
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|indices
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|BulkRequest
name|bulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
decl_stmt|;
name|int
name|numIndexRequests
init|=
name|iterations
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numIndexRequests
condition|;
name|i
operator|++
control|)
block|{
name|String
name|indexOrAlias
init|=
name|randomIndexOrAlias
argument_list|()
decl_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|IndexRequest
argument_list|(
name|indexOrAlias
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|indices
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|)
expr_stmt|;
block|}
name|int
name|numDeleteRequests
init|=
name|iterations
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDeleteRequests
condition|;
name|i
operator|++
control|)
block|{
name|String
name|indexOrAlias
init|=
name|randomIndexOrAlias
argument_list|()
decl_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|DeleteRequest
argument_list|(
name|indexOrAlias
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|indices
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|)
expr_stmt|;
block|}
name|int
name|numUpdateRequests
init|=
name|iterations
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numUpdateRequests
condition|;
name|i
operator|++
control|)
block|{
name|String
name|indexOrAlias
init|=
name|randomIndexOrAlias
argument_list|()
decl_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
operator|new
name|UpdateRequest
argument_list|(
name|indexOrAlias
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|doc
argument_list|(
literal|"field1"
argument_list|,
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|indices
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|)
expr_stmt|;
block|}
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|bulk
argument_list|(
name|bulkRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertIndicesSubset
argument_list|(
name|indices
argument_list|,
name|bulkShardActions
argument_list|)
expr_stmt|;
block|}
DECL|method|testGet
specifier|public
name|void
name|testGet
parameter_list|()
block|{
name|String
name|getShardAction
init|=
name|GetAction
operator|.
name|NAME
operator|+
literal|"[s]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|getShardAction
argument_list|)
expr_stmt|;
name|GetRequest
name|getRequest
init|=
operator|new
name|GetRequest
argument_list|(
name|randomIndexOrAlias
argument_list|()
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|get
argument_list|(
name|getRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|getRequest
argument_list|,
name|getShardAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testExplain
specifier|public
name|void
name|testExplain
parameter_list|()
block|{
name|String
name|explainShardAction
init|=
name|ExplainAction
operator|.
name|NAME
operator|+
literal|"[s]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|explainShardAction
argument_list|)
expr_stmt|;
name|ExplainRequest
name|explainRequest
init|=
operator|new
name|ExplainRequest
argument_list|(
name|randomIndexOrAlias
argument_list|()
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|query
argument_list|(
name|QueryBuilders
operator|.
name|matchAllQuery
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|explain
argument_list|(
name|explainRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|explainRequest
argument_list|,
name|explainShardAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testTermVector
specifier|public
name|void
name|testTermVector
parameter_list|()
block|{
name|String
name|termVectorShardAction
init|=
name|TermVectorsAction
operator|.
name|NAME
operator|+
literal|"[s]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|termVectorShardAction
argument_list|)
expr_stmt|;
name|TermVectorsRequest
name|termVectorsRequest
init|=
operator|new
name|TermVectorsRequest
argument_list|(
name|randomIndexOrAlias
argument_list|()
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|termVectors
argument_list|(
name|termVectorsRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|termVectorsRequest
argument_list|,
name|termVectorShardAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testMultiTermVector
specifier|public
name|void
name|testMultiTermVector
parameter_list|()
block|{
name|String
name|multiTermVectorsShardAction
init|=
name|MultiTermVectorsAction
operator|.
name|NAME
operator|+
literal|"[shard][s]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|multiTermVectorsShardAction
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|indices
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|MultiTermVectorsRequest
name|multiTermVectorsRequest
init|=
operator|new
name|MultiTermVectorsRequest
argument_list|()
decl_stmt|;
name|int
name|numDocs
init|=
name|iterations
argument_list|(
literal|1
argument_list|,
literal|30
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|String
name|indexOrAlias
init|=
name|randomIndexOrAlias
argument_list|()
decl_stmt|;
name|multiTermVectorsRequest
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|,
literal|"type"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|indices
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|)
expr_stmt|;
block|}
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|multiTermVectors
argument_list|(
name|multiTermVectorsRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertIndicesSubset
argument_list|(
name|indices
argument_list|,
name|multiTermVectorsShardAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testMultiGet
specifier|public
name|void
name|testMultiGet
parameter_list|()
block|{
name|String
name|multiGetShardAction
init|=
name|MultiGetAction
operator|.
name|NAME
operator|+
literal|"[shard][s]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|multiGetShardAction
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|indices
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|MultiGetRequest
name|multiGetRequest
init|=
operator|new
name|MultiGetRequest
argument_list|()
decl_stmt|;
name|int
name|numDocs
init|=
name|iterations
argument_list|(
literal|1
argument_list|,
literal|30
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|String
name|indexOrAlias
init|=
name|randomIndexOrAlias
argument_list|()
decl_stmt|;
name|multiGetRequest
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|,
literal|"type"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|indices
operator|.
name|add
argument_list|(
name|indexOrAlias
argument_list|)
expr_stmt|;
block|}
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|multiGet
argument_list|(
name|multiGetRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertIndicesSubset
argument_list|(
name|indices
argument_list|,
name|multiGetShardAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testFlush
specifier|public
name|void
name|testFlush
parameter_list|()
block|{
name|String
index|[]
name|indexShardActions
init|=
operator|new
name|String
index|[]
block|{
name|TransportShardFlushAction
operator|.
name|NAME
block|,
name|TransportShardFlushAction
operator|.
name|NAME
operator|+
literal|"[r]"
block|,
name|TransportShardFlushAction
operator|.
name|NAME
operator|+
literal|"[p]"
block|}
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|indexShardActions
argument_list|)
expr_stmt|;
name|FlushRequest
name|flushRequest
init|=
operator|new
name|FlushRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|flush
argument_list|(
name|flushRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|String
index|[]
name|indices
init|=
operator|new
name|IndexNameExpressionResolver
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
operator|.
name|concreteIndexNames
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
argument_list|,
name|flushRequest
argument_list|)
decl_stmt|;
name|assertIndicesSubset
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|indices
argument_list|)
argument_list|,
name|indexShardActions
argument_list|)
expr_stmt|;
block|}
DECL|method|testForceMerge
specifier|public
name|void
name|testForceMerge
parameter_list|()
block|{
name|String
name|mergeShardAction
init|=
name|ForceMergeAction
operator|.
name|NAME
operator|+
literal|"[n]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|mergeShardAction
argument_list|)
expr_stmt|;
name|ForceMergeRequest
name|mergeRequest
init|=
operator|new
name|ForceMergeRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|forceMerge
argument_list|(
name|mergeRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|mergeRequest
argument_list|,
name|mergeShardAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testRefresh
specifier|public
name|void
name|testRefresh
parameter_list|()
block|{
name|String
index|[]
name|indexShardActions
init|=
operator|new
name|String
index|[]
block|{
name|TransportShardRefreshAction
operator|.
name|NAME
block|,
name|TransportShardRefreshAction
operator|.
name|NAME
operator|+
literal|"[r]"
block|,
name|TransportShardRefreshAction
operator|.
name|NAME
operator|+
literal|"[p]"
block|}
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|indexShardActions
argument_list|)
expr_stmt|;
name|RefreshRequest
name|refreshRequest
init|=
operator|new
name|RefreshRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|refresh
argument_list|(
name|refreshRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|String
index|[]
name|indices
init|=
operator|new
name|IndexNameExpressionResolver
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|)
operator|.
name|concreteIndexNames
argument_list|(
name|client
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|prepareState
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|getState
argument_list|()
argument_list|,
name|refreshRequest
argument_list|)
decl_stmt|;
name|assertIndicesSubset
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|indices
argument_list|)
argument_list|,
name|indexShardActions
argument_list|)
expr_stmt|;
block|}
DECL|method|testClearCache
specifier|public
name|void
name|testClearCache
parameter_list|()
block|{
name|String
name|clearCacheAction
init|=
name|ClearIndicesCacheAction
operator|.
name|NAME
operator|+
literal|"[n]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|clearCacheAction
argument_list|)
expr_stmt|;
name|ClearIndicesCacheRequest
name|clearIndicesCacheRequest
init|=
operator|new
name|ClearIndicesCacheRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|clearCache
argument_list|(
name|clearIndicesCacheRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|clearIndicesCacheRequest
argument_list|,
name|clearCacheAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testRecovery
specifier|public
name|void
name|testRecovery
parameter_list|()
block|{
name|String
name|recoveryAction
init|=
name|RecoveryAction
operator|.
name|NAME
operator|+
literal|"[n]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|recoveryAction
argument_list|)
expr_stmt|;
name|RecoveryRequest
name|recoveryRequest
init|=
operator|new
name|RecoveryRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|recoveries
argument_list|(
name|recoveryRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|recoveryRequest
argument_list|,
name|recoveryAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testSegments
specifier|public
name|void
name|testSegments
parameter_list|()
block|{
name|String
name|segmentsAction
init|=
name|IndicesSegmentsAction
operator|.
name|NAME
operator|+
literal|"[n]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|segmentsAction
argument_list|)
expr_stmt|;
name|IndicesSegmentsRequest
name|segmentsRequest
init|=
operator|new
name|IndicesSegmentsRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|segments
argument_list|(
name|segmentsRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|segmentsRequest
argument_list|,
name|segmentsAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testIndicesStats
specifier|public
name|void
name|testIndicesStats
parameter_list|()
block|{
name|String
name|indicesStats
init|=
name|IndicesStatsAction
operator|.
name|NAME
operator|+
literal|"[n]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|indicesStats
argument_list|)
expr_stmt|;
name|IndicesStatsRequest
name|indicesStatsRequest
init|=
operator|new
name|IndicesStatsRequest
argument_list|()
operator|.
name|indices
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|stats
argument_list|(
name|indicesStatsRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|indicesStatsRequest
argument_list|,
name|indicesStats
argument_list|)
expr_stmt|;
block|}
DECL|method|testSuggest
specifier|public
name|void
name|testSuggest
parameter_list|()
block|{
name|String
name|suggestAction
init|=
name|SuggestAction
operator|.
name|NAME
operator|+
literal|"[s]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|suggestAction
argument_list|)
expr_stmt|;
name|SuggestRequest
name|suggestRequest
init|=
operator|new
name|SuggestRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
operator|.
name|suggest
argument_list|(
operator|new
name|SuggestBuilder
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|suggest
argument_list|(
name|suggestRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|suggestRequest
argument_list|,
name|suggestAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testValidateQuery
specifier|public
name|void
name|testValidateQuery
parameter_list|()
block|{
name|String
name|validateQueryShardAction
init|=
name|ValidateQueryAction
operator|.
name|NAME
operator|+
literal|"[s]"
decl_stmt|;
name|interceptTransportActions
argument_list|(
name|validateQueryShardAction
argument_list|)
expr_stmt|;
name|ValidateQueryRequest
name|validateQueryRequest
init|=
operator|new
name|ValidateQueryRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|validateQuery
argument_list|(
name|validateQueryRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|validateQueryRequest
argument_list|,
name|validateQueryShardAction
argument_list|)
expr_stmt|;
block|}
DECL|method|testOpenIndex
specifier|public
name|void
name|testOpenIndex
parameter_list|()
block|{
name|interceptTransportActions
argument_list|(
name|OpenIndexAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|OpenIndexRequest
name|openIndexRequest
init|=
operator|new
name|OpenIndexRequest
argument_list|(
name|randomUniqueIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|open
argument_list|(
name|openIndexRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|openIndexRequest
argument_list|,
name|OpenIndexAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|testCloseIndex
specifier|public
name|void
name|testCloseIndex
parameter_list|()
block|{
name|interceptTransportActions
argument_list|(
name|CloseIndexAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|CloseIndexRequest
name|closeIndexRequest
init|=
operator|new
name|CloseIndexRequest
argument_list|(
name|randomUniqueIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|close
argument_list|(
name|closeIndexRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|closeIndexRequest
argument_list|,
name|CloseIndexAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|testDeleteIndex
specifier|public
name|void
name|testDeleteIndex
parameter_list|()
block|{
name|interceptTransportActions
argument_list|(
name|DeleteIndexAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|String
index|[]
name|randomIndicesOrAliases
init|=
name|randomUniqueIndicesOrAliases
argument_list|()
decl_stmt|;
name|DeleteIndexRequest
name|deleteIndexRequest
init|=
operator|new
name|DeleteIndexRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|)
decl_stmt|;
name|assertAcked
argument_list|(
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|delete
argument_list|(
name|deleteIndexRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
argument_list|)
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|deleteIndexRequest
argument_list|,
name|DeleteIndexAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetMappings
specifier|public
name|void
name|testGetMappings
parameter_list|()
block|{
name|interceptTransportActions
argument_list|(
name|GetMappingsAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|GetMappingsRequest
name|getMappingsRequest
init|=
operator|new
name|GetMappingsRequest
argument_list|()
operator|.
name|indices
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|getMappings
argument_list|(
name|getMappingsRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|getMappingsRequest
argument_list|,
name|GetMappingsAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|testPutMapping
specifier|public
name|void
name|testPutMapping
parameter_list|()
block|{
name|interceptTransportActions
argument_list|(
name|PutMappingAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|PutMappingRequest
name|putMappingRequest
init|=
operator|new
name|PutMappingRequest
argument_list|(
name|randomUniqueIndicesOrAliases
argument_list|()
argument_list|)
operator|.
name|type
argument_list|(
literal|"type"
argument_list|)
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
literal|"type=text"
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|putMapping
argument_list|(
name|putMappingRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|putMappingRequest
argument_list|,
name|PutMappingAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetSettings
specifier|public
name|void
name|testGetSettings
parameter_list|()
block|{
name|interceptTransportActions
argument_list|(
name|GetSettingsAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|GetSettingsRequest
name|getSettingsRequest
init|=
operator|new
name|GetSettingsRequest
argument_list|()
operator|.
name|indices
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|getSettings
argument_list|(
name|getSettingsRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|getSettingsRequest
argument_list|,
name|GetSettingsAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|testUpdateSettings
specifier|public
name|void
name|testUpdateSettings
parameter_list|()
block|{
name|interceptTransportActions
argument_list|(
name|UpdateSettingsAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|UpdateSettingsRequest
name|updateSettingsRequest
init|=
operator|new
name|UpdateSettingsRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|()
argument_list|)
operator|.
name|settings
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"refresh_interval"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|updateSettings
argument_list|(
name|updateSettingsRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|updateSettingsRequest
argument_list|,
name|UpdateSettingsAction
operator|.
name|NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|testSearchQueryThenFetch
specifier|public
name|void
name|testSearchQueryThenFetch
parameter_list|()
throws|throws
name|Exception
block|{
name|interceptTransportActions
argument_list|(
name|SearchTransportService
operator|.
name|QUERY_ACTION_NAME
argument_list|,
name|SearchTransportService
operator|.
name|FETCH_ID_ACTION_NAME
argument_list|,
name|SearchTransportService
operator|.
name|FREE_CONTEXT_ACTION_NAME
argument_list|)
expr_stmt|;
name|String
index|[]
name|randomIndicesOrAliases
init|=
name|randomIndicesOrAliases
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|randomIndicesOrAliases
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|randomIndicesOrAliases
index|[
name|i
index|]
argument_list|,
literal|"type"
argument_list|,
literal|"id-"
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|)
operator|.
name|searchType
argument_list|(
name|SearchType
operator|.
name|QUERY_THEN_FETCH
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|search
argument_list|(
name|searchRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertNoFailures
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|searchRequest
argument_list|,
name|SearchTransportService
operator|.
name|QUERY_ACTION_NAME
argument_list|,
name|SearchTransportService
operator|.
name|FETCH_ID_ACTION_NAME
argument_list|)
expr_stmt|;
comment|//free context messages are not necessarily sent, but if they are, check their indices
name|assertSameIndicesOptionalRequests
argument_list|(
name|searchRequest
argument_list|,
name|SearchTransportService
operator|.
name|FREE_CONTEXT_ACTION_NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|testSearchDfsQueryThenFetch
specifier|public
name|void
name|testSearchDfsQueryThenFetch
parameter_list|()
throws|throws
name|Exception
block|{
name|interceptTransportActions
argument_list|(
name|SearchTransportService
operator|.
name|DFS_ACTION_NAME
argument_list|,
name|SearchTransportService
operator|.
name|QUERY_ID_ACTION_NAME
argument_list|,
name|SearchTransportService
operator|.
name|FETCH_ID_ACTION_NAME
argument_list|,
name|SearchTransportService
operator|.
name|FREE_CONTEXT_ACTION_NAME
argument_list|)
expr_stmt|;
name|String
index|[]
name|randomIndicesOrAliases
init|=
name|randomIndicesOrAliases
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|randomIndicesOrAliases
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|randomIndicesOrAliases
index|[
name|i
index|]
argument_list|,
literal|"type"
argument_list|,
literal|"id-"
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|)
operator|.
name|searchType
argument_list|(
name|SearchType
operator|.
name|DFS_QUERY_THEN_FETCH
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|search
argument_list|(
name|searchRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertNoFailures
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|searchRequest
argument_list|,
name|SearchTransportService
operator|.
name|DFS_ACTION_NAME
argument_list|,
name|SearchTransportService
operator|.
name|QUERY_ID_ACTION_NAME
argument_list|,
name|SearchTransportService
operator|.
name|FETCH_ID_ACTION_NAME
argument_list|)
expr_stmt|;
comment|//free context messages are not necessarily sent, but if they are, check their indices
name|assertSameIndicesOptionalRequests
argument_list|(
name|searchRequest
argument_list|,
name|SearchTransportService
operator|.
name|FREE_CONTEXT_ACTION_NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|testSearchQueryAndFetch
specifier|public
name|void
name|testSearchQueryAndFetch
parameter_list|()
throws|throws
name|Exception
block|{
name|interceptTransportActions
argument_list|(
name|SearchTransportService
operator|.
name|QUERY_FETCH_ACTION_NAME
argument_list|,
name|SearchTransportService
operator|.
name|FREE_CONTEXT_ACTION_NAME
argument_list|)
expr_stmt|;
name|String
index|[]
name|randomIndicesOrAliases
init|=
name|randomIndicesOrAliases
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|randomIndicesOrAliases
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|randomIndicesOrAliases
index|[
name|i
index|]
argument_list|,
literal|"type"
argument_list|,
literal|"id-"
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|)
operator|.
name|searchType
argument_list|(
name|SearchType
operator|.
name|QUERY_AND_FETCH
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|search
argument_list|(
name|searchRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertNoFailures
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|searchRequest
argument_list|,
name|SearchTransportService
operator|.
name|QUERY_FETCH_ACTION_NAME
argument_list|)
expr_stmt|;
comment|//free context messages are not necessarily sent, but if they are, check their indices
name|assertSameIndicesOptionalRequests
argument_list|(
name|searchRequest
argument_list|,
name|SearchTransportService
operator|.
name|FREE_CONTEXT_ACTION_NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|testSearchDfsQueryAndFetch
specifier|public
name|void
name|testSearchDfsQueryAndFetch
parameter_list|()
throws|throws
name|Exception
block|{
name|interceptTransportActions
argument_list|(
name|SearchTransportService
operator|.
name|QUERY_QUERY_FETCH_ACTION_NAME
argument_list|,
name|SearchTransportService
operator|.
name|FREE_CONTEXT_ACTION_NAME
argument_list|)
expr_stmt|;
name|String
index|[]
name|randomIndicesOrAliases
init|=
name|randomIndicesOrAliases
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|randomIndicesOrAliases
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|client
argument_list|()
operator|.
name|prepareIndex
argument_list|(
name|randomIndicesOrAliases
index|[
name|i
index|]
argument_list|,
literal|"type"
argument_list|,
literal|"id-"
operator|+
name|i
argument_list|)
operator|.
name|setSource
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|refresh
argument_list|()
expr_stmt|;
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|(
name|randomIndicesOrAliases
argument_list|)
operator|.
name|searchType
argument_list|(
name|SearchType
operator|.
name|DFS_QUERY_AND_FETCH
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|internalCluster
argument_list|()
operator|.
name|clientNodeClient
argument_list|()
operator|.
name|search
argument_list|(
name|searchRequest
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertNoFailures
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|clearInterceptedActions
argument_list|()
expr_stmt|;
name|assertSameIndices
argument_list|(
name|searchRequest
argument_list|,
name|SearchTransportService
operator|.
name|QUERY_QUERY_FETCH_ACTION_NAME
argument_list|)
expr_stmt|;
comment|//free context messages are not necessarily sent, but if they are, check their indices
name|assertSameIndicesOptionalRequests
argument_list|(
name|searchRequest
argument_list|,
name|SearchTransportService
operator|.
name|FREE_CONTEXT_ACTION_NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|assertSameIndices
specifier|private
specifier|static
name|void
name|assertSameIndices
parameter_list|(
name|IndicesRequest
name|originalRequest
parameter_list|,
name|String
modifier|...
name|actions
parameter_list|)
block|{
name|assertSameIndices
argument_list|(
name|originalRequest
argument_list|,
literal|false
argument_list|,
name|actions
argument_list|)
expr_stmt|;
block|}
DECL|method|assertSameIndicesOptionalRequests
specifier|private
specifier|static
name|void
name|assertSameIndicesOptionalRequests
parameter_list|(
name|IndicesRequest
name|originalRequest
parameter_list|,
name|String
modifier|...
name|actions
parameter_list|)
block|{
name|assertSameIndices
argument_list|(
name|originalRequest
argument_list|,
literal|true
argument_list|,
name|actions
argument_list|)
expr_stmt|;
block|}
DECL|method|assertSameIndices
specifier|private
specifier|static
name|void
name|assertSameIndices
parameter_list|(
name|IndicesRequest
name|originalRequest
parameter_list|,
name|boolean
name|optional
parameter_list|,
name|String
modifier|...
name|actions
parameter_list|)
block|{
for|for
control|(
name|String
name|action
range|:
name|actions
control|)
block|{
name|List
argument_list|<
name|TransportRequest
argument_list|>
name|requests
init|=
name|consumeTransportRequests
argument_list|(
name|action
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|optional
condition|)
block|{
name|assertThat
argument_list|(
literal|"no internal requests intercepted for action ["
operator|+
name|action
operator|+
literal|"]"
argument_list|,
name|requests
operator|.
name|size
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|TransportRequest
name|internalRequest
range|:
name|requests
control|)
block|{
name|assertThat
argument_list|(
name|internalRequest
argument_list|,
name|instanceOf
argument_list|(
name|IndicesRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|internalRequest
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
operator|(
operator|(
name|IndicesRequest
operator|)
name|internalRequest
operator|)
operator|.
name|indices
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|originalRequest
operator|.
name|indices
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|IndicesRequest
operator|)
name|internalRequest
operator|)
operator|.
name|indicesOptions
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|originalRequest
operator|.
name|indicesOptions
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|assertIndicesSubset
specifier|private
specifier|static
name|void
name|assertIndicesSubset
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|indices
parameter_list|,
name|String
modifier|...
name|actions
parameter_list|)
block|{
comment|//indices returned by each bulk shard request need to be a subset of the original indices
for|for
control|(
name|String
name|action
range|:
name|actions
control|)
block|{
name|List
argument_list|<
name|TransportRequest
argument_list|>
name|requests
init|=
name|consumeTransportRequests
argument_list|(
name|action
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
literal|"no internal requests intercepted for action ["
operator|+
name|action
operator|+
literal|"]"
argument_list|,
name|requests
operator|.
name|size
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|TransportRequest
name|internalRequest
range|:
name|requests
control|)
block|{
name|assertThat
argument_list|(
name|internalRequest
argument_list|,
name|instanceOf
argument_list|(
name|IndicesRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|index
range|:
operator|(
operator|(
name|IndicesRequest
operator|)
name|internalRequest
operator|)
operator|.
name|indices
argument_list|()
control|)
block|{
name|assertThat
argument_list|(
name|indices
argument_list|,
name|hasItem
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
DECL|method|randomIndexOrAlias
specifier|private
name|String
name|randomIndexOrAlias
parameter_list|()
block|{
name|String
name|index
init|=
name|randomFrom
argument_list|(
name|indices
argument_list|)
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
return|return
name|index
operator|+
literal|"-alias"
return|;
block|}
else|else
block|{
return|return
name|index
return|;
block|}
block|}
DECL|method|randomIndicesOrAliases
specifier|private
name|String
index|[]
name|randomIndicesOrAliases
parameter_list|()
block|{
name|int
name|count
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
name|indices
operator|.
name|size
argument_list|()
operator|*
literal|2
argument_list|)
decl_stmt|;
comment|//every index has an alias
name|String
index|[]
name|indices
init|=
operator|new
name|String
index|[
name|count
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
name|i
operator|++
control|)
block|{
name|indices
index|[
name|i
index|]
operator|=
name|randomIndexOrAlias
argument_list|()
expr_stmt|;
block|}
return|return
name|indices
return|;
block|}
DECL|method|randomUniqueIndicesOrAliases
specifier|private
name|String
index|[]
name|randomUniqueIndicesOrAliases
parameter_list|()
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|uniqueIndices
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|count
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
name|this
operator|.
name|indices
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
while|while
condition|(
name|uniqueIndices
operator|.
name|size
argument_list|()
operator|<
name|count
condition|)
block|{
name|uniqueIndices
operator|.
name|add
argument_list|(
name|randomFrom
argument_list|(
name|this
operator|.
name|indices
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|indices
init|=
operator|new
name|String
index|[
name|count
index|]
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|String
name|index
range|:
name|uniqueIndices
control|)
block|{
name|indices
index|[
name|i
operator|++
index|]
operator|=
name|randomBoolean
argument_list|()
condition|?
name|index
operator|+
literal|"-alias"
else|:
name|index
expr_stmt|;
block|}
return|return
name|indices
return|;
block|}
DECL|method|assertAllRequestsHaveBeenConsumed
specifier|private
specifier|static
name|void
name|assertAllRequestsHaveBeenConsumed
parameter_list|()
block|{
name|Iterable
argument_list|<
name|TransportService
argument_list|>
name|transportServices
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstances
argument_list|(
name|TransportService
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|TransportService
name|transportService
range|:
name|transportServices
control|)
block|{
name|assertThat
argument_list|(
operator|(
operator|(
name|InterceptingTransportService
operator|)
name|transportService
operator|)
operator|.
name|requests
operator|.
name|entrySet
argument_list|()
argument_list|,
name|emptyIterable
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|clearInterceptedActions
specifier|private
specifier|static
name|void
name|clearInterceptedActions
parameter_list|()
block|{
name|Iterable
argument_list|<
name|TransportService
argument_list|>
name|transportServices
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstances
argument_list|(
name|TransportService
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|TransportService
name|transportService
range|:
name|transportServices
control|)
block|{
operator|(
operator|(
name|InterceptingTransportService
operator|)
name|transportService
operator|)
operator|.
name|clearInterceptedActions
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|interceptTransportActions
specifier|private
specifier|static
name|void
name|interceptTransportActions
parameter_list|(
name|String
modifier|...
name|actions
parameter_list|)
block|{
name|Iterable
argument_list|<
name|TransportService
argument_list|>
name|transportServices
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstances
argument_list|(
name|TransportService
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|TransportService
name|transportService
range|:
name|transportServices
control|)
block|{
operator|(
operator|(
name|InterceptingTransportService
operator|)
name|transportService
operator|)
operator|.
name|interceptTransportActions
argument_list|(
name|actions
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|consumeTransportRequests
specifier|private
specifier|static
name|List
argument_list|<
name|TransportRequest
argument_list|>
name|consumeTransportRequests
parameter_list|(
name|String
name|action
parameter_list|)
block|{
name|List
argument_list|<
name|TransportRequest
argument_list|>
name|requests
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|Iterable
argument_list|<
name|TransportService
argument_list|>
name|transportServices
init|=
name|internalCluster
argument_list|()
operator|.
name|getInstances
argument_list|(
name|TransportService
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|TransportService
name|transportService
range|:
name|transportServices
control|)
block|{
name|List
argument_list|<
name|TransportRequest
argument_list|>
name|transportRequests
init|=
operator|(
operator|(
name|InterceptingTransportService
operator|)
name|transportService
operator|)
operator|.
name|consumeRequests
argument_list|(
name|action
argument_list|)
decl_stmt|;
if|if
condition|(
name|transportRequests
operator|!=
literal|null
condition|)
block|{
name|requests
operator|.
name|addAll
argument_list|(
name|transportRequests
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|requests
return|;
block|}
DECL|class|InterceptingTransportService
specifier|public
specifier|static
class|class
name|InterceptingTransportService
extends|extends
name|TransportService
block|{
DECL|class|TestPlugin
specifier|public
specifier|static
class|class
name|TestPlugin
extends|extends
name|Plugin
block|{
annotation|@
name|Override
DECL|method|name
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
literal|"intercepting-transport-service"
return|;
block|}
annotation|@
name|Override
DECL|method|description
specifier|public
name|String
name|description
parameter_list|()
block|{
return|return
literal|"an intercepting transport service for testing"
return|;
block|}
DECL|method|onModule
specifier|public
name|void
name|onModule
parameter_list|(
name|NetworkModule
name|module
parameter_list|)
block|{
name|module
operator|.
name|registerTransportService
argument_list|(
literal|"intercepting"
argument_list|,
name|InterceptingTransportService
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
DECL|field|actions
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|actions
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|requests
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|TransportRequest
argument_list|>
argument_list|>
name|requests
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Inject
DECL|method|InterceptingTransportService
specifier|public
name|InterceptingTransportService
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|Transport
name|transport
parameter_list|,
name|ThreadPool
name|threadPool
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|,
name|transport
argument_list|,
name|threadPool
argument_list|)
expr_stmt|;
block|}
DECL|method|consumeRequests
specifier|synchronized
name|List
argument_list|<
name|TransportRequest
argument_list|>
name|consumeRequests
parameter_list|(
name|String
name|action
parameter_list|)
block|{
return|return
name|requests
operator|.
name|remove
argument_list|(
name|action
argument_list|)
return|;
block|}
DECL|method|interceptTransportActions
specifier|synchronized
name|void
name|interceptTransportActions
parameter_list|(
name|String
modifier|...
name|actions
parameter_list|)
block|{
name|Collections
operator|.
name|addAll
argument_list|(
name|this
operator|.
name|actions
argument_list|,
name|actions
argument_list|)
expr_stmt|;
block|}
DECL|method|clearInterceptedActions
specifier|synchronized
name|void
name|clearInterceptedActions
parameter_list|()
block|{
name|actions
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|registerRequestHandler
specifier|public
parameter_list|<
name|Request
extends|extends
name|TransportRequest
parameter_list|>
name|void
name|registerRequestHandler
parameter_list|(
name|String
name|action
parameter_list|,
name|Supplier
argument_list|<
name|Request
argument_list|>
name|request
parameter_list|,
name|String
name|executor
parameter_list|,
name|boolean
name|forceExecution
parameter_list|,
name|TransportRequestHandler
argument_list|<
name|Request
argument_list|>
name|handler
parameter_list|)
block|{
name|super
operator|.
name|registerRequestHandler
argument_list|(
name|action
argument_list|,
name|request
argument_list|,
name|executor
argument_list|,
name|forceExecution
argument_list|,
operator|new
name|InterceptingRequestHandler
argument_list|<>
argument_list|(
name|action
argument_list|,
name|handler
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|registerRequestHandler
specifier|public
parameter_list|<
name|Request
extends|extends
name|TransportRequest
parameter_list|>
name|void
name|registerRequestHandler
parameter_list|(
name|String
name|action
parameter_list|,
name|Supplier
argument_list|<
name|Request
argument_list|>
name|requestFactory
parameter_list|,
name|String
name|executor
parameter_list|,
name|TransportRequestHandler
argument_list|<
name|Request
argument_list|>
name|handler
parameter_list|)
block|{
name|super
operator|.
name|registerRequestHandler
argument_list|(
name|action
argument_list|,
name|requestFactory
argument_list|,
name|executor
argument_list|,
operator|new
name|InterceptingRequestHandler
argument_list|<>
argument_list|(
name|action
argument_list|,
name|handler
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|class|InterceptingRequestHandler
specifier|private
class|class
name|InterceptingRequestHandler
parameter_list|<
name|T
extends|extends
name|TransportRequest
parameter_list|>
implements|implements
name|TransportRequestHandler
argument_list|<
name|T
argument_list|>
block|{
DECL|field|requestHandler
specifier|private
specifier|final
name|TransportRequestHandler
argument_list|<
name|T
argument_list|>
name|requestHandler
decl_stmt|;
DECL|field|action
specifier|private
specifier|final
name|String
name|action
decl_stmt|;
DECL|method|InterceptingRequestHandler
name|InterceptingRequestHandler
parameter_list|(
name|String
name|action
parameter_list|,
name|TransportRequestHandler
argument_list|<
name|T
argument_list|>
name|requestHandler
parameter_list|)
block|{
name|this
operator|.
name|requestHandler
operator|=
name|requestHandler
expr_stmt|;
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|messageReceived
specifier|public
name|void
name|messageReceived
parameter_list|(
name|T
name|request
parameter_list|,
name|TransportChannel
name|channel
parameter_list|,
name|Task
name|task
parameter_list|)
throws|throws
name|Exception
block|{
synchronized|synchronized
init|(
name|InterceptingTransportService
operator|.
name|this
init|)
block|{
if|if
condition|(
name|actions
operator|.
name|contains
argument_list|(
name|action
argument_list|)
condition|)
block|{
name|List
argument_list|<
name|TransportRequest
argument_list|>
name|requestList
init|=
name|requests
operator|.
name|get
argument_list|(
name|action
argument_list|)
decl_stmt|;
if|if
condition|(
name|requestList
operator|==
literal|null
condition|)
block|{
name|requestList
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|requestList
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|requests
operator|.
name|put
argument_list|(
name|action
argument_list|,
name|requestList
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|requestList
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|requestHandler
operator|.
name|messageReceived
argument_list|(
name|request
argument_list|,
name|channel
argument_list|,
name|task
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|messageReceived
specifier|public
name|void
name|messageReceived
parameter_list|(
name|T
name|request
parameter_list|,
name|TransportChannel
name|channel
parameter_list|)
throws|throws
name|Exception
block|{
name|messageReceived
argument_list|(
name|request
argument_list|,
name|channel
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

