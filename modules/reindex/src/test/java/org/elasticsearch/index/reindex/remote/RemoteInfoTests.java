begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.reindex.remote
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|reindex
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyMap
import|;
end_import

begin_class
DECL|class|RemoteInfoTests
specifier|public
class|class
name|RemoteInfoTests
extends|extends
name|ESTestCase
block|{
DECL|method|newRemoteInfo
specifier|private
name|RemoteInfo
name|newRemoteInfo
parameter_list|(
name|String
name|scheme
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
block|{
return|return
operator|new
name|RemoteInfo
argument_list|(
name|scheme
argument_list|,
literal|"testhost"
argument_list|,
literal|12344
argument_list|,
operator|new
name|BytesArray
argument_list|(
literal|"testquery"
argument_list|)
argument_list|,
name|username
argument_list|,
name|password
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
name|RemoteInfo
operator|.
name|DEFAULT_SOCKET_TIMEOUT
argument_list|,
name|RemoteInfo
operator|.
name|DEFAULT_CONNECT_TIMEOUT
argument_list|)
return|;
block|}
DECL|method|testToString
specifier|public
name|void
name|testToString
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"host=testhost port=12344 query=testquery"
argument_list|,
name|newRemoteInfo
argument_list|(
literal|"http"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"host=testhost port=12344 query=testquery username=testuser"
argument_list|,
name|newRemoteInfo
argument_list|(
literal|"http"
argument_list|,
literal|"testuser"
argument_list|,
literal|null
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"host=testhost port=12344 query=testquery username=testuser password=<<>>"
argument_list|,
name|newRemoteInfo
argument_list|(
literal|"http"
argument_list|,
literal|"testuser"
argument_list|,
literal|"testpass"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"scheme=https host=testhost port=12344 query=testquery username=testuser password=<<>>"
argument_list|,
name|newRemoteInfo
argument_list|(
literal|"https"
argument_list|,
literal|"testuser"
argument_list|,
literal|"testpass"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

