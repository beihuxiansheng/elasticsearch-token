begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.reindex
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|reindex
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|text
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|TTLFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|internal
operator|.
name|TimestampFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchShardTarget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|InternalSearchHit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|internal
operator|.
name|InternalSearchHitField
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singletonList
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singletonMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
operator|.
name|timeValueMillis
import|;
end_import

begin_class
DECL|class|AbstractAsyncBulkIndexbyScrollActionMetadataTestCase
specifier|public
specifier|abstract
class|class
name|AbstractAsyncBulkIndexbyScrollActionMetadataTestCase
parameter_list|<
name|Request
extends|extends
name|AbstractBulkIndexByScrollRequest
parameter_list|<
name|Request
parameter_list|>
parameter_list|,
name|Response
extends|extends
name|BulkIndexByScrollResponse
parameter_list|>
extends|extends
name|AbstractAsyncBulkIndexByScrollActionTestCase
argument_list|<
name|Request
argument_list|,
name|Response
argument_list|>
block|{
comment|/**      * Create a doc with some metadata.      */
DECL|method|doc
specifier|protected
name|InternalSearchHit
name|doc
parameter_list|(
name|String
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|InternalSearchHit
name|doc
init|=
operator|new
name|InternalSearchHit
argument_list|(
literal|0
argument_list|,
literal|"id"
argument_list|,
operator|new
name|Text
argument_list|(
literal|"type"
argument_list|)
argument_list|,
name|singletonMap
argument_list|(
name|field
argument_list|,
operator|new
name|InternalSearchHitField
argument_list|(
name|field
argument_list|,
name|singletonList
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|doc
operator|.
name|shardTarget
argument_list|(
operator|new
name|SearchShardTarget
argument_list|(
literal|"node"
argument_list|,
operator|new
name|Index
argument_list|(
literal|"index"
argument_list|,
literal|"uuid"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|doc
return|;
block|}
DECL|method|testTimestampIsCopied
specifier|public
name|void
name|testTimestampIsCopied
parameter_list|()
block|{
name|IndexRequest
name|index
init|=
operator|new
name|IndexRequest
argument_list|()
decl_stmt|;
name|action
argument_list|()
operator|.
name|copyMetadata
argument_list|(
name|index
argument_list|,
name|doc
argument_list|(
name|TimestampFieldMapper
operator|.
name|NAME
argument_list|,
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
name|index
operator|.
name|timestamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testTTL
specifier|public
name|void
name|testTTL
parameter_list|()
throws|throws
name|Exception
block|{
name|IndexRequest
name|index
init|=
operator|new
name|IndexRequest
argument_list|()
decl_stmt|;
name|action
argument_list|()
operator|.
name|copyMetadata
argument_list|(
name|index
argument_list|,
name|doc
argument_list|(
name|TTLFieldMapper
operator|.
name|NAME
argument_list|,
literal|10L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|timeValueMillis
argument_list|(
literal|10
argument_list|)
argument_list|,
name|index
operator|.
name|ttl
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

