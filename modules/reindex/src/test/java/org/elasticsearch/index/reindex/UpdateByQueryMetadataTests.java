begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.index.reindex
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|reindex
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|byscroll
operator|.
name|AbstractAsyncBulkByScrollAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|byscroll
operator|.
name|AbstractAsyncBulkByScrollActionMetadataTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|byscroll
operator|.
name|BulkByScrollResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|byscroll
operator|.
name|ScrollableHitSource
operator|.
name|Hit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchRequest
import|;
end_import

begin_class
DECL|class|UpdateByQueryMetadataTests
specifier|public
class|class
name|UpdateByQueryMetadataTests
extends|extends
name|AbstractAsyncBulkByScrollActionMetadataTestCase
argument_list|<
name|UpdateByQueryRequest
argument_list|,
name|BulkByScrollResponse
argument_list|>
block|{
DECL|method|testRoutingIsCopied
specifier|public
name|void
name|testRoutingIsCopied
parameter_list|()
throws|throws
name|Exception
block|{
name|IndexRequest
name|index
init|=
operator|new
name|IndexRequest
argument_list|()
decl_stmt|;
name|action
argument_list|()
operator|.
name|copyMetadata
argument_list|(
name|AbstractAsyncBulkByScrollAction
operator|.
name|wrap
argument_list|(
name|index
argument_list|)
argument_list|,
name|doc
argument_list|()
operator|.
name|setRouting
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|index
operator|.
name|routing
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|action
specifier|protected
name|TestAction
name|action
parameter_list|()
block|{
return|return
operator|new
name|TestAction
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|request
specifier|protected
name|UpdateByQueryRequest
name|request
parameter_list|()
block|{
return|return
operator|new
name|UpdateByQueryRequest
argument_list|(
operator|new
name|SearchRequest
argument_list|()
argument_list|)
return|;
block|}
DECL|class|TestAction
specifier|private
class|class
name|TestAction
extends|extends
name|TransportUpdateByQueryAction
operator|.
name|AsyncIndexBySearchAction
block|{
DECL|method|TestAction
name|TestAction
parameter_list|()
block|{
name|super
argument_list|(
name|UpdateByQueryMetadataTests
operator|.
name|this
operator|.
name|task
argument_list|,
name|UpdateByQueryMetadataTests
operator|.
name|this
operator|.
name|logger
argument_list|,
literal|null
argument_list|,
name|UpdateByQueryMetadataTests
operator|.
name|this
operator|.
name|threadPool
argument_list|,
name|request
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|listener
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|copyMetadata
specifier|public
name|AbstractAsyncBulkByScrollAction
operator|.
name|RequestWrapper
argument_list|<
name|?
argument_list|>
name|copyMetadata
parameter_list|(
name|AbstractAsyncBulkByScrollAction
operator|.
name|RequestWrapper
argument_list|<
name|?
argument_list|>
name|request
parameter_list|,
name|Hit
name|doc
parameter_list|)
block|{
return|return
name|super
operator|.
name|copyMetadata
argument_list|(
name|request
argument_list|,
name|doc
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

