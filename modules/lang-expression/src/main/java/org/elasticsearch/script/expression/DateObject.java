begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.script.expression
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|expression
package|;
end_package

begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|function
operator|.
name|ValueSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|IndexFieldData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|MultiValueMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|ReadableDateTime
import|;
end_import

begin_comment
comment|/**  * Expressions API for date objects (.date)  */
end_comment

begin_class
DECL|class|DateObject
specifier|final
class|class
name|DateObject
block|{
comment|// no instance
DECL|method|DateObject
specifier|private
name|DateObject
parameter_list|()
block|{}
comment|// supported variables
DECL|field|CENTURY_OF_ERA_VARIABLE
specifier|static
specifier|final
name|String
name|CENTURY_OF_ERA_VARIABLE
init|=
literal|"centuryOfEra"
decl_stmt|;
DECL|field|DAY_OF_MONTH_VARIABLE
specifier|static
specifier|final
name|String
name|DAY_OF_MONTH_VARIABLE
init|=
literal|"dayOfMonth"
decl_stmt|;
DECL|field|DAY_OF_WEEK_VARIABLE
specifier|static
specifier|final
name|String
name|DAY_OF_WEEK_VARIABLE
init|=
literal|"dayOfWeek"
decl_stmt|;
DECL|field|DAY_OF_YEAR_VARIABLE
specifier|static
specifier|final
name|String
name|DAY_OF_YEAR_VARIABLE
init|=
literal|"dayOfYear"
decl_stmt|;
DECL|field|ERA_VARIABLE
specifier|static
specifier|final
name|String
name|ERA_VARIABLE
init|=
literal|"era"
decl_stmt|;
DECL|field|HOUR_OF_DAY_VARIABLE
specifier|static
specifier|final
name|String
name|HOUR_OF_DAY_VARIABLE
init|=
literal|"hourOfDay"
decl_stmt|;
DECL|field|MILLIS_OF_DAY_VARIABLE
specifier|static
specifier|final
name|String
name|MILLIS_OF_DAY_VARIABLE
init|=
literal|"millisOfDay"
decl_stmt|;
DECL|field|MILLIS_OF_SECOND_VARIABLE
specifier|static
specifier|final
name|String
name|MILLIS_OF_SECOND_VARIABLE
init|=
literal|"millisOfSecond"
decl_stmt|;
DECL|field|MINUTE_OF_DAY_VARIABLE
specifier|static
specifier|final
name|String
name|MINUTE_OF_DAY_VARIABLE
init|=
literal|"minuteOfDay"
decl_stmt|;
DECL|field|MINUTE_OF_HOUR_VARIABLE
specifier|static
specifier|final
name|String
name|MINUTE_OF_HOUR_VARIABLE
init|=
literal|"minuteOfHour"
decl_stmt|;
DECL|field|MONTH_OF_YEAR_VARIABLE
specifier|static
specifier|final
name|String
name|MONTH_OF_YEAR_VARIABLE
init|=
literal|"monthOfYear"
decl_stmt|;
DECL|field|SECOND_OF_DAY_VARIABLE
specifier|static
specifier|final
name|String
name|SECOND_OF_DAY_VARIABLE
init|=
literal|"secondOfDay"
decl_stmt|;
DECL|field|SECOND_OF_MINUTE_VARIABLE
specifier|static
specifier|final
name|String
name|SECOND_OF_MINUTE_VARIABLE
init|=
literal|"secondOfMinute"
decl_stmt|;
DECL|field|WEEK_OF_WEEK_YEAR_VARIABLE
specifier|static
specifier|final
name|String
name|WEEK_OF_WEEK_YEAR_VARIABLE
init|=
literal|"weekOfWeekyear"
decl_stmt|;
DECL|field|WEEK_YEAR_VARIABLE
specifier|static
specifier|final
name|String
name|WEEK_YEAR_VARIABLE
init|=
literal|"weekyear"
decl_stmt|;
DECL|field|YEAR_VARIABLE
specifier|static
specifier|final
name|String
name|YEAR_VARIABLE
init|=
literal|"year"
decl_stmt|;
DECL|field|YEAR_OF_CENTURY_VARIABLE
specifier|static
specifier|final
name|String
name|YEAR_OF_CENTURY_VARIABLE
init|=
literal|"yearOfCentury"
decl_stmt|;
DECL|field|YEAR_OF_ERA_VARIABLE
specifier|static
specifier|final
name|String
name|YEAR_OF_ERA_VARIABLE
init|=
literal|"yearOfEra"
decl_stmt|;
comment|// supported methods
DECL|field|GETCENTURY_OF_ERA_METHOD
specifier|static
specifier|final
name|String
name|GETCENTURY_OF_ERA_METHOD
init|=
literal|"getCenturyOfEra"
decl_stmt|;
DECL|field|GETDAY_OF_MONTH_METHOD
specifier|static
specifier|final
name|String
name|GETDAY_OF_MONTH_METHOD
init|=
literal|"getDayOfMonth"
decl_stmt|;
DECL|field|GETDAY_OF_WEEK_METHOD
specifier|static
specifier|final
name|String
name|GETDAY_OF_WEEK_METHOD
init|=
literal|"getDayOfWeek"
decl_stmt|;
DECL|field|GETDAY_OF_YEAR_METHOD
specifier|static
specifier|final
name|String
name|GETDAY_OF_YEAR_METHOD
init|=
literal|"getDayOfYear"
decl_stmt|;
DECL|field|GETERA_METHOD
specifier|static
specifier|final
name|String
name|GETERA_METHOD
init|=
literal|"getEra"
decl_stmt|;
DECL|field|GETHOUR_OF_DAY_METHOD
specifier|static
specifier|final
name|String
name|GETHOUR_OF_DAY_METHOD
init|=
literal|"getHourOfDay"
decl_stmt|;
DECL|field|GETMILLIS_OF_DAY_METHOD
specifier|static
specifier|final
name|String
name|GETMILLIS_OF_DAY_METHOD
init|=
literal|"getMillisOfDay"
decl_stmt|;
DECL|field|GETMILLIS_OF_SECOND_METHOD
specifier|static
specifier|final
name|String
name|GETMILLIS_OF_SECOND_METHOD
init|=
literal|"getMillisOfSecond"
decl_stmt|;
DECL|field|GETMINUTE_OF_DAY_METHOD
specifier|static
specifier|final
name|String
name|GETMINUTE_OF_DAY_METHOD
init|=
literal|"getMinuteOfDay"
decl_stmt|;
DECL|field|GETMINUTE_OF_HOUR_METHOD
specifier|static
specifier|final
name|String
name|GETMINUTE_OF_HOUR_METHOD
init|=
literal|"getMinuteOfHour"
decl_stmt|;
DECL|field|GETMONTH_OF_YEAR_METHOD
specifier|static
specifier|final
name|String
name|GETMONTH_OF_YEAR_METHOD
init|=
literal|"getMonthOfYear"
decl_stmt|;
DECL|field|GETSECOND_OF_DAY_METHOD
specifier|static
specifier|final
name|String
name|GETSECOND_OF_DAY_METHOD
init|=
literal|"getSecondOfDay"
decl_stmt|;
DECL|field|GETSECOND_OF_MINUTE_METHOD
specifier|static
specifier|final
name|String
name|GETSECOND_OF_MINUTE_METHOD
init|=
literal|"getSecondOfMinute"
decl_stmt|;
DECL|field|GETWEEK_OF_WEEK_YEAR_METHOD
specifier|static
specifier|final
name|String
name|GETWEEK_OF_WEEK_YEAR_METHOD
init|=
literal|"getWeekOfWeekyear"
decl_stmt|;
DECL|field|GETWEEK_YEAR_METHOD
specifier|static
specifier|final
name|String
name|GETWEEK_YEAR_METHOD
init|=
literal|"getWeekyear"
decl_stmt|;
DECL|field|GETYEAR_METHOD
specifier|static
specifier|final
name|String
name|GETYEAR_METHOD
init|=
literal|"getYear"
decl_stmt|;
DECL|field|GETYEAR_OF_CENTURY_METHOD
specifier|static
specifier|final
name|String
name|GETYEAR_OF_CENTURY_METHOD
init|=
literal|"getYearOfCentury"
decl_stmt|;
DECL|field|GETYEAR_OF_ERA_METHOD
specifier|static
specifier|final
name|String
name|GETYEAR_OF_ERA_METHOD
init|=
literal|"getYearOfEra"
decl_stmt|;
DECL|method|getVariable
specifier|static
name|ValueSource
name|getVariable
parameter_list|(
name|IndexFieldData
argument_list|<
name|?
argument_list|>
name|fieldData
parameter_list|,
name|String
name|fieldName
parameter_list|,
name|String
name|variable
parameter_list|)
block|{
switch|switch
condition|(
name|variable
condition|)
block|{
case|case
name|CENTURY_OF_ERA_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getCenturyOfEra
argument_list|)
return|;
case|case
name|DAY_OF_MONTH_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getDayOfMonth
argument_list|)
return|;
case|case
name|DAY_OF_WEEK_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getDayOfWeek
argument_list|)
return|;
case|case
name|DAY_OF_YEAR_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getDayOfYear
argument_list|)
return|;
case|case
name|ERA_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getEra
argument_list|)
return|;
case|case
name|HOUR_OF_DAY_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getHourOfDay
argument_list|)
return|;
case|case
name|MILLIS_OF_DAY_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getMillisOfDay
argument_list|)
return|;
case|case
name|MILLIS_OF_SECOND_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getMillisOfSecond
argument_list|)
return|;
case|case
name|MINUTE_OF_DAY_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getMinuteOfDay
argument_list|)
return|;
case|case
name|MINUTE_OF_HOUR_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getMinuteOfHour
argument_list|)
return|;
case|case
name|MONTH_OF_YEAR_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getMonthOfYear
argument_list|)
return|;
case|case
name|SECOND_OF_DAY_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getSecondOfDay
argument_list|)
return|;
case|case
name|SECOND_OF_MINUTE_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getSecondOfMinute
argument_list|)
return|;
case|case
name|WEEK_OF_WEEK_YEAR_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getWeekOfWeekyear
argument_list|)
return|;
case|case
name|WEEK_YEAR_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getWeekyear
argument_list|)
return|;
case|case
name|YEAR_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getYear
argument_list|)
return|;
case|case
name|YEAR_OF_CENTURY_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getYearOfCentury
argument_list|)
return|;
case|case
name|YEAR_OF_ERA_VARIABLE
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|variable
argument_list|,
name|ReadableDateTime
operator|::
name|getYearOfEra
argument_list|)
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Member variable ["
operator|+
name|variable
operator|+
literal|"] does not exist for date object on field ["
operator|+
name|fieldName
operator|+
literal|"]."
argument_list|)
throw|;
block|}
block|}
DECL|method|getMethod
specifier|static
name|ValueSource
name|getMethod
parameter_list|(
name|IndexFieldData
argument_list|<
name|?
argument_list|>
name|fieldData
parameter_list|,
name|String
name|fieldName
parameter_list|,
name|String
name|method
parameter_list|)
block|{
switch|switch
condition|(
name|method
condition|)
block|{
case|case
name|GETCENTURY_OF_ERA_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getCenturyOfEra
argument_list|)
return|;
case|case
name|GETDAY_OF_MONTH_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getDayOfMonth
argument_list|)
return|;
case|case
name|GETDAY_OF_WEEK_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getDayOfWeek
argument_list|)
return|;
case|case
name|GETDAY_OF_YEAR_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getDayOfYear
argument_list|)
return|;
case|case
name|GETERA_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getEra
argument_list|)
return|;
case|case
name|GETHOUR_OF_DAY_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getHourOfDay
argument_list|)
return|;
case|case
name|GETMILLIS_OF_DAY_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getMillisOfDay
argument_list|)
return|;
case|case
name|GETMILLIS_OF_SECOND_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getMillisOfSecond
argument_list|)
return|;
case|case
name|GETMINUTE_OF_DAY_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getMinuteOfDay
argument_list|)
return|;
case|case
name|GETMINUTE_OF_HOUR_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getMinuteOfHour
argument_list|)
return|;
case|case
name|GETMONTH_OF_YEAR_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getMonthOfYear
argument_list|)
return|;
case|case
name|GETSECOND_OF_DAY_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getSecondOfDay
argument_list|)
return|;
case|case
name|GETSECOND_OF_MINUTE_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getSecondOfMinute
argument_list|)
return|;
case|case
name|GETWEEK_OF_WEEK_YEAR_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getWeekOfWeekyear
argument_list|)
return|;
case|case
name|GETWEEK_YEAR_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getWeekyear
argument_list|)
return|;
case|case
name|GETYEAR_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getYear
argument_list|)
return|;
case|case
name|GETYEAR_OF_CENTURY_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getYearOfCentury
argument_list|)
return|;
case|case
name|GETYEAR_OF_ERA_METHOD
case|:
return|return
operator|new
name|DateObjectValueSource
argument_list|(
name|fieldData
argument_list|,
name|MultiValueMode
operator|.
name|MIN
argument_list|,
name|method
argument_list|,
name|ReadableDateTime
operator|::
name|getYearOfEra
argument_list|)
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Member method ["
operator|+
name|method
operator|+
literal|"] does not exist for date object on field ["
operator|+
name|fieldName
operator|+
literal|"]."
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

