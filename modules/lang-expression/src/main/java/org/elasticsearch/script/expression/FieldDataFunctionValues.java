begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.script.expression
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|expression
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|function
operator|.
name|ValueSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|function
operator|.
name|docvalues
operator|.
name|DoubleDocValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|AtomicNumericFieldData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|fielddata
operator|.
name|NumericDoubleValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|MultiValueMode
import|;
end_import

begin_comment
comment|/**  * A {@link org.apache.lucene.queries.function.FunctionValues} which wrap field data.  */
end_comment

begin_class
DECL|class|FieldDataFunctionValues
class|class
name|FieldDataFunctionValues
extends|extends
name|DoubleDocValues
block|{
DECL|field|dataAccessor
name|NumericDoubleValues
name|dataAccessor
decl_stmt|;
DECL|method|FieldDataFunctionValues
name|FieldDataFunctionValues
parameter_list|(
name|ValueSource
name|parent
parameter_list|,
name|MultiValueMode
name|m
parameter_list|,
name|AtomicNumericFieldData
name|d
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|dataAccessor
operator|=
name|m
operator|.
name|select
argument_list|(
name|d
operator|.
name|getDoubleValues
argument_list|()
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doubleVal
specifier|public
name|double
name|doubleVal
parameter_list|(
name|int
name|i
parameter_list|)
block|{
return|return
name|dataAccessor
operator|.
name|get
argument_list|(
name|i
argument_list|)
return|;
block|}
block|}
end_class

end_unit

