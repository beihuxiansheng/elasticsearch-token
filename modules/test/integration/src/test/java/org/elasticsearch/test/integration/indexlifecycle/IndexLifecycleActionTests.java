begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elastic Search and Shay Banon under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. Elastic Search licenses this  * file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.integration.indexlifecycle
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|integration
operator|.
name|indexlifecycle
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|health
operator|.
name|ClusterHealthResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|cluster
operator|.
name|health
operator|.
name|ClusterHealthStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|create
operator|.
name|CreateIndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|admin
operator|.
name|indices
operator|.
name|delete
operator|.
name|DeleteIndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|RoutingNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|server
operator|.
name|internal
operator|.
name|InternalServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|integration
operator|.
name|AbstractServersTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|logging
operator|.
name|Loggers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|AfterMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Requests
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|routing
operator|.
name|ShardRoutingState
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|util
operator|.
name|settings
operator|.
name|ImmutableSettings
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @author kimchy (Shay Banon)  */
end_comment

begin_class
DECL|class|IndexLifecycleActionTests
specifier|public
class|class
name|IndexLifecycleActionTests
extends|extends
name|AbstractServersTests
block|{
DECL|field|logger
specifier|private
specifier|final
name|Logger
name|logger
init|=
name|Loggers
operator|.
name|getLogger
argument_list|(
name|IndexLifecycleActionTests
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|closeServers
annotation|@
name|AfterMethod
specifier|public
name|void
name|closeServers
parameter_list|()
block|{
name|closeAllServers
argument_list|()
expr_stmt|;
block|}
DECL|method|testIndexLifecycleActionsWith11Shards1Backup
annotation|@
name|Test
specifier|public
name|void
name|testIndexLifecycleActionsWith11Shards1Backup
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
name|settings
init|=
name|settingsBuilder
argument_list|()
operator|.
name|putInt
argument_list|(
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
literal|11
argument_list|)
operator|.
name|putInt
argument_list|(
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
literal|1
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// start one server
name|logger
operator|.
name|info
argument_list|(
literal|"Starting sever1"
argument_list|)
expr_stmt|;
name|startServer
argument_list|(
literal|"server1"
argument_list|,
name|settings
argument_list|)
expr_stmt|;
name|ClusterService
name|clusterService1
init|=
operator|(
operator|(
name|InternalServer
operator|)
name|server
argument_list|(
literal|"server1"
argument_list|)
operator|)
operator|.
name|injector
argument_list|()
operator|.
name|getInstance
argument_list|(
name|ClusterService
operator|.
name|class
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Creating index [test]"
argument_list|)
expr_stmt|;
name|CreateIndexResponse
name|createIndexResponse
init|=
name|client
argument_list|(
literal|"server1"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|create
argument_list|(
name|createIndexRequest
argument_list|(
literal|"test"
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|createIndexResponse
operator|.
name|acknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Running Cluster Health"
argument_list|)
expr_stmt|;
name|ClusterHealthResponse
name|clusterHealth
init|=
name|client
argument_list|(
literal|"server1"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|health
argument_list|(
name|clusterHealth
argument_list|()
operator|.
name|waitForYellowStatus
argument_list|()
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Done Cluster Health, status "
operator|+
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|timedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|ClusterHealthStatus
operator|.
name|YELLOW
argument_list|)
argument_list|)
expr_stmt|;
comment|// sleep till the cluster state gets published, since we check the master
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|ClusterState
name|clusterState1
init|=
name|clusterService1
operator|.
name|state
argument_list|()
decl_stmt|;
name|RoutingNode
name|routingNodeEntry1
init|=
name|clusterState1
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState1
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry1
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|clusterState1
operator|=
name|client
argument_list|(
literal|"server1"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|state
argument_list|(
name|clusterState
argument_list|()
argument_list|)
operator|.
name|actionGet
argument_list|()
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry1
operator|=
name|clusterState1
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState1
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry1
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Starting server2"
argument_list|)
expr_stmt|;
comment|// start another server
name|startServer
argument_list|(
literal|"server2"
argument_list|,
name|settings
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|ClusterService
name|clusterService2
init|=
operator|(
operator|(
name|InternalServer
operator|)
name|server
argument_list|(
literal|"server2"
argument_list|)
operator|)
operator|.
name|injector
argument_list|()
operator|.
name|getInstance
argument_list|(
name|ClusterService
operator|.
name|class
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Running Cluster Health"
argument_list|)
expr_stmt|;
name|clusterHealth
operator|=
name|client
argument_list|(
literal|"server1"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|health
argument_list|(
name|clusterHealth
argument_list|()
operator|.
name|waitForGreenStatus
argument_list|()
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Done Cluster Health, status "
operator|+
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|timedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|ClusterHealthStatus
operator|.
name|GREEN
argument_list|)
argument_list|)
expr_stmt|;
comment|// sleep till the cluster state gets published, since we check the master
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|clusterState1
operator|=
name|clusterService1
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry1
operator|=
name|clusterState1
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState1
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry1
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|ClusterState
name|clusterState2
init|=
name|clusterService2
operator|.
name|state
argument_list|()
decl_stmt|;
name|RoutingNode
name|routingNodeEntry2
init|=
name|clusterState2
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState2
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry2
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Starting server3"
argument_list|)
expr_stmt|;
comment|// start another server
name|startServer
argument_list|(
literal|"server3"
argument_list|,
name|settings
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|ClusterService
name|clusterService3
init|=
operator|(
operator|(
name|InternalServer
operator|)
name|server
argument_list|(
literal|"server3"
argument_list|)
operator|)
operator|.
name|injector
argument_list|()
operator|.
name|getInstance
argument_list|(
name|ClusterService
operator|.
name|class
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Running Cluster Health"
argument_list|)
expr_stmt|;
name|clusterHealth
operator|=
name|client
argument_list|(
literal|"server1"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|health
argument_list|(
name|clusterHealth
argument_list|()
operator|.
name|waitForGreenStatus
argument_list|()
operator|.
name|waitForRelocatingShards
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Done Cluster Health, status "
operator|+
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|timedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|ClusterHealthStatus
operator|.
name|GREEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|relocatingShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activeShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activePrimaryShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
comment|// sleep till the cluster state gets published, since we check the master
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|clusterState1
operator|=
name|clusterService1
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry1
operator|=
name|clusterState1
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState1
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry1
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|anyOf
argument_list|(
name|equalTo
argument_list|(
literal|7
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|8
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|clusterState2
operator|=
name|clusterService2
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry2
operator|=
name|clusterState2
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState2
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry2
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|anyOf
argument_list|(
name|equalTo
argument_list|(
literal|7
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|8
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ClusterState
name|clusterState3
init|=
name|clusterService3
operator|.
name|state
argument_list|()
decl_stmt|;
name|RoutingNode
name|routingNodeEntry3
init|=
name|clusterState3
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState3
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry3
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry1
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
operator|+
name|routingNodeEntry2
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
operator|+
name|routingNodeEntry3
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Closing server1"
argument_list|)
expr_stmt|;
comment|// kill the first server
name|closeServer
argument_list|(
literal|"server1"
argument_list|)
expr_stmt|;
comment|// wait a bit so it will be discovered as removed
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
comment|// verify health
name|logger
operator|.
name|info
argument_list|(
literal|"Running Cluster Health"
argument_list|)
expr_stmt|;
name|clusterHealth
operator|=
name|client
argument_list|(
literal|"server2"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|health
argument_list|(
name|clusterHealth
argument_list|()
operator|.
name|waitForGreenStatus
argument_list|()
operator|.
name|waitForRelocatingShards
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Done Cluster Health, status "
operator|+
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|timedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|ClusterHealthStatus
operator|.
name|GREEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|relocatingShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activeShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activePrimaryShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
comment|// sleep till the cluster state gets published, since we check the master
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|clusterState2
operator|=
name|clusterService2
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry2
operator|=
name|clusterState2
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState2
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry2
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|clusterState3
operator|=
name|clusterService3
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry3
operator|=
name|clusterState3
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState3
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry3
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry2
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
operator|+
name|routingNodeEntry3
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Deleting index [test]"
argument_list|)
expr_stmt|;
comment|// last, lets delete the index
name|DeleteIndexResponse
name|deleteIndexResponse
init|=
name|client
argument_list|(
literal|"server2"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|delete
argument_list|(
name|deleteIndexRequest
argument_list|(
literal|"test"
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|deleteIndexResponse
operator|.
name|acknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|clusterState2
operator|=
name|clusterService2
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry2
operator|=
name|clusterState2
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState2
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry2
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|clusterState3
operator|=
name|clusterService3
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry3
operator|=
name|clusterState3
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState3
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry3
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testIndexLifecycleActionsWith11Shards0Backup
annotation|@
name|Test
specifier|public
name|void
name|testIndexLifecycleActionsWith11Shards0Backup
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
name|settings
init|=
name|settingsBuilder
argument_list|()
operator|.
name|putInt
argument_list|(
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
literal|11
argument_list|)
operator|.
name|putInt
argument_list|(
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
literal|0
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// start one server
name|logger
operator|.
name|info
argument_list|(
literal|"Starting server1"
argument_list|)
expr_stmt|;
name|startServer
argument_list|(
literal|"server1"
argument_list|,
name|settings
argument_list|)
expr_stmt|;
name|ClusterService
name|clusterService1
init|=
operator|(
operator|(
name|InternalServer
operator|)
name|server
argument_list|(
literal|"server1"
argument_list|)
operator|)
operator|.
name|injector
argument_list|()
operator|.
name|getInstance
argument_list|(
name|ClusterService
operator|.
name|class
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Creating index [test]"
argument_list|)
expr_stmt|;
name|CreateIndexResponse
name|createIndexResponse
init|=
name|client
argument_list|(
literal|"server1"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|create
argument_list|(
name|createIndexRequest
argument_list|(
literal|"test"
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|createIndexResponse
operator|.
name|acknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Running Cluster Health"
argument_list|)
expr_stmt|;
name|ClusterHealthResponse
name|clusterHealth
init|=
name|client
argument_list|(
literal|"server1"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|health
argument_list|(
name|clusterHealth
argument_list|()
operator|.
name|waitForGreenStatus
argument_list|()
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Done Cluster Health, status "
operator|+
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|timedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|ClusterHealthStatus
operator|.
name|GREEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|relocatingShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activeShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activePrimaryShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|ClusterState
name|clusterState1
init|=
name|clusterService1
operator|.
name|state
argument_list|()
decl_stmt|;
name|RoutingNode
name|routingNodeEntry1
init|=
name|clusterState1
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState1
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry1
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
comment|// start another server
name|logger
operator|.
name|info
argument_list|(
literal|"Starting server2"
argument_list|)
expr_stmt|;
name|startServer
argument_list|(
literal|"server2"
argument_list|,
name|settings
argument_list|)
expr_stmt|;
comment|// wait a bit
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Running Cluster Health"
argument_list|)
expr_stmt|;
name|clusterHealth
operator|=
name|client
argument_list|(
literal|"server1"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|health
argument_list|(
name|clusterHealth
argument_list|()
operator|.
name|waitForGreenStatus
argument_list|()
operator|.
name|waitForRelocatingShards
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Done Cluster Health, status "
operator|+
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|timedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|ClusterHealthStatus
operator|.
name|GREEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|relocatingShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activeShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activePrimaryShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
comment|// sleep till the cluster state gets published, since we check the master
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|ClusterService
name|clusterService2
init|=
operator|(
operator|(
name|InternalServer
operator|)
name|server
argument_list|(
literal|"server2"
argument_list|)
operator|)
operator|.
name|injector
argument_list|()
operator|.
name|getInstance
argument_list|(
name|ClusterService
operator|.
name|class
argument_list|)
decl_stmt|;
name|clusterState1
operator|=
name|clusterService1
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry1
operator|=
name|clusterState1
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState1
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry1
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|anyOf
argument_list|(
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ClusterState
name|clusterState2
init|=
name|clusterService2
operator|.
name|state
argument_list|()
decl_stmt|;
name|RoutingNode
name|routingNodeEntry2
init|=
name|clusterState2
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState2
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry2
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|anyOf
argument_list|(
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// start another server
name|logger
operator|.
name|info
argument_list|(
literal|"Starting server3"
argument_list|)
expr_stmt|;
name|startServer
argument_list|(
literal|"server3"
argument_list|)
expr_stmt|;
comment|// wait a bit so assignment will start
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|ClusterService
name|clusterService3
init|=
operator|(
operator|(
name|InternalServer
operator|)
name|server
argument_list|(
literal|"server3"
argument_list|)
operator|)
operator|.
name|injector
argument_list|()
operator|.
name|getInstance
argument_list|(
name|ClusterService
operator|.
name|class
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Running Cluster Health"
argument_list|)
expr_stmt|;
name|clusterHealth
operator|=
name|client
argument_list|(
literal|"server1"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|health
argument_list|(
name|clusterHealth
argument_list|()
operator|.
name|waitForGreenStatus
argument_list|()
operator|.
name|waitForRelocatingShards
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Done Cluster Health, status "
operator|+
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|timedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|ClusterHealthStatus
operator|.
name|GREEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|relocatingShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activeShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activePrimaryShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
comment|// sleep till the cluster state gets published, since we check the master
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|clusterState1
operator|=
name|clusterService1
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry1
operator|=
name|clusterState1
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState1
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry1
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|anyOf
argument_list|(
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|clusterState2
operator|=
name|clusterService2
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry2
operator|=
name|clusterState2
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState2
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry2
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|anyOf
argument_list|(
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ClusterState
name|clusterState3
init|=
name|clusterService3
operator|.
name|state
argument_list|()
decl_stmt|;
name|RoutingNode
name|routingNodeEntry3
init|=
name|clusterState3
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState3
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry3
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry1
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
operator|+
name|routingNodeEntry2
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
operator|+
name|routingNodeEntry3
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Closing server1"
argument_list|)
expr_stmt|;
comment|// kill the first server
name|closeServer
argument_list|(
literal|"server1"
argument_list|)
expr_stmt|;
comment|// wait a bit so it will be discovered as removed
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Running Cluster Health"
argument_list|)
expr_stmt|;
name|clusterHealth
operator|=
name|client
argument_list|(
literal|"server3"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|cluster
argument_list|()
operator|.
name|health
argument_list|(
name|clusterHealth
argument_list|()
operator|.
name|waitForGreenStatus
argument_list|()
operator|.
name|waitForRelocatingShards
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Done Cluster Health, status "
operator|+
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|timedOut
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|status
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|ClusterHealthStatus
operator|.
name|GREEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|relocatingShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activeShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|clusterHealth
operator|.
name|activePrimaryShards
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
comment|// sleep till the cluster state gets published, since we check the master
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|clusterState2
operator|=
name|clusterService2
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry2
operator|=
name|clusterState2
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState2
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry2
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|anyOf
argument_list|(
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|clusterState3
operator|=
name|clusterService3
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry3
operator|=
name|clusterState3
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState3
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry3
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|anyOf
argument_list|(
name|equalTo
argument_list|(
literal|5
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry2
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
operator|+
name|routingNodeEntry3
operator|.
name|numberOfShardsWithState
argument_list|(
name|STARTED
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Deleting index [test]"
argument_list|)
expr_stmt|;
comment|// last, lets delete the index
name|DeleteIndexResponse
name|deleteIndexResponse
init|=
name|client
argument_list|(
literal|"server2"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|delete
argument_list|(
name|deleteIndexRequest
argument_list|(
literal|"test"
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|deleteIndexResponse
operator|.
name|acknowledged
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|clusterState2
operator|=
name|clusterService2
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry2
operator|=
name|clusterState2
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState2
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry2
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
name|clusterState3
operator|=
name|clusterService3
operator|.
name|state
argument_list|()
expr_stmt|;
name|routingNodeEntry3
operator|=
name|clusterState3
operator|.
name|readOnlyRoutingNodes
argument_list|()
operator|.
name|nodesToShards
argument_list|()
operator|.
name|get
argument_list|(
name|clusterState3
operator|.
name|nodes
argument_list|()
operator|.
name|localNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|routingNodeEntry3
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testTwoIndicesCreation
annotation|@
name|Test
specifier|public
name|void
name|testTwoIndicesCreation
parameter_list|()
throws|throws
name|Exception
block|{
name|Settings
name|settings
init|=
name|settingsBuilder
argument_list|()
operator|.
name|putInt
argument_list|(
name|SETTING_NUMBER_OF_SHARDS
argument_list|,
literal|11
argument_list|)
operator|.
name|putInt
argument_list|(
name|SETTING_NUMBER_OF_REPLICAS
argument_list|,
literal|0
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// start one server
name|startServer
argument_list|(
literal|"server1"
argument_list|,
name|settings
argument_list|)
expr_stmt|;
name|client
argument_list|(
literal|"server1"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|create
argument_list|(
name|createIndexRequest
argument_list|(
literal|"test1"
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
name|client
argument_list|(
literal|"server1"
argument_list|)
operator|.
name|admin
argument_list|()
operator|.
name|indices
argument_list|()
operator|.
name|create
argument_list|(
name|createIndexRequest
argument_list|(
literal|"test2"
argument_list|)
argument_list|)
operator|.
name|actionGet
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

