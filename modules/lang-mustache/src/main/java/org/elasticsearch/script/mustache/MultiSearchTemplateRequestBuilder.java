begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.script.mustache
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|mustache
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionRequestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|IndicesOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|ElasticsearchClient
import|;
end_import

begin_class
DECL|class|MultiSearchTemplateRequestBuilder
specifier|public
class|class
name|MultiSearchTemplateRequestBuilder
extends|extends
name|ActionRequestBuilder
argument_list|<
name|MultiSearchTemplateRequest
argument_list|,
name|MultiSearchTemplateResponse
argument_list|,
name|MultiSearchTemplateRequestBuilder
argument_list|>
block|{
DECL|method|MultiSearchTemplateRequestBuilder
specifier|protected
name|MultiSearchTemplateRequestBuilder
parameter_list|(
name|ElasticsearchClient
name|client
parameter_list|,
name|MultiSearchTemplateAction
name|action
parameter_list|)
block|{
name|super
argument_list|(
name|client
argument_list|,
name|action
argument_list|,
operator|new
name|MultiSearchTemplateRequest
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|MultiSearchTemplateRequestBuilder
specifier|public
name|MultiSearchTemplateRequestBuilder
parameter_list|(
name|ElasticsearchClient
name|client
parameter_list|)
block|{
name|this
argument_list|(
name|client
argument_list|,
name|MultiSearchTemplateAction
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
block|}
DECL|method|add
specifier|public
name|MultiSearchTemplateRequestBuilder
name|add
parameter_list|(
name|SearchTemplateRequest
name|request
parameter_list|)
block|{
if|if
condition|(
name|request
operator|.
name|getRequest
argument_list|()
operator|.
name|indicesOptions
argument_list|()
operator|==
name|IndicesOptions
operator|.
name|strictExpandOpenAndForbidClosed
argument_list|()
operator|&&
name|request
argument_list|()
operator|.
name|indicesOptions
argument_list|()
operator|!=
name|IndicesOptions
operator|.
name|strictExpandOpenAndForbidClosed
argument_list|()
condition|)
block|{
name|request
operator|.
name|getRequest
argument_list|()
operator|.
name|indicesOptions
argument_list|(
name|request
argument_list|()
operator|.
name|indicesOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|request
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|add
specifier|public
name|MultiSearchTemplateRequestBuilder
name|add
parameter_list|(
name|SearchTemplateRequestBuilder
name|request
parameter_list|)
block|{
if|if
condition|(
name|request
operator|.
name|request
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|indicesOptions
argument_list|()
operator|==
name|IndicesOptions
operator|.
name|strictExpandOpenAndForbidClosed
argument_list|()
operator|&&
name|request
argument_list|()
operator|.
name|indicesOptions
argument_list|()
operator|!=
name|IndicesOptions
operator|.
name|strictExpandOpenAndForbidClosed
argument_list|()
condition|)
block|{
name|request
operator|.
name|request
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|indicesOptions
argument_list|(
name|request
argument_list|()
operator|.
name|indicesOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|request
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setIndicesOptions
specifier|public
name|MultiSearchTemplateRequestBuilder
name|setIndicesOptions
parameter_list|(
name|IndicesOptions
name|indicesOptions
parameter_list|)
block|{
name|request
argument_list|()
operator|.
name|indicesOptions
argument_list|(
name|indicesOptions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets how many search requests specified in this multi search requests are allowed to be ran concurrently.      */
DECL|method|setMaxConcurrentSearchRequests
specifier|public
name|MultiSearchTemplateRequestBuilder
name|setMaxConcurrentSearchRequests
parameter_list|(
name|int
name|maxConcurrentSearchRequests
parameter_list|)
block|{
name|request
argument_list|()
operator|.
name|maxConcurrentSearchRequests
argument_list|(
name|maxConcurrentSearchRequests
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

