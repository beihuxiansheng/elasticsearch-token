begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.script.mustache
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|mustache
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|MultiSearchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|MultiSearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|TransportMultiSearchAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|ActionFilters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|support
operator|.
name|HandledTransportAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexNameExpressionResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|NamedXContentRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|transport
operator|.
name|TransportService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|mustache
operator|.
name|TransportSearchTemplateAction
operator|.
name|convert
import|;
end_import

begin_class
DECL|class|TransportMultiSearchTemplateAction
specifier|public
class|class
name|TransportMultiSearchTemplateAction
extends|extends
name|HandledTransportAction
argument_list|<
name|MultiSearchTemplateRequest
argument_list|,
name|MultiSearchTemplateResponse
argument_list|>
block|{
DECL|field|scriptService
specifier|private
specifier|final
name|ScriptService
name|scriptService
decl_stmt|;
DECL|field|xContentRegistry
specifier|private
specifier|final
name|NamedXContentRegistry
name|xContentRegistry
decl_stmt|;
DECL|field|multiSearchAction
specifier|private
specifier|final
name|TransportMultiSearchAction
name|multiSearchAction
decl_stmt|;
annotation|@
name|Inject
DECL|method|TransportMultiSearchTemplateAction
specifier|public
name|TransportMultiSearchTemplateAction
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|ThreadPool
name|threadPool
parameter_list|,
name|TransportService
name|transportService
parameter_list|,
name|ActionFilters
name|actionFilters
parameter_list|,
name|IndexNameExpressionResolver
name|resolver
parameter_list|,
name|ScriptService
name|scriptService
parameter_list|,
name|NamedXContentRegistry
name|xContentRegistry
parameter_list|,
name|TransportMultiSearchAction
name|multiSearchAction
parameter_list|)
block|{
name|super
argument_list|(
name|settings
argument_list|,
name|MultiSearchTemplateAction
operator|.
name|NAME
argument_list|,
name|threadPool
argument_list|,
name|transportService
argument_list|,
name|actionFilters
argument_list|,
name|resolver
argument_list|,
name|MultiSearchTemplateRequest
operator|::
operator|new
argument_list|)
expr_stmt|;
name|this
operator|.
name|scriptService
operator|=
name|scriptService
expr_stmt|;
name|this
operator|.
name|xContentRegistry
operator|=
name|xContentRegistry
expr_stmt|;
name|this
operator|.
name|multiSearchAction
operator|=
name|multiSearchAction
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doExecute
specifier|protected
name|void
name|doExecute
parameter_list|(
name|MultiSearchTemplateRequest
name|request
parameter_list|,
name|ActionListener
argument_list|<
name|MultiSearchTemplateResponse
argument_list|>
name|listener
parameter_list|)
block|{
name|List
argument_list|<
name|Integer
argument_list|>
name|originalSlots
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|MultiSearchRequest
name|multiSearchRequest
init|=
operator|new
name|MultiSearchRequest
argument_list|()
decl_stmt|;
name|multiSearchRequest
operator|.
name|indicesOptions
argument_list|(
name|request
operator|.
name|indicesOptions
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|maxConcurrentSearchRequests
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|multiSearchRequest
operator|.
name|maxConcurrentSearchRequests
argument_list|(
name|request
operator|.
name|maxConcurrentSearchRequests
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|MultiSearchTemplateResponse
operator|.
name|Item
index|[]
name|items
init|=
operator|new
name|MultiSearchTemplateResponse
operator|.
name|Item
index|[
name|request
operator|.
name|requests
argument_list|()
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|items
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|SearchTemplateRequest
name|searchTemplateRequest
init|=
name|request
operator|.
name|requests
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|SearchTemplateResponse
name|searchTemplateResponse
init|=
operator|new
name|SearchTemplateResponse
argument_list|()
decl_stmt|;
name|SearchRequest
name|searchRequest
decl_stmt|;
try|try
block|{
name|searchRequest
operator|=
name|convert
argument_list|(
name|searchTemplateRequest
argument_list|,
name|searchTemplateResponse
argument_list|,
name|scriptService
argument_list|,
name|xContentRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|items
index|[
name|i
index|]
operator|=
operator|new
name|MultiSearchTemplateResponse
operator|.
name|Item
argument_list|(
literal|null
argument_list|,
name|e
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|items
index|[
name|i
index|]
operator|=
operator|new
name|MultiSearchTemplateResponse
operator|.
name|Item
argument_list|(
name|searchTemplateResponse
argument_list|,
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|searchRequest
operator|!=
literal|null
condition|)
block|{
name|multiSearchRequest
operator|.
name|add
argument_list|(
name|searchRequest
argument_list|)
expr_stmt|;
name|originalSlots
operator|.
name|add
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
name|multiSearchAction
operator|.
name|execute
argument_list|(
name|multiSearchRequest
argument_list|,
name|ActionListener
operator|.
name|wrap
argument_list|(
name|r
lambda|->
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|getResponses
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|MultiSearchResponse
operator|.
name|Item
name|item
init|=
name|r
operator|.
name|getResponses
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|int
name|originalSlot
init|=
name|originalSlots
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|isFailure
argument_list|()
condition|)
block|{
name|items
index|[
name|originalSlot
index|]
operator|=
operator|new
name|MultiSearchTemplateResponse
operator|.
name|Item
argument_list|(
literal|null
argument_list|,
name|item
operator|.
name|getFailure
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|items
index|[
name|originalSlot
index|]
operator|.
name|getResponse
argument_list|()
operator|.
name|setResponse
argument_list|(
name|item
operator|.
name|getResponse
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|listener
operator|.
name|onResponse
argument_list|(
operator|new
name|MultiSearchTemplateResponse
argument_list|(
name|items
argument_list|)
argument_list|)
expr_stmt|;
block|}
argument_list|,
name|listener
operator|::
name|onFailure
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

