begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.ingest.common
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|common
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|BytesStreamOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|StreamInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|ToXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|json
operator|.
name|JsonXContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|IsNull
operator|.
name|nullValue
import|;
end_import

begin_class
DECL|class|GrokProcessorGetActionTests
specifier|public
class|class
name|GrokProcessorGetActionTests
extends|extends
name|ESTestCase
block|{
DECL|field|TEST_PATTERNS
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|TEST_PATTERNS
init|=
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"PATTERN"
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
DECL|method|testRequest
specifier|public
name|void
name|testRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|GrokProcessorGetAction
operator|.
name|Request
name|request
init|=
operator|new
name|GrokProcessorGetAction
operator|.
name|Request
argument_list|()
decl_stmt|;
name|BytesStreamOutput
name|out
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|request
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|StreamInput
name|streamInput
init|=
name|out
operator|.
name|bytes
argument_list|()
operator|.
name|streamInput
argument_list|()
decl_stmt|;
name|GrokProcessorGetAction
operator|.
name|Request
name|otherRequest
init|=
operator|new
name|GrokProcessorGetAction
operator|.
name|Request
argument_list|()
decl_stmt|;
name|otherRequest
operator|.
name|readFrom
argument_list|(
name|streamInput
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|otherRequest
operator|.
name|validate
argument_list|()
argument_list|,
name|nullValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testResponseSerialization
specifier|public
name|void
name|testResponseSerialization
parameter_list|()
throws|throws
name|Exception
block|{
name|GrokProcessorGetAction
operator|.
name|Response
name|response
init|=
operator|new
name|GrokProcessorGetAction
operator|.
name|Response
argument_list|(
name|TEST_PATTERNS
argument_list|)
decl_stmt|;
name|BytesStreamOutput
name|out
init|=
operator|new
name|BytesStreamOutput
argument_list|()
decl_stmt|;
name|response
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|StreamInput
name|streamInput
init|=
name|out
operator|.
name|bytes
argument_list|()
operator|.
name|streamInput
argument_list|()
decl_stmt|;
name|GrokProcessorGetAction
operator|.
name|Response
name|otherResponse
init|=
operator|new
name|GrokProcessorGetAction
operator|.
name|Response
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|otherResponse
operator|.
name|readFrom
argument_list|(
name|streamInput
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getGrokPatterns
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|TEST_PATTERNS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getGrokPatterns
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|otherResponse
operator|.
name|getGrokPatterns
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testResponseToXContent
specifier|public
name|void
name|testResponseToXContent
parameter_list|()
throws|throws
name|Exception
block|{
name|GrokProcessorGetAction
operator|.
name|Response
name|response
init|=
operator|new
name|GrokProcessorGetAction
operator|.
name|Response
argument_list|(
name|TEST_PATTERNS
argument_list|)
decl_stmt|;
try|try
init|(
name|XContentBuilder
name|builder
init|=
name|JsonXContent
operator|.
name|contentBuilder
argument_list|()
init|)
block|{
name|response
operator|.
name|toXContent
argument_list|(
name|builder
argument_list|,
name|ToXContent
operator|.
name|EMPTY_PARAMS
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|converted
init|=
name|XContentHelper
operator|.
name|convertToMap
argument_list|(
name|builder
operator|.
name|bytes
argument_list|()
argument_list|,
literal|false
argument_list|,
name|builder
operator|.
name|contentType
argument_list|()
argument_list|)
operator|.
name|v2
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|patterns
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
operator|)
name|converted
operator|.
name|get
argument_list|(
literal|"patterns"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|patterns
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|patterns
operator|.
name|get
argument_list|(
literal|"PATTERN"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

