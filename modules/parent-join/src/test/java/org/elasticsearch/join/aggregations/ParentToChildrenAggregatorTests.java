begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.join.aggregations
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|join
operator|.
name|aggregations
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedNumericDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|RandomIndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|MatchAllDocsQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermInSetQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|metadata
operator|.
name|IndexMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|collect
operator|.
name|Tuple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|lucene
operator|.
name|index
operator|.
name|ElasticsearchDirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|ContentPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|DocumentMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MappedFieldType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|Mapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|MapperService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|NumberFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|ParentFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|TypeFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|Uid
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|mapper
operator|.
name|UidFieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|shard
operator|.
name|ShardId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|AggregatorTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|min
operator|.
name|InternalMin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|metrics
operator|.
name|min
operator|.
name|MinAggregationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Consumer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|ParentToChildrenAggregatorTests
specifier|public
class|class
name|ParentToChildrenAggregatorTests
extends|extends
name|AggregatorTestCase
block|{
DECL|field|CHILD_TYPE
specifier|private
specifier|static
specifier|final
name|String
name|CHILD_TYPE
init|=
literal|"child_type"
decl_stmt|;
DECL|field|PARENT_TYPE
specifier|private
specifier|static
specifier|final
name|String
name|PARENT_TYPE
init|=
literal|"parent_type"
decl_stmt|;
DECL|method|testNoDocs
specifier|public
name|void
name|testNoDocs
parameter_list|()
throws|throws
name|IOException
block|{
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
decl_stmt|;
comment|// intentionally not writing any docs
name|indexWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|IndexReader
name|indexReader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
decl_stmt|;
name|testCase
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|newSearcher
argument_list|(
name|indexReader
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|,
name|parentToChild
lambda|->
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|parentToChild
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|,
operator|(
operator|(
name|InternalMin
operator|)
name|parentToChild
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"in_child"
argument_list|)
operator|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|Double
operator|.
name|MIN_VALUE
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|indexReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|directory
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testParentChild
specifier|public
name|void
name|testParentChild
parameter_list|()
throws|throws
name|IOException
block|{
name|Directory
name|directory
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|RandomIndexWriter
name|indexWriter
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Tuple
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
argument_list|>
name|expectedParentChildRelations
init|=
name|setupIndex
argument_list|(
name|indexWriter
argument_list|)
decl_stmt|;
name|indexWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|IndexReader
name|indexReader
init|=
name|ElasticsearchDirectoryReader
operator|.
name|wrap
argument_list|(
name|DirectoryReader
operator|.
name|open
argument_list|(
name|directory
argument_list|)
argument_list|,
operator|new
name|ShardId
argument_list|(
operator|new
name|Index
argument_list|(
literal|"foo"
argument_list|,
literal|"_na_"
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
comment|// TODO set "maybeWrap" to true for IndexSearcher once #23338 is resolved
name|IndexSearcher
name|indexSearcher
init|=
name|newSearcher
argument_list|(
name|indexReader
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|testCase
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|indexSearcher
argument_list|,
name|child
lambda|->
block|{
name|int
name|expectedTotalChildren
init|=
literal|0
decl_stmt|;
name|int
name|expectedMinValue
init|=
name|Integer
operator|.
name|MAX_VALUE
decl_stmt|;
for|for
control|(
name|Tuple
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
name|expectedValues
range|:
name|expectedParentChildRelations
operator|.
name|values
argument_list|()
control|)
block|{
name|expectedTotalChildren
operator|+=
name|expectedValues
operator|.
name|v1
argument_list|()
expr_stmt|;
name|expectedMinValue
operator|=
name|Math
operator|.
name|min
argument_list|(
name|expectedMinValue
argument_list|,
name|expectedValues
operator|.
name|v2
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|expectedTotalChildren
argument_list|,
name|child
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedMinValue
argument_list|,
operator|(
operator|(
name|InternalMin
operator|)
name|child
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"in_child"
argument_list|)
operator|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|Double
operator|.
name|MIN_VALUE
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|parent
range|:
name|expectedParentChildRelations
operator|.
name|keySet
argument_list|()
control|)
block|{
name|testCase
argument_list|(
operator|new
name|TermInSetQuery
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|Uid
operator|.
name|createUid
argument_list|(
name|PARENT_TYPE
argument_list|,
name|parent
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|indexSearcher
argument_list|,
name|child
lambda|->
block|{
name|assertEquals
argument_list|(
operator|(
name|long
operator|)
name|expectedParentChildRelations
operator|.
name|get
argument_list|(
name|parent
argument_list|)
operator|.
name|v1
argument_list|()
argument_list|,
name|child
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedParentChildRelations
operator|.
name|get
argument_list|(
name|parent
argument_list|)
operator|.
name|v2
argument_list|()
argument_list|,
operator|(
operator|(
name|InternalMin
operator|)
name|child
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"in_child"
argument_list|)
operator|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|Double
operator|.
name|MIN_VALUE
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
name|indexReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|directory
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|setupIndex
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|Tuple
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
argument_list|>
name|setupIndex
parameter_list|(
name|RandomIndexWriter
name|iw
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Tuple
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
argument_list|>
name|expectedValues
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|numParents
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numParents
condition|;
name|i
operator|++
control|)
block|{
name|String
name|parent
init|=
literal|"parent"
operator|+
name|i
decl_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|createParentDocument
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|numChildren
init|=
name|randomIntBetween
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|int
name|minValue
init|=
name|Integer
operator|.
name|MAX_VALUE
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|numChildren
condition|;
name|c
operator|++
control|)
block|{
name|int
name|randomValue
init|=
name|randomIntBetween
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|minValue
operator|=
name|Math
operator|.
name|min
argument_list|(
name|minValue
argument_list|,
name|randomValue
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|createChildDocument
argument_list|(
literal|"child"
operator|+
name|c
operator|+
literal|"_"
operator|+
name|parent
argument_list|,
name|parent
argument_list|,
name|randomValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|expectedValues
operator|.
name|put
argument_list|(
name|parent
argument_list|,
operator|new
name|Tuple
argument_list|<>
argument_list|(
name|numChildren
argument_list|,
name|minValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|expectedValues
return|;
block|}
DECL|method|createParentDocument
specifier|private
specifier|static
name|List
argument_list|<
name|Field
argument_list|>
name|createParentDocument
parameter_list|(
name|String
name|id
parameter_list|)
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|StringField
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
name|PARENT_TYPE
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|,
operator|new
name|StringField
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
name|Uid
operator|.
name|createUid
argument_list|(
name|PARENT_TYPE
argument_list|,
name|id
argument_list|)
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|,
name|createJoinField
argument_list|(
name|PARENT_TYPE
argument_list|,
name|id
argument_list|)
argument_list|)
return|;
block|}
DECL|method|createChildDocument
specifier|private
specifier|static
name|List
argument_list|<
name|Field
argument_list|>
name|createChildDocument
parameter_list|(
name|String
name|childId
parameter_list|,
name|String
name|parentId
parameter_list|,
name|int
name|value
parameter_list|)
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|StringField
argument_list|(
name|TypeFieldMapper
operator|.
name|NAME
argument_list|,
name|CHILD_TYPE
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|,
operator|new
name|StringField
argument_list|(
name|UidFieldMapper
operator|.
name|NAME
argument_list|,
name|Uid
operator|.
name|createUid
argument_list|(
name|CHILD_TYPE
argument_list|,
name|childId
argument_list|)
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|,
operator|new
name|SortedNumericDocValuesField
argument_list|(
literal|"number"
argument_list|,
name|value
argument_list|)
argument_list|,
name|createJoinField
argument_list|(
name|PARENT_TYPE
argument_list|,
name|parentId
argument_list|)
argument_list|)
return|;
block|}
DECL|method|createJoinField
specifier|private
specifier|static
name|SortedDocValuesField
name|createJoinField
parameter_list|(
name|String
name|parentType
parameter_list|,
name|String
name|id
parameter_list|)
block|{
return|return
operator|new
name|SortedDocValuesField
argument_list|(
name|ParentFieldMapper
operator|.
name|joinField
argument_list|(
name|parentType
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|id
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|mapperServiceMock
specifier|protected
name|MapperService
name|mapperServiceMock
parameter_list|()
block|{
name|MapperService
name|mapperService
init|=
name|mock
argument_list|(
name|MapperService
operator|.
name|class
argument_list|)
decl_stmt|;
name|DocumentMapper
name|childDocMapper
init|=
name|mock
argument_list|(
name|DocumentMapper
operator|.
name|class
argument_list|)
decl_stmt|;
name|DocumentMapper
name|parentDocMapper
init|=
name|mock
argument_list|(
name|DocumentMapper
operator|.
name|class
argument_list|)
decl_stmt|;
name|ParentFieldMapper
name|parentFieldMapper
init|=
name|createParentFieldMapper
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|childDocMapper
operator|.
name|parentFieldMapper
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|parentFieldMapper
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|parentDocMapper
operator|.
name|parentFieldMapper
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|parentFieldMapper
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mapperService
operator|.
name|documentMapper
argument_list|(
name|CHILD_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|childDocMapper
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mapperService
operator|.
name|documentMapper
argument_list|(
name|PARENT_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|parentDocMapper
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mapperService
operator|.
name|docMappers
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|DocumentMapper
index|[]
block|{
name|childDocMapper
block|,
name|parentDocMapper
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|parentDocMapper
operator|.
name|typeFilter
argument_list|(
name|Mockito
operator|.
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TypeFieldMapper
operator|.
name|TypesQuery
argument_list|(
operator|new
name|BytesRef
argument_list|(
name|PARENT_TYPE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|childDocMapper
operator|.
name|typeFilter
argument_list|(
name|Mockito
operator|.
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TypeFieldMapper
operator|.
name|TypesQuery
argument_list|(
operator|new
name|BytesRef
argument_list|(
name|CHILD_TYPE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|mapperService
return|;
block|}
DECL|method|createParentFieldMapper
specifier|private
specifier|static
name|ParentFieldMapper
name|createParentFieldMapper
parameter_list|()
block|{
name|Settings
name|settings
init|=
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|IndexMetaData
operator|.
name|SETTING_VERSION_CREATED
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
operator|new
name|ParentFieldMapper
operator|.
name|Builder
argument_list|(
literal|"parent"
argument_list|)
operator|.
name|type
argument_list|(
name|PARENT_TYPE
argument_list|)
operator|.
name|build
argument_list|(
operator|new
name|Mapper
operator|.
name|BuilderContext
argument_list|(
name|settings
argument_list|,
operator|new
name|ContentPath
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
DECL|method|testCase
specifier|private
name|void
name|testCase
parameter_list|(
name|Query
name|query
parameter_list|,
name|IndexSearcher
name|indexSearcher
parameter_list|,
name|Consumer
argument_list|<
name|InternalChildren
argument_list|>
name|verify
parameter_list|)
throws|throws
name|IOException
block|{
name|ChildrenAggregationBuilder
name|aggregationBuilder
init|=
operator|new
name|ChildrenAggregationBuilder
argument_list|(
literal|"_name"
argument_list|,
name|CHILD_TYPE
argument_list|)
decl_stmt|;
name|aggregationBuilder
operator|.
name|subAggregation
argument_list|(
operator|new
name|MinAggregationBuilder
argument_list|(
literal|"in_child"
argument_list|)
operator|.
name|field
argument_list|(
literal|"number"
argument_list|)
argument_list|)
expr_stmt|;
name|MappedFieldType
name|fieldType
init|=
operator|new
name|NumberFieldMapper
operator|.
name|NumberFieldType
argument_list|(
name|NumberFieldMapper
operator|.
name|NumberType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|fieldType
operator|.
name|setName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|InternalChildren
name|result
init|=
name|search
argument_list|(
name|indexSearcher
argument_list|,
name|query
argument_list|,
name|aggregationBuilder
argument_list|,
name|fieldType
argument_list|)
decl_stmt|;
name|verify
operator|.
name|accept
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

