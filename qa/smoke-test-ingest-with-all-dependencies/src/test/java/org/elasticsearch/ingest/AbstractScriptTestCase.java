begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.ingest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|Script
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|TemplateScript
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|mustache
operator|.
name|MustacheScriptEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|Script
operator|.
name|DEFAULT_TEMPLATE_LANG
import|;
end_import

begin_class
DECL|class|AbstractScriptTestCase
specifier|public
specifier|abstract
class|class
name|AbstractScriptTestCase
extends|extends
name|ESTestCase
block|{
DECL|field|scriptService
specifier|protected
name|ScriptService
name|scriptService
decl_stmt|;
annotation|@
name|Before
DECL|method|init
specifier|public
name|void
name|init
parameter_list|()
throws|throws
name|Exception
block|{
name|MustacheScriptEngine
name|engine
init|=
operator|new
name|MustacheScriptEngine
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|ScriptEngine
argument_list|>
name|engines
init|=
name|Collections
operator|.
name|singletonMap
argument_list|(
name|engine
operator|.
name|getType
argument_list|()
argument_list|,
name|engine
argument_list|)
decl_stmt|;
name|scriptService
operator|=
operator|new
name|ScriptService
argument_list|(
name|Settings
operator|.
name|EMPTY
argument_list|,
name|engines
argument_list|,
name|ScriptModule
operator|.
name|CORE_CONTEXTS
argument_list|)
expr_stmt|;
block|}
DECL|method|compile
specifier|protected
name|TemplateScript
operator|.
name|Factory
name|compile
parameter_list|(
name|String
name|template
parameter_list|)
block|{
name|Script
name|script
init|=
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
name|DEFAULT_TEMPLATE_LANG
argument_list|,
name|template
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|scriptService
operator|.
name|compile
argument_list|(
name|script
argument_list|,
name|TemplateScript
operator|.
name|CONTEXT
argument_list|)
return|;
block|}
block|}
end_class

end_unit

