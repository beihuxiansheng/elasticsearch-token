begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.bootstrap
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|bootstrap
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cli
operator|.
name|ExitCodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|SuppressForbidden
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|hasEntry
import|;
end_import

begin_class
DECL|class|EvilElasticsearchCliTests
specifier|public
class|class
name|EvilElasticsearchCliTests
extends|extends
name|ESElasticsearchCliTestCase
block|{
annotation|@
name|SuppressForbidden
argument_list|(
name|reason
operator|=
literal|"manipulates system properties for testing"
argument_list|)
DECL|method|testPathHome
specifier|public
name|void
name|testPathHome
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|pathHome
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"es.path.home"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|value
init|=
name|randomAsciiOfLength
argument_list|(
literal|16
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"es.path.home"
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|runTest
argument_list|(
name|ExitCodes
operator|.
name|OK
argument_list|,
literal|true
argument_list|,
name|output
lambda|->
block|{}
argument_list|,
parameter_list|(
name|foreground
parameter_list|,
name|pidFile
parameter_list|,
name|quiet
parameter_list|,
name|esSettings
parameter_list|)
lambda|->
block|{
name|assertThat
argument_list|(
name|esSettings
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|esSettings
argument_list|,
name|hasEntry
argument_list|(
literal|"path.home"
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|System
operator|.
name|clearProperty
argument_list|(
literal|"es.path.home"
argument_list|)
expr_stmt|;
specifier|final
name|String
name|commandLineValue
init|=
name|randomAsciiOfLength
argument_list|(
literal|16
argument_list|)
decl_stmt|;
name|runTest
argument_list|(
name|ExitCodes
operator|.
name|OK
argument_list|,
literal|true
argument_list|,
name|output
lambda|->
block|{}
argument_list|,
parameter_list|(
name|foreground
parameter_list|,
name|pidFile
parameter_list|,
name|quiet
parameter_list|,
name|esSettings
parameter_list|)
lambda|->
block|{
name|assertThat
argument_list|(
name|esSettings
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|esSettings
argument_list|,
name|hasEntry
argument_list|(
literal|"path.home"
argument_list|,
name|commandLineValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
argument_list|,
literal|"-Epath.home="
operator|+
name|commandLineValue
argument_list|)
expr_stmt|;
if|if
condition|(
name|pathHome
operator|!=
literal|null
condition|)
name|System
operator|.
name|setProperty
argument_list|(
literal|"es.path.home"
argument_list|,
name|pathHome
argument_list|)
expr_stmt|;
else|else
name|System
operator|.
name|clearProperty
argument_list|(
literal|"es.path.home"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

