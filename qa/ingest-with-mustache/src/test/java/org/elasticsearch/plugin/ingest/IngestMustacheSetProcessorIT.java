begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.plugin.ingest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|plugin
operator|.
name|ingest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|core
operator|.
name|IngestDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|core
operator|.
name|ValueSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|core
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ingest
operator|.
name|processor
operator|.
name|SetProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|instanceOf
import|;
end_import

begin_class
DECL|class|IngestMustacheSetProcessorIT
specifier|public
class|class
name|IngestMustacheSetProcessorIT
extends|extends
name|AbstractMustacheTests
block|{
DECL|method|testExpression
specifier|public
name|void
name|testExpression
parameter_list|()
throws|throws
name|Exception
block|{
name|SetProcessor
name|processor
init|=
name|createSetProcessor
argument_list|(
literal|"_index"
argument_list|,
literal|"text {{var}}"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|processor
operator|.
name|getValue
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ValueSource
operator|.
name|TemplatedValue
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|processor
operator|.
name|getValue
argument_list|()
operator|.
name|copyAndResolve
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"var"
argument_list|,
literal|"_value"
argument_list|)
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|"text _value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSetMetadataWithTemplates
specifier|public
name|void
name|testSetMetadataWithTemplates
parameter_list|()
throws|throws
name|Exception
block|{
name|IngestDocument
operator|.
name|MetaData
name|randomMetaData
init|=
name|randomFrom
argument_list|(
name|IngestDocument
operator|.
name|MetaData
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|Processor
name|processor
init|=
name|createSetProcessor
argument_list|(
name|randomMetaData
operator|.
name|getFieldName
argument_list|()
argument_list|,
literal|"_value {{field}}"
argument_list|)
decl_stmt|;
name|IngestDocument
name|ingestDocument
init|=
name|createIngestDocument
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
argument_list|)
decl_stmt|;
name|processor
operator|.
name|execute
argument_list|(
name|ingestDocument
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ingestDocument
operator|.
name|getFieldValue
argument_list|(
name|randomMetaData
operator|.
name|getFieldName
argument_list|()
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
literal|"_value value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSetWithTemplates
specifier|public
name|void
name|testSetWithTemplates
parameter_list|()
throws|throws
name|Exception
block|{
name|IngestDocument
operator|.
name|MetaData
name|randomMetaData
init|=
name|randomFrom
argument_list|(
name|IngestDocument
operator|.
name|MetaData
operator|.
name|INDEX
argument_list|,
name|IngestDocument
operator|.
name|MetaData
operator|.
name|TYPE
argument_list|,
name|IngestDocument
operator|.
name|MetaData
operator|.
name|ID
argument_list|)
decl_stmt|;
name|Processor
name|processor
init|=
name|createSetProcessor
argument_list|(
literal|"field{{_type}}"
argument_list|,
literal|"_value {{"
operator|+
name|randomMetaData
operator|.
name|getFieldName
argument_list|()
operator|+
literal|"}}"
argument_list|)
decl_stmt|;
name|IngestDocument
name|ingestDocument
init|=
name|createIngestDocument
argument_list|(
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
decl_stmt|;
name|processor
operator|.
name|execute
argument_list|(
name|ingestDocument
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ingestDocument
operator|.
name|getFieldValue
argument_list|(
literal|"field_type"
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|Matchers
operator|.
name|equalTo
argument_list|(
literal|"_value "
operator|+
name|ingestDocument
operator|.
name|getFieldValue
argument_list|(
name|randomMetaData
operator|.
name|getFieldName
argument_list|()
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|createSetProcessor
specifier|private
name|SetProcessor
name|createSetProcessor
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|Object
name|fieldValue
parameter_list|)
throws|throws
name|Exception
block|{
name|SetProcessor
operator|.
name|Factory
name|factory
init|=
operator|new
name|SetProcessor
operator|.
name|Factory
argument_list|(
name|templateService
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
literal|"field"
argument_list|,
name|fieldName
argument_list|)
expr_stmt|;
name|config
operator|.
name|put
argument_list|(
literal|"value"
argument_list|,
name|fieldValue
argument_list|)
expr_stmt|;
return|return
name|factory
operator|.
name|create
argument_list|(
name|config
argument_list|)
return|;
block|}
DECL|method|createIngestDocument
specifier|private
name|IngestDocument
name|createIngestDocument
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|source
parameter_list|)
block|{
return|return
operator|new
name|IngestDocument
argument_list|(
literal|"_index"
argument_list|,
literal|"_type"
argument_list|,
literal|"_id"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|source
argument_list|)
return|;
block|}
block|}
end_class

end_unit

