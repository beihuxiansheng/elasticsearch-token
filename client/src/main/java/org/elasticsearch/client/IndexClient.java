begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.elasticsearch.client
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * Created by simon on 2/16/16.  */
end_comment

begin_class
DECL|class|IndexClient
specifier|public
class|class
name|IndexClient
block|{
DECL|field|client
specifier|private
specifier|final
name|RestClient
name|client
decl_stmt|;
DECL|method|IndexClient
specifier|public
name|IndexClient
parameter_list|(
name|RestClient
name|client
parameter_list|)
block|{
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
block|}
DECL|method|delete
specifier|public
name|void
name|delete
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|id
parameter_list|)
throws|throws
name|IOException
block|{
name|delete
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|id
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|delete
specifier|public
name|void
name|delete
parameter_list|(
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|id
parameter_list|,
name|DeleteOptions
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|index
argument_list|,
literal|"index must not be null"
argument_list|)
expr_stmt|;
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|type
argument_list|,
literal|"type must not be null"
argument_list|)
expr_stmt|;
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|id
argument_list|,
literal|"id must not be null"
argument_list|)
expr_stmt|;
name|String
name|deleteEndpoint
init|=
name|String
operator|.
name|format
argument_list|(
literal|"/%s/%s/%s"
argument_list|,
name|index
argument_list|,
name|type
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|client
operator|.
name|httpDelete
argument_list|(
name|deleteEndpoint
argument_list|,
name|params
operator|==
literal|null
condition|?
name|Collections
operator|.
name|emptyMap
argument_list|()
else|:
name|params
operator|.
name|options
argument_list|)
expr_stmt|;
block|}
DECL|class|DeleteOptions
specifier|public
class|class
name|DeleteOptions
block|{
DECL|field|options
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|options
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|/** Specific write consistency setting for the operation one of "one", "quorum", "all"*/
DECL|method|consistency
specifier|public
name|void
name|consistency
parameter_list|(
name|String
name|consistency
parameter_list|)
block|{
name|options
operator|.
name|put
argument_list|(
literal|"consistency"
argument_list|,
name|consistency
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
comment|/** ID of parent document */
DECL|method|parent
specifier|public
name|void
name|parent
parameter_list|(
name|String
name|parent
parameter_list|)
block|{
name|options
operator|.
name|put
argument_list|(
literal|"parent"
argument_list|,
name|parent
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
comment|/** Refresh the index after performing the operation */
DECL|method|refresh
specifier|public
name|void
name|refresh
parameter_list|(
name|Boolean
name|refresh
parameter_list|)
block|{
name|options
operator|.
name|put
argument_list|(
literal|"refresh"
argument_list|,
name|refresh
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
comment|/** Specific routing value */
DECL|method|routing
specifier|public
name|void
name|routing
parameter_list|(
name|String
name|routing
parameter_list|)
block|{
name|options
operator|.
name|put
argument_list|(
literal|"routing"
argument_list|,
name|routing
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
comment|/** Explicit version number for concurrency control */
DECL|method|version
specifier|public
name|void
name|version
parameter_list|(
name|Number
name|version
parameter_list|)
block|{
name|options
operator|.
name|put
argument_list|(
literal|"version"
argument_list|,
name|version
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
comment|/** Specific version type one of "internal", "external", "external_gte", "force" */
DECL|method|versionType
specifier|public
name|void
name|versionType
parameter_list|(
name|String
name|versionType
parameter_list|)
block|{
name|options
operator|.
name|put
argument_list|(
literal|"version_type"
argument_list|,
name|versionType
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
comment|/** Explicit operation timeout */
DECL|method|timeout
specifier|public
name|void
name|timeout
parameter_list|(
name|String
name|timeout
parameter_list|)
block|{
name|options
operator|.
name|put
argument_list|(
literal|"timeout"
argument_list|,
name|timeout
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
block|}
block|}
end_class

end_unit

