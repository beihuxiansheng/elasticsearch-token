begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.client
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpHost
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|containsInAnyOrder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_comment
comment|/**  * {@link org.elasticsearch.client.RestClient.FailureListener} impl that allows to track when it gets called for which host.  */
end_comment

begin_class
DECL|class|HostsTrackingFailureListener
class|class
name|HostsTrackingFailureListener
extends|extends
name|RestClient
operator|.
name|FailureListener
block|{
DECL|field|hosts
specifier|private
specifier|volatile
name|Set
argument_list|<
name|HttpHost
argument_list|>
name|hosts
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|onFailure
specifier|public
name|void
name|onFailure
parameter_list|(
name|HttpHost
name|host
parameter_list|)
block|{
name|hosts
operator|.
name|add
argument_list|(
name|host
argument_list|)
expr_stmt|;
block|}
DECL|method|assertCalled
name|void
name|assertCalled
parameter_list|(
name|HttpHost
modifier|...
name|hosts
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|hosts
operator|.
name|length
argument_list|,
name|this
operator|.
name|hosts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|this
operator|.
name|hosts
argument_list|,
name|containsInAnyOrder
argument_list|(
name|hosts
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|hosts
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|method|assertNotCalled
name|void
name|assertNotCalled
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|hosts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

