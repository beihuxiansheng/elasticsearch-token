begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.client.benchmark.rest
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|benchmark
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpHost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|config
operator|.
name|RequestConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|conn
operator|.
name|ConnectionKeepAliveStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|ContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|StringEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|nio
operator|.
name|client
operator|.
name|HttpAsyncClientBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|message
operator|.
name|BasicHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|nio
operator|.
name|entity
operator|.
name|NStringEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|RestClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|RestClientBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|benchmark
operator|.
name|AbstractBenchmark
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|benchmark
operator|.
name|ops
operator|.
name|bulk
operator|.
name|BulkRequestExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|benchmark
operator|.
name|ops
operator|.
name|search
operator|.
name|SearchRequestExecutor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_class
DECL|class|RestClientBenchmark
specifier|public
specifier|final
class|class
name|RestClientBenchmark
extends|extends
name|AbstractBenchmark
argument_list|<
name|RestClient
argument_list|>
block|{
DECL|method|main
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|RestClientBenchmark
name|b
init|=
operator|new
name|RestClientBenchmark
argument_list|()
decl_stmt|;
name|b
operator|.
name|run
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|client
specifier|protected
name|RestClient
name|client
parameter_list|(
name|String
name|benchmarkTargetHost
parameter_list|)
block|{
return|return
name|RestClient
operator|.
name|builder
argument_list|(
operator|new
name|HttpHost
argument_list|(
name|benchmarkTargetHost
argument_list|,
literal|9200
argument_list|)
argument_list|)
operator|.
name|setHttpClientConfigCallback
argument_list|(
name|b
lambda|->
name|b
operator|.
name|setDefaultHeaders
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
operator|new
name|BasicHeader
argument_list|(
name|HttpHeaders
operator|.
name|ACCEPT_ENCODING
argument_list|,
literal|"gzip"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|setRequestConfigCallback
argument_list|(
name|b
lambda|->
name|b
operator|.
name|setContentCompressionEnabled
argument_list|(
literal|true
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|bulkRequestExecutor
specifier|protected
name|BulkRequestExecutor
name|bulkRequestExecutor
parameter_list|(
name|RestClient
name|client
parameter_list|,
name|String
name|indexName
parameter_list|,
name|String
name|typeName
parameter_list|)
block|{
return|return
operator|new
name|RestBulkRequestExecutor
argument_list|(
name|client
argument_list|,
name|indexName
argument_list|,
name|typeName
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|searchRequestExecutor
specifier|protected
name|SearchRequestExecutor
name|searchRequestExecutor
parameter_list|(
name|RestClient
name|client
parameter_list|,
name|String
name|indexName
parameter_list|)
block|{
return|return
operator|new
name|RestSearchRequestExecutor
argument_list|(
name|client
argument_list|,
name|indexName
argument_list|)
return|;
block|}
DECL|class|RestBulkRequestExecutor
specifier|private
specifier|static
specifier|final
class|class
name|RestBulkRequestExecutor
implements|implements
name|BulkRequestExecutor
block|{
DECL|field|client
specifier|private
specifier|final
name|RestClient
name|client
decl_stmt|;
DECL|field|actionMetaData
specifier|private
specifier|final
name|String
name|actionMetaData
decl_stmt|;
DECL|method|RestBulkRequestExecutor
name|RestBulkRequestExecutor
parameter_list|(
name|RestClient
name|client
parameter_list|,
name|String
name|index
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
name|this
operator|.
name|actionMetaData
operator|=
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"{ \"index\" : { \"_index\" : \"%s\", \"_type\" : \"%s\" } }%n"
argument_list|,
name|index
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|bulkIndex
specifier|public
name|boolean
name|bulkIndex
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|bulkData
parameter_list|)
block|{
name|StringBuilder
name|bulkRequestBody
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|bulkItem
range|:
name|bulkData
control|)
block|{
name|bulkRequestBody
operator|.
name|append
argument_list|(
name|actionMetaData
argument_list|)
expr_stmt|;
name|bulkRequestBody
operator|.
name|append
argument_list|(
name|bulkItem
argument_list|)
expr_stmt|;
name|bulkRequestBody
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
block|}
name|HttpEntity
name|entity
init|=
operator|new
name|NStringEntity
argument_list|(
name|bulkRequestBody
operator|.
name|toString
argument_list|()
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
try|try
block|{
name|Response
name|response
init|=
name|client
operator|.
name|performRequest
argument_list|(
literal|"POST"
argument_list|,
literal|"/geonames/type/_noop_bulk"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|entity
argument_list|)
decl_stmt|;
return|return
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
operator|==
name|HttpStatus
operator|.
name|SC_OK
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ElasticsearchException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|RestSearchRequestExecutor
specifier|private
specifier|static
specifier|final
class|class
name|RestSearchRequestExecutor
implements|implements
name|SearchRequestExecutor
block|{
DECL|field|client
specifier|private
specifier|final
name|RestClient
name|client
decl_stmt|;
DECL|field|endpoint
specifier|private
specifier|final
name|String
name|endpoint
decl_stmt|;
DECL|method|RestSearchRequestExecutor
specifier|private
name|RestSearchRequestExecutor
parameter_list|(
name|RestClient
name|client
parameter_list|,
name|String
name|indexName
parameter_list|)
block|{
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
name|this
operator|.
name|endpoint
operator|=
literal|"/"
operator|+
name|indexName
operator|+
literal|"/_noop_search"
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|search
specifier|public
name|boolean
name|search
parameter_list|(
name|String
name|source
parameter_list|)
block|{
name|HttpEntity
name|searchBody
init|=
operator|new
name|NStringEntity
argument_list|(
name|source
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
decl_stmt|;
try|try
block|{
name|Response
name|response
init|=
name|client
operator|.
name|performRequest
argument_list|(
literal|"GET"
argument_list|,
name|endpoint
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|searchBody
argument_list|)
decl_stmt|;
return|return
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
operator|==
name|HttpStatus
operator|.
name|SC_OK
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ElasticsearchException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
block|}
end_class

end_unit

