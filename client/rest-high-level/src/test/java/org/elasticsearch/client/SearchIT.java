begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.client
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|ContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|StringEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|nio
operator|.
name|entity
operator|.
name|NStringEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchStatusException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|ClearScrollRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|ClearScrollResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchScrollRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|TimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|MatchQueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|join
operator|.
name|aggregations
operator|.
name|Children
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|join
operator|.
name|aggregations
operator|.
name|ChildrenAggregationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|SearchHit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|range
operator|.
name|Range
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|range
operator|.
name|RangeAggregationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|Terms
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|bucket
operator|.
name|terms
operator|.
name|TermsAggregationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|matrix
operator|.
name|stats
operator|.
name|MatrixStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|matrix
operator|.
name|stats
operator|.
name|MatrixStatsAggregationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|aggregations
operator|.
name|support
operator|.
name|ValueType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|builder
operator|.
name|SearchSourceBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|sort
operator|.
name|SortOrder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|Suggest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|SuggestBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|suggest
operator|.
name|phrase
operator|.
name|PhraseSuggestionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentFactory
operator|.
name|jsonBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|both
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|containsString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|either
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThan
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|greaterThanOrEqualTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|instanceOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|lessThan
import|;
end_import

begin_class
DECL|class|SearchIT
specifier|public
class|class
name|SearchIT
extends|extends
name|ESRestHighLevelClientTestCase
block|{
annotation|@
name|Before
DECL|method|indexDocuments
specifier|public
name|void
name|indexDocuments
parameter_list|()
throws|throws
name|IOException
block|{
name|StringEntity
name|doc1
init|=
operator|new
name|StringEntity
argument_list|(
literal|"{\"type\":\"type1\", \"num\":10, \"num2\":50}"
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"/index/type/1"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|doc1
argument_list|)
expr_stmt|;
name|StringEntity
name|doc2
init|=
operator|new
name|StringEntity
argument_list|(
literal|"{\"type\":\"type1\", \"num\":20, \"num2\":40}"
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"/index/type/2"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|doc2
argument_list|)
expr_stmt|;
name|StringEntity
name|doc3
init|=
operator|new
name|StringEntity
argument_list|(
literal|"{\"type\":\"type1\", \"num\":50, \"num2\":35}"
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"/index/type/3"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|doc3
argument_list|)
expr_stmt|;
name|StringEntity
name|doc4
init|=
operator|new
name|StringEntity
argument_list|(
literal|"{\"type\":\"type2\", \"num\":100, \"num2\":10}"
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"/index/type/4"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|doc4
argument_list|)
expr_stmt|;
name|StringEntity
name|doc5
init|=
operator|new
name|StringEntity
argument_list|(
literal|"{\"type\":\"type2\", \"num\":100, \"num2\":10}"
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"/index/type/5"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|doc5
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"POST"
argument_list|,
literal|"/index/_refresh"
argument_list|)
expr_stmt|;
block|}
DECL|method|testSearchNoQuery
specifier|public
name|void
name|testSearchNoQuery
parameter_list|()
throws|throws
name|IOException
block|{
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|()
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|execute
argument_list|(
name|searchRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|search
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchAsync
argument_list|)
decl_stmt|;
name|assertSearchHeader
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|searchResponse
operator|.
name|getAggregations
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|searchResponse
operator|.
name|getSuggest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|searchResponse
operator|.
name|getProfileResults
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|SearchHit
name|searchHit
range|:
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|searchHit
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|searchHit
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|searchHit
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
name|both
argument_list|(
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|lessThan
argument_list|(
literal|6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.0f
argument_list|,
name|searchHit
operator|.
name|getScore
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1L
argument_list|,
name|searchHit
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|searchHit
operator|.
name|getSourceAsMap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|searchHit
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|searchHit
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|searchHit
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"num"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|searchHit
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"num2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testSearchMatchQuery
specifier|public
name|void
name|testSearchMatchQuery
parameter_list|()
throws|throws
name|IOException
block|{
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|()
decl_stmt|;
name|searchRequest
operator|.
name|source
argument_list|(
operator|new
name|SearchSourceBuilder
argument_list|()
operator|.
name|query
argument_list|(
operator|new
name|MatchQueryBuilder
argument_list|(
literal|"num"
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|execute
argument_list|(
name|searchRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|search
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchAsync
argument_list|)
decl_stmt|;
name|assertSearchHeader
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|searchResponse
operator|.
name|getAggregations
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|searchResponse
operator|.
name|getSuggest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|searchResponse
operator|.
name|getProfileResults
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getMaxScore
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0f
argument_list|)
argument_list|)
expr_stmt|;
name|SearchHit
name|searchHit
init|=
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|searchHit
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|searchHit
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|searchHit
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchHit
operator|.
name|getScore
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0f
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1L
argument_list|,
name|searchHit
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|searchHit
operator|.
name|getSourceAsMap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|searchHit
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type1"
argument_list|,
name|searchHit
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|searchHit
operator|.
name|getSourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"num2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSearchWithTermsAgg
specifier|public
name|void
name|testSearchWithTermsAgg
parameter_list|()
throws|throws
name|IOException
block|{
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|()
decl_stmt|;
name|SearchSourceBuilder
name|searchSourceBuilder
init|=
operator|new
name|SearchSourceBuilder
argument_list|()
decl_stmt|;
name|searchSourceBuilder
operator|.
name|aggregation
argument_list|(
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"agg1"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|field
argument_list|(
literal|"type.keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|searchSourceBuilder
operator|.
name|size
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|searchRequest
operator|.
name|source
argument_list|(
name|searchSourceBuilder
argument_list|)
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|execute
argument_list|(
name|searchRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|search
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchAsync
argument_list|)
decl_stmt|;
name|assertSearchHeader
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|searchResponse
operator|.
name|getSuggest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|searchResponse
operator|.
name|getProfileResults
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0f
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getMaxScore
argument_list|()
argument_list|,
literal|0f
argument_list|)
expr_stmt|;
name|Terms
name|termsAgg
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"agg1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"agg1"
argument_list|,
name|termsAgg
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|termsAgg
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Terms
operator|.
name|Bucket
name|type1
init|=
name|termsAgg
operator|.
name|getBucketByKey
argument_list|(
literal|"type1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|type1
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|type1
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Terms
operator|.
name|Bucket
name|type2
init|=
name|termsAgg
operator|.
name|getBucketByKey
argument_list|(
literal|"type2"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|type2
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|type2
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testSearchWithRangeAgg
specifier|public
name|void
name|testSearchWithRangeAgg
parameter_list|()
throws|throws
name|IOException
block|{
block|{
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|()
decl_stmt|;
name|SearchSourceBuilder
name|searchSourceBuilder
init|=
operator|new
name|SearchSourceBuilder
argument_list|()
decl_stmt|;
name|searchSourceBuilder
operator|.
name|aggregation
argument_list|(
operator|new
name|RangeAggregationBuilder
argument_list|(
literal|"agg1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"num"
argument_list|)
argument_list|)
expr_stmt|;
name|searchSourceBuilder
operator|.
name|size
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|searchRequest
operator|.
name|source
argument_list|(
name|searchSourceBuilder
argument_list|)
expr_stmt|;
name|ElasticsearchStatusException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchStatusException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|execute
argument_list|(
name|searchRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|search
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchAsync
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|BAD_REQUEST
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|()
decl_stmt|;
name|SearchSourceBuilder
name|searchSourceBuilder
init|=
operator|new
name|SearchSourceBuilder
argument_list|()
decl_stmt|;
name|searchSourceBuilder
operator|.
name|aggregation
argument_list|(
operator|new
name|RangeAggregationBuilder
argument_list|(
literal|"agg1"
argument_list|)
operator|.
name|field
argument_list|(
literal|"num"
argument_list|)
operator|.
name|addRange
argument_list|(
literal|"first"
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|)
operator|.
name|addRange
argument_list|(
literal|"second"
argument_list|,
literal|31
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|searchSourceBuilder
operator|.
name|size
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|searchRequest
operator|.
name|source
argument_list|(
name|searchSourceBuilder
argument_list|)
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|execute
argument_list|(
name|searchRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|search
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchAsync
argument_list|)
decl_stmt|;
name|assertSearchHeader
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|searchResponse
operator|.
name|getSuggest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|searchResponse
operator|.
name|getProfileResults
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getTook
argument_list|()
operator|.
name|nanos
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0f
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getMaxScore
argument_list|()
argument_list|,
literal|0f
argument_list|)
expr_stmt|;
name|Range
name|rangeAgg
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"agg1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"agg1"
argument_list|,
name|rangeAgg
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rangeAgg
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|rangeAgg
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"first"
argument_list|,
name|bucket
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|rangeAgg
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"second"
argument_list|,
name|bucket
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testSearchWithTermsAndRangeAgg
specifier|public
name|void
name|testSearchWithTermsAndRangeAgg
parameter_list|()
throws|throws
name|IOException
block|{
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|()
decl_stmt|;
name|SearchSourceBuilder
name|searchSourceBuilder
init|=
operator|new
name|SearchSourceBuilder
argument_list|()
decl_stmt|;
name|TermsAggregationBuilder
name|agg
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"agg1"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|field
argument_list|(
literal|"type.keyword"
argument_list|)
decl_stmt|;
name|agg
operator|.
name|subAggregation
argument_list|(
operator|new
name|RangeAggregationBuilder
argument_list|(
literal|"subagg"
argument_list|)
operator|.
name|field
argument_list|(
literal|"num"
argument_list|)
operator|.
name|addRange
argument_list|(
literal|"first"
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|)
operator|.
name|addRange
argument_list|(
literal|"second"
argument_list|,
literal|31
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|searchSourceBuilder
operator|.
name|aggregation
argument_list|(
name|agg
argument_list|)
expr_stmt|;
name|searchSourceBuilder
operator|.
name|size
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|searchRequest
operator|.
name|source
argument_list|(
name|searchSourceBuilder
argument_list|)
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|execute
argument_list|(
name|searchRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|search
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchAsync
argument_list|)
decl_stmt|;
name|assertSearchHeader
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|searchResponse
operator|.
name|getSuggest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|searchResponse
operator|.
name|getProfileResults
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0f
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getMaxScore
argument_list|()
argument_list|,
literal|0f
argument_list|)
expr_stmt|;
name|Terms
name|termsAgg
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"agg1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"agg1"
argument_list|,
name|termsAgg
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|termsAgg
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Terms
operator|.
name|Bucket
name|type1
init|=
name|termsAgg
operator|.
name|getBucketByKey
argument_list|(
literal|"type1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|type1
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|type1
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|Range
name|rangeAgg
init|=
name|type1
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"subagg"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rangeAgg
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|rangeAgg
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"first"
argument_list|,
name|bucket
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|rangeAgg
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"second"
argument_list|,
name|bucket
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|Terms
operator|.
name|Bucket
name|type2
init|=
name|termsAgg
operator|.
name|getBucketByKey
argument_list|(
literal|"type2"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|type2
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|type2
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|Range
name|rangeAgg
init|=
name|type2
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"subagg"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rangeAgg
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|rangeAgg
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"first"
argument_list|,
name|bucket
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|Range
operator|.
name|Bucket
name|bucket
init|=
name|rangeAgg
operator|.
name|getBuckets
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"second"
argument_list|,
name|bucket
operator|.
name|getKeyAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testSearchWithMatrixStats
specifier|public
name|void
name|testSearchWithMatrixStats
parameter_list|()
throws|throws
name|IOException
block|{
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|()
decl_stmt|;
name|SearchSourceBuilder
name|searchSourceBuilder
init|=
operator|new
name|SearchSourceBuilder
argument_list|()
decl_stmt|;
name|searchSourceBuilder
operator|.
name|aggregation
argument_list|(
operator|new
name|MatrixStatsAggregationBuilder
argument_list|(
literal|"agg1"
argument_list|)
operator|.
name|fields
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"num"
argument_list|,
literal|"num2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|searchSourceBuilder
operator|.
name|size
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|searchRequest
operator|.
name|source
argument_list|(
name|searchSourceBuilder
argument_list|)
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|execute
argument_list|(
name|searchRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|search
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchAsync
argument_list|)
decl_stmt|;
name|assertSearchHeader
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|searchResponse
operator|.
name|getSuggest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|searchResponse
operator|.
name|getProfileResults
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getTook
argument_list|()
operator|.
name|nanos
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0f
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getMaxScore
argument_list|()
argument_list|,
literal|0f
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|MatrixStats
name|matrixStats
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"agg1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|matrixStats
operator|.
name|getFieldCount
argument_list|(
literal|"num"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|56d
argument_list|,
name|matrixStats
operator|.
name|getMean
argument_list|(
literal|"num"
argument_list|)
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1830d
argument_list|,
name|matrixStats
operator|.
name|getVariance
argument_list|(
literal|"num"
argument_list|)
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0.09340198804973057
argument_list|,
name|matrixStats
operator|.
name|getSkewness
argument_list|(
literal|"num"
argument_list|)
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.2741646510794589
argument_list|,
name|matrixStats
operator|.
name|getKurtosis
argument_list|(
literal|"num"
argument_list|)
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|matrixStats
operator|.
name|getFieldCount
argument_list|(
literal|"num2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|29d
argument_list|,
name|matrixStats
operator|.
name|getMean
argument_list|(
literal|"num2"
argument_list|)
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|330d
argument_list|,
name|matrixStats
operator|.
name|getVariance
argument_list|(
literal|"num2"
argument_list|)
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|0.13568039346585542
argument_list|,
name|matrixStats
operator|.
name|getSkewness
argument_list|(
literal|"num2"
argument_list|)
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.3517561983471074
argument_list|,
name|matrixStats
operator|.
name|getKurtosis
argument_list|(
literal|"num2"
argument_list|)
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|767.5
argument_list|,
name|matrixStats
operator|.
name|getCovariance
argument_list|(
literal|"num"
argument_list|,
literal|"num2"
argument_list|)
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|0.9876336291667923
argument_list|,
name|matrixStats
operator|.
name|getCorrelation
argument_list|(
literal|"num"
argument_list|,
literal|"num2"
argument_list|)
argument_list|,
literal|0d
argument_list|)
expr_stmt|;
block|}
DECL|method|testSearchWithParentJoin
specifier|public
name|void
name|testSearchWithParentJoin
parameter_list|()
throws|throws
name|IOException
block|{
name|StringEntity
name|parentMapping
init|=
operator|new
name|StringEntity
argument_list|(
literal|"{\n"
operator|+
literal|"    \"mappings\": {\n"
operator|+
literal|"        \"answer\" : {\n"
operator|+
literal|"            \"_parent\" : {\n"
operator|+
literal|"                \"type\" : \"question\"\n"
operator|+
literal|"            }\n"
operator|+
literal|"        }\n"
operator|+
literal|"    },\n"
operator|+
literal|"    \"settings\": {\n"
operator|+
literal|"        \"index.mapping.single_type\": false"
operator|+
literal|"    }\n"
operator|+
literal|"}"
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"/child_example"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|parentMapping
argument_list|)
expr_stmt|;
name|StringEntity
name|questionDoc
init|=
operator|new
name|StringEntity
argument_list|(
literal|"{\n"
operator|+
literal|"    \"body\": \"<p>I have Windows 2003 server and i bought a new Windows 2008 server...\",\n"
operator|+
literal|"    \"title\": \"Whats the best way to file transfer my site from server to a newer one?\",\n"
operator|+
literal|"    \"tags\": [\n"
operator|+
literal|"        \"windows-server-2003\",\n"
operator|+
literal|"        \"windows-server-2008\",\n"
operator|+
literal|"        \"file-transfer\"\n"
operator|+
literal|"    ]\n"
operator|+
literal|"}"
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"/child_example/question/1"
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|questionDoc
argument_list|)
expr_stmt|;
name|StringEntity
name|answerDoc1
init|=
operator|new
name|StringEntity
argument_list|(
literal|"{\n"
operator|+
literal|"    \"owner\": {\n"
operator|+
literal|"        \"location\": \"Norfolk, United Kingdom\",\n"
operator|+
literal|"        \"display_name\": \"Sam\",\n"
operator|+
literal|"        \"id\": 48\n"
operator|+
literal|"    },\n"
operator|+
literal|"    \"body\": \"<p>Unfortunately you're pretty much limited to FTP...\",\n"
operator|+
literal|"    \"creation_date\": \"2009-05-04T13:45:37.030\"\n"
operator|+
literal|"}"
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"child_example/answer/1"
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|answerDoc1
argument_list|)
expr_stmt|;
name|StringEntity
name|answerDoc2
init|=
operator|new
name|StringEntity
argument_list|(
literal|"{\n"
operator|+
literal|"    \"owner\": {\n"
operator|+
literal|"        \"location\": \"Norfolk, United Kingdom\",\n"
operator|+
literal|"        \"display_name\": \"Troll\",\n"
operator|+
literal|"        \"id\": 49\n"
operator|+
literal|"    },\n"
operator|+
literal|"    \"body\": \"<p>Use Linux...\",\n"
operator|+
literal|"    \"creation_date\": \"2009-05-05T13:45:37.030\"\n"
operator|+
literal|"}"
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"/child_example/answer/2"
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"parent"
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|answerDoc2
argument_list|)
expr_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"POST"
argument_list|,
literal|"/_refresh"
argument_list|)
expr_stmt|;
name|TermsAggregationBuilder
name|leafTermAgg
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"top-names"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|field
argument_list|(
literal|"owner.display_name.keyword"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|ChildrenAggregationBuilder
name|childrenAgg
init|=
operator|new
name|ChildrenAggregationBuilder
argument_list|(
literal|"to-answers"
argument_list|,
literal|"answer"
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|leafTermAgg
argument_list|)
decl_stmt|;
name|TermsAggregationBuilder
name|termsAgg
init|=
operator|new
name|TermsAggregationBuilder
argument_list|(
literal|"top-tags"
argument_list|,
name|ValueType
operator|.
name|STRING
argument_list|)
operator|.
name|field
argument_list|(
literal|"tags.keyword"
argument_list|)
operator|.
name|size
argument_list|(
literal|10
argument_list|)
operator|.
name|subAggregation
argument_list|(
name|childrenAgg
argument_list|)
decl_stmt|;
name|SearchSourceBuilder
name|searchSourceBuilder
init|=
operator|new
name|SearchSourceBuilder
argument_list|()
decl_stmt|;
name|searchSourceBuilder
operator|.
name|size
argument_list|(
literal|0
argument_list|)
operator|.
name|aggregation
argument_list|(
name|termsAgg
argument_list|)
expr_stmt|;
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|(
literal|"child_example"
argument_list|)
decl_stmt|;
name|searchRequest
operator|.
name|source
argument_list|(
name|searchSourceBuilder
argument_list|)
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|execute
argument_list|(
name|searchRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|search
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchAsync
argument_list|)
decl_stmt|;
name|assertSearchHeader
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|searchResponse
operator|.
name|getSuggest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|searchResponse
operator|.
name|getProfileResults
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getTook
argument_list|()
operator|.
name|nanos
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0f
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getMaxScore
argument_list|()
argument_list|,
literal|0f
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Terms
name|terms
init|=
name|searchResponse
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"top-tags"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|terms
operator|.
name|getDocCountError
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|terms
operator|.
name|getSumOfOtherDocCounts
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|terms
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Terms
operator|.
name|Bucket
name|bucket
range|:
name|terms
operator|.
name|getBuckets
argument_list|()
control|)
block|{
name|assertThat
argument_list|(
name|bucket
operator|.
name|getKeyAsString
argument_list|()
argument_list|,
name|either
argument_list|(
name|equalTo
argument_list|(
literal|"file-transfer"
argument_list|)
argument_list|)
operator|.
name|or
argument_list|(
name|equalTo
argument_list|(
literal|"windows-server-2003"
argument_list|)
argument_list|)
operator|.
name|or
argument_list|(
name|equalTo
argument_list|(
literal|"windows-server-2008"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|bucket
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Children
name|children
init|=
name|bucket
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"to-answers"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|children
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|children
operator|.
name|getAggregations
argument_list|()
operator|.
name|asList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Terms
name|leafTerms
init|=
name|children
operator|.
name|getAggregations
argument_list|()
operator|.
name|get
argument_list|(
literal|"top-names"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|leafTerms
operator|.
name|getDocCountError
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|leafTerms
operator|.
name|getSumOfOtherDocCounts
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|leafTerms
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|leafTerms
operator|.
name|getBuckets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Terms
operator|.
name|Bucket
name|sam
init|=
name|leafTerms
operator|.
name|getBucketByKey
argument_list|(
literal|"Sam"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|sam
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
name|Terms
operator|.
name|Bucket
name|troll
init|=
name|leafTerms
operator|.
name|getBucketByKey
argument_list|(
literal|"Troll"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|troll
operator|.
name|getDocCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testSearchWithSuggest
specifier|public
name|void
name|testSearchWithSuggest
parameter_list|()
throws|throws
name|IOException
block|{
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|()
decl_stmt|;
name|SearchSourceBuilder
name|searchSourceBuilder
init|=
operator|new
name|SearchSourceBuilder
argument_list|()
decl_stmt|;
name|searchSourceBuilder
operator|.
name|suggest
argument_list|(
operator|new
name|SuggestBuilder
argument_list|()
operator|.
name|addSuggestion
argument_list|(
literal|"sugg1"
argument_list|,
operator|new
name|PhraseSuggestionBuilder
argument_list|(
literal|"type"
argument_list|)
argument_list|)
operator|.
name|setGlobalText
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|searchSourceBuilder
operator|.
name|size
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|searchRequest
operator|.
name|source
argument_list|(
name|searchSourceBuilder
argument_list|)
expr_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|execute
argument_list|(
name|searchRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|search
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchAsync
argument_list|)
decl_stmt|;
name|assertSearchHeader
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|searchResponse
operator|.
name|getAggregations
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|searchResponse
operator|.
name|getProfileResults
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|totalHits
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0f
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getMaxScore
argument_list|()
argument_list|,
literal|0f
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|searchResponse
operator|.
name|getSuggest
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Suggest
operator|.
name|Suggestion
argument_list|<
name|?
extends|extends
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
argument_list|<
name|?
extends|extends
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
operator|.
name|Option
argument_list|>
argument_list|>
name|sugg
init|=
name|searchResponse
operator|.
name|getSuggest
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"sugg1"
argument_list|,
name|sugg
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
argument_list|<
name|?
extends|extends
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
operator|.
name|Option
argument_list|>
name|options
range|:
name|sugg
control|)
block|{
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|options
operator|.
name|getText
argument_list|()
operator|.
name|string
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|options
operator|.
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|options
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|options
operator|.
name|getOptions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Suggest
operator|.
name|Suggestion
operator|.
name|Entry
operator|.
name|Option
name|option
range|:
name|options
control|)
block|{
name|assertThat
argument_list|(
name|option
operator|.
name|getScore
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0f
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|option
operator|.
name|getText
argument_list|()
operator|.
name|string
argument_list|()
argument_list|,
name|either
argument_list|(
name|equalTo
argument_list|(
literal|"type1"
argument_list|)
argument_list|)
operator|.
name|or
argument_list|(
name|equalTo
argument_list|(
literal|"type2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|testSearchScroll
specifier|public
name|void
name|testSearchScroll
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|XContentBuilder
name|builder
init|=
name|jsonBuilder
argument_list|()
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
name|i
argument_list|)
operator|.
name|endObject
argument_list|()
decl_stmt|;
name|HttpEntity
name|entity
init|=
operator|new
name|NStringEntity
argument_list|(
name|builder
operator|.
name|string
argument_list|()
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"test/type1/"
operator|+
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|entity
argument_list|)
expr_stmt|;
block|}
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"POST"
argument_list|,
literal|"/test/_refresh"
argument_list|)
expr_stmt|;
name|SearchSourceBuilder
name|searchSourceBuilder
init|=
operator|new
name|SearchSourceBuilder
argument_list|()
operator|.
name|size
argument_list|(
literal|35
argument_list|)
operator|.
name|sort
argument_list|(
literal|"field"
argument_list|,
name|SortOrder
operator|.
name|ASC
argument_list|)
decl_stmt|;
name|SearchRequest
name|searchRequest
init|=
operator|new
name|SearchRequest
argument_list|(
literal|"test"
argument_list|)
operator|.
name|scroll
argument_list|(
name|TimeValue
operator|.
name|timeValueMinutes
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|source
argument_list|(
name|searchSourceBuilder
argument_list|)
decl_stmt|;
name|SearchResponse
name|searchResponse
init|=
name|execute
argument_list|(
name|searchRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|search
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchAsync
argument_list|)
decl_stmt|;
try|try
block|{
name|long
name|counter
init|=
literal|0
decl_stmt|;
name|assertSearchHeader
argument_list|(
name|searchResponse
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|35
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|SearchHit
name|hit
range|:
name|searchResponse
operator|.
name|getHits
argument_list|()
control|)
block|{
name|assertThat
argument_list|(
operator|(
operator|(
name|Number
operator|)
name|hit
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
operator|)
operator|.
name|longValue
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|counter
operator|++
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|searchResponse
operator|=
name|execute
argument_list|(
operator|new
name|SearchScrollRequest
argument_list|(
name|searchResponse
operator|.
name|getScrollId
argument_list|()
argument_list|)
operator|.
name|scroll
argument_list|(
name|TimeValue
operator|.
name|timeValueMinutes
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchScroll
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchScrollAsync
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|35
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|SearchHit
name|hit
range|:
name|searchResponse
operator|.
name|getHits
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|counter
operator|++
argument_list|,
operator|(
operator|(
name|Number
operator|)
name|hit
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
operator|)
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|searchResponse
operator|=
name|execute
argument_list|(
operator|new
name|SearchScrollRequest
argument_list|(
name|searchResponse
operator|.
name|getScrollId
argument_list|()
argument_list|)
operator|.
name|scroll
argument_list|(
name|TimeValue
operator|.
name|timeValueMinutes
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchScroll
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchScrollAsync
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getHits
argument_list|()
operator|.
name|getHits
argument_list|()
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
literal|30
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|SearchHit
name|hit
range|:
name|searchResponse
operator|.
name|getHits
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|counter
operator|++
argument_list|,
operator|(
operator|(
name|Number
operator|)
name|hit
operator|.
name|getSortValues
argument_list|()
index|[
literal|0
index|]
operator|)
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ClearScrollRequest
name|clearScrollRequest
init|=
operator|new
name|ClearScrollRequest
argument_list|()
decl_stmt|;
name|clearScrollRequest
operator|.
name|addScrollId
argument_list|(
name|searchResponse
operator|.
name|getScrollId
argument_list|()
argument_list|)
expr_stmt|;
name|ClearScrollResponse
name|clearScrollResponse
init|=
name|execute
argument_list|(
name|clearScrollRequest
argument_list|,
comment|// Not using a method reference to work around https://bugs.eclipse.org/bugs/show_bug.cgi?id=517951
parameter_list|(
name|request
parameter_list|,
name|headers
parameter_list|)
lambda|->
name|highLevelClient
argument_list|()
operator|.
name|clearScroll
argument_list|(
name|request
argument_list|,
name|headers
argument_list|)
argument_list|,
parameter_list|(
name|request
parameter_list|,
name|listener
parameter_list|,
name|headers
parameter_list|)
lambda|->
name|highLevelClient
argument_list|()
operator|.
name|clearScrollAsync
argument_list|(
name|request
argument_list|,
name|listener
argument_list|,
name|headers
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|clearScrollResponse
operator|.
name|getNumFreed
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|clearScrollResponse
operator|.
name|isSucceeded
argument_list|()
argument_list|)
expr_stmt|;
name|SearchScrollRequest
name|scrollRequest
init|=
operator|new
name|SearchScrollRequest
argument_list|(
name|searchResponse
operator|.
name|getScrollId
argument_list|()
argument_list|)
operator|.
name|scroll
argument_list|(
name|TimeValue
operator|.
name|timeValueMinutes
argument_list|(
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|ElasticsearchStatusException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchStatusException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|execute
argument_list|(
name|scrollRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchScroll
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|searchScrollAsync
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|NOT_FOUND
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|exception
operator|.
name|getRootCause
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|ElasticsearchException
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ElasticsearchException
name|rootCause
init|=
operator|(
name|ElasticsearchException
operator|)
name|exception
operator|.
name|getRootCause
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|rootCause
operator|.
name|getMessage
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"No search context found for"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|assertSearchHeader
specifier|private
specifier|static
name|void
name|assertSearchHeader
parameter_list|(
name|SearchResponse
name|searchResponse
parameter_list|)
block|{
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getTook
argument_list|()
operator|.
name|nanos
argument_list|()
argument_list|,
name|greaterThanOrEqualTo
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|searchResponse
operator|.
name|getFailedShards
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|searchResponse
operator|.
name|getTotalShards
argument_list|()
argument_list|,
name|greaterThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|searchResponse
operator|.
name|getTotalShards
argument_list|()
argument_list|,
name|searchResponse
operator|.
name|getSuccessfulShards
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|searchResponse
operator|.
name|getShardFailures
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

