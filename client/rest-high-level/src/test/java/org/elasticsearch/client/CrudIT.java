begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.client
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|ContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|StringEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|ElasticsearchStatusException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|DocWriteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|DocWriteResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkItemResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|bulk
operator|.
name|BulkResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|delete
operator|.
name|DeleteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|delete
operator|.
name|DeleteResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|get
operator|.
name|GetRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|get
operator|.
name|GetResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|index
operator|.
name|IndexResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|update
operator|.
name|UpdateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|update
operator|.
name|UpdateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|bytes
operator|.
name|BytesReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|unit
operator|.
name|ByteSizeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|VersionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|get
operator|.
name|GetResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|rest
operator|.
name|RestStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|Script
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|script
operator|.
name|ScriptType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|fetch
operator|.
name|subphase
operator|.
name|FetchSourceContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|threadpool
operator|.
name|ThreadPool
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicReference
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singletonMap
import|;
end_import

begin_class
DECL|class|CrudIT
specifier|public
class|class
name|CrudIT
extends|extends
name|ESRestHighLevelClientTestCase
block|{
DECL|method|testDelete
specifier|public
name|void
name|testDelete
parameter_list|()
throws|throws
name|IOException
block|{
block|{
comment|// Testing non existing document
name|String
name|docId
init|=
literal|"does_not_exist"
decl_stmt|;
name|DeleteRequest
name|deleteRequest
init|=
operator|new
name|DeleteRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|docId
argument_list|)
decl_stmt|;
name|DeleteResponse
name|deleteResponse
init|=
name|execute
argument_list|(
name|deleteRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|delete
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|deleteAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|deleteResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|deleteResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|docId
argument_list|,
name|deleteResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocWriteResponse
operator|.
name|Result
operator|.
name|NOT_FOUND
argument_list|,
name|deleteResponse
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Testing deletion
name|String
name|docId
init|=
literal|"id"
decl_stmt|;
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|docId
argument_list|)
operator|.
name|source
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|DeleteRequest
name|deleteRequest
init|=
operator|new
name|DeleteRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|docId
argument_list|)
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|deleteRequest
operator|.
name|version
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
block|}
name|DeleteResponse
name|deleteResponse
init|=
name|execute
argument_list|(
name|deleteRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|delete
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|deleteAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|deleteResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|deleteResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|docId
argument_list|,
name|deleteResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocWriteResponse
operator|.
name|Result
operator|.
name|DELETED
argument_list|,
name|deleteResponse
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Testing version conflict
name|String
name|docId
init|=
literal|"version_conflict"
decl_stmt|;
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|docId
argument_list|)
operator|.
name|source
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|DeleteRequest
name|deleteRequest
init|=
operator|new
name|DeleteRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|docId
argument_list|)
operator|.
name|version
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|ElasticsearchException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|execute
argument_list|(
name|deleteRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|delete
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|deleteAsync
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CONFLICT
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Elasticsearch exception [type=version_conflict_engine_exception, reason=[type]["
operator|+
name|docId
operator|+
literal|"]: "
operator|+
literal|"version conflict, current version [1] is different than the one provided [2]]"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|exception
operator|.
name|getMetadata
argument_list|(
literal|"es.index"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Testing version type
name|String
name|docId
init|=
literal|"version_type"
decl_stmt|;
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|docId
argument_list|)
operator|.
name|source
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
operator|.
name|versionType
argument_list|(
name|VersionType
operator|.
name|EXTERNAL
argument_list|)
operator|.
name|version
argument_list|(
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|DeleteRequest
name|deleteRequest
init|=
operator|new
name|DeleteRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|docId
argument_list|)
operator|.
name|versionType
argument_list|(
name|VersionType
operator|.
name|EXTERNAL
argument_list|)
operator|.
name|version
argument_list|(
literal|13
argument_list|)
decl_stmt|;
name|DeleteResponse
name|deleteResponse
init|=
name|execute
argument_list|(
name|deleteRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|delete
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|deleteAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|deleteResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|deleteResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|docId
argument_list|,
name|deleteResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocWriteResponse
operator|.
name|Result
operator|.
name|DELETED
argument_list|,
name|deleteResponse
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Testing version type with a wrong version
name|String
name|docId
init|=
literal|"wrong_version"
decl_stmt|;
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|docId
argument_list|)
operator|.
name|source
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
operator|.
name|versionType
argument_list|(
name|VersionType
operator|.
name|EXTERNAL
argument_list|)
operator|.
name|version
argument_list|(
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|ElasticsearchStatusException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchStatusException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|DeleteRequest
name|deleteRequest
init|=
operator|new
name|DeleteRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|docId
argument_list|)
operator|.
name|versionType
argument_list|(
name|VersionType
operator|.
name|EXTERNAL
argument_list|)
operator|.
name|version
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|execute
argument_list|(
name|deleteRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|delete
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|deleteAsync
argument_list|)
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CONFLICT
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Elasticsearch exception [type=version_conflict_engine_exception, reason=[type]["
operator|+
name|docId
operator|+
literal|"]: version conflict, current version [12] is higher or equal to the one provided [10]]"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|exception
operator|.
name|getMetadata
argument_list|(
literal|"es.index"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Testing routing
name|String
name|docId
init|=
literal|"routing"
decl_stmt|;
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|docId
argument_list|)
operator|.
name|source
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
operator|.
name|routing
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|DeleteRequest
name|deleteRequest
init|=
operator|new
name|DeleteRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
name|docId
argument_list|)
operator|.
name|routing
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|DeleteResponse
name|deleteResponse
init|=
name|execute
argument_list|(
name|deleteRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|delete
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|deleteAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|deleteResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|deleteResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|docId
argument_list|,
name|deleteResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocWriteResponse
operator|.
name|Result
operator|.
name|DELETED
argument_list|,
name|deleteResponse
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testExists
specifier|public
name|void
name|testExists
parameter_list|()
throws|throws
name|IOException
block|{
block|{
name|GetRequest
name|getRequest
init|=
operator|new
name|GetRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|execute
argument_list|(
name|getRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|exists
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|existsAsync
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|document
init|=
literal|"{\"field1\":\"value1\",\"field2\":\"value2\"}"
decl_stmt|;
name|StringEntity
name|stringEntity
init|=
operator|new
name|StringEntity
argument_list|(
name|document
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|Response
name|response
init|=
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"/index/type/id"
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"refresh"
argument_list|,
literal|"wait_for"
argument_list|)
argument_list|,
name|stringEntity
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|GetRequest
name|getRequest
init|=
operator|new
name|GetRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|execute
argument_list|(
name|getRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|exists
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|existsAsync
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|GetRequest
name|getRequest
init|=
operator|new
name|GetRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"does_not_exist"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|execute
argument_list|(
name|getRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|exists
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|existsAsync
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|GetRequest
name|getRequest
init|=
operator|new
name|GetRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"does_not_exist"
argument_list|)
operator|.
name|version
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|execute
argument_list|(
name|getRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|exists
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|existsAsync
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testGet
specifier|public
name|void
name|testGet
parameter_list|()
throws|throws
name|IOException
block|{
block|{
name|GetRequest
name|getRequest
init|=
operator|new
name|GetRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|ElasticsearchException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|execute
argument_list|(
name|getRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|get
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|getAsync
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|NOT_FOUND
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Elasticsearch exception [type=index_not_found_exception, reason=no such index]"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|exception
operator|.
name|getMetadata
argument_list|(
literal|"es.index"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|document
init|=
literal|"{\"field1\":\"value1\",\"field2\":\"value2\"}"
decl_stmt|;
name|StringEntity
name|stringEntity
init|=
operator|new
name|StringEntity
argument_list|(
name|document
argument_list|,
name|ContentType
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|Response
name|response
init|=
name|client
argument_list|()
operator|.
name|performRequest
argument_list|(
literal|"PUT"
argument_list|,
literal|"/index/type/id"
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"refresh"
argument_list|,
literal|"wait_for"
argument_list|)
argument_list|,
name|stringEntity
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|GetRequest
name|getRequest
init|=
operator|new
name|GetRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
operator|.
name|version
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|ElasticsearchException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|execute
argument_list|(
name|getRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|get
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|getAsync
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CONFLICT
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Elasticsearch exception [type=version_conflict_engine_exception, "
operator|+
literal|"reason=[type][id]: "
operator|+
literal|"version conflict, current version [1] is different than the one provided [2]]"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|exception
operator|.
name|getMetadata
argument_list|(
literal|"es.index"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|GetRequest
name|getRequest
init|=
operator|new
name|GetRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|getRequest
operator|.
name|version
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
block|}
name|GetResponse
name|getResponse
init|=
name|execute
argument_list|(
name|getRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|get
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|getAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|getResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|getResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|getResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|getResponse
operator|.
name|isSourceEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|getResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|document
argument_list|,
name|getResponse
operator|.
name|getSourceAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|GetRequest
name|getRequest
init|=
operator|new
name|GetRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"does_not_exist"
argument_list|)
decl_stmt|;
name|GetResponse
name|getResponse
init|=
name|execute
argument_list|(
name|getRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|get
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|getAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|getResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|getResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"does_not_exist"
argument_list|,
name|getResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|getResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getResponse
operator|.
name|isSourceEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|getResponse
operator|.
name|getSourceAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|GetRequest
name|getRequest
init|=
operator|new
name|GetRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|getRequest
operator|.
name|fetchSourceContext
argument_list|(
operator|new
name|FetchSourceContext
argument_list|(
literal|false
argument_list|,
name|Strings
operator|.
name|EMPTY_ARRAY
argument_list|,
name|Strings
operator|.
name|EMPTY_ARRAY
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|getResponse
init|=
name|execute
argument_list|(
name|getRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|get
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|getAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|getResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|getResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|getResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getResponse
operator|.
name|isSourceEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|getResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|getResponse
operator|.
name|getSourceAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|GetRequest
name|getRequest
init|=
operator|new
name|GetRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|getRequest
operator|.
name|fetchSourceContext
argument_list|(
operator|new
name|FetchSourceContext
argument_list|(
literal|true
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"field1"
block|}
argument_list|,
name|Strings
operator|.
name|EMPTY_ARRAY
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getRequest
operator|.
name|fetchSourceContext
argument_list|(
operator|new
name|FetchSourceContext
argument_list|(
literal|true
argument_list|,
name|Strings
operator|.
name|EMPTY_ARRAY
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"field2"
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|GetResponse
name|getResponse
init|=
name|execute
argument_list|(
name|getRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|get
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|getAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|getResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|getResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|getResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getResponse
operator|.
name|isExists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|getResponse
operator|.
name|isSourceEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|getResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sourceAsMap
init|=
name|getResponse
operator|.
name|getSourceAsMap
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|sourceAsMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
name|sourceAsMap
operator|.
name|get
argument_list|(
literal|"field1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testIndex
specifier|public
name|void
name|testIndex
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|XContentType
name|xContentType
init|=
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
name|XContentBuilder
operator|.
name|builder
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
expr_stmt|;
name|IndexResponse
name|indexResponse
init|=
name|execute
argument_list|(
name|indexRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|index
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|indexAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|indexResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocWriteResponse
operator|.
name|Result
operator|.
name|CREATED
argument_list|,
name|indexResponse
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|indexResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|indexResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Strings
operator|.
name|hasLength
argument_list|(
name|indexResponse
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|indexResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|indexResponse
operator|.
name|getShardId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|indexResponse
operator|.
name|getShardId
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|indexResponse
operator|.
name|getShardId
argument_list|()
operator|.
name|getIndexName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|indexResponse
operator|.
name|getShardId
argument_list|()
operator|.
name|getIndex
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"_na_"
argument_list|,
name|indexResponse
operator|.
name|getShardId
argument_list|()
operator|.
name|getIndex
argument_list|()
operator|.
name|getUUID
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|indexResponse
operator|.
name|getShardInfo
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|indexResponse
operator|.
name|getShardInfo
argument_list|()
operator|.
name|getFailed
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|indexResponse
operator|.
name|getShardInfo
argument_list|()
operator|.
name|getSuccessful
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|indexResponse
operator|.
name|getShardInfo
argument_list|()
operator|.
name|getTotal
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
name|XContentBuilder
operator|.
name|builder
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"version"
argument_list|,
literal|1
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
expr_stmt|;
name|IndexResponse
name|indexResponse
init|=
name|execute
argument_list|(
name|indexRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|index
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|indexAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|indexResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|indexResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|indexResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|indexResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|indexResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|indexRequest
operator|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
expr_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
name|XContentBuilder
operator|.
name|builder
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"version"
argument_list|,
literal|2
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
expr_stmt|;
name|indexResponse
operator|=
name|execute
argument_list|(
name|indexRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|index
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|indexAsync
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|indexResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|indexResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|indexResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|indexResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|indexResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|ElasticsearchStatusException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchStatusException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|IndexRequest
name|wrongRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|wrongRequest
operator|.
name|source
argument_list|(
name|XContentBuilder
operator|.
name|builder
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
expr_stmt|;
name|wrongRequest
operator|.
name|version
argument_list|(
literal|5L
argument_list|)
expr_stmt|;
name|execute
argument_list|(
name|wrongRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|index
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|indexAsync
argument_list|)
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CONFLICT
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Elasticsearch exception [type=version_conflict_engine_exception, reason=[type][id]: "
operator|+
literal|"version conflict, current version [2] is different than the one provided [5]]"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|exception
operator|.
name|getMetadata
argument_list|(
literal|"es.index"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|ElasticsearchStatusException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchStatusException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"missing_parent"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
name|XContentBuilder
operator|.
name|builder
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
expr_stmt|;
name|indexRequest
operator|.
name|parent
argument_list|(
literal|"missing"
argument_list|)
expr_stmt|;
name|execute
argument_list|(
name|indexRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|index
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|indexAsync
argument_list|)
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|BAD_REQUEST
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Elasticsearch exception [type=illegal_argument_exception, "
operator|+
literal|"reason=Can't specify parent if no parent field has been configured]"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|ElasticsearchStatusException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchStatusException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"missing_pipeline"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
name|XContentBuilder
operator|.
name|builder
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
expr_stmt|;
name|indexRequest
operator|.
name|setPipeline
argument_list|(
literal|"missing"
argument_list|)
expr_stmt|;
name|execute
argument_list|(
name|indexRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|index
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|indexAsync
argument_list|)
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|BAD_REQUEST
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Elasticsearch exception [type=illegal_argument_exception, "
operator|+
literal|"reason=pipeline with id [missing] does not exist]"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"external_version_type"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
name|XContentBuilder
operator|.
name|builder
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
expr_stmt|;
name|indexRequest
operator|.
name|version
argument_list|(
literal|12L
argument_list|)
expr_stmt|;
name|indexRequest
operator|.
name|versionType
argument_list|(
name|VersionType
operator|.
name|EXTERNAL
argument_list|)
expr_stmt|;
name|IndexResponse
name|indexResponse
init|=
name|execute
argument_list|(
name|indexRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|index
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|indexAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|indexResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|indexResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|indexResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"external_version_type"
argument_list|,
name|indexResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|12L
argument_list|,
name|indexResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
specifier|final
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"with_create_op_type"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
name|XContentBuilder
operator|.
name|builder
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"field"
argument_list|,
literal|"test"
argument_list|)
operator|.
name|endObject
argument_list|()
argument_list|)
expr_stmt|;
name|indexRequest
operator|.
name|opType
argument_list|(
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|IndexResponse
name|indexResponse
init|=
name|execute
argument_list|(
name|indexRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|index
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|indexAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|indexResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|indexResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|indexResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"with_create_op_type"
argument_list|,
name|indexResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|ElasticsearchStatusException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchStatusException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|execute
argument_list|(
name|indexRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|index
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|indexAsync
argument_list|)
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CONFLICT
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Elasticsearch exception [type=version_conflict_engine_exception, reason=[type][with_create_op_type]: "
operator|+
literal|"version conflict, document already exists (current version [1])]"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testUpdate
specifier|public
name|void
name|testUpdate
parameter_list|()
throws|throws
name|IOException
block|{
block|{
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"does_not_exist"
argument_list|)
decl_stmt|;
name|updateRequest
operator|.
name|doc
argument_list|(
name|singletonMap
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
argument_list|,
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|values
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ElasticsearchStatusException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchStatusException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|execute
argument_list|(
name|updateRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|NOT_FOUND
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Elasticsearch exception [type=document_missing_exception, reason=[type][does_not_exist]: document missing]"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
name|singletonMap
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|IndexResponse
name|indexResponse
init|=
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
name|indexRequest
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|indexResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|updateRequest
operator|.
name|doc
argument_list|(
name|singletonMap
argument_list|(
literal|"field"
argument_list|,
literal|"updated"
argument_list|)
argument_list|,
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|values
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UpdateResponse
name|updateResponse
init|=
name|execute
argument_list|(
name|updateRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|updateResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|indexResponse
operator|.
name|getVersion
argument_list|()
operator|+
literal|1
argument_list|,
name|updateResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|UpdateRequest
name|updateRequestConflict
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|updateRequestConflict
operator|.
name|doc
argument_list|(
name|singletonMap
argument_list|(
literal|"field"
argument_list|,
literal|"with_version_conflict"
argument_list|)
argument_list|,
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|values
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|updateRequestConflict
operator|.
name|version
argument_list|(
name|indexResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|ElasticsearchStatusException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchStatusException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|execute
argument_list|(
name|updateRequestConflict
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CONFLICT
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Elasticsearch exception [type=version_conflict_engine_exception, reason=[type][id]: version conflict, "
operator|+
literal|"current version [2] is different than the one provided [1]]"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|ElasticsearchStatusException
name|exception
init|=
name|expectThrows
argument_list|(
name|ElasticsearchStatusException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|updateRequest
operator|.
name|doc
argument_list|(
name|singletonMap
argument_list|(
literal|"field"
argument_list|,
literal|"updated"
argument_list|)
argument_list|,
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|values
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|randomBoolean
argument_list|()
condition|)
block|{
name|updateRequest
operator|.
name|parent
argument_list|(
literal|"missing"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|updateRequest
operator|.
name|routing
argument_list|(
literal|"missing"
argument_list|)
expr_stmt|;
block|}
name|execute
argument_list|(
name|updateRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|NOT_FOUND
argument_list|,
name|exception
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Elasticsearch exception [type=document_missing_exception, reason=[type][id]: document missing]"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"with_script"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
name|singletonMap
argument_list|(
literal|"counter"
argument_list|,
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|IndexResponse
name|indexResponse
init|=
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
name|indexRequest
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|indexResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"with_script"
argument_list|)
decl_stmt|;
name|Script
name|script
init|=
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
literal|"painless"
argument_list|,
literal|"ctx._source.counter += params.count"
argument_list|,
name|singletonMap
argument_list|(
literal|"count"
argument_list|,
literal|8
argument_list|)
argument_list|)
decl_stmt|;
name|updateRequest
operator|.
name|script
argument_list|(
name|script
argument_list|)
expr_stmt|;
name|updateRequest
operator|.
name|fetchSource
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|UpdateResponse
name|updateResponse
init|=
name|execute
argument_list|(
name|updateRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|updateResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocWriteResponse
operator|.
name|Result
operator|.
name|UPDATED
argument_list|,
name|updateResponse
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|updateResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|updateResponse
operator|.
name|getGetResult
argument_list|()
operator|.
name|sourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"counter"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"with_doc"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
literal|"field_1"
argument_list|,
literal|"one"
argument_list|,
literal|"field_3"
argument_list|,
literal|"three"
argument_list|)
expr_stmt|;
name|indexRequest
operator|.
name|version
argument_list|(
literal|12L
argument_list|)
expr_stmt|;
name|indexRequest
operator|.
name|versionType
argument_list|(
name|VersionType
operator|.
name|EXTERNAL
argument_list|)
expr_stmt|;
name|IndexResponse
name|indexResponse
init|=
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
name|indexRequest
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|indexResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|12L
argument_list|,
name|indexResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"with_doc"
argument_list|)
decl_stmt|;
name|updateRequest
operator|.
name|doc
argument_list|(
name|singletonMap
argument_list|(
literal|"field_2"
argument_list|,
literal|"two"
argument_list|)
argument_list|,
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|values
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|updateRequest
operator|.
name|fetchSource
argument_list|(
literal|"field_*"
argument_list|,
literal|"field_3"
argument_list|)
expr_stmt|;
name|UpdateResponse
name|updateResponse
init|=
name|execute
argument_list|(
name|updateRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|updateResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocWriteResponse
operator|.
name|Result
operator|.
name|UPDATED
argument_list|,
name|updateResponse
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13L
argument_list|,
name|updateResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|GetResult
name|getResult
init|=
name|updateResponse
operator|.
name|getGetResult
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|13L
argument_list|,
name|updateResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sourceAsMap
init|=
name|getResult
operator|.
name|sourceAsMap
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"one"
argument_list|,
name|sourceAsMap
operator|.
name|get
argument_list|(
literal|"field_1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"two"
argument_list|,
name|sourceAsMap
operator|.
name|get
argument_list|(
literal|"field_2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|sourceAsMap
operator|.
name|containsKey
argument_list|(
literal|"field_3"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"noop"
argument_list|)
decl_stmt|;
name|indexRequest
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|IndexResponse
name|indexResponse
init|=
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
name|indexRequest
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|indexResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|indexResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"noop"
argument_list|)
decl_stmt|;
name|updateRequest
operator|.
name|doc
argument_list|(
name|singletonMap
argument_list|(
literal|"field"
argument_list|,
literal|"value"
argument_list|)
argument_list|,
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|values
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UpdateResponse
name|updateResponse
init|=
name|execute
argument_list|(
name|updateRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|updateResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocWriteResponse
operator|.
name|Result
operator|.
name|NOOP
argument_list|,
name|updateResponse
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|updateResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|updateRequest
operator|.
name|detectNoop
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|updateResponse
operator|=
name|execute
argument_list|(
name|updateRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|updateResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocWriteResponse
operator|.
name|Result
operator|.
name|UPDATED
argument_list|,
name|updateResponse
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|updateResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"with_upsert"
argument_list|)
decl_stmt|;
name|updateRequest
operator|.
name|upsert
argument_list|(
name|singletonMap
argument_list|(
literal|"doc_status"
argument_list|,
literal|"created"
argument_list|)
argument_list|)
expr_stmt|;
name|updateRequest
operator|.
name|doc
argument_list|(
name|singletonMap
argument_list|(
literal|"doc_status"
argument_list|,
literal|"updated"
argument_list|)
argument_list|)
expr_stmt|;
name|updateRequest
operator|.
name|fetchSource
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|UpdateResponse
name|updateResponse
init|=
name|execute
argument_list|(
name|updateRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|updateResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|updateResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|updateResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"with_upsert"
argument_list|,
name|updateResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|GetResult
name|getResult
init|=
name|updateResponse
operator|.
name|getGetResult
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|updateResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"created"
argument_list|,
name|getResult
operator|.
name|sourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"doc_status"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"with_doc_as_upsert"
argument_list|)
decl_stmt|;
name|updateRequest
operator|.
name|doc
argument_list|(
name|singletonMap
argument_list|(
literal|"field"
argument_list|,
literal|"initialized"
argument_list|)
argument_list|)
expr_stmt|;
name|updateRequest
operator|.
name|fetchSource
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|updateRequest
operator|.
name|docAsUpsert
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|UpdateResponse
name|updateResponse
init|=
name|execute
argument_list|(
name|updateRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|updateResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|updateResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|updateResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"with_doc_as_upsert"
argument_list|,
name|updateResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|GetResult
name|getResult
init|=
name|updateResponse
operator|.
name|getGetResult
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|updateResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"initialized"
argument_list|,
name|getResult
operator|.
name|sourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"with_scripted_upsert"
argument_list|)
decl_stmt|;
name|updateRequest
operator|.
name|fetchSource
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|updateRequest
operator|.
name|script
argument_list|(
operator|new
name|Script
argument_list|(
name|ScriptType
operator|.
name|INLINE
argument_list|,
literal|"painless"
argument_list|,
literal|"ctx._source.level = params.test"
argument_list|,
name|singletonMap
argument_list|(
literal|"test"
argument_list|,
literal|"C"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|updateRequest
operator|.
name|scriptedUpsert
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|updateRequest
operator|.
name|upsert
argument_list|(
name|singletonMap
argument_list|(
literal|"level"
argument_list|,
literal|"A"
argument_list|)
argument_list|)
expr_stmt|;
name|UpdateResponse
name|updateResponse
init|=
name|execute
argument_list|(
name|updateRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|updateResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|updateResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|updateResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"with_scripted_upsert"
argument_list|,
name|updateResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|GetResult
name|getResult
init|=
name|updateResponse
operator|.
name|getGetResult
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|updateResponse
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"C"
argument_list|,
name|getResult
operator|.
name|sourceAsMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"level"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|IllegalStateException
name|exception
init|=
name|expectThrows
argument_list|(
name|IllegalStateException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"type"
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|updateRequest
operator|.
name|doc
argument_list|(
operator|new
name|IndexRequest
argument_list|()
operator|.
name|source
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"field"
argument_list|,
literal|"doc"
argument_list|)
argument_list|,
name|XContentType
operator|.
name|JSON
argument_list|)
argument_list|)
expr_stmt|;
name|updateRequest
operator|.
name|upsert
argument_list|(
operator|new
name|IndexRequest
argument_list|()
operator|.
name|source
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"field"
argument_list|,
literal|"upsert"
argument_list|)
argument_list|,
name|XContentType
operator|.
name|YAML
argument_list|)
argument_list|)
expr_stmt|;
name|execute
argument_list|(
name|updateRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|update
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|updateAsync
argument_list|)
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Update request cannot have different content types for doc [JSON] and upsert [YAML] documents"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testBulk
specifier|public
name|void
name|testBulk
parameter_list|()
throws|throws
name|IOException
block|{
name|int
name|nbItems
init|=
name|randomIntBetween
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|boolean
index|[]
name|errors
init|=
operator|new
name|boolean
index|[
name|nbItems
index|]
decl_stmt|;
name|XContentType
name|xContentType
init|=
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|JSON
argument_list|,
name|XContentType
operator|.
name|SMILE
argument_list|)
decl_stmt|;
name|BulkRequest
name|bulkRequest
init|=
operator|new
name|BulkRequest
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nbItems
condition|;
name|i
operator|++
control|)
block|{
name|String
name|id
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|boolean
name|erroneous
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
name|errors
index|[
name|i
index|]
operator|=
name|erroneous
expr_stmt|;
name|DocWriteRequest
operator|.
name|OpType
name|opType
init|=
name|randomFrom
argument_list|(
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|opType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|DELETE
condition|)
block|{
if|if
condition|(
name|erroneous
operator|==
literal|false
condition|)
block|{
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|DeleteRequest
name|deleteRequest
init|=
operator|new
name|DeleteRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|bulkRequest
operator|.
name|add
argument_list|(
name|deleteRequest
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|BytesReference
name|source
init|=
name|XContentBuilder
operator|.
name|builder
argument_list|(
name|xContentType
operator|.
name|xContent
argument_list|()
argument_list|)
operator|.
name|startObject
argument_list|()
operator|.
name|field
argument_list|(
literal|"id"
argument_list|,
name|i
argument_list|)
operator|.
name|endObject
argument_list|()
operator|.
name|bytes
argument_list|()
decl_stmt|;
if|if
condition|(
name|opType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|INDEX
condition|)
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
operator|.
name|source
argument_list|(
name|source
argument_list|,
name|xContentType
argument_list|)
decl_stmt|;
if|if
condition|(
name|erroneous
condition|)
block|{
name|indexRequest
operator|.
name|version
argument_list|(
literal|12L
argument_list|)
expr_stmt|;
block|}
name|bulkRequest
operator|.
name|add
argument_list|(
name|indexRequest
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|opType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|CREATE
condition|)
block|{
name|IndexRequest
name|createRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
operator|.
name|source
argument_list|(
name|source
argument_list|,
name|xContentType
argument_list|)
operator|.
name|create
argument_list|(
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
name|erroneous
condition|)
block|{
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
name|createRequest
argument_list|)
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bulkRequest
operator|.
name|add
argument_list|(
name|createRequest
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|opType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|UPDATE
condition|)
block|{
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
operator|.
name|doc
argument_list|(
operator|new
name|IndexRequest
argument_list|()
operator|.
name|source
argument_list|(
name|source
argument_list|,
name|xContentType
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|erroneous
operator|==
literal|false
condition|)
block|{
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bulkRequest
operator|.
name|add
argument_list|(
name|updateRequest
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|BulkResponse
name|bulkResponse
init|=
name|execute
argument_list|(
name|bulkRequest
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|bulk
argument_list|,
name|highLevelClient
argument_list|()
operator|::
name|bulkAsync
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|bulkResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|bulkResponse
operator|.
name|getTookInMillis
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nbItems
argument_list|,
name|bulkResponse
operator|.
name|getItems
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|validateBulkResponses
argument_list|(
name|nbItems
argument_list|,
name|errors
argument_list|,
name|bulkResponse
argument_list|,
name|bulkRequest
argument_list|)
expr_stmt|;
block|}
DECL|method|testBulkProcessorIntegration
specifier|public
name|void
name|testBulkProcessorIntegration
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|int
name|nbItems
init|=
name|randomIntBetween
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|boolean
index|[]
name|errors
init|=
operator|new
name|boolean
index|[
name|nbItems
index|]
decl_stmt|;
name|XContentType
name|xContentType
init|=
name|randomFrom
argument_list|(
name|XContentType
operator|.
name|JSON
argument_list|,
name|XContentType
operator|.
name|SMILE
argument_list|)
decl_stmt|;
name|AtomicReference
argument_list|<
name|BulkResponse
argument_list|>
name|responseRef
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|AtomicReference
argument_list|<
name|BulkRequest
argument_list|>
name|requestRef
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|AtomicReference
argument_list|<
name|Throwable
argument_list|>
name|error
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
name|BulkProcessor
operator|.
name|Listener
name|listener
init|=
operator|new
name|BulkProcessor
operator|.
name|Listener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|beforeBulk
parameter_list|(
name|long
name|executionId
parameter_list|,
name|BulkRequest
name|request
parameter_list|)
block|{              }
annotation|@
name|Override
specifier|public
name|void
name|afterBulk
parameter_list|(
name|long
name|executionId
parameter_list|,
name|BulkRequest
name|request
parameter_list|,
name|BulkResponse
name|response
parameter_list|)
block|{
name|responseRef
operator|.
name|set
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|requestRef
operator|.
name|set
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterBulk
parameter_list|(
name|long
name|executionId
parameter_list|,
name|BulkRequest
name|request
parameter_list|,
name|Throwable
name|failure
parameter_list|)
block|{
name|error
operator|.
name|set
argument_list|(
name|failure
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|ThreadPool
name|threadPool
init|=
operator|new
name|ThreadPool
argument_list|(
name|Settings
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"node.name"
argument_list|,
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|BulkProcessor
name|processor
init|=
operator|new
name|BulkProcessor
operator|.
name|Builder
argument_list|(
name|highLevelClient
argument_list|()
operator|::
name|bulkAsync
argument_list|,
name|listener
argument_list|,
name|threadPool
argument_list|)
operator|.
name|setConcurrentRequests
argument_list|(
literal|0
argument_list|)
operator|.
name|setBulkSize
argument_list|(
operator|new
name|ByteSizeValue
argument_list|(
literal|5
argument_list|,
name|ByteSizeUnit
operator|.
name|GB
argument_list|)
argument_list|)
operator|.
name|setBulkActions
argument_list|(
name|nbItems
operator|+
literal|1
argument_list|)
operator|.
name|build
argument_list|()
init|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nbItems
condition|;
name|i
operator|++
control|)
block|{
name|String
name|id
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|boolean
name|erroneous
init|=
name|randomBoolean
argument_list|()
decl_stmt|;
name|errors
index|[
name|i
index|]
operator|=
name|erroneous
expr_stmt|;
name|DocWriteRequest
operator|.
name|OpType
name|opType
init|=
name|randomFrom
argument_list|(
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|opType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|DELETE
condition|)
block|{
if|if
condition|(
name|erroneous
operator|==
literal|false
condition|)
block|{
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|DeleteRequest
name|deleteRequest
init|=
operator|new
name|DeleteRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|processor
operator|.
name|add
argument_list|(
name|deleteRequest
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|opType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|INDEX
condition|)
block|{
name|IndexRequest
name|indexRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
operator|.
name|source
argument_list|(
name|xContentType
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|erroneous
condition|)
block|{
name|indexRequest
operator|.
name|version
argument_list|(
literal|12L
argument_list|)
expr_stmt|;
block|}
name|processor
operator|.
name|add
argument_list|(
name|indexRequest
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|opType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|CREATE
condition|)
block|{
name|IndexRequest
name|createRequest
init|=
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
operator|.
name|source
argument_list|(
name|xContentType
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|)
operator|.
name|create
argument_list|(
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
name|erroneous
condition|)
block|{
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
name|createRequest
argument_list|)
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|processor
operator|.
name|add
argument_list|(
name|createRequest
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|opType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|UPDATE
condition|)
block|{
name|UpdateRequest
name|updateRequest
init|=
operator|new
name|UpdateRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
operator|.
name|doc
argument_list|(
operator|new
name|IndexRequest
argument_list|()
operator|.
name|source
argument_list|(
name|xContentType
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|erroneous
operator|==
literal|false
condition|)
block|{
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|highLevelClient
argument_list|()
operator|.
name|index
argument_list|(
operator|new
name|IndexRequest
argument_list|(
literal|"index"
argument_list|,
literal|"test"
argument_list|,
name|id
argument_list|)
operator|.
name|source
argument_list|(
literal|"field"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|processor
operator|.
name|add
argument_list|(
name|updateRequest
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|assertNull
argument_list|(
name|responseRef
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|requestRef
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|BulkResponse
name|bulkResponse
init|=
name|responseRef
operator|.
name|get
argument_list|()
decl_stmt|;
name|BulkRequest
name|bulkRequest
init|=
name|requestRef
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|RestStatus
operator|.
name|OK
argument_list|,
name|bulkResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|bulkResponse
operator|.
name|getTookInMillis
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nbItems
argument_list|,
name|bulkResponse
operator|.
name|getItems
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|error
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|validateBulkResponses
argument_list|(
name|nbItems
argument_list|,
name|errors
argument_list|,
name|bulkResponse
argument_list|,
name|bulkRequest
argument_list|)
expr_stmt|;
name|terminate
argument_list|(
name|threadPool
argument_list|)
expr_stmt|;
block|}
DECL|method|validateBulkResponses
specifier|private
name|void
name|validateBulkResponses
parameter_list|(
name|int
name|nbItems
parameter_list|,
name|boolean
index|[]
name|errors
parameter_list|,
name|BulkResponse
name|bulkResponse
parameter_list|,
name|BulkRequest
name|bulkRequest
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nbItems
condition|;
name|i
operator|++
control|)
block|{
name|BulkItemResponse
name|bulkItemResponse
init|=
name|bulkResponse
operator|.
name|getItems
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|assertEquals
argument_list|(
name|i
argument_list|,
name|bulkItemResponse
operator|.
name|getItemId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"index"
argument_list|,
name|bulkItemResponse
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|bulkItemResponse
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|,
name|bulkItemResponse
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|DocWriteRequest
operator|.
name|OpType
name|requestOpType
init|=
name|bulkRequest
operator|.
name|requests
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|opType
argument_list|()
decl_stmt|;
if|if
condition|(
name|requestOpType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|INDEX
operator|||
name|requestOpType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|CREATE
condition|)
block|{
name|assertEquals
argument_list|(
name|errors
index|[
name|i
index|]
argument_list|,
name|bulkItemResponse
operator|.
name|isFailed
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|errors
index|[
name|i
index|]
condition|?
name|RestStatus
operator|.
name|CONFLICT
else|:
name|RestStatus
operator|.
name|CREATED
argument_list|,
name|bulkItemResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|requestOpType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|UPDATE
condition|)
block|{
name|assertEquals
argument_list|(
name|errors
index|[
name|i
index|]
argument_list|,
name|bulkItemResponse
operator|.
name|isFailed
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|errors
index|[
name|i
index|]
condition|?
name|RestStatus
operator|.
name|NOT_FOUND
else|:
name|RestStatus
operator|.
name|OK
argument_list|,
name|bulkItemResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|requestOpType
operator|==
name|DocWriteRequest
operator|.
name|OpType
operator|.
name|DELETE
condition|)
block|{
name|assertFalse
argument_list|(
name|bulkItemResponse
operator|.
name|isFailed
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|errors
index|[
name|i
index|]
condition|?
name|RestStatus
operator|.
name|NOT_FOUND
else|:
name|RestStatus
operator|.
name|OK
argument_list|,
name|bulkItemResponse
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

