begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.rest.yaml.section
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|yaml
operator|.
name|section
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|xcontent
operator|.
name|XContentLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESTestCase
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singletonList
import|;
end_import

begin_class
DECL|class|ClientYamlTestSectionTests
specifier|public
class|class
name|ClientYamlTestSectionTests
extends|extends
name|ESTestCase
block|{
DECL|method|testAddingDoWithoutWarningWithoutSkip
specifier|public
name|void
name|testAddingDoWithoutWarningWithoutSkip
parameter_list|()
block|{
name|int
name|lineNumber
init|=
name|between
argument_list|(
literal|1
argument_list|,
literal|10000
argument_list|)
decl_stmt|;
name|ClientYamlTestSection
name|section
init|=
operator|new
name|ClientYamlTestSection
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|section
operator|.
name|setSkipSection
argument_list|(
name|SkipSection
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|DoSection
name|doSection
init|=
operator|new
name|DoSection
argument_list|(
operator|new
name|XContentLocation
argument_list|(
name|lineNumber
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|section
operator|.
name|addExecutableSection
argument_list|(
name|doSection
argument_list|)
expr_stmt|;
block|}
DECL|method|testAddingDoWithWarningWithSkip
specifier|public
name|void
name|testAddingDoWithWarningWithSkip
parameter_list|()
block|{
name|int
name|lineNumber
init|=
name|between
argument_list|(
literal|1
argument_list|,
literal|10000
argument_list|)
decl_stmt|;
name|ClientYamlTestSection
name|section
init|=
operator|new
name|ClientYamlTestSection
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|section
operator|.
name|setSkipSection
argument_list|(
operator|new
name|SkipSection
argument_list|(
literal|null
argument_list|,
name|singletonList
argument_list|(
literal|"warnings"
argument_list|)
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|DoSection
name|doSection
init|=
operator|new
name|DoSection
argument_list|(
operator|new
name|XContentLocation
argument_list|(
name|lineNumber
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|doSection
operator|.
name|setExpectedWarningHeaders
argument_list|(
name|singletonList
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|section
operator|.
name|addExecutableSection
argument_list|(
name|doSection
argument_list|)
expr_stmt|;
block|}
DECL|method|testAddingDoWithWarningWithSkipButNotWarnings
specifier|public
name|void
name|testAddingDoWithWarningWithSkipButNotWarnings
parameter_list|()
block|{
name|int
name|lineNumber
init|=
name|between
argument_list|(
literal|1
argument_list|,
literal|10000
argument_list|)
decl_stmt|;
name|ClientYamlTestSection
name|section
init|=
operator|new
name|ClientYamlTestSection
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|section
operator|.
name|setSkipSection
argument_list|(
operator|new
name|SkipSection
argument_list|(
literal|null
argument_list|,
name|singletonList
argument_list|(
literal|"yaml"
argument_list|)
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|DoSection
name|doSection
init|=
operator|new
name|DoSection
argument_list|(
operator|new
name|XContentLocation
argument_list|(
name|lineNumber
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|doSection
operator|.
name|setExpectedWarningHeaders
argument_list|(
name|singletonList
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|Exception
name|e
init|=
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|section
operator|.
name|addExecutableSection
argument_list|(
name|doSection
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Attempted to add a [do] with a [warnings] section without a corresponding [skip] so runners that do not support the"
operator|+
literal|" [warnings] section can skip the test at line ["
operator|+
name|lineNumber
operator|+
literal|"]"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

