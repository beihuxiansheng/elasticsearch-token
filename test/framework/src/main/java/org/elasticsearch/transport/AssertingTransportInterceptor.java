begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.transport
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|NamedWriteableRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Streamable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|NetworkPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|tasks
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|ESIntegTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|VersionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|hamcrest
operator|.
name|ElasticsearchAssertions
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_comment
comment|/**  * A transport interceptor that applies {@link ElasticsearchAssertions#assertVersionSerializable(Streamable)}  * to all requests and response objects send across the wire  */
end_comment

begin_class
DECL|class|AssertingTransportInterceptor
specifier|public
specifier|final
class|class
name|AssertingTransportInterceptor
implements|implements
name|TransportInterceptor
block|{
DECL|field|random
specifier|private
specifier|final
name|Random
name|random
decl_stmt|;
DECL|field|namedWriteableRegistry
specifier|private
specifier|final
name|NamedWriteableRegistry
name|namedWriteableRegistry
decl_stmt|;
DECL|class|TestPlugin
specifier|public
specifier|static
specifier|final
class|class
name|TestPlugin
extends|extends
name|Plugin
implements|implements
name|NetworkPlugin
block|{
DECL|field|settings
specifier|private
specifier|final
name|Settings
name|settings
decl_stmt|;
DECL|method|TestPlugin
specifier|public
name|TestPlugin
parameter_list|(
name|Settings
name|settings
parameter_list|)
block|{
name|this
operator|.
name|settings
operator|=
name|settings
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getTransportInterceptors
specifier|public
name|List
argument_list|<
name|TransportInterceptor
argument_list|>
name|getTransportInterceptors
parameter_list|(
name|NamedWriteableRegistry
name|namedWriteableRegistry
parameter_list|)
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|AssertingTransportInterceptor
argument_list|(
name|settings
argument_list|,
name|namedWriteableRegistry
argument_list|)
argument_list|)
return|;
block|}
block|}
DECL|method|AssertingTransportInterceptor
specifier|public
name|AssertingTransportInterceptor
parameter_list|(
name|Settings
name|settings
parameter_list|,
name|NamedWriteableRegistry
name|namedWriteableRegistry
parameter_list|)
block|{
specifier|final
name|long
name|seed
init|=
name|ESIntegTestCase
operator|.
name|INDEX_TEST_SEED_SETTING
operator|.
name|get
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|random
operator|=
operator|new
name|Random
argument_list|(
name|seed
argument_list|)
expr_stmt|;
name|this
operator|.
name|namedWriteableRegistry
operator|=
name|namedWriteableRegistry
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|interceptHandler
specifier|public
parameter_list|<
name|T
extends|extends
name|TransportRequest
parameter_list|>
name|TransportRequestHandler
argument_list|<
name|T
argument_list|>
name|interceptHandler
parameter_list|(
name|String
name|action
parameter_list|,
name|String
name|executor
parameter_list|,
name|TransportRequestHandler
argument_list|<
name|T
argument_list|>
name|actualHandler
parameter_list|)
block|{
return|return
operator|new
name|TransportRequestHandler
argument_list|<
name|T
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|messageReceived
parameter_list|(
name|T
name|request
parameter_list|,
name|TransportChannel
name|channel
parameter_list|,
name|Task
name|task
parameter_list|)
throws|throws
name|Exception
block|{
name|assertVersionSerializable
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|actualHandler
operator|.
name|messageReceived
argument_list|(
name|request
argument_list|,
name|channel
argument_list|,
name|task
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|messageReceived
parameter_list|(
name|T
name|request
parameter_list|,
name|TransportChannel
name|channel
parameter_list|)
throws|throws
name|Exception
block|{
name|assertVersionSerializable
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|actualHandler
operator|.
name|messageReceived
argument_list|(
name|request
argument_list|,
name|channel
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
DECL|method|assertVersionSerializable
specifier|private
name|void
name|assertVersionSerializable
parameter_list|(
name|Streamable
name|streamable
parameter_list|)
block|{
name|Version
name|version
init|=
name|VersionUtils
operator|.
name|randomVersionBetween
argument_list|(
name|random
argument_list|,
name|Version
operator|.
name|CURRENT
operator|.
name|minimumCompatibilityVersion
argument_list|()
argument_list|,
name|Version
operator|.
name|CURRENT
argument_list|)
decl_stmt|;
name|ElasticsearchAssertions
operator|.
name|assertVersionSerializable
argument_list|(
name|version
argument_list|,
name|streamable
argument_list|,
name|namedWriteableRegistry
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|interceptSender
specifier|public
name|AsyncSender
name|interceptSender
parameter_list|(
specifier|final
name|AsyncSender
name|sender
parameter_list|)
block|{
return|return
operator|new
name|AsyncSender
argument_list|()
block|{
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
extends|extends
name|TransportResponse
parameter_list|>
name|void
name|sendRequest
parameter_list|(
name|Transport
operator|.
name|Connection
name|connection
parameter_list|,
name|String
name|action
parameter_list|,
name|TransportRequest
name|request
parameter_list|,
name|TransportRequestOptions
name|options
parameter_list|,
specifier|final
name|TransportResponseHandler
argument_list|<
name|T
argument_list|>
name|handler
parameter_list|)
block|{
name|assertVersionSerializable
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|sender
operator|.
name|sendRequest
argument_list|(
name|connection
argument_list|,
name|action
argument_list|,
name|request
argument_list|,
name|options
argument_list|,
operator|new
name|TransportResponseHandler
argument_list|<
name|T
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|T
name|newInstance
parameter_list|()
block|{
return|return
name|handler
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|handleResponse
parameter_list|(
name|T
name|response
parameter_list|)
block|{
name|assertVersionSerializable
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|handler
operator|.
name|handleResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|handleException
parameter_list|(
name|TransportException
name|exp
parameter_list|)
block|{
name|handler
operator|.
name|handleException
argument_list|(
name|exp
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|executor
parameter_list|()
block|{
return|return
name|handler
operator|.
name|executor
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

