begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test.rest.client
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
operator|.
name|rest
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|conn
operator|.
name|ssl
operator|.
name|X509HostnameVerifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|conn
operator|.
name|util
operator|.
name|InetAddressUtils
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLSession
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLSocket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
import|;
end_import

begin_comment
comment|/**  * A custom {@link X509HostnameVerifier} implementation that wraps calls to the {@link org.apache.http.conn.ssl.StrictHostnameVerifier} and  * properly handles IPv6 addresses that come from a URL in the form<code>http://[::1]:9200/</code> by removing the surrounding brackets.  *  * This is a variation of the fix for<a href="https://issues.apache.org/jira/browse/HTTPCLIENT-1698">HTTPCLIENT-1698</a>, which is not  * released yet as of Apache HttpClient 4.5.1  */
end_comment

begin_class
DECL|class|StrictHostnameVerifier
specifier|final
class|class
name|StrictHostnameVerifier
implements|implements
name|X509HostnameVerifier
block|{
DECL|field|INSTANCE
specifier|static
specifier|final
name|StrictHostnameVerifier
name|INSTANCE
init|=
operator|new
name|StrictHostnameVerifier
argument_list|()
decl_stmt|;
comment|// We need to wrap the default verifier for HttpClient since we use an older version and the following issue is not
comment|// fixed in a released version yet https://issues.apache.org/jira/browse/HTTPCLIENT-1698
comment|// TL;DR we need to strip '[' and ']' from IPv6 addresses if they come from a URL
DECL|field|verifier
specifier|private
specifier|final
name|X509HostnameVerifier
name|verifier
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|conn
operator|.
name|ssl
operator|.
name|StrictHostnameVerifier
argument_list|()
decl_stmt|;
DECL|method|StrictHostnameVerifier
specifier|private
name|StrictHostnameVerifier
parameter_list|()
block|{}
annotation|@
name|Override
DECL|method|verify
specifier|public
name|boolean
name|verify
parameter_list|(
name|String
name|host
parameter_list|,
name|SSLSession
name|sslSession
parameter_list|)
block|{
return|return
name|verifier
operator|.
name|verify
argument_list|(
name|stripBracketsIfNecessary
argument_list|(
name|host
argument_list|)
argument_list|,
name|sslSession
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|verify
specifier|public
name|void
name|verify
parameter_list|(
name|String
name|host
parameter_list|,
name|SSLSocket
name|ssl
parameter_list|)
throws|throws
name|IOException
block|{
name|verifier
operator|.
name|verify
argument_list|(
name|stripBracketsIfNecessary
argument_list|(
name|host
argument_list|)
argument_list|,
name|ssl
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|verify
specifier|public
name|void
name|verify
parameter_list|(
name|String
name|host
parameter_list|,
name|X509Certificate
name|cert
parameter_list|)
throws|throws
name|SSLException
block|{
name|verifier
operator|.
name|verify
argument_list|(
name|stripBracketsIfNecessary
argument_list|(
name|host
argument_list|)
argument_list|,
name|cert
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|verify
specifier|public
name|void
name|verify
parameter_list|(
name|String
name|host
parameter_list|,
name|String
index|[]
name|cns
parameter_list|,
name|String
index|[]
name|subjectAlts
parameter_list|)
throws|throws
name|SSLException
block|{
name|verifier
operator|.
name|verify
argument_list|(
name|stripBracketsIfNecessary
argument_list|(
name|host
argument_list|)
argument_list|,
name|cns
argument_list|,
name|subjectAlts
argument_list|)
expr_stmt|;
block|}
DECL|method|stripBracketsIfNecessary
specifier|private
name|String
name|stripBracketsIfNecessary
parameter_list|(
name|String
name|host
parameter_list|)
block|{
if|if
condition|(
name|host
operator|.
name|startsWith
argument_list|(
literal|"["
argument_list|)
operator|&&
name|host
operator|.
name|endsWith
argument_list|(
literal|"]"
argument_list|)
condition|)
block|{
name|String
name|newHost
init|=
name|host
operator|.
name|substring
argument_list|(
literal|1
argument_list|,
name|host
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
assert|assert
name|InetAddressUtils
operator|.
name|isIPv6Address
argument_list|(
name|newHost
argument_list|)
assert|;
return|return
name|newHost
return|;
block|}
return|return
name|host
return|;
block|}
block|}
end_class

end_unit

