begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to Elasticsearch under one or more contributor  * license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright  * ownership. Elasticsearch licenses this file to you under  * the Apache License, Version 2.0 (the "License"); you may  * not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.elasticsearch.test
package|package
name|org
operator|.
name|elasticsearch
operator|.
name|test
package|;
end_package

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|Diff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|cluster
operator|.
name|Diffable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|common
operator|.
name|io
operator|.
name|stream
operator|.
name|Writeable
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * An abstract test case to ensure correct behavior of Diffable.  *  * This class can be used as a based class for tests of ClusterState.Custom classes and other classes that support,  * Writable serialization and is diffable.  */
end_comment

begin_class
DECL|class|AbstractDiffableWireSerializationTestCase
specifier|public
specifier|abstract
class|class
name|AbstractDiffableWireSerializationTestCase
parameter_list|<
name|T
extends|extends
name|Diffable
parameter_list|<
name|T
parameter_list|>
parameter_list|>
extends|extends
name|AbstractWireSerializingTestCase
argument_list|<
name|T
argument_list|>
block|{
comment|/**      *  Introduces random changes into the test object      */
DECL|method|makeTestChanges
specifier|protected
specifier|abstract
name|T
name|makeTestChanges
parameter_list|(
name|T
name|testInstance
parameter_list|)
function_decl|;
DECL|method|diffReader
specifier|protected
specifier|abstract
name|Reader
argument_list|<
name|Diff
argument_list|<
name|T
argument_list|>
argument_list|>
name|diffReader
parameter_list|()
function_decl|;
DECL|method|testDiffableSerialization
specifier|public
name|void
name|testDiffableSerialization
parameter_list|()
throws|throws
name|IOException
block|{
name|DiffableTestUtils
operator|.
name|testDiffableSerialization
argument_list|(
name|this
operator|::
name|createTestInstance
argument_list|,
name|this
operator|::
name|makeTestChanges
argument_list|,
name|getNamedWriteableRegistry
argument_list|()
argument_list|,
name|instanceReader
argument_list|()
argument_list|,
name|diffReader
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

